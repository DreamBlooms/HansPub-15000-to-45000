"本文应用了面向对象的软件工程的开发思想，在.NET框架下使用C#语言，结合数据库技术以及UML (统一建模语言)来设计与实现毕业答辩系统的资格审查业务。首先本文在绪论部分中介绍了写作背景。其次是通过对模块进行了需求分析，从为什么需要这个业务、业务的流程及优化、业务功能需求、数据需求等几方面来阐述了业务的需求。再次是对业务中各类子模块进行设计，通过组织结构设计、功能结构设计、类图设计、数据库设计等方面来完成相应设计。最后通过对核心功能的截图来展示实现结果。 关键词 :毕业答辩，资格审查，数据库技术，UML Copyright © 2017 by authors and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/"
"随着计算机科学技术的逐年发展，信息化的程度越来越高，计算机软件辅助办公也成为了人们不可分割的一部分，人们充分利用计算机辅助办公来提高工作效率，使用计算机来高效地管理相关事务 [ 1 ] 。高等院校的改革不断加深，管理愈加复杂，为此高校管理实现网络化是大势所趋。很多高等院校已经实现了网络化信息管理 [ 2 ] 。充分利用信息化的手段来辅助高等学校进行毕业答辩管理成为了信息化改革的重中之重 [ 3 ] 。每年参与毕业答辩的硕士研究生(全日制和在职硕士)达数千人，全日制学生实习绝大多数都在相对很远的外地，在职硕士分散在全国各个教学点，相关毕业硕士研究生无法及时响应学校或者学院发出的相关通知或者及时完成相关工作，即便响应或者工作完成，但由于相关材料数量众多，从而错误也非常多 [ 4 ] ，这样一来如果没有信息化的辅助，那么对于研究生的毕业管理工作的完成将会非常困难，从而造成人力、物理、财力的不必要浪费。从节约人力财力物力以及提高工作效率出发，利用面向对象的思想 [ 5 ] ，通过UML [ 6 ] 建立模型，结合数据库相关技术 [ 7 ] 来使毕业答辩管理工作网络化显得尤为重要。 本文的研究内容，不是在于整个毕业答辩系统的设计与实现，而是在于对毕业生资格审查业务的设计与实现，资格审查业务将要与研究生院的基本信息管理系统、学费管理系统、培养计划管理系统进行对接，分别从基本信息管理系统、学费管理系统、培养计划管理系统中提取数据到本系统中进行基本信息审核、学费信息审核、成绩信息审核、学分信息审核 [ 8 ] ，因此资格审查业务将与三个系统相辅相成来完成资格审查工作。"
"本文研究的业务内容是研究生答辩管理系统中的一个重要的子业务模块，它在研究生答辩管理系统中扮演着一个重要角色。与此同时该系统涉及多个管理部门(研究生院培养办、学位办、招生办和财务处)以及教学点，面向全体硕士研究生。 在整个答辩过程中，毕业研究生、学院研究生秘书、基本信息管理系统、培养计划管理系统、学费管理系统围绕整个业务完成全体研究生毕业答辩资格审查工作。在整个业务之中研究生秘书起到一个核心作用，他将负责毕业学生的答辩资格审查工作。 该业务涉及多个子功能，如基本信息审核、学费信息审核、成绩信息审核、学分信息审核。在答辩资格审查流程中，毕业研究生进入系统填写基本信息、培养登记表、学位申请表以及上传论文和研究成果证明材料；研究生秘书审核毕业生是否具有毕业答辩资格(基本信息是否完全、学费是否已缴清、是否按培养计划完成所修课程、学生所修课程是否获得有效成绩并获得相应的学分)；通过上述流程判定毕业研究生是否具备毕业答辩资格。  图1. 原有业务流程 上图1所示，原有业务流程图是对研究生答辩系统中答辩资格审查管理的业务流程。首先是毕业生了解答辩信息初步判断是否可以参加答辩，接着参加答辩报名并填写基本信息，提交相应的开题报告、答辩申请、毕业论文，其次将信息提交审核，学院研究生秘书对其基本信息进行审核判断是否可以进行下一步的审核，通过基本信息审核后，根据其基本信息来与学校学费系统进行对接提取相应学生的学费信息数据，通过转化后读取学费信息进而判断是否可以进入下一步审核，根据学生基本信息来与培养计划管理系统来进行对接审核学分与成绩信息是否合格，对于符合答辩资格的毕业生将允许其在答辩系统中进行下一步操作，对于不符合答辩资格的学生，研究生秘书将填写审核意见，并通知学生将问题处理后再次进行答辩报名。  图2. 优化业务流程 上图2所示，基于原有业务流程来进行优化，相比增加了答辩系统管理的流程 [ 9 ] ，答辩系统辅助毕业生完成了网上报名、基本信息填写、各类报告的提交，辅助研究生秘书完成了基本信息审查、审核意见填写并向学费系统提取学费信息来进行学费信息审查，向培养计划系统提取培养信息来进行审核等工作。  图3. 资格审查用例图 上图3所示，给出了资格审查用例图，包含基本信息审核、学费信息审核、培养信息审核等用例。  图4. 资格审查分析类图 图4说明： 参与者：研究生秘书、基本信息管理系统、学费信息管理系统、培养计划信息系统。 边界类：资格审核界面。 控制类：审核基本信息数据、审核学费信息数据、审核培养信息数据。 实体类：基本信息、学费信息、成绩信息、学分信息。"
"1) 基本信息审核 图5. 资格审查分析类图 上图5所示，基本信息审核由读入基本信息、审核、审核意见三个部分组成，主要用于完成基本信息的审核功能。 2) 学费信息审核 图6. 学费信息审核包图 上图6所示，学费信息审核由读入学费信息、审核、审核意见三个部分组成，主要用于完成学费信息的审核功能。 3) 培养信息审核 图7. 培养信息审核包图 上图7所示，培养信息审核由读入培养信息、审核(包含审核成绩信息、审核学分信息)、审核意见等五个部分组成，主要用于完成培养信息的审核功能。  1) 基本信息审核(图8) 图8. 基本信息审核类图 2) 学费信息审核(图9) 图9. 学费信息审核类图 3) 培养信息审核(图10) 图10. 培养信息审核类图  1) 概念设计(图11) 图11. 答辩资格审查实体关系图 2) 逻辑设计(表1~表7) Table 1 属性名 类型 字段长度 主/外键 Student ID Int 12 主键 Censor Contents Char 150 Censor time Time Censor results Char 20 Auditor Char 5 Remarks Char 50 表1. 审核结果 Table 2 属性名 类型 字段长度 主/外键 Student ID Int 12 主键 Student Name Char 6 Major Char 12 Tutor Char 6 Length of Schooling Int 3 Grade Char 4 Contact Information Text 13 Remarks Char 50 表2. 基本信息 Table 3 属性名 类型 字段长度 主/外键 Student ID Int 12 主键 Student Name Char 6 ID card Char 20 Bank Information Char 15 Length of Schooling Int 3 Card Numbers Int (10,0) Contact Information Text 13 Remarks Char 50 表3. 学费信息 Table 4 属性名 类型 字段长度 主/外键 Student ID Int 12 主键 Student Name Char 6 Major Char 12 Term Information Char 5 Score Float 3 Academy Char 20 Classes Name Char 18 Teacher Name Char 6 Course Nature Char 8 Remarks Char 50 表4. 成绩信息 Table 5 属性名 类型 字段长度 主/外键 Student ID Int 12 主键 Student Name Char 6 Major Char 12m Char 16 Course ID Int 12 外键 Credit Table Int 4 Remarks Char 50 表5. 学分信息 Table 6 属性名 类型 字段长度 主/外键 Course ID Int 12 主键 Course Name Char 6 Course Nature Char 12 Semester Char 6 Time Interval Data Teacher Char 6 Classroom Char 5 Remarks Char 50 表6. 课程表 Table 7 属性名 类型 字段长度 主/外键 Course ID Int 12 主键 Course Name Char 6 Course Nature Char 12 Semester Char 6 Credit Int 4 Remarks Char 50 表7. 培养方案"
"如下图12所示，实现了基本信息审核、培养信息审核以及学费信息审核等功能。 图12. 功能模块实现  本文设计与实现的是毕业生参加答辩的资格审查业务，实现过程中将要与研究生院的基本信息管理系统、培养计划管理系统，财务处的学费管理系统进行对接提取数据来审核，由于篇幅限制，本节将介绍与培养计划管理系统对接的相关类和方法的实现(表8)。 Table 8 类名 GSTableData 方法名 功能 参数 SelectBasicInfo 获取学生基本信息数据 params SqlParameter[ ] 返回值 GSDataLib.GetDataReader(”Proc_MSE_CultivateT_GetBasicInfo”,arParams) 方法名 功能 参数 SelectPlanInfo 获取培养计划信息数据 params SqlParameter[ ] 返回值 GsUrpDataLib.GetDataReader(”Proc_MSE_CultivateT_GetScoreInfo” 方法名 功能 参数 SelectEnglishInfo 获取学生学位英语数据 params SqlParameter[ ] 返回值 GSDataLib.GetDataReader(”Proc_MSE_CultivateT_GetEnglishInfo”, arParams) 方法名 功能 参数 GetTotalScoreInfo 获取培养计划总学分 string StudentNo 返回值 GsUrpDataLib.GetSqlReturn(”Proc_MSE_CultivateT_GetTotalScoreInfo”,arParams) 方法名 功能 参数 GetTotalScore 获取本人所修总学分 params SqlParameter[ ] 返回值 GsUrpDataLib.GetDataReader(”Proc_MSE_CultivateT_GetTotalScore”, arParams) 方法名 功能 参数 IsReach18Month 获取本人培养计划数据 string StudentNo 返回值 True or false 表8. 类和方法的描述"
"本文中论述的是毕业答辩管理系统中的资格审查业务的设计与实现，该业务的完成是结合了研究生培养的实际情况，立足实际来完成工作，此业务的完成大大地促进了我院研究生的培养进度，依靠发达的互联网技术，将科学理论应用到了实际的生产当中来，充分地展现了科学技术是第一生产力的核心思想。此次业务从前期的需求分析、设计、实现一直遵循了软件工程中面向对象的核心思想，没有使用传统的结构化的软件工程的思想。对于此次论文内容的实现，我也发现了存在一定的不足之处，例如在与其它系统的数据交互方面还有待提高。"
