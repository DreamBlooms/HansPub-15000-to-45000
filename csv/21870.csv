"针对风力发电爬山法S函数建模原理较为复杂，易出错且不易排查的缺点，采用Matlab/Simulink基础模块建立风电系统爬山法模型。仿真算例表明，基于Matlab/Simulink的爬山法模型能够正确地找到最大功率点，实现MPPT控制。该方法简单有效，与风电系统仿真模型相互独立，易于进行算法改进，具有很强的实用性。 关键词 :风力发电，爬山法，Matlab/Simulink，最大功率点跟踪 Copyright © 2017 by authors and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/"
"风力发电是一种应用较为广泛的新能源发电技术。目前风电机组多采用变速恒频技术。为了最大限度地捕获风能，变速恒频的风电机组常采用最大功率点跟踪(Maximum Power Point Tracking, MPPT)控制策略以使得风电机组在低于额定风速时始终跟踪变化的风速，保持最佳叶尖速比运行，获得最大输出功率。爬山法是最常用的MPPT方法之一，由于其实施简单，不依赖风速测量和风机自身特性，具有良好的自适应性，因而广泛应用于小型风电机组 [ 1 ] [ 2 ] 。 Matlab功能强大，与多种软件均存在接口，是风力发电建模和仿真研究的常用软件。目前，对于风力发电爬山法的建模，多采用Matlab的S函数实现，通过编辑S函数，定义输入输出变量以及运算规则，最终生成一个可以在Matlab/Simulink中直接调用的模块。然而，S函数原理较为复杂，易出错且不易排查，对于初学者来说，十分困难。本文介绍了一种简便的实现方法，只需调用Matlab/Simulink中的基础模块即可实现。仿真分析了风速变化对输出功率的影响，建立的风力发电系统爬山法模型能够正确地找到最大功率点，实现MPPT控制。"
"风力机吸收风的动能，把外界自然风的动能转化为风力机的机械能。它决定了整个风力发电系统的输出功率。 根据流体力学和风能捕获原理，得到风扫过风轮时所具有的动能为 P w = 1 2 ρ A v 3 (1) 风力机从风能中吸收的能量为 P m = 1 2 ρ A v 3 C p ( λ , β ) (2) 式中， ρ 为空气密度，1.215 kg/m 3 ； A 为风穿过横截面的面积，单位m 2 ； v 为通过风轮的风速，单位m/s； C p 为风能利用系数，通常为叶尖速比 λ 和叶桨矩角 β 的函数。 根据贝茨理论，风力机将风能转换成机械能的风能利用系数 C p 极限值约为0.593。外加机械损耗和传输损耗，风力发电机的转换效率远达不到理想效果，转换效率约在0.3~0.4之间，风能利用率很低。在额定风速以下时，叶桨矩角 β 保持为0，采用最大功率跟踪(Maximum Power Point Tracking, MPPT)控制算法调节风机转速以获得最佳叶尖速比 λ ，使风能利用系数 C p 最大，从而使风力机尽可能地工作在最大功率点，提高能源的利用率 [ 3 ] [ 4 ] 。"
"根据贝兹理论，特定风速下风力机吸收的功率是风机转速的函数，此时风力机输出的功率-转速曲线如图1所示。图中MPP为最大功率点(Maximum Power Point, MPP)，ω为风机转速，P为风机输出功率。 由图1可知，风力机功率–转速曲线是具有唯一极值的凸函数，爬山法利用该特性，通过主动的周期性施加转速扰动，观察扰动后系统输出功率P e 的改变方向(由于风力机功率P较难测量，在爬山法实施过程中通常用转速扰动响应稳定后的输出功率P e 代替P)，进而确定系统处于“上山阶段”还是“下山阶段”，并确定下一步转速扰动的方向(搜索方向)。如此反复进行直至达到MPP处(山顶)，因此该算法形象的称为爬山搜索算法。其实现过程为：主动扰动转速，检查扰动后P e 的变化方向，若P e > 0，则保持原来搜索方向继续扰动，否则扰动反向；如此反复，工作点将不断接近MPP，最终到达MPP。爬山法的流程图如图2所示，图中n为扰动次数。爬山法的数学描述如式(3)所示。 { Δ ω ( n + 1 ) = s i g n ( Δ ω ( n ) ) * s i g n ( Δ P e ( n ) ) * k Δ ω ( n ) = ω ( n ) − ω ( n − 1 ) Δ P e ( n ) = P e ( n ) − P e ( n − 1 ) (3) 式中k为扰动步长幅值，sign函数运算规则为 s i g n ( x ) = { 1 , x ≥ 0 − 1 , x < 0 。 图1. 爬山法原理图 图2. 爬山法流程图 该方法不需要实时测量风速，也不需要知道风机的准确功率特性曲线，对系统参数的依赖性比较低，系统有自动跟随与自适应的能力，比较适合运用在转动惯量小的风电机组。但扰动增量的设计存在一定难度，扰动量太大或太小都会给系统调节带来问题 [ 5 ] [ 6 ] 。扰动量大，则跟踪时间短，系统的动态性能好，但达到稳态后的精度相对较差；反之，扰动量太小，达到稳态后的精度相对较好，但跟踪时间长，系统的动态性能差，对于变化较快的风速该方法的跟踪速度不佳。"
"爬山法以一定的步长周期性地扰动系统，以扰动后系统输出功率变化量的正负决定下一次扰动的方向。由此可知，爬山法建模的关键环节包括采样(周期性地采样风机转速和系统输出功率，用于计算输出功率变化量)、存储(存储采样值)、计算(根据输出功率变化量获得下一扰动周期的步长和转速目标值)、计算值输出(将计算得到的转速目标值输出给转速控制器)。 以上关键环节涉及的重要参数包括采样周期T和转速扰动步长Δω。T的设置必须大于系统阶跃响应达到稳定值的时间，Δω可以是固定步长也可以是变步长，若为变步长，根据变步长规则进行周期性修正即可。下面以固定步长为例实现风力发电系统仿真模型的计算。  爬山法的Matlab/Simulink模型如图3所示。主要包括采样、存储和计算模块。其中采样和存储模块采用Simulink中的现有模块，计算模块的内部如图4所示。图中k为固定步长的幅值。计算模块用于根据爬山算法的原理计算扰动步长，若对爬山法进行改进可直接修改计算模块的计算规则。 利用爬山法模型搭建的小型风力发电最大功率跟踪系统的仿真模型如图5所示。  仿真算例的风机参数为：风力机半径为2.5 m，额定风速为12 m/s，直驱型，系统等效转动惯量为 22.16 kg×m 2 ，最佳叶尖速比为o pt = 6.325，C Pmax = 0.4382。爬山算法参数：采样周期为T = 0.1 s，扰动步长幅值k = 0.5。图3中存储器Memory, Memory 1和Memory 2的初值分别为0, 1, 7.59。采用阶跃风速进行仿真，获得转速跟踪轨迹如图6所示，风机的实际输出功率与最大功率对比曲线如图7所示。 由图6和图7可知，根据Matlab/Simulink搭建的小型风力发电爬山法模型能够正确地找到最大功率点，实现MPPT控制。 图3. 爬山法的Simulink模型 图4. 固定步长爬山法的计算模块 图5. 爬山法模型与风电系统的连接 图6. 转速跟踪轨迹 图7. 风机实际输出功率 该方法存在以下优点：1) 简单且易于实现，直接采用Simulink中的现有模块搭建，直观易懂；2) 易于与风电系统仿真模型连接且具有独立性；3) 易于进行算法改进，改进算法时只需修改计算模块的运算规则即可。  本文对风力机工作特性进行了分析，说明了风力发电系统最大功率追踪的原理，并针对传统风力发电系统爬山法S函数建模困难的缺点，搭建了基于Matlab/Simulink的风力发电系统爬山法实验模型，通过仿真证明了该模型的可行性和有效性。"
