"本文考察工作记忆中注意焦点转换的更新和背景存取过程。两个实验要求被试在工作记忆中暂时储存三个数字，并对这三个数字进行一系列运算。实验1设置两种运算序列：“提取且更新序列”要求被试每次提取三个数字中的一个，并对这一数字进行更新；“提取序列”只要求被试提取数字，而无需对数字更新。结果显示，“提取且更新序列”中的转换代价大于“提取序列”中的转换代价。实验2要求被试每次使用一个算式的结果替代三个数字中的一个，并设置两种运算条件：在“更新条件”下，算式的结果与被替代的数字不同；在“非更新条件”下，算式的结果与被替代的数字相同。结果显示，“更新条件”下的转换代价大于“非更新条件”下的转换代价；在“非更新条件”下，注意焦点只需在背景位置之间转换，也存在显著的转换代价。两个实验的结果说明，注意焦点转换包括更新和背景存取过程。 关键词 :工作记忆，注意焦点转换，更新，背景存取 Copyright © 2020 by author(s) and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution International License (CC BY 4.0). http://creativecommons.org/licenses/by/4.0/"
"一种被广泛接受的观点认为，在工作记忆中存在一个信息加工的核心机制——注意焦点(focus of attention)，注意焦点在任一时刻只能指向一个工作记忆项目进行加工(Garavan, 1998; Oberauer, 2002)。因此，当需要连续对多个项目加工时，就需要注意焦点在这些项目之间转换。考察注意焦点转换现象对于理解工作记忆的内在机制具有重要的意义。例如，近年来一种新的工作记忆模型——同中心模型(the concentric model)将注意焦点作为其核心概念之一(Oberauer, 2002; Oberauer & Hein, 2012; Oberauer, Souza, Druey, & Gade, 2013; Oberauer & Lin, 2017)。 记忆更新任务是考察注意焦点转换现象的经典范式。Garavan (1998)最早采用这一范式考察注意焦点转换现象。实验要求被试为两种图形(三角形和矩形)分别保持一个数字(项目)，然后对这两个数字进行一系列更新运算，每次只对其中一个数字运算。实验设置两种刺激类型，即当注意焦点对一种图形的数字更新后，下一次仍然对这一图形的数字更新(项目重复类型)；或者对另一种图形的数字更新(项目转换类型)。结果发现，项目转换类型的反应时长于项目重复类型的反应时，这种反应时之差被称为转换代价。近年来，研究者采用记忆更新任务及其变式，以转换代价为指标，从多角度考察了注意焦点转换现象(Basak & Verhaeghen, 2011; Berti, 2016; Frenken & Berti, 2018; Janczyk, 2017; Lendinez, Pelegrina, & Lechuga, 2015; Linares & Pelegrina, 2018; Stewart, Hunter, & Rhodes, 2019; Verhaeghen, Geigerman, Yang, Montoya, & Rahnev, 2019)。 注意焦点转换中的认知过程是一个基本的问题。上述诸多研究认为，转换代价仅仅反映了注意焦点在项目之间转换这样一种简单的过程。根据这种观点，在项目重复类型中，注意焦点连续两次指向同一个项目；但在项目转换类型中，注意焦点需要从一个项目转换到另一个项目，而转换代价与这种转换过程有关。但在记忆更新任务中，转换代价还可能受到另外两种认知过程的影响。 第一种为更新过程。在记忆更新任务中，当注意焦点在两个项目之间转换时，还需要对两个项目更新，那么这种更新过程是否影响注意焦点转换呢？在一项较早的研究中，Kessler和Meiran (2006)考察了这一问题。实验要求被试对两种图形的数字进行一系列运算，并根据连续两次运算的项目之间的关系(是否相同)设置项目重复类型和项目转换类型。实验还设置两种运算条件，以操纵项目的更新状态：在“更新条件”下，每次运算完成后，相应图形的数字会被更新；在“非更新条件”下，每次运算完成后，相应图形的数字保持不变。结果显示，两种运算条件下的转换代价差异不显著，未发现更新对注意焦点转换过程的影响。或许由于这一研究结果，后续很少有研究进一步考察注意焦点转换中的更新过程。但在Kessler和Meiran (2006)的研究中，在项目重复类型和项目转换类型中，研究者只操纵了后一个项目的更新状态，而未操纵前一个项目的更新状态。例如，当后一个项目为“更新条件”时，则将两种刺激类型定义为“更新条件”下的刺激类型，而前一个项目既可能为“更新条件”，也可能为“非更新条件”，这种设置可能会影响实验结果。 近年研究提示，当注意焦点在两个项目之间转换时，前一个项目的更新状态也可能会影响注意焦点转换过程。Ecker及合作者的一系列研究(Chang, Ecker, & Page, 2017; Ecker, Lewandowsky, & Oberauer, 2014; Ecker, Oberauer, & Lewandowsky, 2014; Singh, Gignac, Brydges, & Ecker, 2018)认为，工作记忆对项目的更新包括两种过程：一种为移除过程，即项目原有的内容需要与背景位置解除捆绑；另一种为再捆绑过程，即项目新的内容需要与背景位置重新捆绑。例如，对于数字“3~5”，当需要将3更新为8时，数字3需要与第一个系列位置解除捆绑；并且数字8需要与第一个系列位置重新捆绑。在这两种过程中，移除过程是更新的核心过程。研究还发现，项目原有的内容与背景位置的捆绑并不能被完全解除，在更新完成后，二者的捆绑痕迹会暂时储存在工作记忆中，影响接下来的更新过程(Lewis-Peacock, Kessler, & Oberauer, 2018; Oberauer & Vockenberg, 2009)。这些研究提示，当注意焦点在两个项目之间转换时，在前一个项目被更新后，该项目原有的内容与背景位置的捆绑痕迹会暂时储存在工作记忆中，而这可能影响接下来的注意焦点转换过程。因此，在考察注意焦点转换中的更新过程时，也需要对前一个项目的更新状态进行操纵，以匹配连续两个项目的更新状态。本研究的目的一为，在匹配一个刺激类型中连续两个项目的更新状态的基础上，进一步考察更新对注意焦点转换的影响。 第二种为背景存取过程。近年研究认为，在工作记忆中，每个项目处于特定的背景位置(如系列位置)，而项目之间通过其所处的背景位置进行区分，因此，注意焦点首先需要指向一个项目的背景位置，然后才能对这一项目进行加工(Linares & Pelegrina, 2018; Oberauer & Hein, 2012; Oberauer et al., 2013; Oberauer & Lin, 2017)。例如，在Garavan的研究中，被试通常以固定顺序(如“三角形的数字—矩形的数字”)保持两个数字，注意焦点首先需要指向第一个或第二个系列位置，然后才能对该位置的数字进行运算。根据这种观点，相对于项目重复类型，在项目转换类型中，注意焦点还需要在项目的背景位置之间转换。但目前有关背景位置转换的观点仅仅是一种假设，尚未有研究直接考察这种背景存取过程。本研究的目的二为，为背景存取过程提供直接的实验证据。 综上所述，本研究考察注意焦点转换中的更新和背景存取过程，其中，实验1考察更新过程；实验2一方面进一步考察更新过程，另一方面考察背景存取过程。本研究对于深入理解注意焦点转换中的认知过程具有重要的意义。"
"实验1要求被试为三种颜色(红色、绿色、蓝色)分别保持一个数字，并对这三个数字进行一系列运算。根据前人研究(Ecker, Lewandowsky, Oberauer, & Chee, 2010; Lendinez et al., 2015; Linares, Bajo, & Pelegrina, 2016)，实验1设置两种运算序列：一种为“提取且更新序列”，这一序列要求被试每次提取其中一种颜色的数字，并对这一颜色的数字更新；另一种为“提取序列”，这一序列只要求被试提取颜色的数字，而无需对颜色的数字更新。每种运算序列还设置两种刺激类型：在项目重复类型中，连续的两次运算指向同一种颜色的数字；在项目转换类型中，连续的两次运算指向不同颜色的数字。通过这两种设置，一个刺激类型中连续两个项目的更新状态会被完全匹配：在“提取且更新序列”中，连续的两个项目均会被更新；在“提取序列”中，连续的两个项目均不会被更新。实验1通过比较两种运算序列中的转换代价考察更新对注意焦点转换的影响。   大学生28人(男生14人)，平均年龄21.25岁(SD = 1.11)。被试视力或矫正视力正常，之前未参加过类似实验，每位被试在实验后获得10元报酬。  2 (序列条件：“提取且更新序列”、“提取序列”) × 2 (刺激类型：项目重复类型、项目转换类型)重复测量实验设计。对序列条件和刺激类型的设置如前所述，因变量为正确率和反应时。  实验仪器为台式电脑，显示器17英寸，分辨率1024 × 768，刷新频率60 Hz。实验程序采用E-Prime 1.1编制，屏幕背景为白色，被试与屏幕距离约60 cm。实验材料包括初始数字和算术运算，初始数字在1至9之间随机选择，算术运算在“−7”到“+7”之间(不含“+0”和“−0”)随机选择。初始数字和算术运算的颜色为红色、绿色和蓝色中的一种，字体为Time New Roman格式，字号为44号。  在一个运算序列(如图1)中，屏幕中央首先呈现“Start”提示被试集中注意，时间为800 ms。然后依次呈现红色、绿色和蓝色的初始数字。当一种颜色的初始数字呈现时，被试需要记忆这一初始数字，并在键盘右侧的数字键区域输入该数字。接下来，屏幕中央每次呈现一种颜色的算术运算。在“提取且更新序列”中，当算术运算呈现时，要求被试提取相应颜色上一次的数字，对数字进行算术运算，将运算结果作为该颜色新的数字，并立即在数字键区域输入该新的数字。在“提取序列”中，当算术运算呈现时，被试只需提取相应颜色的初始数字，对数字进行算术运算，并立即在数字键区域输入运算结果，而无需将运算结果作为该颜色新的数字。被试需又准又快地完成运算和输入过程。在一个运算序列中：算术运算共呈现9次，每次运算结果在1至9之间；为操纵刺激类型，从第二个算术运算开始，每个算术运算与上一个算术运算的颜色相同的概率设置为0.5。 两种运算序列各包括5个序列的练习和26个序列的正式实验，一半被试先完成“提取且更新序列”，另一半被试先完成“提取序列”。在正式实验中，被试在“提取且更新序列”中平均完成项目重复类型和项目转换类型各104次，在“提取序列”中分别为106次和102次。  在一个运算序列中，当连续的两次运算构成项目重复类型和项目转换类型时，只有被试对这两次运算均输入正确时，才将这一刺激类型计为反应正确。同时，在一个刺激类型中，将被试对后一次运算的反应时作为该刺激类型的反应时。实验1只分析正确的刺激类型的反应时。本研究将统计显著性水平设为0.05。 图1. 单个运算序列中部分刺激呈现示例  正确率和反应时如表1，分别对正确率和反应时进行2 × 2重复测量方差分析。正确率结果显示，序列条件主效应不显著，F < 1；刺激类型主效应不显著，F(1, 27) = 2.82，p = 0.104；二者交互作用显著，F(1, 27) = 6.73，p = 0.015， η p 2 = 0.20。简单效应检验结果显示，在“提取且更新序列”中，项目重复类型的正确率高于项目转换类型的正确率，F(1, 27) = 11.82，p = 0.002， η p 2 = 0.31；在“提取序列”中，两种刺激类型的正确率差异不显著，F < 1。 Table 1 项目重复类型 项目转换类型 正确率 反应时 正确率 反应时 提取且更新序列 91.36 ± 5.64 1999 ± 445 88.76 ± 6.33 2661 ± 558 提取序列 89.84 ± 6.06 1934 ± 360 90.26 ± 6.06 2122 ± 390 表1. 不同序列条件下两种刺激类型正确率(%)和反应时(ms)的均值和标准差(M ± SD) 反应时结果显示，序列条件主效应显著，F(1, 27) = 30.66，p < 0.0005， η p 2 = 0.53；刺激类型主效应显著，F(1, 27) = 82.00，p < 0.0005， η p 2 = 0.75；重要的是，二者交互作用显著，F(1, 27) = 40.60，p < 0.0005， η p 2 = 0.60。交互作用说明，在“提取且更新序列”中，两种刺激类型的反应时差异(转换代价，662 ms)大于“提取序列”中二者的差异(188 ms)。简单效应检验结果显示，“提取且更新序列”和“提取序列”中的转换代价均显著，分别为F(1, 27) = 120.58，p < 0.0005， η p 2 = 0.82和F(1, 27) = 9.95，p < 0.005， η p 2 = 0.27。 实验1结果说明，更新影响注意焦点转换过程，当需要对项目更新时，转换代价较大。实验1设置“提取且更新序列”和“提取序列”，在运算序列之间操纵项目的更新状态。接下来，实验2在同一个运算序列中设置“更新条件”和“非更新条件”，在运算序列内部操纵项目的更新状态，这可为考察更新对注意焦点转换的影响提供更有力的证据。实验2还直接考察注意焦点转换中的背景存取过程。"
"实验2要求被试为三种颜色(红色、绿色、蓝色)各保持一个数字，然后每次使用一个算式的结果替代其中一种颜色的数字。根据前人研究(Ecker et al., 2010; Ecker, Lewandowsky et al., 2014; Qin & Basak, 2020)，实验2设置两种运算条件：在“更新条件”下，算式的结果与被替代的数字不同，替代完成后，颜色的数字会被改变；在“非更新条件”下，算式的结果与被替代的数字相同，替代完成后，颜色的数字保持不变。实验2还设置项目重复类型和项目转换类型，设置方式和实验1相同。 在实验2中，为匹配一个刺激类型中连续两个项目的更新状态，当连续的两次运算构成项目重复类型或项目转换类型时，只有这两次运算均为“更新条件”或均为“非更新条件”，才将这一刺激类型定义为“更新条件”或“非更新条件”的刺激类型。实验2进行如下分析：(1) 通过比较两种运算条件下的转换代价考察更新对注意焦点转换的影响；(2) 通过“非更新条件”下的转换代价直接考察背景存取过程，在这一条件下，注意焦点只需在背景位置之间转换，而无需提取和更新相应的数字，如果存在转换代价，那么这种转换代价只能反映背景存取过程。   大学生28人(男生14人)，平均年龄20.50岁(SD = 0.92)，被试要求同实验1。  2 (运算条件：“更新条件”、“非更新条件”) × 2 (刺激类型：项目重复类型、项目转换类型)重复测量实验设计。对运算条件和刺激类型的设置如前所述。因变量为正确率和反应时。  在实验2中，实验材料包括初始数字和算式，初始数字在1至9之间随机选择；算式为加法(如“3 + 2”)或减法(如“5 − 1”)形式，被加数（被减数）在1至9之间随机选择，加数(减数)在1至7之间随机选择，二者不相同且结果在1至9之间。其它设置与实验1相同。  与实验1基本相同。在实验2中，三个初始数字分别以红色、绿色和蓝色依次呈现，当一种颜色的初始数字呈现时，要求被试记忆这一初始数字并按空格键。接下来，每次呈现一种颜色的算式，要求被试使用算式的结果替代相应颜色上一次的数字，并立即按空格键。实验2还进行如下设置：(1) 一个运算序列最多呈现9个算式，且每个算式都可能是相应运算序列的最后一个算式，概率为1/9；(2) 在一个运算序列最后，要求被试依次输入红色、绿色和蓝色的最终数字。通过这两种设置，被试无法预测运算序列的最后一个算式，因而每次都必须认真完成替代过程，才能保证对最终数字输入正确。 在一个运算序列中，为操纵运算条件，每个算式的结果与相应颜色上一次的数字相同的概率设置为0.5；为操纵刺激类型，从第二个算术运算开始，每个算术运算与上一个算术运算的颜色相同的概率设置为0.5。实验包括5个运算序列的练习和100个运算序列的正式实验，在正式实验中，被试在“更新条件”下平均完成59次项目重复类型和62次项目转换类型，在“非更新条件”下均为61次。  在实验2中，被试在每次运算时只需按空格键进行反应，不能记录运算的正确率，这种设置和前人注意焦点转换的研究一致(e.g., Ecker, Lewandowsky et al., 2014; Garavan, 1998; Kessler & Meiran, 2006; Oberauer, 2002; Oberauer & Vockenberg, 2009; Unsworth & Engle, 2008)。参照这些前人研究，实验2只报告被试对运算序列反应的正确率，而重点分析每次运算的反应时。此外，在对运算序列的正确率进行计算时，只有被试对一个运算序列的最后三个数字均输入正确时，才将这一运算序列计为正确。实验2只分析正确的运算序列的反应时，对反应时的定义与实验1相同。  被试对运算序列反应的正确率为90.00%。反应时数据如表2，2 × 2重复测量方差分析结果显示，运算条件主效应显著，F(1, 27) = 119.51，p < 0.0005， η p 2 = 0.82；刺激类型主效应显著，F(1, 27) = 115.96，p < 0.0005， η p 2 = 0.81；重要的是，二者交互作用显著，F(1, 27) = 33.97，p < 0.0005, η p 2 = 0.56。交互作用说明，在“更新条件”下，两种刺激类型的反应时差异(转换代价，762 ms)大于“非更新条件”下二者的差异(431 ms)。简单效应检验结果显示，“更新条件”下的转换代价显著，F(1, 27) = 91.75，p < 0.0005， η p 2 = 0.77；重要的是，“非更新条件”下的转换代价也显著，F(1, 27) = 130.75，p < 0.0005， η p 2 = 0.83。 Table 2 项目重复类型 项目转换类型 更新条件 1300 ± 308 2062 ± 567 非更新条件 901 ± 171 1332 ± 241 表2. 不同运算条件下两种刺激类型反应时(ms)的均值和标准差(M ± SD) 实验2结果说明：(1) 更新影响注意焦点转换过程，当需要对项目更新时，转换代价较大，这和实验1结果一致；(2) 在“非更新条件”下存在显著的转换代价，说明注意焦点转换中存在背景存取过程。"
"本研究考察注意焦点转换中的更新和背景存取过程，其中，实验1在运算序列之间操纵项目的更新状态，实验2在运算序列内部操纵项目的更新状态，两个实验在匹配一个刺激类型中连续两个项目的更新状态的基础上，进一步考察更新过程；实验2还设置“非更新条件”的刺激类型，以考察背景存取过程。结果发现，更新影响注意焦点转换过程；注意焦点转换包括背景存取过程。  两个实验的结果表明，当需要对项目更新时，注意焦点转换所用的时间更长。这可在同中心模型的框架下，结合前人有关更新的研究进行解释。同中心模型(Oberauer, 2002; Oberauer & Hein, 2012; Oberauer et al., 2013; Oberauer & Lin, 2017)认为，在工作记忆中，与认知任务有关的信息处于直接存取区(the region of direct access)，其中每个项目与特定的背景位置相捆绑，而注意焦点每次在直接存取区中选择一个项目进行加工。在这一模型中：(1) 注意焦点转换反映了注意焦点在直接存取区的项目之间转换的过程，受直接存取区中信息的干扰；(2) 当直接存取区的部分信息不再与认知任务有关时，这些信息会被逐渐移除出直接存取区，当被完全移除后，信息就不再干扰注意焦点转换过程。 根据同中心模型，在本研究中，三种颜色的数字处于直接存取区，每个数字与特定的背景位置相捆绑。例如，被试以固定顺序“红色数字–绿色数字–蓝色数字”保持三种颜色的数字，则三个数字分别与第一、第二和第三个系列位置相捆绑。在实验1中，对于“提取且更新序列”，当注意焦点对一种颜色的数字更新时，这一颜色原有的数字需要与相应的背景位置解除捆绑(Chang et al., 2017; Ecker, Lewandowsky et al., 2014; Ecker, Lewandowsky et al., 2014; Singh et al., 2018)。但二者之间的捆绑并不能完全解除，在更新完成后，二者的捆绑痕迹仍会暂时储存在直接存取区(Lewis-Peacock et al., 2018; Oberauer & Vockenberg, 2009)。接下来，在项目重复类型中，这一颜色的数字仍处于注意焦点，可直接被继续更新。但在项目转换类型中，注意焦点需要转换到另一个颜色的数字所处的背景位置，并提取该位置的数字，然后才能对数字更新。这种项目转换类型会受直接存取区中前一项目的捆绑痕迹的干扰(Oberauer, 2002; Oberauer & Hein, 2012; Oberauer et al., 2013; Oberauer & Lin, 2017)：一方面，捆绑痕迹中的背景位置信息会干扰背景存取过程；另一方面，捆绑痕迹中的数字信息会干扰提取过程。因而注意焦点转换所用的时间较长，转换代价较大。对于“提取序列”，注意焦点无需对颜色的数字更新，不存在前一项目的捆绑痕迹对项目转换类型的干扰，因而注意焦点转换所用的时间较短，转换代价较小。 在实验2中，对于项目转换类型，注意焦点只需转换到另一个颜色的数字所处的背景位置，并对这一位置的数字进行替代，因此，“更新条件”下前一项目的捆绑痕迹只会干扰这种背景存取过程。此外，在实验2中，“更新条件”和“非更新条件”处于同一个运算序列，因此，“更新条件”的项目的捆绑痕迹也可能会干扰后续的“非更新条件”的背景存取过程。但在这一实验中，当一个颜色的数字被更新后，这一颜色的原有数字与背景位置的捆绑痕迹不再与认知任务有关，会被逐渐移除出直接存取区(Oberauer, 2002; Oberauer & Hein, 2012; Oberauer et al., 2013; Oberauer & Lin, 2017)，而这对两种运算条件具有不同的影响。具体而言：对于“更新条件”，当前一颜色的数字被更新后，相应的捆绑痕迹会立即干扰接下来的背景存取过程，对背景存取过程干扰较大，因而注意焦点转换所用的时间较长，转换代价较大。而这种捆绑痕迹会逐渐被移除出直接存取区，对后续的“非更新条件”的背景存取过程干扰较小，因而“非更新条件”的注意焦点转换所用的时间较短，转换代价较小。  在实验2中，在“非更新条件”下，注意焦点无需提取相应颜色的数字，也无需对数字更新，两种刺激类型的唯一区别在于，项目转换类型需要注意焦点在背景位置之间转换，而项目重复类型不包括这种过程。结果仍然发现了显著的转换代价。这说明转换代价与背景存取过程有关，注意焦点转换包括背景存取过程。 如前所述，在实验2中，“更新条件”和“非更新条件”处于同一个运算序列，因此，“非更新条件”下的转换代价也可能受到“更新条件”下的捆绑痕迹的干扰。为排除这种可能的干扰，以更准确地考察背景存取过程，本研究进一步分析了实验2中每个运算序列的前两次运算，且两次运算均为“非更新条件”的情况。在这两次运算之前，注意焦点尚未对运算序列的初始数字更新，因此，当注意焦点在两个项目的背景位置之间转换时，转换代价不会受到更新造成的捆绑痕迹的干扰。结果仍然发现了显著的转换代价(360 ms)，统计结果为F(1, 27) = 53.00，p < 0.0005， η p 2 = 0.66。这种结果进一步说明，注意焦点转换中包括背景存取过程。  本研究扩展了前人对注意焦点转换中认知过程的理解。如引言所述，前人研究认为，注意焦点转换简单地反映了注意焦点在项目之间转换的过程。而当前结果说明，注意焦点转换包括更复杂的认知过程：一方面，更新影响注意焦点转换过程；另一方面，注意焦点转换中还包括背景存取过程。 本研究还为未来研究提供了一个新的视角。在前人研究中，注意焦点转换通常包括多种认知过程。例如，在考察认知机制(Basak & Verhaeghen, 2011; Janczyk, 2017)、神经机制(Berti, 2016; Frenken & Berti, 2018)和个体差异(Lendinez et al., 2015; Stewart et al., 2019; Unsworth & Engle, 2008)时，注意焦点既需要在项目之间转换，还需要存取项目的背景位置，并对项目进行更新；在考察练习效应(Price, Colflesh, Cerella, & Verhaeghen, 2014)时，注意焦点既需要在项目之间转换，还需要存取项目的背景位置。未来需分离出更新和背景存取过程，进一步考察二者在上述研究问题中的作用，以更深入地理解注意焦点转换的相应机制。"
"本研究得到如下结论：(1) 注意焦点转换包括更新过程，当需要对项目更新时，注意焦点转换所用的时间更长；(2) 注意焦点转换包括背景存取过程，当注意焦点只需在背景位置之间转换时，也存在显著的转换代价。"
