"由于城市道路系统的复杂性、随机性、动态性等特点，对整个路网进行统一的交通诱导与控制显然是不现实的。因此要实现有效的交通诱导与控制，应该根据城市空间和功能的发展变化来对整个交通网络系统进行分区。本文从静态方法、动态方法阐述了交通控制子区划分的研究现状并指明其中存在的不足，给出了根据节点状态进行交通控制子区划分的原则，详细设计交通控制子区划分算法。最后运用标准测试网络Sioux Falls网络对划分算法进行验证。实例分析表明，该算法能够实现有效的交通诱导与控制，缓解交通拥堵。 关键词 :交通控制子区划分，划分算法，交通诱导与控制 Copyright © 2018 by authors and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/"
"随着汽车保有量的急剧增加，在大城市尤其是特大城市对几百个甚至上千个交叉口的路网进行信号控制时，经常将路网划分成多个相互独立的区域，每个区域包含1个或者相邻的多个交叉口，即交通控制子区。当控制子区从出行活动性质、行政区域功能、地形地貌等方面考虑时，子区在长时间段内是无变化的。在城市交通诱导与控制领域，由于交通流状态变化具有复杂性、随机性和动态性，所以将整个路网分解成多个交通控制子区进行分别诱导与控制是当今社会发展的必然趋势。SCOOT和SCATS系统作为非常典型的城市交通控制系统，从控制子区的角度出发建立交通模型，进而对路网进行整体优化，取得了较好的成果。 1971年，美国学者Walinchus首次给出交通控制小区的定义 [ 1 ] 。Yagoda等学者从数学建模的角度考虑，对子区划分的控制指标、控制阈值和划分算法进行了深入研究，但最后并没有得出具体的子区划分方法 [ 2 ] 。由于早期的子区划分方法一般使用静态方法划分，以路网的物理特征作为划分依据，所以不能适应目前复杂的动态交通变化需求。为了找到与目前复杂交通系统中交通诱导与控制相匹配的子区划分方法，于是开始着眼于动态角度研究。王学堂把区域复杂系统分解为几个简单系统，对各个子系统进行研究 [ 3 ] 。高云峰、杨晓光等主要考虑物理关联和路径关联等原则，对交叉口群的划分方法进行了研究，把交叉口间的关联性作为划分交叉口群的依据 [ 4 ] 。这些子区划分方法的是基于常态条件下的交通控制，对非常态交通条件下的交通控制子区的划分方法并没有深入研究。除此以外，王薇还从诱导角度出发，讨论了基于网络平衡的大范围交通流动态管理，她提到为解决计算效率瓶颈问题，应对路网进行有效划分，提出了在路网诱导层面划分诱导子区的解决思路 [ 5 ] 。 上述交通控制子区的划分方法，有些只是给出了划分的原则，没有给出具体的计算步骤，有些是静态方法，虽然相对较为简单，计算量不大，但考虑到交通状态的瞬息万变，这些方法在复杂的城市交通系统中不实用。有些方法虽然是动态计算的，但没有考虑到针对区域交通状态进行量化分析，没有建立不同路口、路段的状态连通矩阵，因此交通控制小区的划分也有一定的局限性。"
"交通控制的路口节点虽地域范围小，但却是交通瓶颈，直接影响道路状态，是控制策略实施的主要场所，因此根据节点状态进行交通控制子区划分。交通状态是时空连续变量，控制子区也是动态划分的。交通优化控制的目标在于最大程度地发挥交通系统的作用，将车辆尽量均衡分布在所有路口和路段上，避免局部拥挤，因此交通拥挤的路口群成为控制实施的重点。为保证控制子区内各路口间能够协调控制，疏导拥挤交通流，将拥挤区域与邻近稀疏路口划为同一子区，便于路口间信号协同配时 [ 6 ] 。 基于上述思想，划分原则如下： 1) 中心关键–周边疏通原则 以可达值最低的一个或几个相邻路口为关键节点，紧邻的周边路口为疏通节点，划为一个控制子区； 2) 拥挤低谷点作边界原则 以两个子区节点的集合中，可达值最大的点为控制子区边界，边界的低谷点为中心的关键路口服务，类似原理如图1所示； 3) 交通状态相似原则 根据城市规模等级，在一定的道路拥挤度 λ 下，若两相邻路口的状态连通值为0，则该两节点划为同一子区集合； 4) 距离范围为上限原则 考虑到路口距离较远时，实施信号相位协同效果不明显，因此子区集合内的节点限定在直线方向上1000米范围内。"
"根据上述原则，设计在某考察时刻交通控制子区划分算法，为表达方便，绘制算法流程分为两个部分，主算法流程如图2所示，子算法流程如图3所示。具体算法过程如下： Step 1：初始化：建立集合M，元素为所有路段交叉口节点；建立若干集合Mi，设置为空集，算法结束后M i 为第i个小区的节点集合；设s = 0； Step 2：计算所有节点 j ( j = 1 ⋯ m , j ∈ N ) 的可达值 Q ( i ) ，所有链路 l i j 的路段交通状态系数 ； Step 3：新建集合T，将所有 Q ( i ) 按照从小到大排序，并依序置入集合T； Step 4：从T中依序取出 Q ( i ) ，进行以下操作： 1) 判断是否满足 C i j ( λ τ ) = 0 且 c i j ( λ τ ) = 0 ，若不满足，结束Step 4，否则转(2)； 2) 判断是否满足 i ∈ M , j ∈ M ，若不满足，转(3)，否则：节点 i ， j 置入新建集合 M s 中，同时从集合M中删除，即 s = s + 1 , M s = { i , j } , M = M − { i , j } ；并结束Step 4； 3) 判断是否满足 i ∈ M , j ∈ M q ，若满足，转(4)，否则，转(6)； 4) 判断若节点i加入到结合 M q ，则 M q 最大跨距是否大于1000米，若是，则转(5)，否则结束Step 4； 5) 判断是否满足 p i > p k , ∀ k ∈ M q ，若满足，则节点i加入到集合 M q ，集合M中删除节点i；否则， s = s + 1 , M s = { i , j } , M q = M q − { j } ；完成后结束Step 4； 6) 判断是否满足 i ∈ M a , j ∈ M b ，若是，转(7)，否则，结束Step 4； 7) 判断若 M a 与 M b 合并，合并后最大跨距是否小于1000米，若是则转(8)，否则结束Step 4； 8) 判断对任意 x ∈ M a , y ∈ M b ，是否有 成立，若是，则 M a = M a ∪ M b ，结束Step 4；否则，转(9)； 9) 排序比较，确定 M a 中关键路口 c a ， M b 中关键路口 c b ；判断 c a 与 c b 的距离是否小于1000米，若是则转(10)，否则结束Step 4； 10) 判断是否满足 p a < p b ，若是，则 M b = M a ∪ M b ，否则 M a = M a ∪ M b 。 Step 5：判断集合T是否清空，若是，转Step 6，否则转Step 4； Step 6：对M中剩余的每个元素i，进行操作：新建集合 M s ，将i置入 M s ，同时从M中删除节点i，即 s = s + 1 , M s = { i } , M = M − { i } ； Step 7：算法结束。 算法中集合的最大跨距，表示集合中的所有节点，在任意方向上的最远距离。集合中的节点，取通行度最小的节点作为关键路口。 图1. 峰值–低谷示意图 图2. 控制子区划分主算法流程 图3. 控制子区划分子算法流程"
"为验证上述模型和算法，本文对通用的标准测试网络Sioux Falls网络进行优化计算，运算结束将结果以图形化输出。 图4中圆圈代表交叉口，相邻交叉口有路段连通，共24个路口，74条路段，路段长度与图中等比放大，设置为双向六车道。表1中给出了具体产生交通需求的路段及平峰(饱和度为0.6)与高峰期(饱和度为1.2)时的路段交通需求量，表2给出了各路段的通行能力，表3给出了各路段的长度表示。路段行程时间用通用的交通阻抗表示： t a ( x ) = t a 0 [ 1 + α ( x a C a ) β ] 上式中， t a 0 为路段a的自由行程时间， x a 、 C a 分别为路段a的交通需求和通行能力，参数 α 、 β 分别取0.15和4。根据行程时间和路段长度，可求出路段平均行驶速度。计算节点的通行度时，利用4个交通拥挤程度截值依次计算各路口节点的通行度。 图5、图6分别给出了交通饱和度分别是0.6、1.0的情况下，控制子区的划分情况。从图中可看出，在交通畅通时，流量小，各路口之间相互影响不大，一般2~3个路口构成小区，甚至单个路口独立分区。但在交通过饱和时，拥堵路口增多，同时为疏通拥挤路口车流，多个附近畅通路口与拥挤路口协同，单个控制小区规模扩大，数量减少。表3给出了所有节点的通行度和子区划分情况。 图4. 基于Sioux Falls的路网实例 图5. 饱和度为0.6的交通控制子区划分 Table 1 饱和度 路段交通需求(pcu/h) 1、2、13、14、39、40、69、70、71、72 7、8、9、10、13、14、19、20、21、22、25、26、27、28、35、36、37、38、45、46、65、66、73、74 3、4、5、6、11、12、23、24、29、30、31、32、33、34、41、42、43、44 0.6 1880 1380 1350 1.0 3200 2200 2400 表1. 不同状态下的交通需求 Table 2 路段编号 C a (pcu/h) 路段编号 C a (pcu/h) 路段编号 C a (pcu/h) 1 3200 26 2100 51 2200 2 3200 27 2300 52 2200 3 2400 28 2300 53 2200 4 2400 29 2100 54 2200 5 2400 30 2100 55 2100 6 2400 31 2200 56 2100 7 2200 32 2200 57 2100 8 2200 33 2200 58 2100 9 2200 34 2200 59 2100 10 2200 35 2200 60 2100 11 2200 36 2200 61 2200 12 2200 37 2100 62 2200 13 3200 38 2100 63 2200 14 3200 39 3500 64 2200 15 3200 40 3500 65 2100 16 3200 41 2000 66 2100 17 2300 42 2000 67 2100 18 2300 43 2100 68 2100 19 2300 44 2100 69 3350 20 2300 45 2200 70 3350 21 2200 46 2200 71 3350 22 2200 47 2300 72 3350 23 2300 48 2300 73 2300 24 2300 49 2200 74 2300 25 2100 50 2200 表2. Sioux Falls网络中各路段的相关参数值 Table 3 编号 长度(m) 编号 长度(m) 编号 长度(m) 编号 长度(m) 1，2 1090 17，18，19，20，23，24，27，28，29，30，49，50，55，56，57，58，59，60，7，68 220 7，8，9，10，31，32，33，34，51，52，61，62，69，70，71，72 310 11，12，21，22，35，36，53，54，65，66，73，74 400 13，14，15，16 440 3，4，5，6 225 25，26 37，38 285 39，40 830 41，42，43，44 430 45，46，63，64 460 47，48 210 表3. 路段长度 图6. 饱和度为1.0的交通控制子区划分"
"本文针对目前交通控制子区划分的不足之处，考虑到针对区域交通状态量化分析，建立不同路口、路段的状态连通矩阵，通过建立控制子区划分算法和模型，实现了城市道路交通控制子区的动态划分。最后对通用的标准测试网络Sioux Falls网络进行优化计算，给出不同饱和度时的控制子区划分情况。结果表明，该策略能够较好的对交通控制子区进行划分，比目前的子区划分效果提高一倍。"
