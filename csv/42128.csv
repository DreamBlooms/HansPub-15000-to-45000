"占空比无线传感器网络已广泛应用于入侵检测、地震活动监测和一些偏远地区中。在自然传输环境中，需要对数据传输的时延、能量消耗和跳数进行优化。基于这一要求，本文研究了占空比无线传感器网络(DC-WSN)中的NP完全问题：多约束路径问题。我们将提出网络中关于多重约束条件下从源点到汇聚点的数据传输路由构建的多项式时间算法。"
"无线传感器网络(WSN)在智能交通、环境监测、军事等领域有着广泛的应用。WSNs的主要功能之一是，事件发生后，网络中的传感器需要将感知到的实时数据传输到指定的收集器，即汇聚节点。 由于传感器采用的是电池供电，因此能效一直是研究的热点之一。因此，近十年来，低占空比网络 [ 1 ] [ 2 ] [ 3 ] [ 4 ] [ 5 ] 被认为是最关键的节能技术。在这种网络中，每个传感器节点按照一个无限二进制串的工作计划，周期性地在唤醒和休眠状态之间切换，其中1和0分别表示激活状态和休眠状态。一个节点只有在被唤醒时才能接收到数据包，并且可以在任何时间传输数据包。延迟主要是端到端延迟 [ 6 ]，即从事件发生的时间到接收器接收到关于该事件的数据包的时间的延迟。例如，给定从源节点到汇聚节点的路径P，由于活动/休眠调度，每个转发节点必须等待它的下一跳邻居节点苏醒来接收数据。对于一些对延迟敏感的应用，特别是军事监测和火灾报警，这种延迟应该受到限制。P的通信成本 [ 3 ] [ 7 ] [ 8 ] 包含距离、能量消耗、传输次数(或跳数)等。对于路径P的每一跳，如果希望到达终点的进度(距离)尽可能大，则可以减少跳数和P的长度。但是，由于各节点的唤醒调度，最大进程可能会导致某些跳长时间等待。然后，需要对延迟、成本等进行约束。 我们的贡献： 1) 研究了具有一般拓扑结构的DC-WSNs中的多约束路径 [ 9 ] [ 10 ] 问题。此外，在本文同时考虑的各种约束中，任意一对节点之间的传输延迟可以与DC-WSNs的时间扩展图 [ 11 ] 的构造相结合。 2) 重点讨论了在时间展开图中选择的路径与原始网络中所需要的非循环路径之间的关系。 然后，结合多约束路径问题，在第三节提出了一种多项式时间算法。"
"假设无线传感器网络具有 n 个点 v 1 , v 2 , ⋯ , v n ，随机分布在 m 维欧几里得立方体中。对于任意节点 v i ，定义 v i 的通信范围，记为 D i ，是一个以 v i 为中心，半径为 r 的 m 维球。如果 v j 在通信范围 D i 内，则 v j 是 v i 的邻居， v i 可以选择 v j 作为它的下一跳节点。同时， v i 也在通信范围 D j 中。 网络可以用无向图 G = ( V ( G ) , E ( G ) ) 表示。 V ( G ) = { v 1 , v 2 , ⋯ , v n } 是节点集， E ( G ) 是称为边的不同节点的无序对的集合。对于任意两个节点 v i , v j ∈ V ( G ) ，边 v i v j ∈ E ( G ) ，当且仅当这两个节点之间的距离不大于 r 。对于任意点 v ∈ V ( G ) ，设 N G ( v ) = { u : v u ∈ E ( G ) } 。如果网络为DC-WSN，则每个节点 v i ∈ V ( G ) 都有自己的工作调度 ( v i 1 , v i 2 , ⋯ , v i T ) ，其中， v i t ∈ { 0 , 1 } 为 v i 在时间 t 期间的状态，T为工作周期。 定义2.1. ( [ 11 ] )图 G 中的路径是一个序列 〈 u 0 , u 1 , ⋯ , u m 〉 ，使得 u i u i + 1 ∈ E ( G ) 是相邻节点并且 u i ≠ u j 对于任意不相同的 i , j ∈ { 0 , 1 , ⋯ , m } 。 定义2.2. 在占空比图中，给定序列 W =   〈 u 0 , u 1 , ⋯ , u m 〉 ，设 t i 为转发节点 u i 的数据接收时间， i = 0 , 1 , ⋯ , m 。那么 W 是可行漫步当且仅当以下两个条件成立时。 1) u i 和 u i + 1 是相邻节点； 2) 对于 W 中的每个边 u i u i + 1 ，数据包可以在 t i 时间之前成功地从 u i 传送到 t i + 1 ，在 t i + 1 时间被 u i + 1 接收。 而且，如果 u i ≠ u j 对于任意不同的 i , j ∈ { 0 , 1 , ⋯ , m } ，则 W 称为可行路径。 为了便于描述，我们考虑了 G :   w i : E ( G ) → R 0 + 的3个边权函数， i = 1 , 2 , 3 ，其中 w 1 ( v i v j ) 是数据包在 G 中通过边 v i v j 时所经历的延迟。如果 〈 v i , v j 〉 是可行路径， v i 和 v j 接收数据的次数分别为 α 和 β ，则 β − α ≥ w 1 ( v i v j ) 。给定一个数据传输可行路径 P = 〈 u 0 , u 1 , ⋯ , u k 〉 ，设每个节点 u i 的接收时间为 t i 。设 w i ( P ) = ∑ j = 0 k − 1 w i ( u j u j + 1 ) ， i = 1 , 2 , 3 ，并且 W 1 ( P ) = t k − t 0 。 DC-WSN中的多约束路径问题(WSN)表示为DC-MCP ( G , s , t , w 1 , w 2 , w 3 , c 1 , c 2 , c 3 ) (MCP ( G , s , t , w 1 , w 2 , w 3 , c 1 , c 2 , c 3 ) )，为求出一条从 s 到 t 的可行路径 P ，使得 W 1 ( P ) ≤ c 1 (即 w 1 ≤ c 1 )， w 2 ( P ) ≤ c 2 ， w 3 ( P ) ≤ c 3 。如果存在这样的路径，则该路径是DC-MCP ( G , s , t , w 1 , w 2 , w 3 , c 1 , c 2 , c 3 ) (MCP ( G , s , t , w 1 , w 2 , w 3 , c 1 , c 2 , c 3 ) )。然后，本文的主要问题是找到DC-MCP ( G , s , t , w 1 , w 2 , w 3 , c 1 , c 2 , c 3 ) 的解。接下来，我们将分两步提出一个针对这个问题的多项式时间算法。  设两个节点 s 和 t 分别为源点和汇点。在 [ 11 ] 中，Gu等人将图 G 建模为时间扩展图。结合上面的三个权值函数 w 1 ， w 2 和 w 3 ，按以下步骤得到一个时间扩展有向图 G 1 ： 1) 设 d = ⌈ c 1 ⌉ 。 G 1 的点集为 V ( G 1 ) = { v i [ t ] :   v i ∈ V ,   1 ≤ t ≤ d } ∪ { t 0 [ 0 ] } 。 2) G 1 的有向边集为 E ( G 1 ) = { ( t [ i ] , t 0 [ 0 ] ) :   1 ≤ i ≤ d }   ∪ { ( v i [ x ] , v j [ y ] ) :   v i v j ∈ E ( G ) ,   1 ≤ x < y ≤ d , y − x ≥ ⌈ w 1 ( v i v j ) ⌉ ,   v j y = 1 并 且 对 于 任 意 的 z ∈ [ x + 1 , y − 1 ] , v j z = 0 或 者 z − x < ⌈ w 1 ( v i v j ) ⌉ } . 3) 定义两个权值函数： w j : E → R + ， j = 2 , 3 ，如下所示： w 2 ( ( t [ i ] , t 0 [ 0 ] ) ) = w 3 ( ( t [ i ] , t 0 [ 0 ] ) ) = 0 。对于任何的 ( v i [ t ] , v j [ t ′ ] ) ∈ E ( G 1 − t 0 [ 0 ] ) ， w j ( ( v i [ t ] , v j [ t ′ ] ) ) = w j ( v i v j ) 对于 j = 2 , 3 。 设 G ′ 1 = G 1 − t 0 [ 0 ] ， N G ′ + ( v ) = { u : ( v , u ) ∈ E ( G ′ ) } ，其中 v ∈ V ( G ′ ) 。那么以下两个观察结果是显而易见的。 观察2.3. 对于任意点 v i [ t ] ∈ V ( G ′ 1 ) , | N G ′ 1 + ( v i [ t ] ) | ≤ | N G ( v i ) | 。 观察2.4. 对于图中任意的 v i [ t ] v j [ t ′ ] -路 P ， t ′ − t ≤ d − 1 = ⌈ c 1 ⌉ − 1 < c 1 。 给定图 G 1 中的路 P = 〈 v a 1 [ t a 1 ] , v a 2 [ t a 2 ] , ⋯ , v a k [ t a k ] 〉 ， P [ v a i [ t a i ] , v a j [ t a j ] ] ( i < j ) 表示 〈 v a i [ t a i ] , v a i + 1 [ t a i + 1 ] , ⋯ , v a j [ t a j ] 〉 的子路。如果 t 0 [ 0 ] ∈ V ( P ) ，则 t 0 = v a k ， 0 = t a k 。设 P ˜ = 〈 v a 1 , v a 2 , ⋯ , v a k 〉 − t 0 ， P ˜ 中 v a i 的数据接收时间是 t a i 。 观察2.5. P ˜ 是图 G 中的一条可行路。 证明：通过图 G 1 的构造，对每一个 ( v a i [ t a i ] , v a i + 1 [ t a i + 1 ] ) ∈ E ( P ) ，我们有 v a i v a i + 1 ∈ E ( G ) ， t a i + 1 − t a i ≥ ⌈ w 1 ( v a i v a i + 1 ) ⌉ 并且 v a i + 1 在 t a i + 1 时刻唤醒。所以对任意 v a i v a i + 1 ∈ E ( P ˜ ) ，转发点 v a i 能够在 t a i + 1 时刻之前把数据包传递到点 v a i + 1 ，并且 v a i + 1 能够在 t a i + 1 时刻成功接收该数据包。 观察2.5表明 P ˜ 是可行的漫步，因此 W 1 ( P ˜ ) = t a k − t a 1 。另外，如果我们假设存在两个整数 x , y ∈ { 1 , 2 , ⋯ , k } 满足 a x = a y ，那么定义2.2表明了 P ˜ 不是G的可行路径。将 G 1 的定义与观察2.4和2.5结合起来，可以立即得到以下结果。 引理2.6. 给定MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w 3 , c 2 , c 3 ) 的一个解 P ，如果 P ˜ 是图G中的一条可行路，则 P ˜ 是DC-MCP ( G , s , t , w 1 , w 2 , w 3 , c 1 , c 2 , c 3 ) 的一个解。  根据引理2.6，它足以找到MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w 3 , c 2 , c 3 ) 的一个解 P 使得 P ˜ 是图 G 中的一条可行路，则 P ˜ 是原问题所需路径。现在，我们需要使用Chen [ 9 ] 等人提出的一个新的边权函数，用 w 表示这个函数，定义为 w :   E ( G 1 ) → N + ，其中 N + 是正整数集。给定一个正整数 x ，对每一个 ( u , v ) ∈ E ( G 1 ) ， w ( ( u , v ) ) = ⌈ w 3 ( ( u , v ) ) ⋅ x c 3 ⌉ 。 在下文中，根据如下定理我们将考虑MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w , c 2 , x ) 。 定理2.7. [ 9 ] MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w , c 2 , x ) 的解也一定是MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w 3 , c 2 , c 3 ) 的解。 根据定理2.7，只要求解MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w , c , x ) ，就可以得到一个解 P ，使 P ˜ 是可行路径。进一步地，我们也希望 W 1 ( P ˜ ) 在 w 2 ( P ) ≤ c 2 和 w ( P ) ≤ x 的约束下尽可能小。这个问题的算法将在第三节讨论。"
"在本节中，基于用于MCP多约束路径问题的扩展Dijkstra最短路径算法 [ 9 ]，提出了一种用于DC-MCP的多项式时间算法。首先，我们考虑初始化阶段。 每个节点 v i [ t ] 的 d ( v i [ t ] , k ) 在 w -权值为 k 的约束下，对 w 2 -权值的最小化起着重要作用。 集合 Q 包含节点之间所有可能的对和 w -权值。在下面，我们会找到一个图 G 1 中的 s [ 1 ] t 0 [ 0 ] -路 P 满足 W 1 ( P ˜ ) 是在 w 2 ( P ) ≤ c 2 和 w ( P ) ≤ x 约束下的最小值。 此外，最小化 w 2 ( P ) 和 w ( P ) 也是必要的。例如图1，考虑展开图 G 1 对应到图 G 。设 c 1 = 5 ， c 2 = c 3 = x = 4 。注意，图 G 1 中存在一条路 P = 〈 v 1 [ 1 ] , v 2 [ 2 ] , v 1 [ 4 ] , v 3 [ 5 ] , t 0 [ 0 ] 〉 ， W 1 ( P ˜ ) = 4 < c 1 ， w 2 ( P ) = 4 ≤ c 2 和 w ( P ) = 4 ≤ x 。显然，由于工作进度的安排t为 ( 00001 ) ，故从s到t， P ˜ 有最小的延时。然而，因为 v 1 [ 1 ] ， v 1 [ 4 ] ∈ V ( P ) ，所以 P ˜ 不是图G中的一条st-可行路，此外，对于路 P ′ = 〈 v 1 [ 1 ] , v 3 [ 5 ] , t 0 [ 0 ] 〉 ， W 1 ( P ′ ˜ ) = W 1 ( P ˜ ) ， w 2 ( P ′ ) = 2 < w 2 ( P ) 和 w ( P ′ ) = 2 < w ( P ) ， P ′ ˜ 是一条可行路。 图1. 具有三个权值函数w 1 , w 2 和w 3 的无向图 G = ( V ( G ) , E ( G ) ) ，其中 V ( G ) = { v 1 , v 2 , v 3 } ， E ( G ) = { v 1 v 2 , v 1 v 3 } 初始化算法之后，对于 G 1 中以 v i [ t ] = s [ 1 ] 和 k = 0 开头的所有边，我们使用Relax算法 [ 9 ]，如下所示。并且我们可以观察到，对于 V ( G ) 中的任何 v i ，都存在一个近似于 δ ( v i ) 的 d ( v i [ t ] , k ) ，其中 δ ( v i ) 是从 s 到 v i 所有路径中 w 2 -权值小于 x 的 w -权值。 然后我们开发了一个构造时间展开图 G 1 中 s [ 1 ] t 0 [ 0 ] -路 P 的有效算法(见下面的DC-MCP算法)，并证明了路径 P ˜ 是定理3.1中 G 的可行路径。 通过DC-MCP算法，可以得到一个根为 s [ 1 ] 的有向树 T 。在步骤2~13中的if循环的每次迭代中，在if循环的 T 中添加一条有向边(参见步骤7~9)。对任意 v i [ t ] ∈ V ( T − s [ 1 ] ) ， T 中唯一的 s [ 1 ] v i [ t ] -路 P 1 有 s [ 1 ] 和 v i [ t ] 之间所有路径的最小 w 2 -权值。此外，该路径的 w -权值不大于 x ，并且在其 w 2 -权值最小时尽可能小。根据 G 1 的定义，很容易得到 W 1 ( P ˜ 1 ) = t 。结合步骤15~16，我们得到了步骤17返回的路径 P ，当 P 是从 s 到 t 的最小 w 2 -权重路时， W 1 ( P ˜ ) 也是最小的。 设 | V ( G ) | = n ， | E ( G ) | = m 。 | V ( G ′ 1 ) | = d n 且 | Q | = ( x + 1 ) | V ( G ′ 1 ) | = ( x + 1 ) d n 。因为 V ( T ) ⊆ V ( G ′ 1 ) ，步骤2和步骤5需要 O ( 2 | V ( G ′ 1 ) | ) 时间复杂度。步骤3~4的时间复杂度是 O ( 2 | Q | ) 。松弛算法需要 O ( 1 ) 时间。根据观察2.3，for循环(11~12行)最多有 | N G ′ 1 + ( v i [ t ] ) | ≤ | N G ( v i ) | ≤ | E ( G ) | 次迭代，所以步骤11~12的时间复杂度是 O ( m ) 。在2~13行中，每次执行if循环， E ( G ′ 1 ) \ E ( T ) 中的一条边将被加到集合 T 中。最多有 | E ( T ) | = | V ( T ) | − 1 < | V ( G ′ 1 ) | 次迭代。所以，步骤2~13需要 O ( d n ( 2 d n + 2 ( x + 1 ) d n + m ) ) = O ( x c 1 2 n 2 + c 1 m n ) 时间。步骤15的时间复杂度为 O ( x d ) 。因为 P ′ ˜ 是图 G 中的路(见定理3.1)，所以步骤16需要 O ( n ) 次。因此，总时间复杂度为 O ( x c 1 2 n 2 + c 1 m n ) = O ( x c 1 2 n 2 + c 1 n 3 ) 。 定理3.1. 假设 P 为DC-MCP算法得到的路径。则没有点 v ∈ V ( G ) 使得 v [ t ] , v [ t 1 ] ∈ V ( P ) ，其中 t , t 1 ∈ [ 1 , d ] 。 证明：反证法。假设 u [ t ] 是路 P 的最后一个点使得存在 u [ t 1 ] ∈ V ( P ) ， t 1 < t 。设 t [ a ] 是 t 0 [ 0 ] 在路 P 中的前一个点，其中 a ∈ [ 1 , d ] 。要注意的是 w 2 ( ( t [ a ] , t 0 [ 0 ] ) ) = 0 。故 w 2 ( P ) = w 2 ( P ′ ) ，其中 P ′ = P − ( t [ a ] , t 0 [ 0 ] ) 。设 P 1 = P [ u [ t ] , t [ a ] ] 和 P ˜ 1 = 〈 u = u 0 , u 1 , ⋯ , u m − 1 , u m = t 〉 。 根据 P ˜ 的存在性，如果 d 尽可能的大，沿着路径 P ˜ ，对于任意 t ′ 0 ∈ [ 1 , d ] 存在 1 < t ′ 0 < t ′ 1 < ⋯ < t ′ m ≤ d 使得 P 2 ( t ′ 0 ) = 〈 u 0 [ t ′ 0 ] , u 1 [ t ′ 1 ] , u 2 [ t ′ 2 ] , … , u m [ t ′ m ] 〉 是图 G 1 上的路， w 2 ( P 2 [ t ′ 0 ] ) = w 2 ( P 1 ) ， w ( P 2 [ t ′ 0 ] ) = w ( P 1 ) 。假设当 t ′ 0 = t 1 时 t ′ m = b 。则 P 3 = P [ s [ 1 ] , u [ t 1 ] ] + P 2 ( t 1 ) 是一条 s [ 1 ] t [ b ] -路， w 2 ( P 3 ) = w 2 ( P [ s [ 1 ] , u [ t 1 ] ] ) + w 2 ( P 2 ( t 1 ) ) = w 2 ( P [ s [ 1 ] , u [ t 1 ] ] ) + w 2 ( P 1 ) < w 2 ( P ) ≤ c 2 . (3.1) 同样地， w ( P 3 ) < w ( P ) ≤ x . (3.2) 根据第15步，对任意 a ′ < a 和 k ∈ [ 0 , x ] ，有 t a ′ = 0 或者 d ( t [ a ′ ] , k ) > c 2 。因此， b ∈ [ a , d ] 。目前， P 1 是一条 u [ t ] t [ a ] -路， P 2 ( t 1 ) 是一条 u [ t 1 ] t [ b ] -路。 情况1. b = a 。 在这种情况下， P 3 是 G 1 中一条 s [ 1 ] t [ a ] -路。根据公式(3.1)、(3.2)和DC-MCP算法的3~8步可知，与P相比， P 3 是一个更好的选择，所以P不在集合T中。矛盾。 情况2. b > a 。 注意 t 1 < t ， b > a 和 P ˜ 1 = P ˜ 2 ( t 1 ) ，可以看出路径 P 1 和 P 2 ( t 1 ) 之间至少有一个交集。 情况2.1. P 1 和 P 2 ( t 1 ) 至少有一个公共节点。 因为 b > a ，我们能够选择 u i u i + 1 ∈ E ( P ˜ 1 ) 使得 ( u i [ t 2 ] , u i + 1 [ t 3 ] ) ∈ E ( P 1 ) 和 ( u i [ t 2 ] , u i + 1 [ t 4 ] ) ∈ E ( P 2 ( t 1 ) ) ，其中 t 2 < t 3 < t 4 。则 u i t 2 = u i + 1 t 3 = u i + 1 t 4 = 1 。将此与 E ( G 1 ) 的定义结合起来，我们有 ( u i [ t 2 ] , u i + 1 [ t 4 ] ) ∈ E ( P 2 ( t 1 ) ) , ⌈ w 1 ( u i , u i + 1 ) ⌉ > t 3 − t 2 。 因为 ( u i [ t 2 ] , u i + 1 [ t 3 ] ) ∈ E ( P 1 ) ， ⌈ w 1 ( u i , u i + 1 ) ⌉ ≤ t 3 − t 2 ，故产生矛盾。 情况2.2. P 1 和 P 2 ( t 1 ) 没有公共节点。 现在存在 u i u i + 1 ∈ E ( P ˜ 1 ) 满足 ( u i [ t 5 ] , u i + 1 [ t 6 ] ) ∈ E ( P 2 ( t 1 ) ) 和 ( u i [ t 7 ] , u i + 1 [ t 8 ] ) ∈ E ( P 1 ) ，其中 t 5 < t 7 < t 8 < t 6 。根据 E ( G 1 ) 的定义， u i t 5 = u i + 1 t 6 = u i t 7 = u i + 1 t 8 = 1 。在此基础上，因为 ( u i [ t 5 ] , u i + 1 [ t 6 ] ) ∈ E ( G 1 ) ，我们有 ⌈ w 1 ( u i u i + 1 ) ⌉ > t 8 − t 5 > t 8 − t 7 。 Since ( u i [ t 7 ] , u i + 1 [ t 8 ] ) ∈ E ( P 1 ) , ⌈ w 1 ( u i u i + 1 ) ⌉ ≤ t 8 − t 7 ，故产生矛盾。 定理3.2. 如果P是通过DC-MCP算法获得的路，则 P ˜ 是LDC-MCP ( G , s , t , w 1 , w 2 , w 3 , c 1 , c 2 , c 3 ) 的一个解。 证明：因为P是通过DC-MCP算法获得的路，很容易看出 w ( P ) ≤ x 。从第15步开始， W 1 ( P ˜ ) 是在 w 2 ( P ) ≤ c 2 限制下的所有 s [ 1 ] t 0 [ 0 ] -路中权值最小的。所以 P 是MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w , c 2 , x ) 的一个解。根据定理2.7，P也是MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w 3 , c 2 , c 3 ) 的一个解。另外，观察2.5和定理3.1表明了 P ˜ 是图G中的一条可行路。因此，根据引理2.6， P ˜ 是DC-MCP ( G , s , t , w 1 , w 2 , w 3 , c 1 , c 2 , c 3 ) 的一个解。"
"摘要研究了占空比无线传感器网络(DC-WSN)环境中的多约束路径问题。该问题形式化为DC-MCP ( G , s , t , w i , c i ) ，当 i = 3 时，只需多项式时间即可求解。根据DC-WSN定义图G。将G与所有节点的工作进度相结合，构造了一个具有两个权函数的时间展开图 G 1 。然后将问题DC-MCP ( G , s , t , w 1 , w 2 , w 3 , c 1 , c 2 , c 3 ) 替换为另一个MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w 3 , c 2 , c 3 ) ，可以化简为问题MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w , c 2 , x ) 。在 [ 9 ] 中扩展的Dijkstra算法的基础上，利用DC-MCP算法在多项式时间上求出MCP ( G 1 , s [ 1 ] , t 0 [ 0 ] , w 2 , w , c , x ) 的一个解P。另外，由P得到的路径 P ˜ ⊆ G 没有循环，是原问题的一个解。 为了进一步讨论，我们将尝试将我们的工作与k-不相交路径问题、数据收集问题和其他复杂的变体结合起来。"
