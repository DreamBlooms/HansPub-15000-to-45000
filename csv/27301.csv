"机动车的出行轨迹因其隐含了大量车辆出行的状态信息，已经成为研究城市交通流时空分布特性的重要数据来源。如何提取车辆的历史行车路径已经成为交通领域的研究热点。目前，有不少研究学者利用路网卡口系统的车牌识别数据来提取车辆的出行轨迹。本文在现有方法的基础上，提出了一种当识别数据中存在较多的粗差，且路网数据和卡口点位不能完全匹配的情况下，提取车辆出行轨迹的方法。实验证明，该方法不仅能够全面系统地再现复杂的交通运行场景，为基础OD矩阵的调查和更新工作提供思路和有效的技术手段，还能为交通部门制定相关的决策、法规提供更为可靠的数据支撑。 关键词 :轨迹提取，数据挖掘，智能交通系统 Copyright © 2018 by authors and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution-NonCommercial International License (CC BY-NC 4.0). http://creativecommons.org/licenses/by-nc/4.0/"
"随着城市机动车保有量的急剧增加，汽车已经成为人们出行首选的交通工具 [ 1 ] [ 2 ] ，车辆的出行轨迹因其隐含了丰富的交通出行与状态信息，而随之成为研究城市交通流时空分布特性的基础，如何提取车辆的历史行车路径已然成为当下热门的研究课题 [ 3 ] [ 4 ] [ 5 ] [ 6 ]。传统的基于人工调查的方法不仅耗时长、成本高，需要投入大量的人力、物力和财力，而且得到的结果与实际情况还不一定完全相符，有时还会对路网交通的运行造成一定的干扰 [ 7 ]。于是有研究学者尝试利用装有车载GPS装置的车辆所产生的实时定位数据来拟合车辆的行驶路径。但对于城市庞大的汽车保有量来说，装有GPS设备的车辆比重相对较小，无法做到对每一辆车的实时追踪 [ 8 ] [ 9 ] [ 10 ]。因此，有必要寻找一种更为有效的信息采集和分析手段来获取实时、准确的行车数据。 路网的卡口系统是一种对通过卡口位置的机动车辆进行拍摄、记录与处理的交通监测系统。与GPS采集数据相比，路网的卡口系统不仅能够全天候、大范围检测整个城市区域内路网车辆的通过情况，而且收集到的数据实时性好、采集率高 [ 7 ]。但是也同样存在着车牌识别错误率高、卡口时间不统一、卡口位置有误差等诸多问题，目前，每个城市卡口的布点率以及设备的准确性参差不齐，需要针对每个城市的实际情况来制定一套行之有效的办法从而最大程度的利用好这些车牌识别数据，进而为交通部门制定决策法规提供更为可靠的数据支持。"
"由于路网卡口系统捕获到的车牌识别数据中包含了大量因客观原因所产生的粗差数据。因此，首先需要对原始数据进行预处理，去除那些明显的误差数据；然后再利用路网和卡口站点之间的空间位置关系和拓扑关系，进一步剔除车牌识别数据中的不合理记录，最后通过求路径覆盖树中的最长路径得到真实的行车轨迹。具体算法流程如下： 第一步，利用卡口摄像头和路网的空间位置关系及摄像头之间的拓扑关系，构建路网卡口摄像头之间的邻接表(如图1所示)，根据该邻接表遍历所有的车牌识别数据，去除原始车牌识别数据中的离散点和跳跃点。例如，如果某时刻在E处出现了某个车牌，那么下个时刻该车牌只可能出现在D、B、F中的某一处，如果车牌出现在别的位置，则认为该点为粗差点。 第二步，由于卡口摄像头的识别准确率较低，尚存在着大量其他类型的粗差，仅仅根据邻接表来剔除原始数据中的粗差还远远不够，本文通过对连续拍摄的车牌数据制定了相应的验证规则，进一步去除原始数据中的粗差数据。如附录1算法I所示。 1) 根据行车速度值验证 对SQL语句查询得到的点串中相邻的两个点位之间的行车速度值进行验证，如果相邻的两个点之间的行车速度大于70 km/h，则认为这两个相邻点中后一个点是粗差点，将其从原始数据中剔除，否则认为该点是合理的。 2) 根据行车距离值验证 取当前点位的前一个点和后一个点，计算当前点位和其前后点位之间的可达距离的较小值S，再计算前一个点和后一个间之间的最短可达距离S’，如果S >> S’(或者S > N*S’，具体N的取值可以根据每个城市的实际出行情况而定)则认为当前点是粗差点，否则，认为当前点位是合理的。 第三步，在去除了粗差点以后的样本数据中，查询每一辆车单次出行所经过的卡口点位的集合，将查询得到的点串中相邻两个点之间通过最短路径算法计算路径(如果相邻的点在相邻的路段上就直接取两个点之间的路径；如果相邻的点在不相邻的路段上就用最短路径算法计算路径)，但由于路网卡口系统的点位也存在着一定的偏差，即卡口位置与路网数据并不能完全吻合，最终只能得到车辆出行路径的覆盖树(图2(a)所示)。 第四步，在生成的覆盖树的基础上计算覆盖树的最长路径(首先，从该覆盖树中任意一个路段S出发求最长路径，假设该最长路径另一端点的路径是S’，然后再从S’出发求最长路径L，路径L就是所要求的路径)，形成完整的行车轨迹(图2(b)所示)。 为了验证本算法的可靠性，将计算得到的机动车出行路径与传统的人工调查方法获取的出行路径进行了比对，并且与交管部门的历史出行数据做了相应的核实，证明又该方法获取的出行路径基本符合实际的出行轨迹，可以被相关部门所采用。"
"本文结合宁波市政府振兴三江口商业核心区项目，即根据目前城区的交通状况，拟调整扩大城区主干道地面的步行空间，将地面交通改造成连续的慢行网络，并将主城区干道交通下穿过境，使主城区向 轻车化城区转型，改造后的车道分配情况从原来的9车道(包含2个公交车道)变成地面4车道(包含2个公交车道)和地下4车道，如图3所示。为此需要统计每天经过该主干道所在路段的过境交通情况，通过统计驶入与驶出主干路径的车辆情况，来验证该改造方案的可行性。 利用前文提出的算法，本文统计了2018年6月1号至2018年6月7号一周的时间内，长春路以西进入柳汀街的车流量中，平均有15.2%的车流量从灵东或灵西岗驶出；在同一时间段内，从灵东灵西岗以东驶入的车流量中，平均有18.8%的车流量从马园或柳汀岗(长春路以西)驶出，如表1所示。 由此可以发现，在该主干道上，不到20%的交通量为过境交通，即这些车辆是可以使用隧道通行的，而剩余的交通量均为该路段上的到发交通，需要使用地面路段。因此，下穿路段的利用率并不高，并没有起到对路面交通分流的作用。另一方面，由于地面车道的减少，地面两车道无法承担该区域的到发交 图1. 根据路网卡口的空间位置关系建立邻接表 图2. 在路径覆盖树中计算最终路径 图3. 项目概况 Table 1 时间 2018/6/1 2018/6/2 2018/6/3 2018/6/4 2018/6/5 2018/6/6 2018/6/7 长春路以西进入柳汀街的车辆数 5961 8974 7588 7517 8087 8274 7770 上述车辆从灵东或灵西岗驶出的车辆数 710 1520 1197 1003 1280 1357 1257 所占百分比 11.9% 16.9% 15.8% 13.3% 15.8% 16.4% 16.2% 灵东灵西岗以东驶入的车辆数 10594 14635 10920 9706 13031 14148 14003 上述车辆从马园或柳汀岗(长春路以西)驶出的车辆数 1446 3091 2231 1947 2585 2659 2505 所占百分比 13.6% 21.1% 20.4% 20.1% 19.8% 18.8% 17.9% 表1. 相关路段的流量统计 通需求；不仅如此，下穿隧道通行能力产生冗余后，会吸引更多的过境交通使用下穿隧道通行，从而给隧道上下游的相关路口带来巨大的交通压力。 综上所述，下穿隧道方案的地面两车道无法承担该区域的社会车辆到发交通需求，降低了三江口核心区社会车辆的可达性。该方案应予以否决。"
"本文提出了一种当车牌识别数据存在较大粗差，并且路网和卡口数据存在一定的位置偏差时的机动车出行轨迹提取算法，该方法的主要思想是利用路网的空间位置关系构建卡口之间的邻接表来剔除原始数据中的离散点和跳跃点。同时，在计算形成的覆盖树的基础上利用图论中的最长路径算法，得到车辆完整的行车轨迹。实验表明，本文提出的方法在城市路网流量统计、单双号限行、流量监控等领域都能够得到较好的应用。"
