"可信密码模块TCM是一个可信计算平台的软硬件相结合的模块，为可信计算平台提供密码运算功能，具有受保护的存储空间。通过系统安全芯片可信密码模块建立信任的源头，然后通过硬件、固件、操作系统和应用程序，按照系统启动过程的前后控制关系建立信任链的方法确保计算平台和程序的可信。传统的SSL协议在握手阶段对于中间人攻击基本上是无法防卫的，这是由于握手协议中身份认证阶段没有底层硬件平台的信息。本发明的改进方案基于可信密码模块(TCM)新的实现思想，在分析现有SSL协议的基础上，提出并实现了一种基于可信密码模块TCM的SSL改进协议。该协议涉及客户端和服务器两方的通信，主要从以下方面进行设计，1)利用平台身份证书提供基于硬件和系统层面的认证。2)通过芯片的存储主密钥对预主密钥的保护，使得数据交换前，双方共享密钥的传输得到了更好的保证。本方法将TCM模块应用到SSL协议中，建立通信双方基于硬件和系统层面的认证，并且提升了加密算法，使得握手阶段，双方数据传输得到了更好的保证，为记录协议部分的信息传输提供更强的安全保障，增强了抵御攻击的能力，提高了协议的安全性。 关键词 :SSL协议，信息安全，可信计算 Copyright © 2018 by authors and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/"
"SSL协议处于TCP/IP传输层和应用层之间，为上层应用数据传输提供安全通道，可以提供身份认证、信息加解密等安全功能。主要目标是为两个通信实体提供信息安全性、完整性、安全性的会话连接。 传统的SSL协议对于身份攻击和会话密钥攻击的防卫能力比较弱；另外对最后提及的中间人攻击除了加强管理外，基本无法从技术角度防止攻击。 这些安全问题很大程度是由于SSL协议中没有对系统平台环境的认证，对硬件设备包括CPU中计数器、寄存器等重要的值没有包括在身份认证阶段；在会话密钥传输阶段，预主密钥的生成、保存、传输，以及会话密钥即主密钥的安全存储，这些方面的抗攻击能力不是很强。 可信密码模块TCM是一个可信计算平台的软硬件相结合的模块，为可信计算平台提供密码运算功能，具有受保护的存储空间。通过系统安全芯片可信密码模块建立信任的源头，然后通过硬件、固件、操作系统和应用程序，按照系统启动过程的前后控制关系建立信任链的方法确保计算平台和程序的可信 [ 1 ] 。 本文对SSL的优化基于可信密码模块(TCM)新的实现思想，在分析现有SSL协议的基础上，提出并实现了一种基于可信密码模块TCM的SSL改进协议。SSL协议中握手协议作为其中最核心和最复杂的协议，完成了SSL的大部分通信交互，优化方案主要对握手协议部分从以下方面进行改进：利用平台身份证书提供基于硬件和系统层面的认证；通过芯片的存储主密钥对预主密钥的保护，使得数据交换前，双方共享密钥的传输得到了更好的保证。本方法将TCM模块应用到SSL协议中，建立通信双方基于硬件和系统层面的认证，并且提升了加密算法，使得握手阶段，双方数据传输得到了更好的保证，为记录协议部分的信息传输提供更强的安全保障，增强了抵御攻击的能力，提高了协议的安全性 [ 2 ] 。"
"一种基于可信密码模块(Trusted Cryptography Module, TCM)的SSL协议，用到的符号及函数说明如表1所示："
"改进的SSL协议中，信双方的身份认证过程，主要是验证TCM的平台身份证书和SSL协议证书的哈希值的过程 [ 3 ] 。首先身份验证前提是：通信双方都有TCM芯片；通信双方已经申请且拥有了经过认证的平台身份证书 [ 4 ] 。客户端对服务器端认证的过程如图1所示： 具体流程描述如下： 1) 服务端的工作流程如下： a) 服务器端封装SSL证书信息和TCM平台证书信息，封装后的信息分别记做 m 1 、 m 2 ： Table 1 符号/函数 描述 T C , O C , H C 客户端TCM、客户端TCM所有者、客户端TCM所在主机 T S , O S , H S 服务器端TCM、服务器端TCM所有者、服务器端TCM所在主机 E K N 某个TCM的EK公钥 P u b K S , P u b K C e r t S 服务器端的SSL证书公钥，SSL证书 P E K N , P E K N − , P E K C e r t N PEK公钥、PEK私钥、PEK证书 K e y P u b , K e y P r i 密钥对的公开区域、秘密区域 h d k , s h d Y 密钥K的句柄、临时公钥为Y的密钥协商会话句柄 m 1 ‖ m 2 对 m 1 和 m 2 进行串接 h a s h ( m ) m的哈希值 h m a c ( m , k ) 用密钥k计算m的基于散列的消息认证码 D S ( x ) 对x的双签名 K S , K P 签名密钥私钥和对应的公钥 P r e M a s t e r S e c r e t , M a s t e r S e c r e t 预主密钥，主密钥 s e n c ( m , k ) , s d e c ( m , k ) 用对称密钥k加密m、解密m a e n c ( m , k ) , a d e c ( m , k ) 用公钥k加密m，用私钥k解密m；或者用私钥k加密m，用公钥k解密m k d f ( f , s ) 以f为标志s为种子的密钥导出函数 S M 2 K E ( K 1 , K 2 , X , Y ) 用发起方的公钥k1和临时公钥X以及响应方的公钥K2和临时密钥公钥Y，计算SM2密钥协商协议的共享会话密钥 表1. 符号及函数说明 图1. SSL协议身份认证优化过程 m 1 = ( P u b K S , P u b K c e r t S ) ; m 2 = ( P E K S , P E K C e r t S ) . b) 服务器端分别计算SSL证书、TCM平台身份证书、两类封装证书串接的哈希值，计算后的值分别记做计算 h m 1 、 h m 2 、 h m 12 ： h m 1 = h m a c ( m 1 ) ; h m 2 = h m a c ( m 2 ) ; h m 12 = h m a c ( m 1 ‖ m 2 ) . c) 服务器端生成签名密钥对 K S 、 K P ，服务器端进行数字双签名得到 D S S ： D S S = a e n c ( m 12 , K C S ) ，此方程使用私钥 K C S 加密 m 12 ，利用数字双签名将TCM平台身份证书和SSL证书关联在一起，表名此次SSL协议的特定平台环境为TCM中的信息。 d) 服务器端把 K S ， m 1 ， D S S 及 m 1 的哈希值 h m 1 发送给客户端TCM即 T C M C ，这样TCM只能得到 m 2 的杂凑值，但得不到 m 2 ；把 K P ， m 2 ， D S S 及 m 2 的哈希值 h m 2 发送给客户端主机 H C ，这样 H C 只能得到 m 1 的杂凑值而得不到 m 1 。 2) 客户端的验证流程如下： a) 客户端对服务器端的SSL证书和平台身份证书分别进行认证。 b) 客户端对SSL证书和平台身份证书的对应关系进行认证，验证此次SSL协议的特定平台环境是否是TCM中的系统环境，具体验证如下： 计算 h m ′ 12 = a d e c ( D S S , K P ) ；计算 h m 2 = h m a c ( m 2 ) ；验证方程 h m 12 = h m a c ( m 1 ‖ m 2 ) 是否成立，此方程用于计算m 1 和m 2 求并后的散列值，若成立则签名有效，继续以下步骤，否则终止此次协议 [ 5 ] [ 6 ] 。"
"主密钥作为会话密钥，是由预主密钥、客户端和服务器端在Hello阶段交互的随机数经过加密产生，优化后的密钥交换过程加入TCM模块的参与，加密密钥的生成根据有随机性和机密性，同时对会话密钥的存储保护也得到加强 [ 7 ] [ 8 ] 。密钥交换过程如图2所示： 图2.SSL协议密钥交换部分优化流程图 具体流程描述如下： 1) 双方TCM模块生成公私密钥对，私钥句柄发送给自己所在主机，公钥发送给通信的另一方。 2) 客户端计算用于加密预主密钥的加密密钥： 首先客户端主机随机生成预主密钥；TCM模块随机生成临时密钥私钥x，计算临时密钥公钥 X = g x ； 接着TCM客户端调用TCM模块SM2加密算法，用服务器端和客户端的SSL证书公钥和双方TCM模块生成的密钥对中的公钥，计算SM2密钥协商协议的共享会话密钥种子；再根据种子导出预主密钥的加密密钥。此处的 S M 2 K E 函数为调用 T C M 模块的 S M 2 公钥加密算法，用客户端和服务器端的平台身份公钥和临时公钥，计算用于会话协商中的种子。具体计算流程如下： 1) s e e d = S M 2 K E ( P E K C , P E K S , Y , X ) , k 1 = k d f ( ' e n c r y p t i o n ' , s e e d ) 2) 计算 a = s e n c ( P r e M a s t e r S e c r e t , K 1 ) , b = h m a c ( a , K 2 ) , s b l o b = ( a , b ) 最后，客户端TCM模块返回X和 S b l o b 给主机，主机将X和 S b l o b 传给服务器主机，客户端主机同时删除临时密钥对 ( x , X ) 。 服务器端TCM模块首先使用与客户端相同的方法生成预主密钥的加密密钥种子；接着TCM模块根据客户端传送的相关信息计算预主密钥，具体计算流程如下： 1) 将 S b l o b 前32字节赋值给b，其余字节赋值给a； 2) 验证 b = h m a c ( a , K 2 ) ； 3) 计算 P r e M a s t e r S e c r e t = s d e c ( a , K 1 ) ; 最后用TCM模块使用存储主密钥保护预主密钥，同时删除随机生成的临时密钥对。"
"优化后的握手协议部分通信过程如图3所示 [ 9 ] [ 10 ] [ 11 ] ： 1) SSL客户端通过Client Hello消息将它支持的SSL版本、加密算法、密钥交换算法、 h m a c 算法等信息发送给SSL服务器。 2) SSL服务器确定本次通信采用的SSL版本和加密套件，并通过Server Hello消息通知给SSL客户端。如果SSL服务器允许SSL客户端在以后的通信中重用本次会话，则SSL服务器会为本次会话分配会话ID，并通过Server Hello消息发送给SSL客户端。 3) SSL服务器将携带自己公钥信息的数字证书 P u b K C e r t S 和服务器公钥 P u b K S 发送给SSL客户端。 4) SSL服务器将自身的平台身份证书 P E K C e r t S 和对应的平台身份公钥 P E K S 发送给SSL客户端。 5) 服务器端封装封装SSL证书信息为 m 1 ： m 1 = ( P u b K S , P u b K C e r t S ) ；TCM证书信息为 m 2 : m 2 = ( P E K S , P E K C e r t S ) 。 6) 服务器端计算 m 1 的哈希值 h m 1 ： h m 1 = h m a c ( m 1 ) ；计算 m 2 的哈希值 h m 2 ： h m 2 = h m a c ( m 2 ) ；计算 m 1 、 m 2 的哈希值 h m 12 ： h m 12 = h m a c ( m 1 ‖ m 2 ) 。 7) 服务器端生成签名密钥对 K S 、 K P ，服务器端进行数字双签名得到 D S S ： D S S = a e n c ( m 12 , K C S ) ，利用数字双签名将TCM平台身份证书和SSL证书关联在一起，表名此次SSL协议的特定平台环境为TCM中的信息。 8) 服务器端把 K S ， m 1 、 D S S 及 m 1 的哈希值 h m 1 发送给客户端TCM即 T C M C ，这样TCM只能得到 m 2 的杂凑值，但得不到 m 2 ；把 K P ， m 2 ， D S S 及 m 2 的哈希值 h m 2 发送给客户端主机 H c ，这样 H C 只能得到 m 1 的杂凑值而得不到 m 1 。 9) 客户端验证服务器端SSL证书 P u b K C e r t S 。 图3. SSL协议优化后的整体流程图 10) 客户端验证TCM平台身份证书 P E K C e r t S 。 11) 客户端进行SSL证书和TCM平台身份证书对应关系的认证： 计算 h m ′ 12 = a d e c ( D S S , K P ) ；计算 h m 2 = h m a c ( m 2 ) ；验证方程 h m 12 = h m a c ( m 1 ‖ m 2 ) 是否成立，若成立则签名有效，继续以下步骤，否则终止此次协议。 12) 客户端发送 P E K C 和 P E K C e r t C 给服务器，服务器验证 P E K C 和 P E K C e r t C 。 13) 服务器发送Server Hello Done消息，通知SSL客户端版本和加密套件协商结束，开始进行密钥交换。 14) 服务器端 H S 调用 T C M _ C r e a t e K e e y E x c h a n g e (   ) ； 服务器 T S 接到调用后: a) 创建密钥协商会话，随机生成会话句柄 s h d Y b) 随机生成临时密钥私钥y，计算临时密钥公钥 Y = g y c) 将临时密钥对 ( y , Y ) 存储在TCM中并与句柄 s h d Y 绑定； T S 返回 s h d Y ， s h d Y 给 H S ， H S 将Y发送给客户端 H C 。 15) 客户端 H C 随机生成一个预主密钥 P r e M a s t e r S e c r e t ； 客户端TCM即 T C ：a) 随机生成临时密钥私钥x，计算临时密钥公钥 X = g x b) 计算 s e e d = S M 2 K E ( P E K C , P E K S , Y , X ) ， K 1 = k d f ( ' e n c r y p t i o n ' , s e e d ) , K 2 = k d f ( ' i n t e r g r i t y ' , s e e d ) c) 计算 a = s e n c ( P r e M a s t e r S e c r e t , K 1 ) , b = h m a c ( a , K 2 ) , s b l o b = ( a , b ) T C 返回X和 S b l o b 给 H C ， H C 将X和 s b l o b 传给 H S ， T C 同时删除临时密钥对 ( x , X ) 。 16) 服务器端 T S ：1)计算 s e e d = S M 2 K E ( P E K C , P E K S , Y , X ) ， K 1 = k d f ( ' e n c r y p t i o n ' , s e e d ) , K 2 = k d f ( ' i n t e r g r i t y ' , s e e d ) 将 s b l o b 前32字节赋值给b，其余字节赋值给a 验证 b = h m a c ( a , K 2 ) ， 计算 P r e M a s t e r S e c r e t = s d e c ( a , K 1 ) ， 用SMK存储主密钥保护 P r e M a s t e r S e c r e t = s d e c ( a , K 1 ) ： k e y B l o b = s e n c ( P r e M a s t e r S e c r e t , S M K ) . 17) O S 调用 T C M _ R e l e a s e E x c h a n g e S e s s i o n ( s h d Y ) ， T S 接到调用后，删除 s h d Y 指向的临时密钥对 ( y , Y ) 。 18) H S 利用协商好的算法及参数 V e r _ c 、 V e r _ s 计算得到主密钥 M a s t e r S e c r e t ，接着 H S 计算 F i n i s h e d 消息的内容，及哈希值： M D 5 ( M a s t e r S e c r e t + P a d 2 + M D 5 ( H a n d s h a k e M e s s a g e s + M a s t e r S e c r e t + P a d 1 ) )   + S H A ( M a s t e r S e c r e t + P a d 2 + S H A ( H a n d s h a k e M e s s a g e s + M a s t e r S e c r e t + P a d 1 ) ) 公式中 H a n d s h a k e M e s s a g e s 表示握手消息指从客户端问候消息开始的内不包括此消息在内的到这个步骤的信息， P a d 1 和 P a d 2 为填充字节。 服务器 H S 传送 C h a n g e C i p e r S p e c 、 F i n i s h e d 给客户端 H C 。客户端 H C 计算主密钥 M a s t e r S e c r e t = h m a c ( P r e M a s t e r S e c r e t ) ， H C 计算 F i n i s h e d 消息的内容： F i n i s h e d ′ = M D 5 ( M a s t e r S e c r e t + P a d 2 + M D 5 ( H a n d s h a k e M e s s a g e s + M a s t e r S e c r e t + P a d 1 ) )       + S H A ( M a s t e r S e c r e t + P a d 2 + S H A ( H a n d s h a k e M e s s a g e s + M a s t e r S e c r e t + P a d 1 ) ) 比较 F i n i s h e d ′ 和 F i n i s h e d ，相同表示消息未被篡改，最后客户端也将 F i n i s h e d ′ 发给服务器表示整个握手过程的结束。 服务器验证客户端发送的 F i n i s h e d ′ 消息，如果成立，则可以分块导出 M a s t e r S e c r e t 。"
"SSL协议在电子商务、网上支付、机密文件的网络传输上发挥重要作用，用来保证信息的可靠、机密、完整性的传输，优化后的SSL协议对上述应用的安全性的到加强。下面详细描述优化后的SSL协议在电子商务中的一个应用实例，在网络交易中，客户下单后必须将自己的订单信息完整地传输给商家，才可以保证交易的正常进行，在双方都安装有TCM芯片的前提下，在网络间传输信息时采用优化后的SSL协议，其具体通信过程如下： T C ：客户端安装的TCM芯片； T S ：商家端安装的TCM芯片。 1) 客户 → 商家： C l i e n t H e l l o ( C , V e r _ c , R a n _ c , S u i t _ c ) 客户通过 C l i e n t H e l l o 消息将它支持的SSL版本、加密算法、密钥交换算法、 h m a c 算法等信息发送给商家。 2) 商家 → 客户： S e r v e r H e l l o ( S , V e r _ s , R a n _ s , S u i t _ s ) ，与1)相对应，商家通过 S e r v e r H e l l o 消息将Server端支持的SSL版本、加密算法、密钥交换算法、 h m a c 算法等信息发送给客户。 3) 商家 → 客户：商家进行SSL证书认证，将携带自己公钥信息的数字证书 P u b K C e r t S 和商家公钥 P u b K S 发送给客户。 4) 商家 → 客户：商家进行平台认证，将自身的平台身份证书 P E K C e r t S 和对应的平台身份公钥 P E K S 发送给客户。 5) 商家：商家封装TCM证书信息为 m 1 : m 1 = ( P E K S , P E K C e r t S ) ；封装SSL证书信息为 m 2 ： m 2 = ( P u b K S , P u b K C e r t S ) 。 6) 商家：商家计算 m 1 的哈希值 h m 1 ： h m 1 = h m a c ( m 1 ) ；计算 m 2 的哈希值 h m 2 ： h m 2 = h m a c ( m 2 ) ；计算 m 1 、 m 2 的哈希值 h m 12 ： h m 12 = h m a c ( m 1 ‖ m 2 ) 。 7) 商家：商家生成签名密钥对 K S 、 K P ，商家进行数字双签名得到 D S S ： D S S = a e n c ( m 12 , K C S ) ，利用数字双签名将TCM平台身份证书和SSL证书关联在一起，表名此次SSL协议的特定平台环境为TCM中的信息。 8) 商家 → 客户：商家把 K S ， m 1 ， D S S 及 m 1 的哈希值 h m 1 发送给客户端TCM即 T C M C ，这样TCM只能得到 m 2 的杂凑值，但得不到 m 2 ；把 m 2 ， D S S 及 m 2 的哈希值 h m 2 发送给客户端主机 H C ，这样 H C 只能得到 m 1 的杂凑值而得不到 m 1 。 9) 客户：客户端TCM进行平台身份和SSL证书对应关系验证： 计算 h m ′ 12 = a d e c ( D S S , K P ) ；计算 h m 1 = h a m c ( m 1 ) ;验证方程 h m 12 = h a m c ( m 1 ‖ m 2 ) 是否成立，若成立则签名有效，继续以下步骤，否则终止此次协议。 10) 客户：客户端主机进行平台身份和SSL证书对应关系验证： a) 计算 h m ′ 12 = a d e c ( D S S , K P ) ；计算 h m 2 = h m a c ( m 2 ) ； b) 验证方程 h m 12 = h a m c ( m 1 ‖ m 2 ) 是否成立，若成立则签名有效，继续以下步骤，否则终止此次协议。 11) 客户：客户端TCM验证 P E K S 和 P E K C e r t S 。 12) 客户 → 商家：客户端发送 P E K C 和 P E K C e r t C 给商家，商家验证 P E K C 和 P E K C e r t C 。 13) 商家 → 客户：商家发送Server Hello Done消息，通知客户版本和加密套件协商结束，开始进行密钥交换。 14) 商家 → 客户：商家主机 H S 调用 T C M _ C r e a t e K e y E x c h a n g e (   ) ； 商家 T S 接到调用后: a) 创建秘钥协商会话，随机生成会话句柄 s h d Y 随机生成临时秘钥私钥y，计算临时秘钥公钥 Y = g y 将临时秘钥对 ( y , Y ) 存储在TCM中并与句柄 s h d Y 绑定； T S 返回Y， s h d Y 给 H S ， H S 将Y发送给客户端 H C 。 15) 客户→商家：客户端主机 H C 随机生成一个预主秘钥 P r e M a s t e r S e c r e t ； 客户端TCM即 T C ：a) 随机生成临时秘钥私钥x，计算临时秘钥公钥 X = g x ； 计算 s e e d = S M 2 K E ( P E K C , P E K S , Y , X ) ， K 1 = k d f ( ' e n c r y p t i o n ' , s e e d ) , K 2 = k d f ( ' i n t e r g r i t y ' , s e e d ) ; 计算 a = s e n c ( P r e M a s t e r S e c r e t , K 1 ) ， b = h m a c ( a , K 2 ) , s b l o b = ( a , b ) . T C 返回X和 s b l o b 给 H C ， H C 将X和 s b l o b 传给 H S ， T C 同时删除临时秘钥对 ( x , X ) 。 16) 商家：商家端TCM即 T S ：a) 计算 s e e d = S M 2 K E ( P E K C , P E K S , Y , X ) ， K 1 = k d f ( ' e n c r y p t i o n ' , s e e d ) , K 2 = k d f ( ' i n t e r g r i t y ' , s e e d ) ; 将 s b l o b 前32字节赋值给b，其余字节赋值给a； 验证 b = h a m c ( a , K 2 ) ， 计算 P r e M a s t e r S e c r e t = s d e c ( a , K 1 ) ， 用SMK存储主秘钥保护 P r e M a s t e r S e c r e t = s d e c ( a , K 1 ) ： k e y B l o b = s e n c ( P r e M a s t e r S e c r e t , S M K ) 。 商家：商家端TCM所有者调用 T C M _ R e l e a s e E x c h a n g e S e s s i o n ( s h d Y ) ， T S 接到调用后，删除 s h d Y 指向的临时秘钥对 ( y , Y ) 。 商家：商家主机利用协商好的算法及参数 V e r _ c 、 V e r _ s 计算得到主密钥 M a s t e r S e c r e t ，接着计算 F i n i s h e d 消息的内容，及哈希值： F i n i s h e d = M D 5 ( M a s t e r S e c r e t + P a d 2 + M D 5 ( H a n d s h a k e M e s s a g e s + M a s t e r S e c r e t + P a d 1 ) )       + S H A ( M a s t e r S e c r e t + P a d 2 + S H A ( H a n d s h a k e M e s s a g e s + M a s t e r S e c r e t + P a d 1 ) ) 公式中 H a n d s h a k e M e s s a g e s 表示握手消息指从客户端问候消息开始的内容，不包括此消息在内的到这个步骤的信息， P a d 1 和 P a d 2 为填充字节。 商家→客户：商家 H S 传送 C h a n g e C i p e r S p e c 、 F i n i s h e d 给客户端 H C 。客户端 H C 计算主密钥： M a s t e r S e c r e t = h m a c ( P r e M a s t e r S e c r e t ) ， H C 计算 F i n i s h e d 消息的内容： F i n i s h e d ′ = M D 5 ( M a s t e r S e c r e t + P a d 2 + M D 5 ( H a n d s h a k e M e s s a g e s + M a s t e r S e c r e t + P a d 1 ) )       + S H A ( M a s t e r S e c r e t + P a d 2 + S H A ( H a n d s h a k e M e s s a g e s + M a s t e r S e c r e t + P a d 1 ) ) 比较 F i n i s h e d ′ 和 F i n i s h e d ，相同表示消息未被篡改，最后客户端也将 F i n i s h e d ′ 发给商家表示整个握手过程的结束。 商家：商家验证客户端发送的 F i n i s h e d ′ 消息，如果成立，则可以分块导出 M a s t e r S e c r e t 。 客户：客户端可以放心地使用主密钥 M a s t e r S e c r e t 加密订单信息发送给商家，商家可以用主密钥加密发送请求付款消息。"
"安全性分析主要从身份认证、会话密钥的安全传输两方面进行分析： 1) SSL协议身份认证安全性分析： 当有攻击者冒充服务器身份时，由于服务器端发送的身份认证信息包含：平台身份证书 P E K C e r t S 和平台身份公钥 P E K S 。平台身份密钥对TCM内部数据如寄存器、计数器值等进行数字签名，以此证明身份。攻击者不能获取到TCM芯片内部的上述数据，也就不能伪造服务器身份证书，从而防范身份攻击。 2) SSL协议会话密钥安全传输分析： 密钥交互阶段，由于第一方面客户端和服务器的TCM模块生成临时密钥对 ( x , X ) 和 ( y , Y ) ，将公钥X和Y、私钥 x 、 y 的句柄 s e d X 、 s e d Y 返回给主机，将公钥X、Y同时发给另一方，接着以临时公钥X、Y和TCM平台身份公钥 P E K C 、 P E K S 为参数，采用TCM的SM2密钥协商协议 S M 2 K E 生成会话密钥 P r e M a s t e r S e c r e t 的种子 s e e d ，即 s e e d = S M 2 K E ( P R K C , P E K S , X , Y ) 。 当攻击者试图伪造会话密钥时： 由于攻击者可能没有TCM芯片，很难支持SM2密钥协商协议，不能进行 S M 2 K E ( P R K C , P E K S , X , Y ) 这步运算； 即使支持SM2密钥协商协议，由于没法截取TCM内部生成的临时密钥对 ( x , X ) 和 ( y , Y ) 、平台身份公钥 P E K C 和 P E K S ，同时临时密钥对用完即删除，所以不可能生成会话密钥的种子 s e e d ，也就无法伪造会话密钥。 由于散列函数单向性，获取会话密钥摘要值也不能得到会话密钥。 上述三点说明优化后的协议可以防止会话密钥阶段的攻击。  优化后的SSL协议在身份认证和会话密钥生成、存储部分都应用了可信密码模块TCM，利用TCM在信息保护方面的平台身份认证、密钥生成、密钥管理方面的基于硬件的安全可信特性，虽然安全性得到很大提升，但是由于平台身份认证、密钥的生成与管理都需要时间，所以效率方面不如传统的SSL协议，在某些机密性要求高、时效性要求低的应用领域优化后的基于TCM的SSL协议更适用 [ 12 ] 。"
"本文对基于TCM的SSL优化分四部分做了介绍：第一部分明确了SSL的优化目的。第二部分主要对SSL协议中的握手部分的优化从以下两方面做了描述：身份认证优化、会话密钥交互阶段的优化；之后对优化后的SSL协议做了整体描述；第三部分介绍了优化后的SSL协议的一个应用实例。第四部分对优化的SSL协议从安全性和效率两方面做了分析。"
