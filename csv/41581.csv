"本文提出了一种广义近似交替方向乘子法(gPADMM)来求解可分离凸优化问题。和近似邻近点算法(APPA)和扩展邻近交替方向方法(ePADM)相比，新算法不仅更新自定义矩阵的结构，而且引入随机变量进行随机加速更新步长，从而克服了旧算法固定步长的不灵活性。在某些适当的假设条件下，本文证明了新算法的全局收敛性，并且初步数值实验表明该算法是有效的，收敛速度比旧算法更快。"
"本文考虑一个具有如下形式的可分离凸优化问题 min { f ( x ) + g ( y ) | A x + B y = b , x ∈ X , y ∈ Y } , (1.1) 其中 X ⊂ R n 1 , Y ⊂ R n 2 是有界闭合的、凸的、非空集合， f : X → R 和 g : Y → R 是凸函数(不一定是平滑函数)。 A ∈ R m × n 1 , B ∈ R m × n 2 是给定的矩阵， b ∈ R m 是一个向量。 Glowinski [ 1 ] 和Gabay [ 2 ] 证明了基于增广拉格朗日方法(ALM)的交替方向乘子方法对于问题(1.1)是非常有效的。针对问题(1.1)，ALM算法的迭代形式为 { x k + 1 = arg min x ∈ X { f ( x ) + β 2 ‖ A x + B y k − b − 1 β λ k ‖ 2 } , y k + 1 = arg min x ∈ X { g ( y ) + β 2 ‖ A x k + 1 + B y − b − 1 β λ k ‖ 2 } , λ k + 1 = λ k − β ( A x k + 1 + B y k + 1 − b ) . (1.2) Gabay [ 3 ] 表明ADMM算法在本质上是Douglas-Rachford分裂方法的一种应用 [ 4 ]。Cai，Gu和He在文献 [ 5 ] 中提供了一种新颖简单的邻近点算法(PPA)来解释ADMM算法，并提出了一种广义的ADMM算法(gADMM)，即它首先产生了一个预测算子，形式如下： { x ˜ k = arg min x ∈ X { f ( x ) + β 2 ‖ A x + B y k − b − 1 β λ k ‖ 2 } , λ ˜ k = λ k − β ( A x ˜ k + B y k − b ) , y ˜ k = arg min y ∈ Y { g ( y ) + β 2 ‖ A x ˜ k + B y − b − 1 β λ ˜ k ‖ 2 } , x k + 1 = x ˜ k , y k + 1 = y k − γ ( y k − y ˜ k ) , λ k + 1 = λ k − γ ( λ k − λ ˜ k ) ,     γ ∈ ( 0 , 2 ) . (1.3) 其中新的迭代步表示为 w k + 1 = ( x k + 1 , y k + 1 , λ k + 1 ) 。自定义矩阵表示为： Q = ( 0 n 1 × n 1 0 n 1 × n 2 0 n 1 × m 0 n 2 × n 1 β B T B − B T 0 m × n 1 − B − 1 β I m ) 通过以上分析，可以发现针对问题(1.1)，ADMM算法有许多变体。进一步研究得到，文献 [ 6 ] 中提出了DRSM算法并在 [ 7 ] 中被进一步解释为邻近点算法的应用。Jiang, B. Q.，Peng, Z.，Deng, K. K.提出了两种新颖的定制邻近点算法，在 [ 8 ] 中将建立所提出方法的全局收敛性和O (1/k)收敛速率。因此，在 [ 6 ] 中建议对PPA应用 [ 9 ] 中提出的加速方案来加速原始ADMM。最近， [ 10 ] 中的工作表明了开发下降型方法求解的可能性，其下降方向是从ADM生成的迭代中得出的。在 [ 11 ] 中，李、袁等人考虑将广义交替方向乘子法与对数-二次近端正则化相结合，以解决具有可分离结构的变分不等式问题(VI)，并建立由在遍历和非遍历意义上的迭代复杂度。袁晓明提出了一种改进的基于PADM的下降方法，该方法继承了 [ 12 ] 中ADM，PPA和下降类型方法的所有优点。在 [ 13 ] 中，徐使用服从高斯分布的随机数来随机扩展步长，并针对一类变分不等式提出了随机步长收缩方法。但是，在某些实际应用中，宽松的步骤可能是不可接受的，甚至是不被允许的。 为了应对这些实际情况，本文修改了预测步长，并采用随机变量来更新步长，而不是放松固定步长。然后，提出了广义的邻近交替方乘子向法。在一些适当的假设下，本文证明了算法的收敛性。同时，本文通过数值实验，还验证了与以前提出的某些算法相比，新算法在实践中具有更好的数值性能。 本文的其余部分安排如下。本文的第2节描述了一些相关的基础知识和引理，以便后续证明。在第3节中，本文针对问题(1.1)提出了广义近邻交替方向乘子方法。所提方法的收敛性将在第4节中得到证明。在第5节中，与以前提出的算法相比，一些初步的数值结果被提出来表明新方法的高效率。第六部分总结了本文的一些结论。"
"本节给出了将在后续当中使用的一些预备知识。贯穿全文，本文将 ‖ u ‖ = u T u 表示为Educlidean范数，而 〈 ⋅ , ⋅ 〉 表示为内积。令 Ω ∈ R m × R n × R r 是R上的一个非空闭合子集。当 P Ω 的可行集Ω是非负正数 R + N 时，向量 x ∈ R 的每个分量i的投影很简单，表示为 ( P Ω [ x ] ) i = max { 0 , x i } 。 引理2.1 令 ζ > 0 为常数，C为非空封闭的凸集。当且仅当 x ∗ = P C [ x ∗ − ζ f ( x ∗ ) ] ,           x * ∈ C 是 VI ( f , C ) 的最优解。 记   e ( x , ζ ) = x − P C [ x − ζ f ( x ) ] 为投影方程的残差，则 VI ( f , C ) 等价于找到 e ( x , ζ ) 的零点。因此，我们可以将 ‖ ( x , ζ ) ‖ 记为算法的停止准则。下一个引理表明，对于任何 ζ > 0 ， ‖ ( x , ζ ) ‖ 是一个非递减函数。 众所周知，对于任何x和y，正交投影算子 P Ω 具有以下特性： 引理2.2 [ 14 ] 令 Ω ∈ R m × R n × R r 是一个非空闭合凸集，那么对于任意的 x , y ∈ R n ，都有 (1) 〈 x − P Ω ( x ) , P Ω ( x ) − y 〉 ≥ 0 ,   ∀ y ∈ Ω (2) 〈 P Ω ( x ) − P Ω ( y ) , x − y 〉 ≥ 0 ,   ∀ x , y ∈ R m × R n × R r (3) ‖ P Ω ( x ) − P Ω ( y ) ‖ ≤ ‖ x − y ‖ ,   ∀ x , y ∈ R m × R n × R r (4) 〈 x − y , P Ω ( x ) − P Ω ( y ) 〉 ≥ ‖ P Ω ( x ) − P Ω ( y ) ‖ 2 ,   ∀ x , y ∈ R m × R n × R r 在许多情况下，可行集C具有以下形式： C = { x | A x + B y = b , x ∈ Q } ，其中 A , B ∈ R m × n , b ∈ R m ，而Q是 R + N 的简单凸子集。基本的 VI ( f , C ) 可以转换为结构化的变分不等式问题，表示为 VI ( F , C ) ：寻找一个 u ∗ ∈ Q ，使得 F ( u ∗ ) T ( u − u ∗ ) ≥ 0 , ∀ u ∈ Q , 其中 u : = ( x y ) ， w : = ( x y λ ) ， F ( w ) : = ( − A T λ − B T λ A x + B y − b ) 。 关于目标函数f的以下定义是非常重要的，并且会在后面证明会使用到。 定义2.3 设f为从 C → R n 的映射。如果 ( u − v ) T ( f ( u ) − f ( v ) ) ≥ 0 ,   ∀ u , v ∈ C ，那么f在C上是单调的。 如果C是 R n 的紧凸集，而 F : C → R n 是连续映射，则变分不等式问题(VIP)至少具有一个解。假设函数是单调的，那么可以保证变分不等式问题的解存在且唯一。 引理2.4 如果C是 R n 的非空闭凸集，而 F : C → R n 是一个连续映射，那么对于任给的 x , y ∈ C ，有 〈 x − y , F ( x ) − F ( y ) 〉 ≥ 0 ,   ∀ x , y ∈ C 。 定义2.5 假设序列 { X n } 是由 X 1 , X 2 , ⋯ , X n , ⋯ 组成的随机变量，如果对于任意的 ϵ > 0 ，有 lim n → ∞ P { ( X n − X ) > ϵ } = 0 ，那么就说序列 { X n } 以概率收敛到X，并且记为 X n → P X 。 引理2.6 马尔可夫不等式：对于任何 ϵ > 0 和 r > 0 ，都有 P ( | X | ≥ ϵ ) ≤ E ( | X | ) r ϵ r 引理2.7 假设 X n → P X ，那么一定有 X n k → X   a . s . (几乎必然地)。"
"本节提出了一个gPADMM算法来解决问题(1.1)，其中问题(1.1)的增广拉格朗日形式为 L ( x , y , λ ) = θ 1 ( x ) + θ 2 ( y ) − λ T ( A x + B y − b ) + β 2 ‖ A x + B y − b ‖ 2 . (3.1) 如果 ( x * , y ) * ∈ X × Y 是问题的最优解，那么存在一个 λ * ∈ R m ，使得 ( x * , y * , λ * ) 是一个鞍点，满足 { L ( x , y * , λ * ) − L ( x * , y * , λ * ) ≥ 0 ,             ∀ x ∈ X L ( x * , y , λ * ) − L ( x * , y * , λ * ) ≥ 0 ,             ∀ y ∈ Y L ( x * , y * , λ * ) − L ( x * , y * , λ ) ≥ 0 ,             ∀ λ ∈ R m (3.2) 因此，由(3.2)得出 { x * = arg min x ∈ X L ( x , y * , λ * ) , y * = arg min y ∈ Y L ( x * , y , λ * ) , λ * = arg min x ∈ X L ( x * , y * , λ ) . (3.3) 根据 [ 12 ] 中的引理2.1，本文可以得到问题(3.3)的一阶最优条件： { f ( x ) − f ( x * ) − ( x − x * ) ( A T λ * ) ≥ 0 ,             ∀ x ∈ X , g ( y ) − g ( y * ) − ( y − y * ) ( B T λ * ) ≥ 0 ,             ∀ y ∈ Y , ( λ − λ * ) T ( A x * + B y * − b ) ≥ 0 ,                             ∀ λ ∈ R m , (3.4) 因此，问题的解集也可以表示为包括所有满足条件的 w * ∈ W * ，其中 W : = X × Y × R m ， θ ( u ) : = θ 1 ( x ) + θ 2 ( y ) 和 u : = ( x y ) ,     w : = ( x y λ ) ,       F ( w ) : = ( − A T λ − B T λ A x + B y − b ) . (3.5) 综上所述，针对可分离凸优化问题(1.1)，本文提出如下的gPADMM算法： 注3.1为了确保收敛， ξ k = ω ( a , b ) 需要满足是某个独立且均匀分布的扩展序列，并且 ξ k = ω ( a , b ) 的数学期望为 E ( ξ k ) , k = 1 , 2 , ⋯ 。另外，在整个迭代过程不需要计算 ρ ( A T A ) 或 A − 1 。"
"在本节中，本文充分结合变分不等式来证明算法3.1的全局收敛性。因此，公式(3.6)可变为具有如下形式的变分不等式： { ( x ′ − x ˜ k ) { θ 1 ( x ˜ k ) − A T [ λ k − β ( A x ˜ k + B y k − b ) ] + ( R + S ) ‖ x ˜ k − x k ‖ 2 } ≥ 0 ,       ∀ x ′ ∈ X , ( y ′ − y ˜ k ) { θ 2 ( y ˜ k ) − B T [ λ k − β ( A x ˜ k + B y ˜ k − b ) ] + S ‖ y ˜ k − y k ‖ 2 } ≥ 0 ,       ∀ y ′ ∈ Y , λ ˜ k = λ k − β ( A x ˜ k + B y ˜ k − b ) . (4.1) 接下来将引入一些重要的引理和定理来证明算法的收敛性，如下所示。 引理4.1 令 w ˜ k = ( x ˜ k , y ˜ k , λ ˜ k ) 是由公式(3.6)生成得到，那么对于任意的 w * ∈ W * 是问题(1.1)的最优解，得到 ( w k − w * ) T Q ( w k − w ˜ k ) ≥ ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T B ( y k − y ˜ k ) , (4.2) 其中 Q = ( ( R + S ) I n 1 0 n 1 × n 2 0 n 1 × m 0 n 2 × n 1 β B T B + S I n 2 0 n 2 × m 0 0 1 β I m ) 。 证明 由于 w * ∈ W * , x ˜ ∈ X 并且 y ˜ ∈ Y ，那么可知 { ( x ˜ k − x * ) T ( θ 1 ( x * ) − A T λ * ) ≥ 0 , ( y ˜ k − y * ) T ( θ 2 ( y * ) − B T λ * ) ≥ 0. (4.3) 将(3.6)分别加入(4.3)中且算子 θ 1 和 θ 2 的单调性，得出 { ( A x ˜ k − A x * ) T ( λ ˜ k − λ * ) + ( x ˜ k − x * ) ( R + S ) ( x k − x ˜ k ) ≥ β ( A x ˜ k − A x * ) T ( B y k − B y ˜ k ) , ( B y ˜ k − B y * ) T ( λ ˜ k − λ * ) + ( y ˜ k − x * ) S ( y k − y ˜ k ) ≥ 0 , (4.4) 因此，由(4.4) (3.6)以及 A x * + B y * = b 得知 1 β ( λ ˜ k − λ * ) T ( λ k − λ ˜ k ) + ( x ˜ k − x * ) T ( R + S ) ( x k − x ˜ k ) + ( y ˜ k − x * ) T S ( y k − y ˜ k ) ≥ β ( A x ˜ k − A x * ) T ( B y k − B y ˜ k ) , (4.5) 在(4.5)的两边同时加上 β ( B y ˜ k − B y * ) T ( B y k − B y ˜ k ) 及矩阵Q的定义和 A x * + B y * = b ，于是得到 ( w ˜ k − w * ) T Q ( w k − w ˜ k ) ≥ β ( A x ˜ k + B y ˜ k − b ) T ( B y k − B y ˜ k ) ≥ ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) , (4.6) 这意味着 ( w ˜ k − w * ) T Q ( w k − w ˜ k ) ≥ ‖ w k − w ˜ k ‖ Q 2 ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) . 因此，引理4.1得证。 引理4.2 令 w ˜ k = ( x ˜ k , y ˜ k , λ ˜ k ) 是由公式(3.6)生成得到，那么对于任意的 w * ∈ W * 是问题(1.1)的最优解，有 ‖ w k − w * ‖ Q 2 ≥ ‖ w ˜ k − w * ‖ Q 2 + 2 ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) + ‖ w ˜ k − w k ‖ Q 2 . (4.7) 证明 由引理4.1和(3.6)式得 ‖ w ˜ k − w * ‖ Q 2 = ‖ w k − w * − ( w k − w ˜ k ) ‖ Q 2 = ‖ w k − w * ‖ Q 2 + 2 ( w k − w * ) T Q ( w k − w ˜ k ) + ‖ w k − w ˜ k ‖ Q 2 ≤ ‖ w k − w * ‖ Q 2 − 2 [ ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) ] + ‖ w k − w ˜ k ‖ Q 2 ≤ ‖ w k − w * ‖ Q 2 − ‖ w k − w ˜ k ‖ Q 2 − 2 ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) 因此，引理4.2证毕且公式(4.7)表明 d ( w k , w ˜ k ) = w k − w ˜ k 是 ‖ w k − w * ‖ Q 2 的下降方向。 定理4.1 假设 w * 是问题(1.1)的解，那么对任给的迭代点 w ˜ k = ( x ˜ k , y ˜ k , λ ˜ k ) ，本文定义如下的一些函数： { w k + 1 ( α ) = w k − α k ( w k − w ˜ k ) , θ k ( α ) = ‖ w k − w * ‖ Q 2 − ‖ w k + 1 ( α ) − w * ‖ Q 2 , φ ( w k , w ˜ k ) = ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) , ψ k ( α ) = 2 α φ ( w k , w ˜ k ) − α 2 ‖ w k − w ˜ k ‖ Q 2 . (4.8) 那么对任意的 w * = ( x * , y * , λ * ) ∈ W * , α ≥ 0 ，存在 θ k ( α ) ≥ ψ k ( α ) (4.9) 证明 由(4.8)可知 ‖ w k + 1 ( α ) − w * ‖ Q 2 = ‖ w k − α k ( w k − w ˜ k ) − w * ‖ Q 2 = ‖ w k − w * ‖ Q 2 − 2 α k ( w k − w * ) T Q ( w k − w ˜ k ) + α k 2 ‖ w k − w ˜ k ‖ Q 2 ≤ ‖ w k − w * ‖ Q 2 − 2 α φ ( w k , w ˜ k ) + α 2 ‖ w k − w ˜ k ‖ Q 2 = ‖ w k − w * ‖ Q 2 − ψ k ( α ) . 因此，(4.9)得证。 从定理4.1可知 ψ k ( α ) 是 θ k ( α ) 的一个下界且 θ k ( α ) ≥ ψ k ( α ) 。由 ψ k ( α ) 的定义可知，它是关于 α 的一个二次函数，且它的最大值 α k = φ ( w k , w ˜ k ) ‖ w k − w ˜ k ‖ Q 2 = ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) ‖ w k − w ˜ k ‖ Q 2 。 也是最优的步长。 定理4.2 如果 0 < a < E ( ξ k ) = ρ < b ，序列 { w k } 是由广义的邻近交替方向乘子法生成，那么有 E ( ‖ w k + 1 − w * ‖ Q 2 ) ≤ E ( ‖ w k − w * ‖ Q 2 ) − ρ ( 2 − p ) 4 E ( ‖ w k − w ˜ k ‖ Q 2 ) , (4.10) 证明 由引理4.1和(3.7)，我们得到 ‖ w k + 1 − w * ‖ Q 2 = ‖ w k − η k α k ( w k − w ˜ k ) − w * ‖ Q 2 = ‖ w k − w * ‖ Q 2 − 2 η k α k ( w k − w * ) T Q ( w k − w ˜ k ) + ( η k α k ) 2 ‖ w k − w ˜ k ‖ Q 2 ≤ ‖ w k − w * ‖ Q 2 − 2 η k α k ( ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) ) + η k 2 α k 2 ‖ w k − w ˜ k ‖ Q 2 ≤ ‖ w k − w * ‖ Q 2 − 1 2 η k ( 2 − η k ) α k ( ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) ) . (4.11) 由于 ξ 1 , ξ 2 , ⋯ , ξ k , ⋯ 是独立且均匀分布，可以推出 η k , w k , w ˜ k 和 ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) 也是独立的。又因为 E ( η k ) = E ( 1 k ∑ i = 1 k ξ k ) = 1 k ∑ i = 1 k E ( ξ k ) = ρ ,   E ( α ) > 1 2 , 那么 ‖ w k + 1 − w * ‖ Q 2 的数学期望满足 E ( ‖ w k + 1 − w * ‖ Q 2 ) = E ( ‖ w k − η k α k ( w k − w ˜ k ) − w * ‖ Q 2 ) = E ( ‖ w k − w * ‖ Q 2 ) − E ( 2 η k α k ( w k − w * ) T Q ( w k − w ˜ k ) ) + ( η k α k ) 2 E ( ‖ w k − w ˜ k ‖ Q 2 ) ≤ E ( ‖ w k − w * ‖ Q 2 ) − 2 E ( η k ) E ( α k ) E ( ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) )     + E ( η k 2 ) E ( α k 2 ) E ( ‖ w k − w ˜ k ‖ Q 2 ) ≤ E ( ‖ w k − w * ‖ Q 2 ) − 1 4 ρ ( 2 − ρ ) E ( ‖ w k − w ˜ k ‖ Q 2 ) . 最后，获得本文期望的结果。 推论4.1 如果 0 < a < E ( ξ k ) = ρ < b ，序列 { w k } 是由广义的邻近交替方向乘子法生成，那么有 (1) 序列 E ( w k ) 和 E ( w ˜ k ) 都是有界的。 (2) 序列 E ( ‖ w k + 1 − w * ‖ Q 2 ) 是单调且有界的。 (3) lim k → ∞ E ( ‖ w k − w ˜ k ‖ 2 ) = 0 。 定理4.3 如果 0 < a < E ( ξ k ) = ρ < b ，序列 { w k } 是由广义的邻近交替方向乘子法生成，那么序列 { w k } 依概率收敛到 w ∞ ∈ W * 。 证明 从推论4.1和引理4.2，得到 lim k → ∞ E ( ‖ A x ˜ k + B y ˜ k − b ‖ Q 2 + ‖ B ( y k − y ˜ k ) ‖ Q 2 ) = 0. (4.12) 因为序列 { E ( w ˜ k ) } 是有界的，那么它至少有一个聚集点。令 E ( w ∞ ) 是序列 { E ( w ˜ k ) } 的一个聚集点，并且存在一个子序列 { E ( w ˜ k j ) } 收敛到 E ( w ∞ ) ，那么存在一个子序列 { w ˜ k j } 依概率收敛到 ω ∞ ∈ W * ，记为 w ˜ k j → P w ∞ 。 从引理2.3得到子序列 { w ˜ k j } 几乎必然地收敛到 ω ∞ ，那么它也可标记子序列为 { w ˜ k j } ，记作 lim j → ∞ w ˜ k j = w ∞       a . s . (4.13) 结合公式(3.6)、(4.12)和(4.13)，有 { lim j → ∞ ( x − x ˜ k j ) T { θ 1 ( x ˜ k j ) − A T λ ˜ k j } ≥ 0 ,           ∀ x ∈ X lim j → ∞ ( y − y ˜ k j ) T { θ 2 ( y ˜ k j ) − B T λ ˜ k j } ≥ 0 ,           ∀ y ∈ Y lim j → ∞ ( A x ˜ k j + B y ˜ k j − b ) = 0 从而有 { ( x − x ∞ ) T { θ 1 ( x ∞ ) − A T λ ∞ } ≥ 0 ,           ∀ x ∈ X ( y − y ∞ ) T { θ 2 ( y ∞ ) − B T λ ∞ } ≥ 0 ,           ∀ y ∈ Y ( A x ∞ + B y ∞ − b ) = 0 。 因此，可以推出 ω ∞ ∈ W * 。 又因为 lim j → ∞ E ( w ˜ k j ) = E ( w ∞ ) ，则 lim l → ∞ E ( ‖ w ˜ k l − w ∞ ‖ Q 2 ) = 0 。同时因为 lim k → ∞ E ( ‖ w k − w ˜ k ‖ Q 2 ) = 0 ，且对任给地 ε > 0 ，有 l > 0 ，于是得到 E ( ‖ w k l − w ˜ k l ‖ Q 2 ) = ε 2 和 E ( ‖ w ˜ k l − w ∞ ‖ Q 2 ) < ε 2 . (4.14) 因此，对任意的 k > k l ，由(4.14)，可知 E ( ‖ w k − w ∞ ‖ Q 2 ) ≤ E ( ‖ w k l − w ∞ ‖ Q 2 ) ≤ E ( ‖ w k l − w ˜ k l ‖ Q 2 ) + E ( ‖ w ˜ k l − w ∞ ‖ Q 2 ) < ε . (4.15) 由此推出 lim k → ∞ E ( ‖ w k − w ∞ ‖ Q 2 ) = 0 。 结合引理2.2和公式(4.15)，可得对任给的 ε > 0 ，如果存在 l > 0 ，只要 k > l ，就有 P ( ‖ w k − w ∞ ‖ Q 2 ≥ ϵ ) ≤ E ( ‖ w k − w ∞ ‖ Q 2 ) ϵ < ε 那么得到 lim k → ∞ P ( ‖ w k − w ∞ ‖ Q 2 ≥ ϵ ) = 0 。 因此，序列 { ω k } 依概率收敛到 w ∞ ∈ W * ，记作 ω k → P ω ∞ 。 至此，收敛性证明全部完成。"
"本节通过数值实验重点介绍算法的有效性。 例5.1 首先，考虑陶、袁和何 [ 15 ] 提出的财务和统计问题，其形式如下： min { 1 2 ‖ X − C ‖ F 2 | X ∈ S + n ∩ S B } , (5.1) 其中 S B = { H ∈ R n × n | H L ≥ H ≥ H U } 。 通过引入一个辅助变量Y使得 X − Y = 0 ，问题(5.1)可以重新表示为如下形式的可分离凸优化问题 min { 1 2 ‖ X − C ‖ F 2 + 1 2 ‖ Y − C ‖ F 2 | X = Y , X ∈ S + n , Y ∈ S B } , (5.2) 显然地，问题(5.2)是问题(1.1)的一个特殊形式，其中 ρ ( A T A ) = ρ ( B T B ) = 1 。令 λ ∈ R n 是线性约束 X − Y = 0 的拉格朗日乘子。对于给定的 ( X k , Y k , λ k ) ，算法能产生第k+1次迭代步，有 { X ˜ k = arg min X ∈ S + n { 1 2 ‖ X − C ‖ 2 + 〈 λ k , X − Y k 〉 + β 2 ‖ X − Y k ‖ 2 + R + S 2 ‖ X − X k ‖ 2 } , Y ˜ k = arg min Y ∈ S B { 1 2 ‖ Y − C ‖ 2 + 〈 λ k , X ˜ k − Y 〉 + β 2 ‖ X ˜ k − Y ‖ 2 + S 2 ‖ Y − Y k ‖ 2 } , λ ˜ k = λ k − β ( X ˜ k − Y ˜ k ) .     (5.3) 迭代(5.3)的X-子问题是通过SVD分解来进行求解，它承担每次迭代过程中的主要计算负荷。迭代(5.3)的Y-子问题也是一个投影，有如下形式 Y ˜ k = P S B { 1 S + 1 + β ( X ˜ k − λ k + C + S Y k ) } , 其中 P S B 表示根据欧几里得范数到集合S B 的投影。 在数值实验中，对于任意的所有 i , j ，设 C = ( c i j ) n × n 是一个满足 c i j ∈ ( − 1 , 1 ) 随机矩阵。对于每个给定，将测试20个随机实例。公平地说，将X 0 和Y 0 设置为 n × n 独立性矩阵， λ 0 是一个n维零向量，并且将 ε = max ( | w k + 1 − w k | ) max ( | w 0 − w ˜ 0 | ) ≤ 10 − 6 记为算法的终止准则。 得到的实验结果如下图1所示。 图1. APPA，ePADM，gPADMM三种算法的比较：n取100，200，500 Table 1 p = 1.9 gPADMM APPA [ 16 ] ePADM [ 16 ] n = 100 Iter. = 266, s = 2.139 Iter. = 529, s = 4.725 Iter. = 275, s = 2.441 n = 200 Iter. = 355, s = 12.995 Iter. = 686, s = 23.919 Iter. = 358, s = 13.013 n = 500 Iter. = 425, s = 110.273 Iter. = 823, s = 216.642 Iter. = 430, s = 107.588 表1. 例5.1的实验结果：APPA，ePADM，gPADMM三种算法的比较 显然，从表1中可以看出，算法3.1的性能优于APPA算法和ePADM算法，因为其迭代和计算时间更少。因此，结果表明对于问题(1.1)，提出的算法是有效的。"
"本文针对线性凸优化问题和可分离凸优化问题，提出了广义的近似交替方向乘子算法，并且通过初步实验结果验证了算法是可行的。算法3.1是一种简单且有希望的迭代方案，其收敛速度比原有算法的收敛速度快。它在其他加速技术和其他应用中进行分析和设计的潜力以及更全面的计算研究是我们进一步研究的方向。"
