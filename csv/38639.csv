"本文研究了极大极小问题的求解方法，利用指数罚函数对该问题进行光滑化处理，将其转化成光滑的无约束优化问题，并利用共轭梯度法来求解含有罚参数的无约束优化问题。最后，我们给出了数值算例来验证该算法求解极大极小问题的有效性。"
"极大极小问题是一类重要的非光滑优化问题，且在工程设计、经济管理 [ 1 ] [ 2 ] 等领域有着广泛的应用，同时也与非线性规划问题有着密切的联系。 极大极小问题的一般形式为 min x ∈ R n F ( x ) F ( x ) = max i = 1 , ⋯ , m f i ( x ) , (1) 其中， f i ( x ) : R n → R 是连续可微的函数。 近年来，众多学者对极大极小问题的算法进行了研究。通过构造罚函数，提出一个有效的算法求解极大极小问题，如文献 [ 3 ]；通过构造可调节熵函数的区间扩展和一些区域删除测试规则， [ 4 ] 提出了一种新的区间算法，该算法可以获得极大极小问题的最优解；文献 [ 5 ] 提出了一种截断的集合平滑牛顿法来解决极小极大问题。最近，一种用于求解极大极小问题的平滑FR共轭梯度法由文献 [ 6 ] 提出，其实验结果表现良好。 综上文献，我们知道罚函数在极大极小问题的求解过程中起到了重要的作用，该罚函数由 [ 7 ] 提出，其形式为 g ( x , t ) = t ln ∑ i = 1 m exp ( g i ( x ) t ) , (2) 其中，t是罚参数， g i ( x ) 是光滑可微的函数。利用罚函数(2)，极大极小问题(1)可以被转化为一个光滑的无约束优化问题，其形式为 min F ˜ ( x , t ) , (3) F ˜ ( x , t ) 是光滑可微函数，且被定义为 F ˜ ( x , t ) = t ln ∑ i = 1 m exp ( f i ( x ) t ) , 其中 t > 0 是罚参数。此时，对非光滑的极大极小问题(1)的求解可以等价于对光滑的无约束优化问题(3)的求解。 另外，我们还对带有张量结构的极大极小问题进行研究。一个m阶n维的张量 A = ( a i 1 , i 2 , ⋯ , i m ) ，其中 1 ≤ i 1 , i 2 , ⋯ , i m ≤ n ，对一个n维向量x， A x m − 1 是一个向量，它的第i的元素是 ( A x m − 1 ) i = ∑ i 2 , … , i m = 1 n a i i 2 ⋯ i m x i 2 ⋯ x i m ,     i , j = 1 , ⋯ , n 下面我们给出具有张量结构的极大极小问题的形式。首先定义如下函数： w i ( x ) = A i x m − 1 − | x | − b i ,     i = 1 , 2 , ⋯ , h (4) 其中， A 是一个m阶n维的张量， b i 是n维向量。对(4)中的绝对值项进行光滑化处理后，有 w i ( x ) = A i x m − 1 − x 2 + t − b i ,     i = 1 , 2 , ⋯ , h 则对于 max { w 1 i ( x , t ) , w 2 i ( x , t ) , ⋯ , w m i ( x , t ) } ，由(2)可得出如下函数 w ˜ i ( x , t ) = t ln ∑ j = 1 n exp ( ( A i x m − 1 ) j − x j 2 + t − b j i t ) 此时，对于下式 max { w ˜ 1 i ( x , t ) , w ˜ 2 i ( x , t ) , ⋯ , w ˜ m i ( x , t ) } 利用指数罚函数(2)，我们可以得到如下光滑的函数 O ˜ i ( x , t ) = t ln ∑ i = 1 h exp ( w ˜ i ( x , t ) t ) (5) 那么，对于张量结构的极大极小问题就可以转化为对(5)式的求解。 本文的目的是使用共轭梯度法来求解光滑后的极大极小问题，具体安排如下：第2部分，给出求解光滑后的极大极小问题的算法；第3部分给出该算法求解两类极大极小问题的数值实验；第4部分总结。"
"共轭梯度类算法 [ 8 ] [ 9 ] [ 10 ] 由于其收敛速度快、存储量小以及稳定性高等优点被广泛应用于无约束优化问题的求解中，其最早由Hestenes和Stiefle提出。著名的共轭梯度法有Fletcher-reeves (FR)方法，Hestenes-Stiefel (HS)方法和Dai-Yuan (DY)方法等。本节给出针对光滑后的极大极小问题的共轭梯度法及其算法。 设 x k 为当前迭代点，对光滑后的极大极小问题(3)，即一个无约束优化问题 min F ˜ ( x , t ) , 记函数值 F ˜ k = F ˜ ( x k , t k ) ，梯度 g ˜ k = g ˜ ( x k , t k ) ，则搜索方向为 d ˜ k = { − g ˜ k , if   k = 0 , − g ˜ k + β k d ˜ k − 1 , if   k > 0 , 其中， β ˜ k 为一个参数，常用的 β ˜ k 有： β ˜ k H S = g ˜ k T y ˜ k − 1 d ˜ k − 1 T y ˜ k − 1 ,       β ˜ k D Y = ‖ g ˜ k ‖ 2 d ˜ k − 1 T y ˜ k − 1 ,       β ˜ k L S = g ˜ k T y ˜ k − 1 − g ˜ k − 1 T d ˜ k − 1 , β ˜ k F R = ‖ g ˜ k ‖ 2 ‖ g ˜ k − 1 ‖ 2 ,       β ˜ k P R = g ˜ k T y ˜ k − 1 ‖ g ˜ k − 1 ‖ 2 ,       β ˜ k P R + = max { g ˜ k T y ˜ k − 1 ‖ g ˜ k − 1 ‖ 2 , 0 } . 其中， y ˜ k − 1 = g ˜ k − g ˜ k − 1 。此时，共轭梯度法的迭代形式为 x k + 1 = x k + α k d ˜ k , 其中 α k 为线搜索产生的步长。常用的线搜索为Wolfe线搜索： F ˜ ( x k + α k d ˜ k , t k ) − F ˜ ( x k , t k ) ≤ δ α k g ˜ k T d ˜ k , d ˜ k T g ˜ ( x k + α k d ˜ k , t k ) ≥ σ d ˜ k T g ˜ k , 以及Amijo线搜索 α k = max { ρ − j , j = 0 , 1 , 2 , ⋯ } , F ˜ ( x k + α k d ˜ k , t k ) − F ˜ ( x k , t k ) ≤ δ α k g ˜ k T d ˜ k . 为解决更复杂的无约束优化问题以及得到更精确的解，谱共轭梯度法 [ 11 ] [ 12 ] [ 13 ]、三项共轭梯度法 [ 14 ] [ 15 ] [ 16 ] 等方法被提出，在解决大规模无约束优化问题、互补问题以及张量等问题都有良好的数值效果。结合文献 [ 11 ]，本文给出针对光滑化后的极大极小问题的搜索方向与步长： d ˜ k = { − g ˜ k , if   k = 0 , − θ ˜ k g ˜ k + β ˜ k F R d ˜ k − 1 , if   k > 0 , (6) 在(6)中， θ ˜ k = d ˜ k − 1 T y ˜ k − 1 ‖ g ˜ k − 1 ‖ 2 . 步长 α k > 0 满足 F ˜ ( x k + α k d ˜ k , t k ) − F ˜ ( x k , t k ) ≤ ρ α k 2 ‖ d ˜ k ‖ 2 , (7) d ˜ k T g ˜ ( x k + α k d ˜ k , t k ) ≥ − 2 σ α k ‖ d ˜ k ‖ 2 , (8) 其中， 0 < ρ < σ < 1 。 下面，我们给出求解极大极小问题的光滑化共轭梯度法： 算法2.1 步1：给定常数 ς ∈ ( 0 , 1 ) , 0 < ρ < σ < 1 , ε > 0 ，初始点 ( x 0 , t 0 ) ∈ ( R n , R ) ，令 k = 0 ； 步2：若 ‖ g ˜ k ‖ ≤ ε ，则停止计算，否则转步3； 步3：根据(7)、(8)计算步长 α k ； 步4：令 x k + 1 = x k + α k d ˜ k ， t k + 1 = ς t k ，由(6)计算搜索方向 d ˜ k + 1 ； 步5：计算 F ˜ k + 1 ， g ˜ k + 1 ，令 k = k + 1 ，转步2。 为证明算法的收敛性，我们首先给出如下假设： 假设2.1： (A1) 水平集 Ω 有界，水平集为 Ω = { x ∈ R n | F ˜ ( x , t ) ≤ F ˜ ( x 0 , t 0 ) } ； (A2) 在 Ω 的一个邻域U中，函数是连续可微且其导数是Lipschitz连续的，即 ‖ g ˜ ( x , t ) − g ˜ ( y , t ) ‖ ≤ L ‖ x − y ‖ ,     ∀ x , y ∈ U , 其中L是Lipschitz常数。 由假设2.1可得，存在一个常数 Γ > 0 ，使得 ‖ g ˜ ( x , t ) ‖ ≤ Γ ,     x ∈ Ω . 引理2.1： d ˜ k 由(6)式给出，则 g ˜ k T d k ≤ − c ‖ g ˜ k ‖ 2 ,     c > 0 (9) 证 当 k = 0 时，(9)式显然成立，假设 k ≥ 1 时满足 g ˜ k − 1 T d k − 1 ≤ − c ‖ g ˜ k − 1 ‖ 2 ，则 g ˜ k T d ˜ k = − θ ˜ k ‖ g ˜ k ‖ 2 + ‖ g ˜ k ‖ 2 ‖ g ˜ k − 1 ‖ 2 d ˜ k − 1 T g ˜ k = g ˜ 2 ‖ g ˜ k − 1 ‖ 2 ( − d ˜ k − 1 T g ˜ k + d ˜ k − 1 T g ˜ k − 1 + d ˜ k − 1 T g ˜ k ) = ‖ g ˜ k ‖ 2 ‖ g ˜ k − 1 ‖ 2 d ˜ k − 1 T g ˜ k − 1 ≤ c ‖ g ˜ k ‖ 2 ‖ g ˜ k − 1 ‖ 2 ( − ‖ g ˜ k − 1 ‖ 2 ) = − c ‖ g ˜ k ‖ 2 . 引理2.2：若假设2.1成立，则 ∑ k ≥ 0 ‖ g ˜ k ‖ 4 ‖ d ˜ k ‖ 2 < + ∞ (10) 证 由假设A(2)和(8)式，我们有 ( 2 σ + L ) α k ‖ d ˜ k ‖ 2 ≥ − g ˜ k d ˜ k , 移项后两边同时平方可得 α k 2 ‖ d ˜ k ‖ 2 ≥ ( 1 2 σ + L ) 2 ( g ˜ k d ˜ k ) 2 ‖ d ˜ k ‖ 2 , 结合(7)式， ∑ k ≥ 0 ( g ˜ k d ˜ k ) 2 ‖ d ˜ k ‖ 2 ≤ ∑ k ≥ 0 { F ˜ ( x k ) − F ˜ ( x k + 1 ) } < + ∞ 故由引理2.1可得(10)式成立。 由引理2.1和引理2.2，我们可以得出如下的收敛性定理。 定理2.1：若假设2.1成立，则算法2.1满足 lim inf k → ∞ ‖ g ˜ k ‖ = 0. (11) 证 反证法，假设定理不成立，存在常数 ε > 0 ，对任意 k ≥ 0 ，有 ‖ g ˜ k ‖ ≥ ε , 根据(6)式，有 d ˜ k = − θ ˜ k g ˜ k + β ˜ k F R d ˜ k − 1 , 两边同时平方后除以 ( g ˜ k T d ˜ k ) 2 ，有 ‖ d ˜ k ‖ 2 ‖ g ˜ k ‖ 4 = ‖ d ˜ k ‖ 2 ( g ˜ k T d ˜ k ) 2 = ( ‖ g ˜ k ‖ 2 ‖ g ˜ k − 1 ‖ 2 ) 2 ‖ d ˜ k − 1 ‖ 2 ‖ g ˜ k ‖ 4 + 2 θ ˜ k ‖ g ˜ k ‖ 2 − θ ˜ k 2 ‖ g ˜ k ‖ 2 ≤ ‖ d ˜ k − 1 ‖ 2 ‖ g ˜ k − 1 ‖ 4 + 1 ‖ g ˜ k ‖ 2 即 ‖ d ˜ k ‖ 2 ‖ g ˜ k ‖ 4 ≤ ∑ i = 0 k − 1 1 ‖ g ˜ i ‖ 2 ≤ k ε 2 因此，我们有 ∑ k ≥ 0 ‖ g ˜ k ‖ 4 ‖ d ˜ k ‖ 2 ≥ ε 2 ∑ k ≥ 0 1 k = + ∞ 与假设矛盾，因此(11)式成立。"
"本部分，我们给出用算法2.1求解极大极小问题的数值算例，3.1中计算常规的极大极小问题，算例取自文献 [ 3 ]，通过给出算例结果与最优值的误差证明算法的有效性。3.2中给出算法2.1计算带有张量结构的极大极小问题的数值结果，数值结果表明算法2.1在求解带有张量结构的极大极小问题时有良好的数值表现。  本部分给出光滑化算法计算极大极小问题的数值算例，其中的参数设置具体为 ε = 10 e − 4 ， ρ = 0.3 ， σ = 0.7 ， ς = 0.5 ， t 0 = 2 。表1给出实验结果，其中n，m分别为变量、函数的数目，图1~3为算法2.1在求解算例时，函数值随着迭代步数的数值表现。由表1和图1~3我们可以观察到算法2.1在求解极大极小问题时具有良好的数值表现。 例1 Cresent [ 3 ] h ( x ) = max { x 1 2 + ( x 2 − 1 ) 2 + x 2 − 1 , − x 1 2 − ( x 2 − 1 ) 2 + x 2 + 1 } , n = 2 , h ( x * ) = 0 , x 0 = ( 0 , 0 ) T . 例2 Mifflin 1 [ 3 ] h ( x ) = − x 1 + max { x 1 2 + x 2 2 − 1 , 0 } , n = 2 , h ( x * ) = − 1 , x 0 = ( 2 , 2 ) T . 例3 Mifflin 2 [ 3 ] h ( x ) = − x 1 + 2 ( x 1 2 + x 2 2 − 1 ) + 1.75 max { ± ( x 1 2 + x 2 2 − 1 ) } , n = 2 , h ( x * ) = − 1 , x 0 = ( 0 , 0 ) T . Table 1问题 n m 误差 迭代步数 Cresent 2 2 6.8645e−05 99 Mifflin 1 2 2 8.4613e−05 36 Mifflin 2 2 2 5.4972e−05 276 表1. 例1~例3的实验结果 图1. Cresent的实验结果 图2. Mifflin 1的实验结果 图3. Mifflin 2的实验结果  本部分给出算法2.1求解带有张量结构的极大极小问题的数值算例，为了便于计算，数值算例中的张量使用的是对称张量，其中的参数设置为 ε = 10 e − 2 ， σ = 0.7 ， ρ = 0.3 ， ς = 0.5 ， t 0 = 2 ，且选取 ‖ x k + 1 − x k ‖ ≤ ε 作为算法的终止条件。表2给出实验结果，其中n，m分别是张量的阶数和维数，图4~5为算法2.1在求解算例时，函数值随着迭代步数的数值表现。由表2和图4~5我们可以观察到算法2.1可以有效求解带有张量结构的极大极小问题。 考虑两个3阶2维的张量 A 1 = ( a i 1 i 2 i 3 1 ) 和 A 2 = ( a i 1 i 2 i 3 2 ) ，以及两个向量为 b 1 = ( 6 , 2 ) T 和 b 2 = ( 2 , 8 ) T ，给出如下两个算例： 例4： A 1 为 a 1 1 1 1 = a 222 1 = 1 0 ，其余元素为3， A 2 为 a 1 1 1 2 = a 222 2 = 6 ，其余元素为3。初始向量为 x 0 = ( 2 , 6 ) T 。 例5： A 1 为 a 1 1 1 1 = a 222 1 = 1 ，其余元素为3， A 2 为 a 1 1 1 1 = a 222 1 = 1 0 ，其余元素为6。初始向量为 x 0 = ( 5 , 2 ) T 。 Table 2问题 n m 误差 迭代步数 例4 2 3 −2.3002 6 例5 2 3 −2.3032 22 表2. 例4~例5的实验结果 图4. 例4的实验结果 图5. 例5的实验结果"
"本文通过指数罚函数，对极大极小问题进行光滑化处理，将非光滑的极大极小问题转化为光滑的无约束优化问题，并给出针对带有罚参数的无约束优化问题的共轭梯度算法。为验证算法的有效性，我们同时给出了该算法求解常规的极大极小问题和带有张量结构的极大极小问题的数值实验，根据数值实验的结果，该算法在迭代次数、下降速度、误差等方面都具有良好的表现。在以后的研究中，对于更复杂的大规模的极大极小问题，可以运用不同的线搜索或不同的步长进行优化，以得到更快的下降速度和更良好的数值表现。"
