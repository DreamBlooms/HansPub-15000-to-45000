"搬运、巡检等工作场景中，考虑到其场所内物品的平面部署多具有复杂性和多变性，本文提出一种采用自由手绘方式生成小车路径控制坐标、批量生成小车控制参数的方法。PC端利用LabVIEW实现手绘路径、路径参数抽取和优化、Back-stepping控制参数解算和无线批量下载。小车端定时读取控制参数并开环执行。实验表明：本文所设计手绘方法和跟踪控制策略正确有效，小车按照手绘路径行驶，误差满足要求。 关键词 :手绘路径，路径跟踪，运动控制策略 Copyright © 2019 by author(s) and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/"
"导航尤其是导航路径规划与跟踪技术广泛应用于车载导航、手持导航设备、无人驾驶的AGV设备等 [ 1 ] 。目前，很多路径规划与跟踪技术一般采用传感器感知信标确定位置，从而跟踪一条与时间无关的几何路径。这需要根据具体的应用场景部署大量信标，如果场景改动则需要重新部署信标，更改车载导航系统 [ 2 ] 。 作为路径规划和跟踪方法的一种补充，本文在已有应用场景平面图基础上，利用人工手动绘制一条导航路径，根据小车运动学模型批量生成小车运行控制参数，小车读取批量参数自动执行。实验和实测表明：小车按照手绘路径自动运行，运行轨迹误差满足可使用要求。"
"系统分为两部分，PC端路径绘制和批量运动参数的计算与无线下载、智能小车按照运动参数自主运动控制实现路径跟踪。 工作流程：PC端采用LabVIEW在已有工作场景平面图基础上由人工绘制一条通达路径线条，避开障碍物。对路径线条的像素点均匀抽样、坐标变换、尺度映射后，按照小车运动学模型生成由运动模式选择(Status)、转角(Angle)、长度(Length)三部分组成的预定格式批量运动参数。批量运动参数由Wi-Fi一次性地下载到小车。小车采用51 Duino实现，在批量接收运动参数后依据该批量参数开环控制小车行驶。系统总体流程如图1所示。"
"参照已有的平面图，手动绘制一条小车的通达路径。具体采用LabVIEW事件结构记录鼠标的移动、按下、移出等动作，绘制曲线函数在图片空间上绘制路径曲线。图片控件设定像素数与小车实际移动范围线性映射。手绘路径曲线如图2所示，左图为绘制曲线(两点直线连接)，中图为路径曲线上的有效点集。 图1. 系统工作原理和流程 图2. 手绘曲线与手绘曲线坐标点  手绘方式绘制路径时，由于程序采用定时抽取鼠标坐标点方式描绘曲线，因此路径曲线上相邻两个有效坐标间的距离不同，鼠标移动慢时相邻点间距小，反之亦然，存在多点粘连或间距过大两种情况，如图2中图所示。考虑到小车实际机械性能，这不利于路径规划、造成小车控制误差、控制参数大量冗余。为此需要对众多像素点进行抽取优化。间距设定大于20，N个像素点抽取优化流程如下： 抽取优化后像素点间距相对稀疏，保证了相邻两点间距离在设定值之上，如图2右图所示。预设值设定需要在后续小车实测中根据实际性能确定。"
"4.1. 小车运动学分析 [ 3 ] - [ 9 ] 轮式智能小车采用双轮驱动的移动小车，其理想的运动模型为典型的差速轮运动学模型可为： v c = R 2 ( ω r + ω l ) ,   ω c = R D ( ω r − ω l ) v c 与 ω c 分别为机器人直线运动速度和旋转角速度； ω r 、 ω l 分别为机器人小车两轮速度；R为车轮半径；D为两轮间距。其位置姿态微分方程可以描述如下： [ x ˙ c , y ˙ c , θ ˙ c ] = [ v c , ω c ] [ cos θ c sin θ c 0 0 0 1 ] 式中： [ x ˙ c , y ˙ c , θ ˙ c ] 分别为机器人小车中心点坐标，以及小车正方向与x轴夹角，如图3所示。 图3. 两轮小车二自由度运动学模型 假设小车实际坐标为 P = [ x , y , θ ] ，需要移动到手绘路径的轨迹坐标为 P r = [ x r , y r , θ r ] ，误差为 P e = P − P r ，对 P e 进行时间求导得到下式： p e = [ x e y e z e ] = [ ω y e − v + v r cos θ e − ω x e + v r sin θ e ω r − ω ] 在此运动学基础上，小车轨迹跟踪问题转化为在有界输入控制 u = [ v , ω ] ，且当 t → 0 时 v c 和 ω c 不同时收敛与零时，系统在任意初始跟踪误差下有 lim t → ∞ [ | x e ( t ) | + | y e ( t ) | + | θ e ( t ) | ] = 0 上式说明：在轨迹参数与时间无关的情况下，控制只需考虑小车的相对期望轨迹的位置。在控制参数的设计中，一般选取小车的线速度为常数，仅控制角加速度，路径跟踪问题成为关于轨迹跟踪误差的标量函数零点稳定问题。  基于上述两轮车模型的描述，其轨迹控制是一个非完整控制系统，其所受约束是不可积的。此类问题一般利用Back-stepping方法，即后推法或回推法。Back-stepping方法将整个非线性系统进行分解成若干子系统，且对子系统分步构造Lyapunov函数和中间虚拟控制量，一直后退导出系统的控制律 [ 10 ] [ 11 ] [ 12 ] [ 13 ] [ 14 ] 。很多文献最后利用该算法分别进行了直线轨迹跟踪和圆轨迹跟踪的仿真实验，结果表明跟踪误差很快收敛于零，轨迹跟踪效果良好。 本文参照Back-stepping算法思想，对二自由度轮式小车运动模型设计控制规律和分时控制。其参数的时间间隔为常数，轨迹控制的约束为手绘坐标点。两轮PWM调速，轮距D = 10 cm。设定50%占空比PWM为初始角速度，测定对应直线线速度约0.1 m/s。WiFi接收LabVIEW解算和编码的每个时间间隔 Δ t 运动参 数 [ ω r , ω l ] ，即转角值。控制器的定时中断时长设定为 Δ t = 100   ms ，即每100 ms读取一次接收到的 [ ω r , ω l ] 。 实验条件：小车采用基于8051核心的51duino，对比传统的8051单片机它具有低功耗，强抗干扰，超强加密，支持1T模式，22 MHz主频，29K E 2 PROM空间可用于保存用户数据，具有独立波特率发生器。  为了方便小车接收运动控制参数，制定简单数据包规则。数据包由包头、类型位、命令位、数据位、包尾构成。调试阶段，运动控制参数可用串口调试助手直接发送，包组成规则如表1所示： Table 1 包头 类型 数据 数据 包尾 手绘路径模式 FA 13 07 00 FF 路径跟踪参数 FA A0 转角值 距离值 FF 路径跟踪参数 FA A1 转角值 距离值 FF 表1. 串口通信数据规则 表中A0/A1代表右转和左转，左右转由 ω r 与 ω l 差值符号确定，转角值为 ω r 与 ω l 的差值。距离值为两个控制坐标间欧氏距离，实验中将其近似为金 N ∗ Δ t ，N为某个整数。 由此，针对51duino嵌入式系统在批量参数下路径跟踪的运动控制策略，即将连续路径离散取样后，转化为模式选择(Status)、转角值(Angle)、距离值(Length)组成的批量参数，保持小车匀速行驶，从起始点依次转过对应转角度 θ ，理想状态下即可完成路径追踪，如图4所示。 图4. 小车路径跟踪的运动控制策略"
"PC端自由手绘出“S”与“Z”形路径，再利用Back-stepping方法解算出各时刻 Δ t 的控制参数 [ ω r , ω l ] ，按照串口通信数据规则形成批量的参数一次性下载到小车存储器内。 小车在100 ms定时中断控制下依次按序读取批量参数开环执行。为了检验运行轨迹与实际手绘轨迹的误差，采用机器视觉方式获取实际轨迹进行对比(图5)。 图5. 手绘路径与小车实际行驶路径 实测主要对系统性能、运行精度进行检测。表2为手绘坐标与小车运行时图像定位坐标数据。图像像素大小为1280 * 1024，其中1024像素对应实际尺寸100 cm。表中的坐标误差表明系统可行，小车控制策略可行。 Table 2 序号 手绘坐标 小车运行图像坐标 1 (90.2, 30.5) (100.9, 30.24) 2 (60.3, 60.4) (60.26, 60.36) 3 (50.9, 10.6) (50.46, 10.64) 4 (30.2, 40.1) (30.16, 40.08) 表2. 实测精度与图像定位(cm)"
"工作场所内智能小车路径规划利用LabVIEW平台采用自由手绘方式。绘制后路径上坐标点经过抽取优化作为小车路径的控制参数。借鉴和简化文献中成熟的Back-stepping算法在LabVIEW端解算控制参数并通过WiFi下传至小车。小车利用定时中断读取控制参数，实现开环地轨迹跟踪。囿于小车的机械性能，文中利用Back-stepping算法时没有对速度控制没有进行约束。实验实测表明，设计系统可行有效，轨迹误差满足要求，具有一定的实用价值和现实意义。"
