"本文通过应用高阶紧致差分格式，时间分裂法与Crank-Nicolson法等方法求解非线性薛定谔–泊松方程组。基于快速Sine变换，我们设计了一种求解离散系统的快速算法。我们用该算法分别求解一维、二维、三维的非线性薛定谔–泊松方程组。我们列举具体的数值例子，使用MATLAB软件编写出算法程序，并且通过程序计算近似误差与画出近似解的图像。数值计算结果证实了该算法在空间方向具有谱精度，也证实了该算法的高效性与稳定性。 关键词 :非线性薛定谔–泊松方程组，四阶紧致差分，Sine变换，时间分裂法 Copyright © 2019 by author(s) and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/"
"带电粒子的运动规律通常用耦合的动力学方程(例如弗拉索夫方程或波尔兹曼方程)与泊松方程进行描述 [ 1 ] [ 2 ] [ 3 ] [ 4 ] 。在考虑粒子的量子隧道效应情形下，带电粒子的运动规律也可用非线性薛定谔泊松方程组来描述，这主要是因为耦合的动力学-泊松方程组可近似化简为非线性薛定谔泊松方程组 [ 3 ] [ 4 ] 。非线性薛定谔泊松方程组最早由Hatree得到。他在研究原子物理学中的电子对原子核的库伦势的自洽作用(self-consistenteffect)时，发现带电粒子的运动可由非线性薛定谔泊松方程组 [ 5 ] 来描述。后来此方程组被广泛应用到量子等离子体 [ 3 ] 、量子输运 [ 6 ] 、量子半导体 [ 7 ] 、分子链 [ 8 ] 等物理现象中。本文主要想通过非线性薛定谔泊松方程组的数值解来模拟相关量子物理现象(例如纳米级带电粒子的运动规律)。 据我们所知，前人提出了多种数值方法来求解非线性薛定谔泊松方程组。为了模拟半导体纳米结构，Chen等人提出了一种新奇的快速谱元法 [ 9 ] ，他们在求解该方程组的过程中，未知函数的空间变量由高阶勒让德多项式展开；为了计算球对称的薛定谔泊松方程组的基态和动力学现象，Dong研究了一种简化伪谱方法 [ 10 ] ；为研究一种非磁化作用的稠密热等离子的物理现象，Shaikh等人针对薛定谔泊松方程组提出了一种傅里叶谱方法，并进行了三维非线性流体在纳米级尺度下湍流的模拟 [ 11 ] ；Mauser等人为薛定谔泊松方程组提出了一个向后欧拉法和半隐式/蛙跳正弦伪谱方法，并用该方法计算相关粒子的基态和动力学 [ 12 ] ；Zhang等人为该方程组提出了一种紧致差分格式，并研究了该数值方法的最优误差估计；我们还注意到前人研究了球对称形式的薛定谔泊松方程组的稳态解 [ 13 ] 。 关于非线性薛定谔泊松方程组的数学理论研究，前人已经开展了许多工作：Ben Abdallahd等人研究了薛定谔泊松方程组的稳态解与动态解的弱解存在性 [ 2 ] ；Brezzi等人基于非线性薛定谔泊松方程组的解证明了量子Vlasov-Poisson方程组的全局经典解的存在性 [ 14 ] ；Castella等人研究了薛定谔泊松方程组在L 2 范数意义下解的存在性、唯一性 [ 15 ] ；Lange等人显示了Wigner-Poisson方程组与薛定谔泊松方程组的解在不同边界条件(周期性边界条件、混合边界条件)下的存在性、唯一性与正则性 [ 6 ] 。 本文将为非线性薛定谔泊松方程组的求解提出一种时间分裂紧致差分格式，重点讨论如何基于Sine变换实现该方法的快速求解过程，并简单讨论该方法的数值特点。本文的结构安排如下：在第1.1节至第1.3节中，对薛定谔泊松方程组的物理模型做了简单介绍，同时也对紧致差分格式的构造、离散Sine变换做了相关阐述。在第2节中，详细推导了用时间分裂紧致差分格式来求解一维、二维、三维的薛定谔泊松方程组的数值计算过程，重点讨论如何基于Sine变换实现离散系统的快速求解过程。在第3节中，通过几个具体的数值例子的计算结果，证实了在前两节中介绍的方法可实现一维、二维、三维薛定谔泊松方程组方程组的数值计算，并验证了数值方法的守恒性。 多粒子量子系统是由多个粒子通过相互作用形成的微观系统，它广泛存在于半导体物理、等离子物理、凝聚态物理和分子动力学等领域，对它的科学研究具有重要意义。本文研究的薛定谔–泊松方程组是对多粒子非相对论量子系统的一种单粒子波函数近似。薛定谔–泊松方程组是对含时Hartree-Fock方程组的一种单粒子波函数局部近似，它的无量纲形式为 [ 16 ] [ 17 ] [ 18 ] [ 19 ] [ 20 ] [ 21 ] [ 22 ] i ∂ t ψ ( x , t ) = − 1 2 Δ ψ + V ( x ) ψ + ϕ ( x , t ) ψ + β | ψ | 4 d ψ ,     x ∈ R d ,   t > 0 , (1.1) Δ ϕ ( x , t ) = − | ψ | 2 ,   x ∈ R d , (1.2) ψ ( x , t = 0 ) = ϕ 0 ( x ) ,   x ∈ R d , 其中d (=1, 2, 3)为空间维数，β为一已知常数，波函数 ψ ( x , t ) 是复值函数，且满足无穷远条件 l i m | x | → ∞ | ψ ( x , t ) | = 0, (1.3) V = V ( x ) 为外势函数，形式已知。ϕ为泊松位势，通常写成卷积形式。 薛定谔–泊松方程组(1.1)~(1.2)本身有许多守恒量，例如：粒子数N(t)，粒子冲量P(t)，粒子角动量L(t)与粒子总能量E(t)均不随时间变化而变化，其中， 粒子数 N ( t ) = ∫ ℝ d | ψ ( x , t ) | 2 d x , (1.4) 粒子冲量 P ( t ) = − i ∫ ℝ d   ψ * ( x , t ) ∇ ψ ( x , t ) d x , (1.5) 粒子旋转量 L ( t ) = − i ∫ ℝ d   ψ * ( x , t ) x × ∇ ψ ( x , t ) d x , (1.6) 与粒子总能量 E ( t ) = ∫ ℝ d [ 1 2 | ∇ ψ | 2 + V | ψ | 2 + | ∇ ϕ | 2 2 + d 2 + d | ψ | 2 + 4 / d ] d x . (1.7)  有限差分法是计算机数值模拟最早采用的方法，至今仍被广泛使用，其主要思想就是在空间和时间两个方向上将问题离散化。传统的差分格式是显式地通过各点函数值的线性组合来表示函数的导函数，而紧致差分格式是隐式地利用网格点的函数值的线性组合来表示导函数的线性组合，需要通过求解方程组来得到每个网格点的导数值。这两种方法相比较，当达到相同精度时，紧致差分格式需要的网格点少，计算精度高。 紧致差分格式的构造最早由 紧致差分格式的构造最早由Lele提出 [ 23 ] ，在文 [ 24 ] 中也有介绍。在本节中，我们简要地叙述紧致差分格式的构成。通常把未知函数u(x)的定义区间[a, b]作M等分， h = ( b − a ) / M 称为步长， x i = a + i h   ( 0 < i < M ) 称为节点，记 u i : = u ( x i ) ， u ′ i : = ( d u d x ) ( x i ) ， u ′ ′ i : = ( d 2 u d x 2 ) ( x i ) ， u ′ ′ ′ i     : = ( d 3 u d x 3 ) ( x i ) ， u ′ ′ ′ ′ i       : = ( d 4 u d x 4 ) ( x i ) ，其中i与M是正整数，a与b是给定的区间端点。 紧致差分格式想从下式中隐式地得到函数u(x)在节点x i 处的近似值 u ′ ′ i ( i = 0 , 1 , ⋯ , M )： β u ′ ′ i − 2 + α u ′ ′ i − 1 + u ′ i + α u ′ ′ i + 1 + β u ′ ′ i + 2 = c u i + 3 − 2 u i + u i − 3 9 h 2 + b u i + 2 − 2 u i + u i − 2 4 h 2 + a u i + 1 − 2 u i + u i − 1 h 2 , (1.8) 其中α，β，a，b，c是一些待定系数。由泰勒展开式可知由下式得到的近似值 u ′ ′ i ( i = 0 , 1 , ⋯ , M )具有四阶精度 1 10 u ′ ′ i − 1 + u ′ ′ i + 1 10 u ′ ′ i + 1 = 6 5 ⋅ u i + 1 − 2 u i + u i − 1 h 2 . (1.9) 上式可称为一种四阶紧致差分格式。 另外由泰勒展开式可知由下式得到的近似值 u ′ ′ i ( i = 0 , 1 , ⋯ , M )具有六阶精度 2 u ′ ′ i − 1 + 11 u ′ ′ i + 2 u ′ ′ i + 1 = 3 4 ⋅ u i + 2 − 2 u i + u i − 2 h 2 + 12 ⋅ u i + 1 − 2 u i + u i − 1 h 2 (1.10) 上式可称为一种六阶紧致差分格式。  为了实现高效的数值算法，首先看一维的离散Sine变换： u i = ∑ k = 1 M − 1   u ^ k sin ( i k π M ) ,   i = 1 , 2 , ⋯ , M − 1 , (1.11) 一维的离散Sine逆变换： u ^ k = 2 M ∑ i = 1 M − 1 u i sin ( i k π M ) ,   k = 1 , 2 , ⋯ , M − 1 , (1.12) 其中，记 u ( x i ) = u i 通过方程(1.11)，我们可写出 u i + 1 ， u i − 1 ， u ′ ′ i ， u ′ ′ i + 1 ， u ′ ′ i − 1 的Sine变换： u i + 1 = ∑ k = 1 M − 1   u ^ k sin ( ( i + 1 ) k π M ) ,   u i − 1 = ∑ k = 1 M − 1   u ^ k sin ( ( i − 1 ) k π M ) , u ′ ′ i = ∑ k = 1 M − 1 u ^ ′ ′ k sin ( i k π M ) , (1.13) u ′ ′ i + 1 = ∑ k = 1 M − 1 u ^ ′ ′ k sin ( ( i + 1 ) k π M ) ,   u ′ ′ i − 1 = ∑ k = 1 M − 1 u ^ ′ ′ k sin ( ( i − 1 ) k π M ) . 把上述等式带入与四阶紧致差分格式相关的方程(1.9)，得 ∑ k = 1 M − 1   u ^ ′ ′ k { 1 10 sin ( ( i − 1 ) k π M ) + sin ( i k π M ) + 1 10 sin ( ( i + 1 ) k π M ) } = 6 5 h 2 ∑ k = 1 M − 1   u ^ k { sin ( ( i − 1 ) k π M ) + sin ( ( i + 1 ) k π M ) − 2 sin ( i k π M ) } . 利用三角公式化简为： ∑ k = 1 M − 1   u ^ ′ ′ k ( 1 5 cos ( k π M ) + 1 ) sin ( i k π M ) = 6 5 h 2 ∑ k = 1 M − 1 u ^ k ( 2 cos ( k π M ) − 2 ) sin ( i k π M ) . 根据对应项分别相等, 得 u ^ k = − u ^ ′ ′ k ( 24 s i n 2 ( k π 2 M ) h 2 ) − 1 ( c o s ( k π M ) + 5 ) ,   k = 1,2, ⋯ , M − 1. (1.14) 方程(1.14)显示了 u ^ k 与 u ^ ′ ′ k 之间的联系。而式子(1.11)与(1.13)建立了函数u(x)在节点x i 处的值与二阶导数 u ′ ′ ( x ) 在节点x i 处的值之间的联系。 重要的是，上述离散Sine变换(1.11)与离散Sine逆变换(1.12)可借助快速的离散傅里叶变换实现，快速的离散傅里叶变换将离散Sine变换(1.11)与逆变换(1.12)的计算量从 O ( M 2 ) 减少至 O ( M log ( M ) ) 。 同理，如果把相关等式代入与六阶紧致差分格式相关的方程(1.10)，那么也可得与(1.14)类似的等式： u ^ k = − u ^ ′ ′ k 24 h 2 ( cos ( k π / M ) − 1 ) + 6 4 h 2 ( cos ( 2 k π / M ) − 1 ) 4 cos ( j π / M ) + 11 ,   k = 1 , 2 , ⋯ , M − 1. (1.15) 方程(1.15)也显示了 u ^ k 与 u ^ ′ ′ k 之间的联系。"
"在本节中，我们先分别介绍如何利用时间分裂紧致差分格式法离散一维非线性薛定谔泊松方程组、二维非线性薛定谔泊松方程组、三维非线性薛定谔泊松方程组，然后介绍如何基于一维的快速Sine变换、二维的快速Sine变换、三维的快速Sine变换来求解上述方法离散后的方程组，最后写出详细的离散求解过程。  考虑如下一维非线性薛定谔泊松方程组初边值问题： i ψ t = − 1 2 ψ x x + V ( x ) ψ + ϕ ψ + β | ψ | 2 ψ ,     a < x < b ,   0 < t < T , (2.16) − ϕ x x = | ψ | 2 , ψ ( a , t ) = 0 , ψ ( b , t ) = 0 , (2.17) ψ ( x , 0 ) = ϕ 0 ( x ) , 其中 Δ = ∂ x x ， a < x < b 。 a , b , β , T 为常数， V ( x ) , ϕ 0 ( x ) 为已知函数， ψ ( x , t ) , ϕ ( x , t ) 为未知函数。 先将[a,b]等分成M份，则空间步长为 h x = b − a M ，节点为 x j = a + j h x , j = 0 , 1 , ⋯ , M ；再将[0,T]等分成N份，则时间步长为 τ = T L ，节点为 t n = n τ , ( n = 0 , 1 , ⋯ , L ) ，记 ψ j n , v j , ϕ j n 分别为 ψ ( x j , t n ) , v ( x j ) , ϕ ( x j , t n ) 的 近似值。 通过观察会发现：方程(2.16)类似于非线性薛定谔方程，(2.17)是一个泊松方程。对于(2.16)方程，在一个时间步长 [ t n , t n + 1 ] 上，我们利用时间分裂法将该方程分两步求解： 先求解非线性部分 i ψ t = V ( x ) ψ + β | ψ | 2 ψ + ϕ ψ 。可巧妙地利用共轭与积分性质：等式两边同时乘ψ的共轭 ψ ¯ ，得： i ψ t ψ ¯ = V ( x ) | ψ ( x , t ) | 2 + β | ψ ( x , t ) | 4 + ϕ | ψ ( x , t ) | 2 ，再对它两边同时取共轭，得： − i ψ ¯ t ψ = V ( x ) | ψ ( x , t ) | 2 + β | ψ ( x , t ) | 4 + ϕ | ψ ( x , t ) | 2 , (2.18) 注意到ϕ是一个实值函数，将以上两式相减得： i ( ψ ψ ¯ t + ψ ¯ ψ t ) = 0 ，也即 ( | ψ | 2 ) t = 0 。我们可以得到 | ψ ( x , t ) | 2 = | ψ ( x , t n ) | 2 ( t n ≤ t ≤ t n + 1 ) 。再从泊松方程 − Δ ϕ = | ψ | 2 可知 ϕ ( x , t ) = ϕ ( x , t n ) ( t n ≤ t ≤ t n + 1 ) 。因此，非 线性部分方程的求解变为： i ψ t ( x , t ) = V ( x ) ψ ( x , t ) + β | ψ ( x , t n ) | 2 ψ ( x , t ) + ϕ ( x , t n ) ψ ( x , t ) , (2.19) i ψ t ψ = V ( x ) + β | ψ ( x , t n ) | 2 + ϕ ( x , t n ) , (2.20) ψ ( x , t n + 1 ) = ψ ( x , t n ) e − i τ ( V ( x ) + β | ψ ( x , t n ) | 2 + ϕ ( x , t n ) ) , (2.21) 记 ψ ( x , t * ) = ψ ( x , t n + 1 ) ， ψ ( x , t * ) 作为时间分裂法的中间变量，但在方程(2.21)中，仍有未知量 ϕ ( x , t n ) 。由已知条件 − Δ ϕ = | ψ | 2 ，即 − ϕ x x ( x j , t n ) = f j ，其中记 f j = | ψ ( x j , t n ) | 2 。可先利用四阶紧致差分格式离散一维泊松方程 − Δ ϕ = | ψ | 2 ，然后对离散后的方程组做Sine变换得 − ϕ ^ x x = f ^ j (详细过程见 [ 25 ] )。该式子右边 f ^ j 是由f j 做Sine变换得到；同时由基于Sine变换的四阶紧致差分格式，得到关系式： ϕ ^ j x x = − ϕ ^ j ( 24 s i n 2 ( j π 2 M ) h x 2 ) ( c o s ( j π M ) + 5 ) − 1 , − ϕ ^ j x x = f ^ j , ϕ ^ j = f ^ j ( 24 s i n 2 ( j π 2 M ) h x 2 ) − 1 ( c o s ( j π M ) + 5 ) , (2.22) 其中 1 ≤ j ≤ M − 1 ，这样就可以通过式子(2.22)求出 ϕ ^ j 。再利用一次Sine变换这样就求出 ϕ j n 的值，将其带入到方程(2.21)，就可以求出中间变量 ψ ( x , t * ) 。 再考虑线性部分： i ψ t = − 1 2 Δ ψ 的求解。此时以 ψ j * 做为初始条件，对于该方程时间方向上采用 Crank-Nicolson公式离散： i ψ j n + 1 − ψ j * τ = − 1 4 ( ( ψ j * ) x x + ( ψ j n + 1 ) x x ) , ( 1 − i τ 4 Δ ) ψ j n + 1 = ( 1 + i τ 4 Δ ) ψ j * , ψ j n + 1 − i τ 4 ( ψ j n + 1 ) x x = ψ j * + i τ 4 ( ψ j * ) x x , (2.23) 对上述方程，空间上采用四阶紧致差分格式来离散。由于等式右边 ψ j * 已知，对上述离散后的新系统做Sine逆变换得 ψ ^ j * 。再结合关系式： ( ψ ^ j * ) x x = − ψ ^ j * 24 s i n 2 ( j π 2 M ) h x 2 ( c o s ( j π M ) + 5 ) , (2.24) 得 ( ψ ^ j * ) x x 。再做Sine变换就得 ( ψ j * ) x x 。这样方程(2.23)的右边函数值全部已知，记 g j = ψ j * + i τ 4 ( ψ j * ) x x ，对(2.23)两边同时做Sine变换 ψ ^ j n + 1 − i τ 4 ( ψ ^ j n + 1 ) x x = g ^ j ，其中 g ^ j 是 g j 经过一维的Sine逆变换得到的。对方程 (2.23)左边，我们利用基于Sine变换的四阶紧致差分格式的关系式： ( ψ ^ j n + 1 ) x x = − ψ ^ j n + 1 24 s i n 2 ( j π 2 M ) h x 2 ( c o s ( j π M ) + 5 ) (2.25) 得到 ψ ^ j n + 1 = g ^ j 1 + i τ 4 24 s i n 2 ( j π 2 M ) h x 2 ( c o s ( j π M ) + 5 ) , (2.26) 这样 ψ ^ j n + 1 可以被求出，利用一次Sine变换，就可求出 ψ j n + 1 。在时间方向上就形成了一次完整的迭代过程。体算法可以总结如下： 1) 输入a，b，T，M，L，β，以及 ϕ 0 ( x ) ； 2) 计算 x j = a + j h x ， j = 0 , 1 , ⋯ , M ， t n = n τ ， ψ 0 n = ψ M n = 0 ， n = 0 , 1 , ⋯ , L 。从 n = 0 出发； 3) 计算 f j = | ψ j n | 2 ，通过Sine逆变换得 f ^ j ，利用 ϕ ^ j n = f ^ j ( 24 s i n 2 ( j π 2 M ) h x 2 ) − 1 ( c o s ( j π M ) + 5 ) ，再对 ϕ ^ j n 做Sine 变换得 ϕ j n ； 4) 由式子 ψ j * = ψ j n e − i τ ( V ( x j ) + β | ψ ( x j , t n ) | 2 + ϕ j n ) ，计算出 ψ j * ( j = 0 , 1 , ⋯ , M )； 5) 通过Sine逆变换求出 ψ ^ j * ，再利用关系式(2.24)，求出 ( ψ ^ j * ) x x 。利用Sine变换求出 ψ j * x x ，再从 g j 的Sine逆变换求出 g ^ j ； 6) 由 ψ ^ j n + 1 = g ^ j 1 + i τ 4 24 s i n 2 ( j π 2 M ) h x 2 ( c o s ( j π M ) + 5 ) 得到 ψ ^ j n + 1 ，再对其做一次Sine变换就可得到 ψ j n + 1 。再令 n = n + 1 ，重复3~6直到 n = L 为止。  考虑二维零边界的非线性薛定谔泊松方程组的初边值问题： i ψ t = − 1 2 Δ ψ + V ψ + β | ψ | 2 ψ + ϕ ( x , y , t ) ψ ,   a < x < b ,   c < y < d ,   t > 0 , (2.27) − Δ ϕ ( x , y , t ) = | ψ | 2 , (2.28) ψ ( a , y , t ) = 0 ; ψ ( b , y , t ) = 0 , ψ ( x , c , t ) = 0 ; ψ ( x , d , t ) = 0 , ψ ( x , y , 0 ) = ϕ 0 ( x , y ) , 其中 Δ = ∂ x x + ∂ y y ， a < x < b ， c < y < d ， a , b , c , d , β 均为常数， ϕ 0 ( x , y ) ， V = V ( x , y ) 均是已 知函数，而 ψ , ϕ 是未知函数。 首先，将区域 [ a , b ] 等分成M份，步长为 h x = b − a M ，节点为 x j = a + j h x , j = 0 , 1 , ⋯ , M ；将区域 [ c , d ] 等分成N份，步长为 h y = d − c N ，节点为 y k = c + k h y , k = 0 , 1 , ⋯ , N ；将区域 [ 0, T ] 等分成L份，步长为 τ = T L ，节点为 t n = n τ , n = 0 , 1 , ⋯ , L ；我们记 ψ j k n , ϕ j k n , V j k 分别为 ψ ( x j , y k , t n ) , ϕ ( x j , y k , t n ) , V ( x j , y k ) 的近似值。 在下面的计算过程中，我们需要定义关于 u ^ k l 的离散二维Sine变换以及关于 u i j 的离散二维Sine逆变换，它们的形式分别如下 u i j = ∑ k = 1 M − 1   ∑ l = 1 N − 1   u ^ k l sin ( i k π M ) sin ( j l π N ) ,   1 ≤ i ≤ M − 1 ,   1 ≤ j ≤ N − 1 , (2.29) u ^ k l = 2 M 2 N ∑ i = 1 M − 1   ∑ j = 1 N − 1   u i j sin ( i k π M ) sin ( j l π N ) ,   1 ≤ k ≤ M − 1 ,   1 ≤ l ≤ N − 1. (2.30) 类似于一维的求解方法，在一个时间步长 [ t n , t n + 1 ] 上，假设 ψ ( x j , y k , t n ) 已知。采用时间分裂法，先求解方程(2.27)的非线性部分： i ψ t = V + β | ψ | 2 ψ + ϕ ( x , y , t ) ψ ，利用共轭变换与定积分性质得： ψ ( x , y , t * ) = ψ ( x , y , t n ) e − i τ ( V ( x , y ) + β | ψ ( x , y , t n ) | 2 + ϕ ( x , y , t n ) ) , (2.31) ψ ( x , y , t * ) 作为时间分裂法的中间变量，即为第二部分的初始值。但是，等式右边仍然有未知量 ϕ ( x , y , t n ) 。为了求解它，我们要利用方程 − ( ϕ j k n ) x x − ( ϕ j k n ) y y = | ψ j k n | 2 ，记 f j k = | ψ j k n | 2 。对于上式做二维的Sine变换得： − ( ψ ^ j k n ) x x − ( ψ ^ j k n ) y y = f ^ j k ，观察发现：等式右边可由已知函数 f j k 做二维的Sine逆变换求得；等式 左边出现了二阶导，利用关系式： ( ϕ ^ j k n ) x x = − ϕ ^ j k n 24 s i n 2 ( j π 2 M ) h x 2 ( c o s ( j π M ) + 5 ) ,1 ≤ j ≤ M − 1, (2.32) ( ϕ ^ j k n ) y y = − ϕ ^ j k n 24 s i n 2 ( k π 2 N ) h y 2 ( c o s ( k π N ) + 5 ) ,1 ≤ k ≤ N − 1, (2.33) 将上述两个关系式带入到方程 − ( ϕ ^ j k n ) x x − ( ϕ ^ j k n ) y y = f ^ j k ，得 ϕ ^ j k n = f ^ j k 24 s i n 2 ( j π 2 M ) h x 2 ( c o s ( j π M ) + 5 ) + 24 s i n 2 ( k π 2 N ) h y 2 ( c o s ( k π N ) + 5 ) . (2.34) 这样 ϕ ^ j k n 就可求出，再利用一次二维的Sine变换就得到 ϕ j k n 。然后将其带入到方程(2.31)中，等式左边的中间变量 ψ j k * 就可以表示出来，进而可以作为第二部分的初始值。 考虑线性部分： i ψ t = − 1 2 Δ ψ ，对于此方程，我们在时间方向上采用crank-nicolson法，空间上采用四 阶紧致差分格式来离散，具体如下： i ψ j k n + 1 − ψ j k * τ = − 1 4 ( Δ ( ψ j k * ) + Δ ( ψ j k n + 1 ) ) ( 1 − i τ 4 Δ ) ψ j k n + 1 = ( 1 + i τ 4 Δ ) ψ j k * ψ j k n + 1 − i τ 4 Δ ( ψ j k n + 1 ) = ψ j k * + i τ 4 Δ ( ψ j k * ) ψ j k n + 1 − i τ 4 ( ( ψ j k n + 1 ) x x + ( ψ j k n + 1 ) y y ) = ψ j k * + i τ 4 ( ( ψ j k * ) x x + ( ψ j k * ) y y ) , (2.35) 对于(2.35)，我们同时对等式两边做Sine变换得到： ψ ^ j k n + 1 − i τ 4 ( ( ψ ^ j k n + 1 ) x x + ( ψ ^ j k n + 1 ) y y ) = ψ ^ j k * + i τ 4 ( ( ψ ^ j k * ) x x + ( ψ ^ j k * ) y y ) , (2.36) 等式右边的 ψ ^ j k * ，可以由 ψ j k * 做Sine逆变换得到。由于有关系式： ( ψ ^ j k * ) x x = ψ ^ j k * 12 ( h x ) 2 c o s ( j π M ) − 1 c o s ( j π M ) + 5 , (2.37) ( ψ ^ j k * ) y y = ψ ^ j k * 12 ( h y ) 2 c o s ( k π N ) − 1 c o s ( k π N ) + 5 , (2.38) 然后分别对 ( ψ ^ j k * ) x x ， ( ψ ^ j k * ) y y 进行Sine变换，这样就可以得到 ( ψ j k * ) x x ， ( ψ j k * ) y y 。所以等式(2.36)右边就可以当做已知，等式左边也是利用Sine逆变换及二维的Sine变换关系式，将其换算成只含有 ψ ^ j k n + 1 。具体如下： ( ψ ^ j k n + 1 ) x x = ψ ^ j k n + 1 12 ( h x ) 2 c o s ( j π M ) − 1 c o s ( j π M ) + 5 , (2.39) ( ψ ^ j k n + 1 ) y y = ψ ^ j k n + 1 12 ( h y ) 2 c o s ( k π N ) − 1 c o s ( k π N ) + 5 . (2.40) 将上两式带入到等式(2.36)的左边，得到的就是一个只含有 ψ ^ j k n + 1 的表达式，等式(2.36)的右边记为 g ^ j k 。 综合等式(2.36)、等式(2.39)、等式(2.40)可得关系式： ψ ^ j k n + 1 = g ^ j k 1 − i τ 4 ( 12 ( c o s ( j π M ) − 1 ) h x 2 ( c o s ( j π M ) + 5 ) + 12 ( c o s ( k π N ) − 1 ) h y 2 ( c o s ( k π N ) + 5 ) ) . (2.41) 由于等式右边均可知，所以就可求得 ψ ^ j k n + 1 ，在利用一次Sine变换得 ψ j k n + 1 。这样时间方向上 就形成了完整迭代，然后利用MATLAB程序进行编写，称为计算法则2： 1) 输入a，b，c，d，T，M，N，L，β，以及 ϕ 0 ( x , y ) ， h x ， h y ， τ ； 2) 计算 x j = a + j h x ， j = 0 , 1 , ⋯ , M ， y k = c + k h y ， k = 0 , 1 , ⋯ , N ， t n = n τ ， ψ 0 k n = ψ M k n = 0 ， ψ j 0 n = ψ j N n = 0 ， n = 0 , 1 , ⋯ , L 。 从 n = 0 出发； 3) 计算 f j k = | ψ j k n | 2 ，通过二维的Sine逆变换得 f ^ j k ，利用关系式： ϕ ^ j k n = f ^ j k − 12 ( c o s ( j π M ) − 1 ) h x 2 ( c o s ( j π M ) + 5 ) − 12 ( c o s ( k π N ) − 1 ) h y 2 ( c o s ( k π N ) + 5 ) , (2.42) 再对 ϕ ^ j k n 作二维的Sine变换得 ϕ j k n 4) 由 ψ j k * = ψ j k n e − i τ ( V ( x j , y k ) + β | ψ ( x j , y k , t n ) | 2 + ϕ j k n ) ，计算出 ψ j k * ； 5) 通过二维的Sine逆变换求出 ψ ^ j k * ，再利用关系式(2.39)，(2.40)，求出 ( ψ ^ j k * ) x x ， ( ψ ^ j k ) y y ； 6) 最后由关系式(2.41)，求出 ψ ^ j k n + 1 ，对其作二维的Sine变换得 ψ j k n + 1 。再令 n = n + 1 ，重复3~6直到 n = L 为止。  考虑三维薛定谔泊松方程组： − i ψ t = − 1 2 Δ ψ + V ψ + β | ψ | 2 + ϕ ψ , (2.43) − Δ ϕ ( x , y , z , t ) = | ψ | 2 , (2.44) ψ ( a , y , z , t ) = ψ ( b , y , z , t ) = 0 , ψ ( x , c , z , t ) = ψ ( x , d , z , t ) = 0 , ψ ( x , y , e , t ) = ψ ( x , y , f , t ) = 0 , ψ ( x , y , z , 0 ) = ϕ 0 ( x , y , z ) , 其中 Δ = ∂ x x + ∂ y y + ∂ z z ， a < x < b ， c < y < d ， e < z < f ， t > 0 ，a，b，c，d，e，f，T，β均是给定常数， ϕ 0 , v = v ( x , y , z ) 已知函数，ϕ，ψ为未知函数。 首先，我们将区域[a, b]等分成M份，步长为 h x = b − a M ；将区域[c, d]等分成N份，步长为 h y = d − c N ；将区域[e, f]等分成P份，步长为 h z = f − e P ；将区域[0, T]等分成L份，步长为 τ = T N ；记 ψ j k l n ， ϕ j k l n 为 ψ ( x j , y k , z l , t n ) ， ϕ ( x j , y k , z l , t n ) 的近似值，其中 x j = a + j h x ， y k = c + k h y ， z l = e + l h l ， t n = n τ ， 0 ≤ j ≤ M ， 0 ≤ k ≤ N ， 0 ≤ l ≤ P ， 0 ≤ n ≤ L 。 在下面的计算过程中，我们需要定义关于 u ^ k l q 的离散三维Sine变换以及关于 u i j p 的离散三维Sine逆变换，它们的形式分别如下 u i j p = ∑ k = 1 M − 1   ∑ l = 1 N − 1   ∑ q = 1 P − 1   u ^ k l q s i n ( i k π M ) s i n ( j l π N ) s i n ( q p π P ) , (2.45) u ^ k l q = 2 M 2 N 2 P ∑ i = 1 M − 1   ∑ j = 1 N − 1   ∑ p = 1 P − 1   u i j p sin ( i k π M ) sin ( j l π N ) sin ( q p π P ) , (2.46) 下面讨论具体的求解过程。在时间方向上采用时间分裂法，在空间方向上采用基于快速Sine变换的四阶紧致差分格式。首先考虑在一个时间步长 [ t n , t n + 1 ] 上，假设 ψ j k l n 已知，然后将方程(2.43)分为两步求解： 1) 考虑非线性部分： i ψ t = V ψ + β | ψ | 2 ψ + ϕ ψ ，利用共轭变换与积分性质得： ψ ( x , y , z , t * ) = ψ ( x , y , z , t n ) e − i τ ( V ( x , y , z ) + β | ψ ( x , y , z , t n ) | 2 + ϕ ( x , y , z , t n ) ) . (2.47) 由于 ϕ ( x , y , z , t n ) 是未知量，所以等式右边无法直接求出。考虑方程(2.44)类似于泊松方程， 我们采用基于Sine变换的四阶紧致差分格式来求解： − ϕ x x − ϕ y y − ϕ z z = | ψ j k l n | 2 , − ϕ ^ x x − ϕ ^ y y − ϕ ^ z z = | ψ ^ j k l n | 2 , (2.48) 记 f ^ j l k n = | ϕ j k l n | 2 ，由基于Sine变换的四阶紧差分格式有如下关系式： ( ψ ^ j k l n ) x x = ψ ^ j l k n 12 ( c o s ( j π M ) − 1 ) h x 2 ( c o s ( j π M ) + 5 ) , ( ψ ^ j k l n ) y y = ψ ^ j l k n 12 ( c o s ( k π N ) − 1 ) h y 2 ( c o s ( k π N ) + 5 ) , ( ψ ^ j k l n ) z z = ψ ^ j l k n 12 ( c o s ( l π P ) − 1 ) h z 2 ( c o s ( l π P ) + 5 ) . (2.49) 将上面三个等式带入到(2.48)，得： ϕ ^ j k l n = f ^ j k l n − ( 12 ( c o s ( j π M ) − 1 ) h x 2 ( c o s ( j π M ) + 5 ) + 12 ( c o s ( k π N ) − 1 ) h y 2 ( c o s ( k π N ) + 5 ) + 12 ( c o s ( l π P ) − 1 ) h z 2 ( c o s ( l π P ) + 5 ) ) . (2.50) 再利用一次Sine变换求出 ϕ j k l n ，这样对于时间分裂法的中间变量 ϕ k j l * 就可以直接被表示出来。 2) 考虑线性部分方程的求解： i ψ t = − 1 2 Δ ψ ，其中 ψ j l k * 作为起始值，在时间方向上，采用crank-nicolson 来离散，在空间方向上采用基于Sine变换的四阶紧致差分格式来离散，具体如下： i ψ j k l n + 1 − ψ j k l * τ = − 1 4 ( Δ ψ j k l n + 1 + Δ ψ j k l * ) , ψ j k l n + 1 − i τ 4 Δ ( ψ j k l n + 1 ) = ψ j k l * + i τ 4 Δ ( ψ j k l * ) , 对上式两边同时作Sine变换得： ψ ^ j k l n + 1 − i τ 4 [ ( ψ ^ j k l n + 1 ) x x + ( ψ ^ j k l n + 1 ) y y + ( ψ ^ j k l n + 1 ) z z ] = g ^ j k l , (2.51) 这里 g ^ j k l = ψ ^ j k l * + i τ 4 [ ( ψ ^ j k l * ) x x + ( ψ ^ j k l * ) y y + ( ψ ^ j k l * ) z z ] . (2.52) 对于等式(2.51)的右边，只要对 ψ j k l * 做Sine逆变换得 ψ ^ j k l * ，再利用关系式： ( ψ ^ j k l * ) x x = ψ ^ j k l * 12 ( c o s ( j π M ) − 1 ) h x 2 ( c o s ( j π M ) + 5 ) , ( ψ ^ j k l * ) y y = ψ ^ j k l * 12 ( c o s ( k π N ) − 1 ) h y 2 ( c o s ( k π N ) + 5 ) , ( ψ ^ j k l * ) z z = ψ ^ j k l * 12 ( c o s ( l π P ) − 1 ) h z 2 ( c o s ( l π P ) + 5 ) . 就可以得到等式(2.51)右边的函数值。而对于等式(2.51)的左边，也利用关系式： ( ψ ^ j k l n + 1 ) x x = ψ ^ j k l n + 1 12 ( c o s ( j π M ) − 1 ) h x 2 ( c o s ( j π M ) + 5 ) , ( ψ ^ j k l n + 1 ) y y = ψ ^ j k l n + 1 12 ( c o s ( k π N ) − 1 ) h y 2 ( c o s ( k π N ) + 5 ) , ( ψ ^ j k l n + 1 ) z z = ψ ^ j k l n + 1 12 ( c o s ( l π P ) − 1 ) h z 2 ( c o s ( l π P ) + 5 ) . 等式(2.51)就可化简为： ψ ^ j k l n + 1 = g ^ j k l 1 − i τ 4 ( 12 ( cos ( j π M ) − 1 ) h x 2 ( c o s ( j π M ) + 5 ) + 12 ( cos ( k π N ) − 1 ) h y 2 ( c o s ( k π N ) + 5 ) + 12 ( cos ( l π P ) − 1 ) h z 2 ( c o s ( l π P ) + 5 ) ) , (2.53) 因此，形成了一个时间步长 [ t n , t n + 1 ] 上的一个完整迭代，具体实现步骤如下： 1) 输入a，b，c，d，M，N，P，L，e，f，T，β，以及 ϕ 0 ( x , y , z ) ，h x ，h y ，h z ，τ； 2) 计算 x j = a + j h x ， j = 0 , 1 , ⋯ , M ， y k = c + k h y ， k = 0 , 1 , ⋯ , N ， z l = e + l h z ， l = 0 , 1 , ⋯ , P ， t n = n τ ， ψ 0 k l n = ψ M k l n = 0 ， ψ j 0 l n = ψ j N l n = 0 ， ψ j k 0 n = ψ j k P n = 0 。从 n = 0 出发； 3) 计算 f j k l = | ψ j k l n | 2 ，通过三维Sine逆变换得 f ^ j k l ，利用关系式(2.50)求出 ϕ ^ j k l n ，再做三维Sine变换得 ϕ j k l n ； 4) 由 ψ j k l * = ψ j k l n e − i τ ( V ( x j , y k , z l ) + β | ψ ( x j , y k , z l , t n ) | 2 + ϕ j k l n ) ，计算出 ψ j k l * ； 5) 通过三维Sine逆变换求出 ψ ^ j k l * ，利用 ψ ^ j k l * 与 ( ψ ^ j k l * ) x x ， ( ψ ^ j k l * ) x x ， ( ψ ^ j k l * ) x x 的关系，求出(2.52)中的 g ^ j k l ； 6) 利用方程(2.53)得 ψ ^ j k l n + 1 ，对其做三维Sine变换得 ψ j k l n + 1 。再令 n = n + 1 ，重复3~6直到 n = L 为止。"
"在前一节中，我们详细介绍了求解一维、二维、三维非线性薛定谔泊松方程组初边值问题的时间分裂紧致差分格式，并且介绍了如何分别利用一维离散Sine变换、二维离散Sine变换、三维离散Sine变换快速地求解离散后的系统。本节将介绍这些数值方法的计算结果。我们将利用两种紧致差分格式来进行计算：一种是四阶紧致差分格式(1.8)，另一种是六阶紧致差分格式(1.10)。在上一节中，主要介绍关于四阶紧致差分格式(1.8)的算法。如果要利用六阶紧致差分格式(1.10)来离散方程中的二阶偏导数，那么需要将方程(1.14)中的右端参数变成方程(1.15)中的右端参数，算法中的其余过程不变。  考虑一维非线性薛定谔泊松方程组初边值问题(2.16)~(2.17)，其中 a = − 8 ， b = 8 ， T = 1 ， V = V ( x ) = 1 2 x 2 ， ϕ 0 ( x ) = 1 ( 2 π ) 1 4 e − x 2 4 。通过改变空间步长h的大小做误差分析，在计算中我们取M = 512或空间步长 h = 1 32 所得的近似解看作是方程的准确解 u e x a c t ( x , t ) 。我们通过第2.1节中所介绍的一维问题算法来求解，编写的代码在matlab软件中进行演算。误差定义 e r r o r = max 0 ≤ j ≤ M | u ( x j , t n = 1 ) − u e x a c t ( x j , t n = 1 ) | 。 从表1中我们看出六阶紧致差分格式比四阶紧致差分格式得到的误差要小，二者在空间步长h较小时都能达到谱精度。图1显示粒子总数N(t)、冲量P(t)以及总能量E(t)不随时间变化而变化，从图1中可以看出我们提出的数值方法具有一定的数值守恒性。图2显示了密度函数 | ψ ( x , t ) | 在不同时刻的图像。  考虑二维非线性薛定谔泊松方程组初边值问题(2.27)~(2.28)，其中 a = c = − 8 , b = d = 8 ， V = V ( x , y ) = 1 2 ( x 2 + y 2 ) ，初值函数为 ϕ 0 ( x , y ) = 1 2 π e − ( x 2 + y 2 ) 4 。通过改变空间步长h x ,h y 的大小做误差分析，在计算中我们取 M = N = 512 或空间步长 h x = h y = 1 32 所得的近似解看作是方程的准确解 u e x a c t ( x , y , t ) 。我 们通过第2.2节中所介绍的二维问题算法来求解，编写的代码在matlab软件中进行演算。误差定义 e r r o r = max 0 ≤ j ≤ M , 0 ≤ k ≤ P | u ( x j , y k , t n = 1 ) − u e x a c t ( x j , y k , t n = 1 ) | 。 Table 1h 1 2 1 4 1 8 1 16 四阶紧致差分格式误差 2.975 e − 3 1.523 e − 4 8.6 e − 6 9.99 e − 6 六阶紧致差分格式误差 9.74 e − 4 1.199 e − 5 9.99 e − 7 1.0 e − 8 表1. t = 1时刻的一维空间计算误差分析 图1. 粒子总数N(t)、冲量P(t)以及总能量E(t)随时间变化的趋势 图2. 密度函数 | ψ ( x , t ) | 在不同时刻的图像：(a) t = 2.5；(b) t = 5；(c) t = 7.5；(d) t = 10 从表2中我们看出六阶紧致差分格式比四阶紧致差分格式得到的误差要小，二者在空间步长h较小时都能达到谱精度。图3显示粒子总数N(t)、冲量的分量P x (t)、冲量的分量P y (t)以及总能量E(t)不随时间变化而变化，从图3中可以看出我们提出的数值方法具有一定的数值守恒性。图4显示了密度函数 | ψ ( x , y , t ) | 在t = 2.5、t = 5、t = 7.5、t = 10时的图像。 Table 2h x = h y 1 2 1 4 1 8 1 16 四阶紧致差分格式误差 1.022 e − 3 5.199 e − 5 1.0 e − 5 1.0 e − 6 六阶紧致差分格式误差 2.871 e − 4 3.9 e − 6 1.0 e − 6 1.0 e − 7 表2. t = 1时刻的二维空间计算误差分析 图3. 粒子总数N (t)、冲量的分量P x (t)、P y (t)以及总能量E(t)随时间变化的趋势 图4. 密度函数 | ψ ( x , y , t ) | 在不同时刻的图像：(a) t = 2.5；(b) t = 5；(c) t = 7.5；(d) t = 10 考虑三维非线性薛定谔泊松方程组初边值问题(2.43)~(2.44)，其中 a = c = e = − 8 ， b = d = f = 8 ， V = V ( x , y , z ) = 1 2 ( x 2 + y 2 + z 2 ) ，初值函数为 ϕ 0 ( x , y , z ) = 1 2 π 3 / 4 e − ( x 2 + y 2 + z 2 ) 4 。通过改变空间步长h x ，h y ，h z 的大小做误差分析，在计算中我们取 M = N = P = 512 或空间步长 h = 1 32 ，所得的近似解看作是方程的准确解 u e x a c t ( x , y , z , t ) 。我们通过2.2节中 所介绍的二维问题算法来求解， 编写的代码在matlab软件中进行演算。误差定义 e r r o r = max 0 ≤ j ≤ M , 0 ≤ k ≤ N , 0 ≤ l ≤ P | u ( x j , y k , z l , t n = 1 ) − u e x a c t ( x j , y k , z l , t n = 1 ) | 。 从表2中我们看出六阶紧致差分格式比四阶紧致差分格式得到的误差要小，二者在空间步长h较小时都能达到谱精度。图5显示粒子总数N(t)、冲量的分量P x (t)、冲量的分量P y (t)、冲量的分量P z (t)以及总能量E(t)不随时间变化而变化，从图5中可以看出我们提出的数值方法具有一定的数值守恒性。图6(a)、图6(c)分别显示了密度函数 | ψ ( 0 , y , z , t ) | 在t = 5、t = 10的图像；图6(b)、图6(d)分别显示了密度函数 | ψ ( x , 0 , z , t ) | 在t = 5、t = 10时的图像。 图5. 粒子总数N(t)、冲量的分量P x (t)、P y (t)、P z (t)以及总能量E(t)随时间变化的趋势 图6. 密度函数 | ψ ( 0 , y , z , t ) | 在不同时刻的图像：(a) t = 5，(c) t = 10；密度函数 | ψ ( x , 0 , z , t ) | 在不同时刻的图像：(b) t = 5，(d) t = 10"
"在本文中，我们主要讨论利用基于Sine变换的高阶紧差分格式、时间分裂法与Crank-Nicolson法结合的方法来求解非线性薛定谔–泊松方程组，借助离散傅里叶变换来实现Sine变换。最后，通过Matlab软件写出的程序计算出准确解与数值解的误差，画出误差分析图表以及在不同时刻未知函数的近似值。基于快速离散Sine变换的数值算法优点是计算程序简化，可以用较少的计算量达到相同的精确度，这也是我们在求解一些偏微分方程的过程中所期望的。随着当今科技与社会的进步，计算机的广泛应用，简单的求解方程的数值解已经无法满足了，快速和高效的数值解法就显得很有必要。"
