"零售业向来竞争激烈，一者面临来自同业竞争者之经营压力，再者又须面对运用创新科技所带来之新零售业态；另一方面从商品提供者角度来看，商品差异化有限，消费者议价能力强，挤压已然微利之获利空间等；均需要清楚定位通路与商品，以较精准之营销作为赢得消费者青睐。然而，业者习惯于以主观方式定位通路与商品，非但不容易取得决策参与者共识，亦增加测试市场风险；为此，本文提出一套具有理论基础，可操作之通路与商品定位分析模型，辅以群体决策机制，以提高定位质量，进而增加业者获利能力。 关键词 :商品定位，策略规划，群体决策，波特五力"
"近年来，一方面受网络应用多元化影响，尤其是在实体商店物联网正蓬勃发展，各式新颖零售经营型态如雨后春笋，不断地创造消费者商品购买新体验；另一方面，随着全球化激烈竞争趋势，国际大型零售业跨国布局，挟品牌与经济规模优势，对本土商品造成之冲击等，对商品如何在市场定位，牵动到营销对象，商品价格，到客户服务形式与规模，再再都是挑战。同时，随着信息科技创新发展，与种种多元营销手段及策略应用相结合，扩大与消费者接触面及深度传递商品价值等，以满足日渐抬头之消费者意识——少量多样之消费模式，对商品价值与价格之敏感性提高，并对竞争商品间之比较亦较全面，因此商品提供者已不能单方面主观地定位商品，而是以消费者考虑为观点，同时关注产业动态，适时订出相应策略与实施方案，响应市场需求，要达此目标，便不能不转型成[智能企业]——以策略驱动，以科学发展观为基础，藉由融合理论与数据分析，指引行动方案之新商战组织[ 1 ] 。零售通路与商品定位需要不同观点之跨领域实务专家参与，在一般商务决策情境中，参与人或因权责分工不同，或因权力不对等关系，使得参与人意见在不同决策因子中效力不一[ 2 ] 。本文提出之群体决策框架与过程构想源于[阶层分析法] (Analytic Hierarchy Process, AHP) [ 3 ] ，但加入参与人决策力权重及政策偏好；同时，简化当较多决策方案时，[阶层分析法]两两相比所造成之参与人决策程序繁复，因此又更接近商业决策实务。"
"[波特五力] [ 4 ] 广泛地为竞争策略分析所采用，可有效分析业者竞争环境，此五力包括：(1) 供货商的议价能力、(2) 购买者的议价能力、(3) 潜在竞争者进入能力、(4) 替代品替代能力、与(5) 行业内竞争者能力，以此分析业者之基本竞争态势，透过五种力量不同交互作用，最终将影响业者获利能力——分析模型对于包含零售通路与商品提供者之企业，了解自身定位，指导竞争策略制定，均产生深远影响。兹综合而言简说如后：(1) 供货商议价能力——决定于业者之创新能力，创新价值决定于消费者之认知，其影响力强度由商品所能展扩之外部效应大小而定；(2) 购买者议价能力——对于非必需、高替代性，与消费者购买能力不适配之商品，消费者具有购买选择性，而因此影响商品销售与获利能力；(3) 新进入者威胁——新进入者为消费者带来新选择，更多议价能力，自然同业竞争强度增加；(4) 替代品威胁——较少功能被更多功能之商品所吸收，单项多品(如手机与照相机)被一品多项(如具备照相功能之手机)所整合，旧技术被新颖科技所取代，消费者采用典范改变等；及(5) 同业竞争者竞争程度——当前同业竞争已从个别业者单打独斗式竞争，转变为价值体系间竞争，商品提供者被迫折冲于不同零售通路体系之间，而通路体系走向多品类复合式经营，要给予消费者多层次购买体验，不仅是商品价格上竞争，更是服务体验与经营创新之竞争。本文依据[波特五力]竞争策略分析模型，针对零售通路与商品提供者所需，发展一套具有理论基础并可实务操作，如图1所示之[竞争环境下零售商品定位分析模型]，在五力下分别纳入子决策因子，简说如后： (1) 商品品牌价值——无可否认的，消费者愿意为优质品牌商品或零售体系偿付较多金额，因此商品提供者与零售业者，均以经营品牌作为与竞争对手差异化手段之一，甚至可以说，没有品牌就一定是「红海」市场，除了价格战外别无他法竞争；综而言之，品牌经营可传递商品价值，产生月晕效应，使消费者认同，透过识别与竞争者有所区别，作为商品差異化之手段，并进而提高企业员工自尊新与忠诚度，反映在客户服务与优质商品上[ 5 ] ； (2) 商品通路普及程度——商品定位至关重要，再仔细考虑商品默认之目标市场、商品特色、通路商所给予之条件与服务后，选择合适之通路商；倘投入在消费族群不对称之通路上，非但无助于商品贩卖，反而更戕害商品本身之品牌；另一方面，通路商为维系其品牌，对商品之引入、规划、上架、促销、交易过程，到售后服务等，其核心思考就是依照商品在市场中之定位而安排； (3) 商品功能差异化程度——消费者购买行为虽具有随机不确定之本质，但仍然有理性消费者，针对商品规格、性能、价格，外观等因素，做出购买决策；也就是说，为了满足某种需求，在充足之购买动 图1. 竞争环境下零售商品定位分析模型 机支配下，消费者谨慎地在多个以上之购买方案中，综合性评价各产品、品牌或服务之各种评估因子，进行商品选择之过程，包括：需求确定、形成购买动机、购买方案之抉择与实施、购后评价等环节； (4) 商品销售获利能力——商品面对竞争所采取之作为，往往与其获利能力有关，其中获利能力高者，往往有更多资源因应竞争作为，包括减价提供互补商品与配件等；否则，商品提供者纵使有心因应竞争，但受限于资源不足而被迫虚应被动作为；另外，在当前供应链透明下，商品材料成本几可推敲，于是从商品订价可了解其诉求之消费族群与设定之市场，有助于自身商品定位之参考； (5) 消费族群购买力——在商品定位时，必须先设定消费族群，推敲其购买动机与行为，由其购买能力作为重要订价考虑因素；同时，当商品欲销售至他国时，尚须考虑消费地之[购买力平价指数] (Purchasing Power Parity) [ 6 ] ，亦即两地物价间之比值，经由繁复物价调查与计算而求得，将商品至于同一水平上比较，以反映出消费地国实际所能提供之财货与劳务量，实务上对于消费族群购买力之估算，可依据消费者调查资料，或是政府发布统计信息估算，目的在于掌握潜在消费族群购买力之预估； (6) 市场饱和度影响[ 7 ] ——零售商品往往对目标市场是否饱和十分敏感，而市场潜量是一预测值，是指某商品市场需求之极限值。商品在市场饱和不仅因竞争对手与替代品充斥，造成商品获利能力下降；同时，也影响库存与门市铺货数量；[市场饱和度]是指某类商品之市场总销售量与其市场潜量之比(市场饱和度 = 某商品销售总量/市场潜量)，而商品贩卖速率(商品在门市平均停驻时间)往往也能反映市场是否已饱和；通过对市场占有率以及竞争店数量之调查分析，可初步确定市场饱和度；高饱和度市场开发成本高而利润低；低饱和度市场成本低但客群不稳定，因此市场饱和度会影响到实体通路价位高低与取得之难易度； (7) 商品运用外部效应[ 8 ] ——具有较多外部效应之商品，容易使消费者产生黏着与认知有益，所谓[外部性]是指消费者购买商品所获得之效益超过其售价，同时，在消费者其他相关活动中亦产生效益，此效益是商品购买后所产生，甚至可以是负效益。 最后，值得一提者，是来自同业竞争，此为零售通路与商品提供者所面临影响力最大之竞争力量，竞争形式可源因于：(1) 业态相同，人才彼此流动结果，造成服务差异化有限；(2) 商品类型雷同，商品本身差异化有限；(3) 贩卖营销手段类似，均透过商品组合与折价吸引消费者；(4) 通路密度决胜，但同一区域所能吸纳消费力度有限，造成投资大回收瓜分现象；(5) 运筹效率与成本影响服务质量，在当前消费者要求快速服务下，物流绩效决定服务创新范围与消费者偏好；及(6) 卖场面积与陈设方式是消费者感受最直接之印象，卖场面积大型化与复合式服务已蔚为趋势，陈设方式艺术化与科技化，亦成为通路商营造购物气氛之重要手段。"
"商品定位之目的在于瞭解商情及其所处之地位，此[地位]在本质上属于消费者认知层次，从消费者观点构思其购买决策因子，并兼顾多商品面向潜在诱因，缩小商品提供者之主观评价与消费者与其他商品认知间差距，使得消费者愿意在此定位，或是市场区隔中，激发购买冲动，进而产生交易行为。因此为达此目的，商品提供者必需徵求来自不同面向之意见，并且具体指出商品设计与引进之初，所设想之竞争商品，藉由群体决策机制，将自身商品与竞争者相互比序，找出商品合适之市场定位；另一方面参考竞争商品市场规模、订价与消费者行为，以为自身商品进入市场之策略及后续产品生命週期管理等之依据。 首先，商品提供者先成立商品市场定位小组(以下简称专桉组)，总绾商品行销策略事宜，专桉组成员依商品属性以能代表多元观点为徵求意见前提，邀请包含外部不同领域专业人士，组成专家小组(以下简称专家组)，所有各组成员均应对商品及目标市场有一定程度之理解。专桉组依照前述定位模型，分别在各构面下((1) 供应商议价能力、(2) 消费者议价能力、(3) 新进入者威胁、(4) 替代品威胁，与(5) 同业竞争者竞争程度等五大构面))，设计具体意见徵求题项，以利专家组讨论时聚焦。 专桉组依商品属性并长期对产业之了解，选定对商品最为敏感之新进入者，替代商品及其竞争同业。新进入者与替代商品属于商品所在产业之现况与发展趋势之综观看法，而竞争同业则是目标市场与潜在消费者重叠，或是商品属性规格类似之企业群。表1为[新进入者影响程度评估表]，专桉组列出基本评估项并纪录相关评估内容，而专家组可视产业发展动态增加评估项，且给予各评估项权重；其中评估项目[经营型态]说明新进入者以商品交换价值之方式，如配销方式，是否採取虚实整合等；[商品类型]说明新进入者商品类型及越过新进入者障碍之差异化手段；[消费者认知]说明消费者对新进入者商品之接受程度或是採用倾向；而[技术成熟度]则说明新进入者商品之品质可靠度或是技术前景如何。各评估项经过组内讨论及摘要重点，交由专家组共识决定其对商品之影响程度，最后交由专桉组统计，计算各新进入者之综合影响程度。 项目组与专家组一如评估新进入者影响程度，同时对于同业竞争者之设定考虑企业规模、市场区隔，及国际化程度等，应设定商品提供者类似或当配之竞争对手才以意义，据此订定表2 [同业竞争者影响程度评估表]。其中评估项目[商品特点]说明该同业竞争者之商品主要诉求；[通路布局]说明通路型态、通路商、商品普及程度等；[商品价格]说明竞争者之订价策略；而[商品外部效应]则说明竞争产品功效外之影响力，或是其价值链体系之强度；最后经过统计得出各同业竞争者之综合影响程度。 项目组点出商品所面临不同替代品之影响力，而专家组可视产业发展动态增加替代品，共同订定表3[替代品影响程度评估表]，其中评估项目[主要提供者]指替代品标竿企业，说明此企业愿景与经营现况；[替代品特点]说明商品替代理由与其主要功能或功效诉求；最后经过统计得出各替代品之综合影响程度。 Table 1 中心商品 权重 新进入者-A 影响程度 新进入者-B 影响程度 经营型态 商品类型 消费者认知 技术成熟度 综合影响程度 表1. 新进入者影响程度评估表 Table 2 中心商品 权重 同业竞争者-A 影响程度 同业竞争者-B 影响程度 经营型态 商品特点 通路布局 商品价格 商品外部效应 消费者认知 技术成熟度 综合影响程度 表2. 同业竞争者影响程度评估表 Table 3 中心商品 权重 同业竞争者-A 影响程度 同业竞争者-B 影响程度 主要提供者 替代品特点 通路布局 商品价格 商品外部效应 消费者认知 技术成熟度 综合影响程度 表3. 替代品影响程度评估表"
"零售通路或商品提供者依据商品或服务特色，挑选数个市售成功之类似竞争商品，作为定位比序目标。业者集合不同领域具有实务经验之专家群，分别代表消费者与业者(利害关係人)利益，先针对前述商品定位模型第一阶(五力因子)给予尺度值(5、7或9尺度)，以决定五力因子间之权重；接着再分别在各力下给予子因子尺度值，以决定该力下各子因子兼之权重。专家之间可依其角色而赋予不同尺度值之影响力；业者亦可针对类似竞争商品设定比序期望值，此期望值为业者认知值，假使专家群意见与业者期望有差异，业者可思考创造更多消费者认知价值，以符合预期。假使商品计算之定位值与竞争品间差距过大，表示竞争商品选择失当，是种假性竞争，不适配之竞争，应重新选定竞争商品与比序。 在此决策过程中，依照决策目标特性，界定问题范围，并针对复杂决策问题加以解构成不同权重即位阶之决策因子，每个决策因子可能有次位阶之数个子决策因子所组成，形成一个决策因子阶层框架。同位阶之决策因子经参与人表明不同之重要性认同程度，经过计算后求得各决策因子重要性之权重，以此类推求得所有位阶决策因子重要性之权重。在末阶决策因子中，参与人除了表明不同之重要性认同程度外，尚需针对所有决策方案给予不同偏好或优先权重。同时，在此决策方案组合中，可能政策默认质性或框架外之决策方案偏好，而此决策过程乃在给予理性或专业意见，假使参与人之决策足以改变政策偏好，则更能彰显其决策力；反之，参与人之决策并不能改变政策偏好，则给予政策更具体之决策力。决策模式除了考虑决策因子具有阶层概念外，尚加入了参与人决策效力不一，与对决策方案具有不同之政策偏好等因素，说明如后。 (1) 某参与人(p)之决策效力表示为： 。 (2) 某决策方案(q)之决策方案偏好表示为： 。 (3) 参与人给予决策因子或决策方案之认知重要性值： 。 (4) 某参与人(p)在位阶(i)上之决策因子(j)其认知重要值表示为： 。 (5) 某参与人(p)在位阶(i)上，共有k 个决策因子，其认知重要性值总和： 。 (6) 某参与人(p)在位阶(i)上之决策因子 (j)，其认知重要性权重： 。 (7) 某参与人(p)在末阶(i)上，针对于某决策方案(q)因子(j)之认知重要性值表示为： 。 (8) 某参与人(p)在末阶(i)上，针对于某决策方案(q)因子(j)之认知重要性分数： 。 (9) 某参与人(p)，针对于某决策方案(q)认知重要性矩阵表示为： (10) 某参与人(p)，认知重要性权重矩阵表示为： (11) 某参与人(p)针对于某决策方案(q)之认知重要性分数： (12) 某参与人(p)针对某决策因子，针对于某决策方案(q)之比序集合表示为： (13) 某参与人(p)针对某决策方案(q)在 决策因子之总分数： (14) 有n个参与人针对某决策方案(q)所产生之分数数列，其几何平均数： (15) 某决策方案(q)总分数： (16) 在k个决策方案中，最佳方案(q)： 参与人依照决策事务本质，订定决策阶层及其决策因子。参与人针对各决策因子给予认知重要值，计算各阶决策因子权重，并于末阶上分别针对各决策方案给予认知重要值，再计算其决策方案权重。最后选择决策方案权重最大者，即为最佳决策方案。值得注意者是参与人纪录所有决策过程，最后编纂成报告存查。分别依决策方案及参与人，自末阶起计算阶权重，亦即将各阶因子权重相乘，再乘以方案比序值之结果，再将所有阶权重加总，即求得该参与人针对某决策方案之分数。然后将此分数分别乘以各参与人决策效力后，计算其几何平均数，再将此平均数乘以政策偏好权重，即得此决策方案之总分数。附录中为使用 GNU-R 解算此群体决策之范例程序，设想有4个参加人参与决策，挑选除了目标商品外，欲在3个竞争商品中定位，经过讨论后剔除五力中影响较小或为零售业常态者，留下其中三力，并分别各有2至3个子决策因子，计算出各商品之权重与比序，因而决定目标商品之定位，作为后续营销做为之依据。"
"零售商品从用途区分大体可分为三类：(1) 日常生活需要——消费者对商品有其惯性，对于惯性品提供者而言，该如何保卫既有市场，一方面给予消费者信任与熟悉感，另一方面则是在价值论述上，赋予新应用与持续使用之意义；但对于其他功能相同之商品而言，应如何打破消费者对商品之惯性，利用消费者嚐鲜心理与商品购买之随机性是个挑战；(2) 生活辅助品——非生活必需，以延伸某种生活概念，消费者追求生活品质提升，满足生活特殊情境需要，或是其他在功能及功效上，消费者认知有益之商品，此类商品诉求功能新颖多样，多半具有不排他性，消费者常拥有多组类似功能商品；及(3) 奢侈品——消费者对商品品牌情有独锺，追求生活品味，诉求某种稀有特殊之身份识别与彰显社会地位，此类商品诉求文化性、艺术性与贵重性，多半具有不排他性。无论哪类商品均面临相同挑战，先如何清晰看透市场动态及掌握消费者偏好转变，再思考自身商品定位，聚焦于目标客群，在有限行销资源下，有效地回应消费者诉求，同时观察使用者採用模式，作为商品改进依据。 为此，本文从零售业发展趋势出发，参考商品竞争相关文献理论，提出[竞争环境下零售商品定位分析模型]，并辅以模型应用具体配套作为，再藉由专桉组与专家组分工，使得商品定位不再是直觉主观方式，而是以科学客观方法求取商品定位共识；再透过外部专家意见，提高专桉组跨界能力与消弭因同质性组织成员所带来之潜在盲点，进而降低定位错误所引发之后续风险。"
"rm(list=ls()) getWeight <- function(valueList) { m_sum = sum(valueList) ans = valueList / m_sum ans } getLevelWeight <- function(factorValueList) { sumAll = sum(factorValueList) colNum = length(factorValueList[1,]) rowNum = length(factorValueList[,1]) ans = matrix(0, nrow=1, ncol=colNum) for (i in 1:colNum) { colSumOfValue = sum(factorValueList[,i]) ans[i] = colSumOfValue / sumAll } ans } # 参与人决策效力数组 PowerOfRoleSet = getWeight(c(1, 2, 1, 2)) # 决策方案政策偏好数组 PreferenceOfSolutionSet = getWeight(c(1, 2, 3, 2)) # 参与人 首阶=3 决策因子之重要性值数据矩阵 FactorValue_F1 = matrix(0, nrow=length(PowerOfRoleSet), ncol=3, byrow=TRUE) FactorValue_F1[1,] = c(4, 2, 3) FactorValue_F1[2,] = c(2, 3, 3) FactorValue_F1[3,] = c(3, 4, 3) FactorValue_F1[4,] = c(3, 4, 2) # 第一阶决策因子权重 FactorValue_FV1 = getLevelWeight(FactorValue_F1) # 参与人 二阶第一项 4 个子决策因子 之重要性值数据矩阵 FactorValue_F21 = matrix(0, nrow=length(PowerOfRoleSet), ncol=4, byrow=TRUE) # 参与人 1 各子决策因子 FactorValue_F21[1,] = c(3, 2, 3, 4) # 参与人 2 各子决策因子 FactorValue_F21[2,] = c(2, 2, 4, 3) # 参与人 3 各子决策因子 FactorValue_F21[3,] = c(1, 3, 2, 2) # 参与人 4 各子决策因子 FactorValue_F21[4,] = c(4, 3, 2, 3) # 第二阶决策因子 1 权重 FactorValue_FV21 = getLevelWeight(FactorValue_F21) # 参与人 二阶第二项 3 个子决策因子 之重要性值数据矩阵 FactorValue_F22 = matrix(0, nrow=length(PowerOfRoleSet), ncol=3, byrow=TRUE) FactorValue_F22[1,] = c(4, 3, 4) FactorValue_F22[2,] = c(4, 3, 4) FactorValue_F22[3,] = c(3, 3, 4) FactorValue_F22[4,] = c(5, 2, 4) # 第二阶决策因子 2 权重 FactorValue_FV22 = getLevelWeight(FactorValue_F22) # 参与人 二阶第三项 2 个子决策因子 之重要性值数据矩阵 FactorValue_F23 = matrix(0, nrow=length(PowerOfRoleSet), ncol=2, byrow=TRUE) FactorValue_F23[1,] = c(4, 2) FactorValue_F23[2,] = c(3, 3) FactorValue_F23[3,] = c(4, 2) FactorValue_F23[4,] = c(3, 3) # 第二阶决策因子 3 权重 FactorValue_FV23 = getLevelWeight(FactorValue_F23) # 产生 2 阶层 x 9 决策因子之 0 矩阵 FactorMatrix = matrix(0, nrow=3, ncol=sum(length(FactorValue_F21[1,]), length(FactorValue_F22[1,]), length(FactorValue_F23[1,])), byrow=TRUE) # 第一阶决策因子权重展开 FactorMatrix[1,] = c(rep(FactorValue_FV1[ 1 ], each=length(FactorValue_FV21)), rep(FactorValue_FV1[ 2 ], each=length(FactorValue_FV22)), rep(FactorValue_FV1[ 3 ], each=length(FactorValue_FV23))) # 第二阶决策因子权重 FactorMatrix[2,] = c(FactorValue_FV21, FactorValue_FV22, FactorValue_FV23) # 决策因子各阶层权重乘积 FactorMatrix[3,] = FactorMatrix[1,] * FactorMatrix[2,] # 参与人决策方案重要性值比序资料矩阵 SolutionMatrix = matrix(0, nrow=length(PreferenceOfSolutionSet), ncol=sum(length(FactorValue_FV21[1,]), length(FactorValue_FV22[1,]), length(FactorValue_FV23[1,])), byrow=TRUE) # 参与人 1 各决策因子下 所有方案比序 SolutionMatrix_1 = SolutionMatrix SolutionMatrix_1[,1] = c(2, 3, 1, 4) SolutionMatrix_1[,2] = c(3, 1, 2, 4) SolutionMatrix_1[,3] = c(3, 2, 1, 4) SolutionMatrix_1[,4] = c(2, 3, 4, 1) SolutionMatrix_1[,5] = c(4, 3, 2, 3) SolutionMatrix_1[,6] = c(2, 4, 1, 3) SolutionMatrix_1[,7] = c(1, 4, 2, 3) SolutionMatrix_1[,8] = c(2, 1, 4, 3) SolutionMatrix_1[,9] = c(4, 4, 1, 2) # 参与人 2 各决策因子下 所有方案比序 SolutionMatrix_2 = SolutionMatrix SolutionMatrix_2[,1] = c(2, 3, 1, 4) SolutionMatrix_2[,2] = c(3, 1, 2, 4) SolutionMatrix_2[,3] = c(3, 2, 1, 4) SolutionMatrix_2[,4] = c(2, 3, 4, 1) SolutionMatrix_2[,5] = c(4, 3, 2, 3) SolutionMatrix_2[,6] = c(2, 4, 1, 3) SolutionMatrix_2[,7] = c(1, 4, 2, 3) SolutionMatrix_2[,8] = c(2, 1, 4, 3) SolutionMatrix_2[,9] = c(4, 4, 1, 2) # 参与人 3 各决策因子下 所有方案比序 SolutionMatrix_3 = SolutionMatrix SolutionMatrix_3[,1] = c(2, 1, 3, 4) SolutionMatrix_3[,2] = c(1, 2, 4, 3) SolutionMatrix_3[,3] = c(4, 1, 3, 2) SolutionMatrix_3[,4] = c(1, 3, 4, 2) SolutionMatrix_3[,5] = c(4, 3, 2, 1) SolutionMatrix_3[,6] = c(2, 4, 1, 3) SolutionMatrix_3[,7] = c(3, 4, 2, 1) SolutionMatrix_3[,8] = c(2, 3, 4, 1) SolutionMatrix_3[,9] = c(1, 3, 4, 2) # 参与人 4 各决策因子下 所有方案比序 SolutionMatrix_4 = SolutionMatrix SolutionMatrix_4[,1] = c(3, 1, 2, 4) SolutionMatrix_4[,2] = c(3, 2, 4, 1) SolutionMatrix_4[,3] = c(2, 1, 3, 4) SolutionMatrix_4[,4] = c(1, 2, 4, 3) SolutionMatrix_4[,5] = c(2, 3, 1, 4) SolutionMatrix_4[,6] = c(2, 4, 1, 3) SolutionMatrix_4[,7] = c(2, 4, 3, 1) SolutionMatrix_4[,8] = c(2, 3, 4, 1) SolutionMatrix_4[,9] = c(3, 2, 4, 1) SolutionMatrix_1[1,2] * FactorMatrix[3,2] # 决策方案 x 决策因子 SolutionMatrix_AllFactor = rbind(SolutionMatrix_1[1,], SolutionMatrix_2[1,], SolutionMatrix_3[1,], SolutionMatrix_4[1,], # 决策方案 1 SolutionMatrix_F1 = SolutionMatrix_AllFactor[1,] * FactorMatrix[3,] SolutionMatrix_S1 = sum(SolutionMatrix_F1) SolutionMatrix_V1 = SolutionMatrix_S1 * PowerOfRoleSet SolutionMatrix_A1 = prod(SolutionMatrix_V1) ^ (1/length(PowerOfRoleSet)) # 决策方案 2 SolutionMatrix_F2 = SolutionMatrix_AllFactor[2,] * FactorMatrix[3,] SolutionMatrix_S2 = sum(SolutionMatrix_F2) SolutionMatrix_V2 = SolutionMatrix_S2 * PowerOfRoleSet SolutionMatrix_A2 = prod(SolutionMatrix_V2) ^ (1/length(PowerOfRoleSet)) # 决策方案 3 SolutionMatrix_F3 = SolutionMatrix_AllFactor[3,] * FactorMatrix[3,] SolutionMatrix_S3 = sum(SolutionMatrix_F3) SolutionMatrix_V3 = SolutionMatrix_S3 * PowerOfRoleSet SolutionMatrix_A3 = prod(SolutionMatrix_V3) ^ (1/length(PowerOfRoleSet)) # 决策方案 4 SolutionMatrix_F4 = SolutionMatrix_AllFactor[4,] * FactorMatrix[3,] SolutionMatrix_S4 = sum(SolutionMatrix_F4) SolutionMatrix_V4 = SolutionMatrix_S4 * PowerOfRoleSet SolutionMatrix_A4 = prod(SolutionMatrix_V4) ^ (1/length(PowerOfRoleSet)) # 决策方案 几何平均数 # 决策方案总分数 SolutionMatrix_A = c(SolutionMatrix_A1, SolutionMatrix_A2, SolutionMatrix_A3, SolutionMatrix_A4) * PreferenceOfSolutionSet # 寻找极大值位置 ans = which.max(SolutionMatrix_A) ans"
