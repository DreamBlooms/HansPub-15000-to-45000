"支持策略隐藏的属性基加密不仅可以保护明文，还可以保护用户的敏感信息。现有方案对访问结构有所限制，策略表达能力比较弱。本文提出一种隐藏访问策略的属性基加密方案，通过将访问结构转换成属性列表，然后对属性列表加密处理实现了策略隐藏，并且该方案对访问结构没有任何的限制。此外，将部分解密计算外包，减轻了用户的计算负担。分析表明，新方案在实现策略隐藏的同时增强了策略表达的灵活性，提高了解密效率，并且在DBDH假设下证明是选择明文攻击安全的。 关键词 :属性基加密，隐藏策略，DBDH假设 Copyright © 2019 by author(s) and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/"
"随着云存储的发展，越来越多的企业选择在云上存储数据，而不是花费昂贵的费用来购买存储设备。然而云存储目前最大难题之一就是安全隐患 [ 1 ] ，为了保证数据的机密性，Shamir和Bonehe [ 2 ] 首次提出了身份加密机制的概念，在加密明文前，数据拥有者需要知道用户的身份信息，用户解密密钥和用户的身份信息相关联，该机制为公钥密码体系的一对一加密。在实际应用中常常需要一对多的加密模型，例如数据拥有者共享的数据多个用户都可以解密查看。Sahai和Waters [ 3 ] 首次提出了模糊身份基加密，增加了访问控制策略 [ 4 ] ，用属性来标记用户身份信息，实现了公钥密码体系的一对多加密。随后Goyal等人 [ 5 ] 将基于属性加密体制分为密文策略ABE (CP-ABE)和密钥策略ABE (KP-ABE)两种。在CP-ABE中，数据拥有者具备制定策略的权利，密文和加密者定义的访问策略相关联，密钥则是和属性相关联；在KP-ABE中密文则是和属性相关，而密钥与访问策略相关联。属性基加密要求将访问策略在明文中公开，攻击者可以根据访问策略推测出用户的敏感信息，从而泄露用户隐私。 随着近年来对属性加密方案的研究 [ 6 ] [ 7 ] ，为了进一步保护用户信息的安全性，Nishide等人 [ 8 ] 提出了一个隐藏访问策略的加密方案，将访问策略隐藏在密文中，实现了在保护消息机密性的同时保护了访问策略，但该方案只支持“与”操作，访问策略的可表达性受到较大影响。Lai等人 [ 9 ] 在合数阶双线性群上提出一种在标准模型下证明是完全安全的隐藏访问结构的CP-ABE方案。文献 [ 10 ] [ 11 ] 提出了可支持任意门限或者布尔表达式的属性基加密方案，增加了访问结构的灵活性。宋衍等人 [ 12 ] 提出了一种基于访问树的策略隐藏属性加密方案，该方案是通过定义末端节点实现访问策略的隐藏，并证明是自适应安全的。基于属性基加密的方案中，往往用户需要大量的计算才能够获得明文，为了提高计算效率，Green等 [ 13 ] 提出了带外包解密的属性基加密概念，将部分计算交给云服务器计算。Lai等人 [ 14 ] 提出了改进的带可验证的外包解密的属性基加密概念，从用户可以验证云服务器计算的是否正确。文献 [ 15 ] [ 16 ] [ 17 ] 相继提出了一些基于外包解密的ABE方案。 本文在文献 [ 12 ] 的基础上，通过将树型访问结构转换成属性列表，取消了文献 [ 12 ] 中定义的末端节点只能表示与的限制。采用分割加密的思想，将访问策略加密和明文加密分别加密，实现访问策略的隐藏。用户只能判断自己是否符合访问策略，但无法知道具体的访问策略是什么，在解密步骤通过引入了外包计算简化用户的计算开销，提高了解密效率。"
"设G 1 ，G 2 是阶为素数p的循环群， Z p * 表示模p循环群，g是G 1 的生成元。 e : G 1 X G 1 → G 2 是从(G 1 , G 1 )到G 2 的一个映射。如果满足一下条件，则称 e : G 1 X G 1 → G 2 是一个双线性映射： 1) 双线性性质： e ( g a , h b ) = e ( g , h ) a b 。g，h是G 1 中的元素，a，b是 Z p * 中的元素。 2) 非退化性： e ( g , g ) ≠ 1 。 3) 可计算性：对G 1 中的所有元素 g , h ，存在一个有效的算法计算出 e ( g , h ) 的值。  随机选择 a , b , c , z ∈ Z p * ，p是G的阶，g是G的生成元。DBDH假设即为不存在一个多项式时间的概率算法能够以不可忽略的优势区分元组 [ g , g a , g b , g c , e ( g , g ) a b c ] 和元组 [ g , g a , g b , g c , e ( g , g ) z ] 。   本方案共包含四个实体：可信机构，数据拥有者，用户和云服务器。各个实体的功能如下： 1) 可信机构：可信机构是完全受信任的中央授权机构，它生成系统的公共参数并为用户计算私钥。 2) 数据拥有者：数据拥有者的工作是制定访问结构、对数据加密并将密文上传到云服务器。 3) 用户：用户从云端服务器下载密文，然后向可信机构提交自己的属性列表，并从可信机构获得相应的私钥，当且仅当属性列表满足访问结构的时候可以成功解密密文。 4) 云服务器：云服务器负责存储密文和解密外包计算。云服务器是不完全受信任的，它有可能会泄露存储的数据或给用户故意返回错误的计算结果。  将访问结构转换成属性列表的规则，假设节点 α 的叶子节点个数为 α k 。 1) 如果节点是and，则 W α = { W 1 = [ a 1 , a 2 ⋯ a α k ] } 2) 如果节点为or，则 W α = { W 1 = [ a 1 ] , W 2 = [ a 2 ] ⋯ W α k = [ a α k ] } 3) 如果节点为of，门限值为h，则 W α = { W i = [ a i ⋯ a m ] ⋯ W n = [ a i ⋯ a m ] } ( n = C α k h ) 由下到上，计算出根节点对应的所有属性列表 W = { W 1 , W 2 , ⋯ , W n }  在本文中，用户的身份由特定是属性集合表示，本方案的访问结构为树型，可以灵活的支持and、or和threshold。 系统中是所有属性集合为 A = { a 1 , a 2 , ⋯ , a m } ，对于任何 a i ( 1 ≤ i ≤ m ) 的取值集合为 S i = { v i , 1 , v i , 2 , ⋯ , v i , t } ，访问树为T，转换后的属性组合为 W = { w 1 , w 2 , ⋯ , w n } ，其中 w i = [ v 1 , t , v 2 , t , ⋯ , v m , t ] ，用户的属性列表为 U = [ U 1 , U 2 , ⋯ , U m ] ，其中 U i ∈ S i 。 本文利用加密分割思想将对访问结构的加密和密文加密分割开，数据拥有着将定义好的访问结构转换成符合访问结构的所有可能组合的列表，然后加密。例如图1访问树T，将转换成 W = { W 1 = [ A , B ] , W 2 = [ A , C ] , W 3 = [ B , C ] , W 4 = [ D , E ] } ，然后W i 中的属性值用 g s a i , t 代替，不以明文的形式出现在属性列表中，攻击者虽然可以根据加密后的属性列表恢复出访问结构的内部节点，但具体的属性值无法确认，因此实现了策略的隐藏。用户通过判断自己的属性列表是否与其中的某一条一致来确定是否满足访问策略。  本方案可在标准模式下达到完全安全。其所基于的安全模型通过以下挑战者S和敌手A之间的交互游戏进行描述，若最终敌手A给出正确的猜测，则敌手胜利，反之挑战者胜利。游戏过程入下： 图1. 访问树T 初始化阶段：敌手A向挑战者S提交访问结构T 0 和T 1 。挑战者S选择安全参数并运行初始化算法得到系统公钥PK和系统主私钥MSK，挑战者保留系统主私钥MSK，并且把系统公钥PK发送给敌手A。 第一阶段：敌手向挑战者询问属性集U的私钥(可多次)，同时要求私钥既不能满足T 0 也不也能满足T 1 ，挑战者S运行生成私钥算法，生成SK并发送给A。 挑战：敌手A输出两个长度相同的消息M 0 和M 1 。挑战者随机选择 j ∈ { 0 , 1 } ，对M j 进行加密，并且将密文发送给敌手A。 第二阶段：重复第一阶段，继续询问私钥。 猜测：敌手A输出对j的猜测 j ′ ，如果 j ′ = j ，则称敌手A赢得游戏；否则，敌手A失败。我们定义敌手A获得胜利的优势为 A d v = Pr [ j = j ′ ] − 1 2 。 定义1： 基于属性基的加密方案在选择性明文攻击下是完全安全的，并且只有在没有多项式有界攻击者的情况下才能以不可忽略的优势赢得上述游戏。"
"1) 初始化过程( 1 λ ) 输入公共参数 1 λ ，生成两个阶为素数p的乘法循环群G 1 、G 2 ，G 1 的生成元是g。e为双线性映射 e : G 1 X G 1 → G 2 。系统随机选择 y ∈ Z p * ，计算 Y = e ( g , g ) y 对于每个属性 a i ( 1 ≤ i ≤ m ) 系统随机选择 a i , t ∈ Z p * ( 1 ≤ t ≤ m i ) ，计算 A i , t = g a i , t ( 1 ≤ i ≤ m , 1 ≤ t ≤ m i ) 。输出：系统公钥 P K = 〈 g , Y , { A i , t } 1 ≤ i ≤ n , 1 ≤ t ≤ k 〉 ，主密钥 M S K = 〈 y ， { a i , t } 1 ≤ i ≤ n , 1 ≤ t ≤ k 〉 。 2) 加密过程(PK, T, M) 输入：明文M，访问结构T，和系统公钥PK。 第一步：加密访问结构。将访问结构根据转换规则转换成属性列表 W = { w 1 , w 2 , ⋯ , w n } 。 w i = [ v 1 , t , v 2 , t , ⋯ , v m , t ] 1 ≤ t ≤ m i ，将w i 进行加密，随机选择 s ∈ Z p * ，对于 v i , t ，计算如下 C i , t = A i , t s 。 C ′ t = ∏ t = 1 m i A i , t ， C i = { C i , t } 1 ≤ t ≤ m i 。如果数据拥有者的计算能力有限，该步骤也可以交给云端服务器计算，因为只是将访问 结构暴露了出去，即使攻击者获得到了所有的信息，攻击者也不知道该访问结构能够解密的是那一个密文，所以云端服务器来进行访问结构的加密也是安全的。 第二步：加密明文M。计算 C 0 = g s , C = M Y s = M e ( g , g ) y s 。 生成密文为： C T = 〈 C , C 0 , C R = 〈 { C i } 1 ≤ i ≤ m ， { C ′ i } 1 ≤ i ≤ m 〉 〉 。 3) 提取私钥 输入：用户的属性列表U，主私钥MSK，和系统公钥PK。 随机选择 θ ∈ Z p * ，对于任意 v i , t ∈ U ，随机选取 d i ∈ Z p * ，计算 D i = g d i / a i , t , D ′ i = D i 1 / θ 。设置 d = ∑ i = 1 m d i ，计算 D 0 = g y − d ， F = ∏ i = 1 m g a i , t 。最后输出 S K = 〈 θ , D 0 〉 , T K = 〈 { D i ′ } 0 ≤ i ≤ m , F 〉 。 假设 ∀ U , U ′ ( U ≠ U ′ ) ， ∑ v i , t ∈ U a i , t ≠ ∑ v i , t ∈ U ' a i , t ，以免不同的属性列表U、 U ′ 实现相同的解密功能。以上假设成立的概率 P assump > ( 1 − p 0 2 / p ) ，其中 p 0 = ∏ i = 1 m m i [ 18 ] 。 4) 外包解密 输入：转换密钥TK，密文CT。 服务器根据TK和CT，首先判断用户的属性列表是否符合解密条件，如果符合则进行密文转换计算，否则终止服务。 服务器根据TK和CT计算，验证是否存在 C ′ i 使得F等于 C ′ i ，如果存在，则用户属性列表U满足访问条件则相等，否则终止服务。若满足访问条件则计算 C T ′ = ∏ i = 1 m e ( C i , t , D i ) = e ( g , g ) ∑ i = 1 m s a i , t · d i / θ a i , t = e ( g , g ) s / θ · ∑ i = 1 m d i = e ( g , g ) s d / θ 。 5) 用户解密 如果用户收到云端服务器返回的 C T ′ ，明文计算如下： C e ( C 0 , D 0 ) • C T ′ θ = M Y s e ( g s , g y − d ) • e ( g , g ) ( s d / θ ) θ = M e ( g , g ) y s e ( g , g ) s y − s d • e ( g , g ) s d = M ；否则，用户无权解密。"
"以下证明该方案在DBDH假设下满足选择明文攻击的完全安全。假设敌手A能以不可忽略的优势ε来攻破本文方案，那么就能够构造出一个模拟器S，它可以以 ε 的优势打破DBDH。 在DBDH游戏中，挑战者S会选择群G 1 和G 2 ，群G 1 的生成元为g，映射为 e ( g , g ) ，随机选择数 a , b , c , z ∈ Z p 。挑战者S投掷硬币 µ ∈ { 0 , 1 } ，如果µ = 0，则设置 Z = e ( g , g ) a b c ，否则µ = 1，设置 Z = e ( g , g ) z 。 初始化阶段：敌手A提供给挑战者S两个要挑战的访问结构T 0 和T 1 。挑战者S随机选择 j ∈ { 0 , 1 } ，对于 0 ≤ i ≤ m , 1 ≤ t ≤ m i 随机选取 a i , t ∈ Z p * ，当属性值存在于访问树T j 的叶子节点中，令 A i , t = g a i , t ，否则令 A i , t = g b a i , t ， Y = e ( g a , g b ) = e ( g , g ) a b ，S把系统公钥 P K = 〈 g , Y , { A i , t } 0 ≤ i ≤ m , 0 ≤ t ≤ k 〉 发送给敌手A。 第一阶段：敌手A提供一个属性集合 U = { U 1 , U 2 , ⋯ , U m } 作为私钥询问的输入，要求属性集合U不满足访问结构T 0 和访问结构T 1 。挑战者S计算出私钥发送给A，对于U内的属性 U i ( 1 ≤ i ≤ m ) ，只是存在一个 Ψ 使得 U Ψ 不满足T j 。对于 ∀ 1 ≤ i ≤ m ，随机选择 d ′ i ∈ Z p ，如果 i = Ψ ，计算 d i = a b + d ′ i ，否则 d i = d ′ i ，计算 D i = g d i / a i , t ， D ′ i = D i 1 / θ ，设置 d = ∑ i = 1 n d i = a b + ∑ i = 1 n d ψ ， F = ∏ i = 1 m g a i , t ，令 D 0 = g a b − d ， T K = 〈 F , { D ′ i } 0 ≤ i ≤ m 〉 , S K = 〈 θ , D 0 〉 ，将私钥发送给敌手A。 挑战阶段：敌手A提交M 0 和M 1 给挑战者S。将T j 转化成属性列表W j 。令 s = c ，设 C 0 = g s ， C = M j Z = M j e ( g , g ) z ，当 j = 0 时， e ( g , g ) z = e ( g , g ) a b c ；当 j = 1 时， e ( g , g ) z 为随机值。对于 v i , t ∈ w i ，计算如下 C i , t = A i , t s ， C i ' = ∏ t = 1 m i C i , t ， C i = { C i , t } 1 ≤ t ≤ m i 。 C R = 〈 { C i } 1 ≤ i ≤ m , { C ′ i } 1 ≤ i ≤ m 〉 ，把密文 C T = 〈 C , C 0 , C R 〉 发送给外包服务器，外包服务器通过转换密钥TK将密文CT转换成 C T ′ ，首次判断用户属性列表是否符合访问结构，如果符合则计算 C T ′ = ∏ i = 1 m e ( C i , t , D ′ i ) = e ( g , g ) ∑ i = 1 m s a i , t · d i / θ a i , t = e ( g , g ) s / θ · ( a b + ∑ i = 1 m d ψ ) ，然后将密文 C T ′ 发送给敌手A。 第二阶段：重复第一阶段，继续询问私钥。 猜测阶段：敌手输出对j的猜测 j ′ ，如果 j ′ = j ，模拟器会猜测 μ = 0 ； j ′ ≠ j ，模拟器会猜测 μ = 1 。 当 μ = 0 时，敌手A获得有效密文 C T ′ 。敌手的优势为： Pr [ j ′ = j | Z = e ( g , g ) a b c ] = 1 2 + ε 。当 μ = 1 时，敌手获得的密文 C T ′ 是随机的，无法得知它明文的任何信息， Pr [ j ′ ≠ j | Z = e ( g , g ) z ] = 1 2 。因此，模拟器在解决DBDH假设上总的优势为： 1 2 Pr [ j ′ = j | Z = e ( g , g ) a b c ] + 1 2 Pr [ j ′ ≠ j | Z = e ( g , g ) z ] − 1 2 = ε 2 。 由以上证明可知，在DBDH假设中，若多项式时间敌手A的优势为ε，则模拟器S的优势为 ε 2 。因 此，如果敌手A可以在安全模型下能够以不可忽略的优势破坏本方案，则模拟器S的优势也不容忽视，由此可证明在安全模型下没有敌手可以破坏本方案。"
"本文通过将访问结构转换成属性列表，实现了方案中策略隐藏的要求。为了彰显本方案的优点，本节将本方案分别从用户的私钥长度，解密长度以及系统的采用的双线性群阶和复杂性假设四个方面与其它方案做对比。e表示双线性配对运算所需的时间，G 2 表示群G 2 中的运算， | G 1 | 和 | G 2 | 分别表示群G 1 和G 2 中元素的长度，m表示系统中的属性个数， α 表示访问结构中末端内部节点的个数， α k 表示 α 的子结点个数。具体结果如表1所示。 Table 1 方案 双线性群阶 私钥长度 解密时间 复杂性假设 | G 1 | | G 2 | e G 2 文献 [ 8 ] 素数 1 + 2 m 0 1 + 3 m 1 + 3 m DBDH 文献 [ 9 ] 合数 1 + m 0 1 + m 1 + m Non-standard 文献 [ 11 ] 合数 2 + m 2 + m 1 + α + α α k 1 + α + α α k Non-standard 本文 素数 2 + m 0 1 1 DBDH 表1. 本方案与其它方案比较"
"随着云存储的发展，系统用户和信息量将会不断增长，方案的计算复杂度也越来越大。如何在安全的前提下，支持灵活的访问结构，用户通过少量的计算可以得到明文是一个值得研究的问题。本文提出了一种基于属性基加密的策略隐藏方案，对访问结构没有任何限制，通过将部分运算交由云服务器来计算，大大减少了用户的计算量。考虑到在实际应用中，系统中用户的属性会经常性变化，后续工作将在此解决方案的基础上进一步研究属性撤销操作的方法。"
