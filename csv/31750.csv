"对线性互补约束优化问题，利用一个连续可微的光滑互补函数，光滑系数趋于零时，原问题转化为光滑非线性规划问题，再利用SQP算法来求解该光滑非线性规划问题。在适当的条件下，该算法具有全局收敛性，最后给出了数值实验，也证明了该算法是有效的。 关键词 :均衡问题，罚函数，SQP法，全局收敛 Copyright © 2019 by author(s) and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/"
"近年来，带均衡约束的数学规划问题因为在经济、工程技术、对策决策等领域的广泛应用而引起关注 [ 1 ] [ 2 ] 。本文求解一个线性互补均衡约束问题，可以描写为以下形式： min     f ( x , y ) s .t .     A x ≤ b ,             w = N x + M y + q ,             0 ≤ w ⊥ y ≥ 0 , (1.1) 其中 f : R n + m → R ，是连续可微的函数， A ∈ R p × n , N ∈ R m × n , M ∈ R m × m , b ∈ R p , q ∈ R m 。 如果将互补条件 w ⊥ y 写成内积的形式： w T y = 0 ，那么均衡约束问题等价于一个光滑的非线性规划问题。但众所周知，对于此类非线性划归问题，即使较弱的MFCQ规格,在任何可行点处都不成立，故传统的优化算法一般不能直接用来求解此类问题。 对线性互补均衡约束问题，先介绍一些常见的光滑函数： 广义Fischer-Burmeister互补函数： ϕ 1 ( a , b ) = a + b − a 2 + b 2 + μ , Zang在文献 [ 3 ] 提出一个如下形式的光滑函数： ϕ 2 ( a , μ ) = { 0 , ​ ​ ​ ​                                             a ≤ − μ 2 , 1 2 μ ( a + μ 2 ) 2 ,         − μ 2 < a < μ 2 , a ,                                             a ≥ − μ 2 . Song Xu在文献 [ 4 ] 中提出一个如下形式的新的光滑函数： ϕ 3 ( a , μ ) = μ ln ∑ i = 1 m e a i μ . 本文尝试利用互补函数 ϕ ( y i , w i , μ ) = − μ ln ( 1 + e − y i μ ) − μ ln ( 1 + e − w i μ ) ，将问题(1.1)中的互补约束条件 w ⊥ y 光滑化，将问题(1.1)转化为一光滑非线性规划的一般约束优化问题，然后借助罚函数型SQP方法思想，通过求解后者逼近前者的解，并证明该算法是全局收敛的. 为了方便，本文采用如下记号： z = ( x , y , w ) ,   s = ( x , y ) ,   t = ( y , w ) ,   z k = ( x k , y k , w k ) ,   s k = ( x k , y k ) ,   t k = ( y k , w k ) , t i = ( y i , w i ) ,   d z = ( d x , d y , d w ) ,   d z k = ( d x k , d y k , d w k ) ,   X = { z ∈ X 0 | 0 ≤ w ⊥ y ≥ 0 } , X 0 = { z | A x ≤ b , w = N x + M y + q } ,   A T = ( a 1 T , ⋯ , a p T ) ,   b T = ( b 1 , ⋯ , b p ) . 本文主要符号解释如下： R n 表示一个实n维Euclide空间。 e 表示各分量均为1的列向量。 ∇ f ( x ) 表示函数 f ( x ) 的一阶导数或梯度。 ∇ 2 f ( x ) 表示函数 f ( x ) 的二阶导数或 Hessian 矩阵。 u > 0 表示向量u的每一个分量 u j > 0 。 u ≥ 0 表示向量u的每一个分量 u j ≥ 0 。 x T 和 A T 分别表示向量x和矩阵A的转置。 d i a g ( a j , j = 1 , 2 , ~ , m ) 表示以 a j 为对角元素的m阶对角矩阵。"
"记F是问题(1.1)的可行域，定义在向量 z ∈ F 处F的切锥如下： L ( z , F ) = { d = lim k → ∞ z k − z τ : z k ∈ F , lim k → ∞ z k = z , τ k ↓ 0 } , 对问题(1.1)，需做如下基本假设： H 2.1 问题(1.1)中的矩阵M是一个 P 0 矩阵，即所有的主子式均非负。 H 2.2 对任意的 z ∈ X 0 ，矩阵A的行向量组 { a j | j ∈ L ( z ) } 线性无关。 H 2.3 问题(1.1)的可行域非空。 H 2.4 函数 f ( x , y ) 为二阶连续可微的。 定义 2.1 如果对于可行点 z ∗ = ( x ∗ , y ∗ , w ∗ ) 满足下面的条件，那么称 z ∗ 是问题(1.1)的稳定点： d z = ( d x , d y , d w ) ∈ Γ ( X ; z ∗ ) ⇒ ∇ f ( x ∗ , y ∗ ) T d s ≥ 0 , 其中 Γ ( X ; z ∗ ) 为X在 z ∗ 处的切锥。 问题(1.1)的稳定点与其最优解两者之间存在密切的联系，求解问题(1.1)的算法多半集中在稳定点的求解。 定理 2.1 [ 5 ] 假设 z ∗ = ( x ∗ , y ∗ , w ∗ ) ∈ X 满足下层非退化条件： ( y i , w i ) ≠ ( 0 , 0 ) ,     ∀ i = 1 , ⋯ , m , 则 z ∗ 为问题(1.1)的一个稳定点的充分必要条件是存在乘子 ( λ ∗ , u ∗ , v ∗ ) ，使得下面的方程组成立： ( ∇ f x ( x ∗ , y ∗ ) ∇ f y ( x ∗ , y ∗ ) 0 ) + ( A T 0 0 ) λ ∗ + ( N T M T − I ) u ∗ + ( 0 W ∗ Y ∗ ) v ∗ = 0 , ( A x ∗ − b ) T λ ∗ = 0 ,     A x ∗ − b ≥ 0 ,     λ ∗ ≥ 0 , (2.1) 其中 W ∗ = d i a g ( w i ∗ , i = 1 , ⋯ , m ) , Y ∗ = d i a g ( y i ∗ , i = 1 , ⋯ , m ) 。 本文为问题(1.1)提出一个新的光滑函数. 令 φ ( y , w ) = min { y , w } ，其中 min { y , w } 定义为 min { y i , w i } e , i = 1 , ⋯ , m ， e = ( 1 , ⋯ , 1 ) T ∈ R m 。 有 y T w = 0 , y ≥ 0 , w ≥ 0 ⇔ φ ( y , w ) = min { y , w } = 0. (2.2) 定义函数 Φ ∈ R 2 m × [ 0 , + ∞ ) ： Φ ( a , b , μ ) = ( ϕ ( a 1 , b 1 , μ ) ⋮ ϕ ( a m , b m , μ ) ) , (2.3) 其中 ϕ ∈ R 2 m × [ 0 , + ∞ ) ， μ 是一个非负的参数， ϕ ( a , b , μ ) = − μ ln ( 1 + e − a μ ) − μ ln ( 1 + e − b μ ) , (2.4) 易知对于固定的 μ > 0 ，函数 ϕ ( ⋅ , ⋅ , μ ) 处处可微. ∇ ϕ ( y , w , μ ) = ( ∇ y ϕ ( y , w , μ ) ∇ w ϕ ( y , w , μ ) ) = ( ∂ ϕ ( y 1 , w 1 , μ ) ∂ y 1 , ⋯ , ∂ ϕ ( y m , w m , μ ) ∂ y m , ∂ ϕ ( y 1 , w 1 , μ ) ∂ w 1 , ⋯ , ∂ ϕ ( y m , w m , μ ) ∂ w m ) T = ( e − y 1 μ 1 + e − y 1 μ , ⋯ , e − y m μ 1 + e − y m μ , e − w 1 μ 1 + e − w 1 μ , ⋯ , e − w m μ 1 + e − w m μ ) T . (2.5) ϕ ( a , b , μ ) 有一些很好的性质： lim μ → 0 ϕ ( a , b , μ ) = lim μ → 0 − μ ln ( 1 + e − a μ ) − μ ln ( 1 + e − b μ ) = 0 , 且当 μ = 0 时， lim μ → 0 Φ ( y , w , μ ) = φ ( y , w ) = 0. (2.6) 由上式，做如下定义： Φ ( y , w , 0 ) = φ ( y , w ) , (2.7) 从而有 lim μ → 0 ϕ ( y , w , μ ) = ϕ ( y , w , 0 ) . (2.8) 如将问题(1.1)的互补条件转化为线性方程组 ϕ ( y , w , 0 ) = 0 , i = 1 , ⋯ , m 。则提出以下标准非线性规划问题： min   f ( x , y ) s .t .     A x ≤ b ,             w = N x + M y + q ,             Φ ( y , w , μ ) = 0 , (2.9) 当 μ ≥ 0 且充分逼近于0时，问题(2.9)是原问题(1.1)的一个近似逼近；当 μ = 0 时，问题(2.9)是原问题(1.1)的等价；当 μ > 0 时，问题(2.9)是一个一般的可微非线性规划问题。 对于 z = ( x , y , w ) ∈ R n + 2 m ，可以定义如下罚函数 φ : R n + 2 m × ( 0 , + ∞ ) × ( 0 , + ∞ ) → R ： φ ( z , ε , μ ) = f ( x , y ) + ε ∑ i = 1 m | ϕ ( y i , w i , μ ) | , (2.10) 其中 ε > 0 是罚参数. 罚函数 φ 在z处沿方向 d z 的方向导数为 φ ′ ( z , ε , μ , d z ) ： φ ′ ( z , ε , μ , d z ) = ∇ f ( s ) T d s + ε ∑ i ∈ I + ∇ ϕ ( t i , μ ) T d t i + ε ∑ i ∈ I 0 | ∇ ϕ ( t i , μ ) T d t i | − ε ∑ i ∈ I − | ∇ ϕ ( t i , μ ) T d t i | , (2.11) 其中下指标集定义如下： I + ≡ I + ( y , w , μ ) = { i | ϕ ( y i , w i , μ ) > 0 } , I 0 ≡ I 0 ( y , w , μ ) = { i | ϕ ( y i , w i , μ ) = 0 } , I − ≡ I − ( y , w , μ ) = { i | ϕ ( y i , w i , μ ) < 0 } ."
"引理3.1 对于任意的 ( a , b , μ ) ∈ R 2 × ( 0 , + ∞ ) ，且 ( a , b , μ ) ≠ ( 0 , 0 , 0 ) ，有 0 < ∂ a ϕ ( a , b , μ k ) < 1 , 0 < ∂ b ϕ ( a , b , μ k ) < 1 ,     i = 1 , ⋯ , m , (3.1) 0 < ( ∂ ϕ ( a , b , μ k ) ∂ a ) 2 + ( ∂ ϕ ( a , b , μ k ) ∂ b ) 2 ≤ 2 (3.2) 成立。 证明：由(2.5)，有(3.1)成立。 接下来证明(3.2)式如下： ( ∂ ϕ ( y , w , μ k ) ∂ y ) 2 + ( ∂ ϕ ( y , w , μ k ) ∂ w ) 2 = ( e − y μ 1 + e − y μ ) 2 + ( e − w μ 1 + e − w μ ) 2 ≤ ( e − y μ e − y μ ) 2 + ( e − w μ e − w μ ) 2 = 2. 设 z k = ( x k , y k , w k ) ∈ X 0 ，是算法第k步的迭代点， μ > 0 ， B k 是一个 n + 2 m 阶的对称正定矩阵，在算法的第k步迭代中，求解以下二次序列子问题 min     ∇ f ( x k     y k ) T ( d x d y ) + 1 2 ( d x T     d y T     d w T ) B k ( d x d y d w ) , s .t .         A x k + A d x − b ≤ 0 ,                 d w − N d x − M d y = 0 ,                 Φ ( t k , μ k ) + ∇ t Φ ( t k , μ ) T d t = 0. (3.3) 求解(3.3)式，得解 d z k = ( d x k     d y k     d w k ) ，及相应的KKT乘子 ( λ k , l k , m k ) ，定义 ∇ Φ ( y k , w k , μ k ) ∈ R 2 m × R m × R → R m 。 ∇ Φ ( y k , w k , μ k ) = ( D y k D w k ) , (3.4) 其中 D y k = d i a g ( ∂ y i ϕ ( y i k , w i k , μ k ) ) ,     i = 1 , ⋯ , m D w k = d i a g ( ∂ w i ϕ ( y i k , w i k , μ k ) ) ,     i = 1 , ⋯ , m 从而QP子问题(3.3)也可以写成如下形式： min     ∇ f ( x k     y k ) T ( d x d y ) + 1 2 ( d x T     d y T     d w T ) B k ( d x d y d w ) , s .t .         A x k + A d x − b ≤ 0 ,                 ( N M − I 0 D y k D w k ) ( d x d y d w ) + ( 0 Φ ( y i , w i , μ ) ) = 0. (3.5) QP子问题(3.3)是一个带线性约束的凸规划问题，所以问题(3.5)的最优解与KKT点等价，进而其KKT系统可以写成： ( ∇ f ( x k ) ∇ f ( y k ) 0 ) + B k ( d x d y d w ) + ( N T 0 M T D y k ) ( l m ) + ( A T 0 0 ) λ = 0 , (3.6) 0 ≤ ( b − A x k − A d x ) ⊥ λ ≥ 0 , (3.7) ( N M − I 0 D y k D w k ) d z + ( 0 Φ ( y i , w i , μ ) ) = 0 ， (3.8) 其中 ( λ , l , m ) ∈ R p × R m × R m 是KKT乘子。 命题3.1 [ 6 ] 设假设H 2.1成立， z k = ( x k , y k , w k ) ∈ X ，罚参数 μ k 是个给定的正数， B k 是一个对称正定矩阵，那么QP子问题(3.3)有唯一最优解。 现假设问题(3.3)的唯一最优解为 d z k = ( d x k , d y k , d w k ) ，通过对罚函数 φ 作线搜索，得到下一个迭代点 z k + 1 = ( x k + 1 , y k + 1 , w k + 1 ) ，也就是说对于给定的参数 ρ , σ ，满足 0 < ρ < 1 , 0 < σ < 1 ，第 k + 1 次迭代点 z k + 1 = z k + α k d z k ，其中 α k 是步长因子，令 α k = δ m k ， m k 是使得下列不等式成立的最小的非负整数： φ ( z k + δ m k d z k , ε , μ k ) ≤ φ ( z k , ε , μ k ) + σ δ m k φ ′ ( z k , ε , μ k ; d z k ) . (3.9) 下面给出求解问题(1.1)的SQP算法。 算法3.1 步骤0. 选取初始点 z 0 = ( x 0 , y 0 , z 0 ) ∈ X 0 ，参数 ξ , μ 0 , ε − 1 ∈ ( 0 , + ∞ ) ， B 0 ∈ R n + 2 m × R n + 2 m 。 选取序列 { μ k } k = 0 ∞ 满足 μ k > 0 , μ k + 1 < μ k , lim k → ∞ μ k + 1 μ k ζ = η ，其中 0 < η < 1 , 1 < ζ < 2 ，令 k = 0 。 步骤1. 求解QP子问题(3.3)得唯一最优解 d z k = ( d x k , d y k , d w k ) 以及相应的乘子 ( λ k , l k , m k ) ，如果 d z k = 0 ，则令 z k + 1 = z k ， ε k = ε k − 1 ，转到步骤4。 步骤2. 调整罚参数，计算 ε k = { ε k − 1 ,                                                                   ε k − 1 ≥ ‖ c k ‖ ∞ + ξ , max { ‖ c k ‖ ∞ + ξ , ε k − 1 + 2 ξ } ,         ε k − 1 < ‖ c k ‖ ∞ + ξ , (3.10) 其中 ‖ c k ‖ ∞ = max 1 ≤ i ≤ m | c i k | 。 步骤3. 对函数 φ ( ⋅   , ε k , μ k ) 按(3.10)做Armijo先搜索求得步长 α k ,令 z k + 1 = z k + α k d z k 。 步骤4. 如果 d z k = 0 ，停止；否则，令 μ k + 1 = β μ k ，更新修正 B k ，得新的对称正定阵， B k + 1 ∈ R ( n + 2 m ) × ( n + 2 m ) ，令 k = k + 1 ，返回步骤1。 引理3.2 若假设H2.1成立， ( x k , y k , w k ) ∈ X 0 ， μ k > 0 ， B k 是对称正定阵，假设 d z k = ( d x k , d y k , d w k ) 是子问题(3.3)的唯一最优解，相应的KKT乘子为 ( λ k , l k , m k ) ，若 ε k ≥ ‖ c k ‖ ∞ ，有 φ ′ ( z k , ε k , μ k ; d z k ) ≤ ( − d z k ) T B k d z k < 0 (3.11) 成立，且对任意的 ρ ∈ ( 0 , 1 ) ，存在 ρ ¯ > 0 ，使得对于所有的 ρ ∈ ( 0 , ρ ¯ ) ，有 φ ( z k + ρ d z , ε , μ k ) ≤ φ ( z k , ε , μ k ) + σ ρ φ ′ ( z k , ε , μ k ; d z k ) . (3.12) 证明：由(3.5)有 D y k d y k + D w k d w k + Φ ( y k , w k , μ k ) = 0 , ( ∇ y ϕ ( y i , w i , μ ) ∇ w ϕ ( y i , w i , μ ) ) T ( d y i k d w i k ) + Φ ( y i k , w i k , μ ) = 0. (3.13) 由(2.10)和(2.11)有 φ ′ ( z k , ε k , μ k ; d z k ) = ∇ f ( x k     y k ) T ( d x k d y k ) − ε k ∑ | ϕ ( y k , w k , μ k ) |   . (3.14) 由(3.6)得 ∇ f ( x k     y k ) T ( d x k d y k ) + ( λ k ) T A d x k + ( d z k ) T B k d z k + ( l k ) T ( N d x + M d y − d w k ) + ( m k ) T ( D y k d y k + D w k d w k ) = 0 , 故 ∇ f ( x k     y k ) T ( d x k d y k ) + ( d z k ) T B k d z k − ( m k ) T Φ ( y k , w k , μ k ) = ( λ k ) T ( A x − b ) ≤ 0. (3.15) 由(3.14)，(3.15)有 φ ′ ( z k , ε k , μ k ; d z k ) ≤ − ( d z k ) T B k d z k + ∑ i ∈ I + k ( c i k − ε k ) ϕ ( y i k , w i k , μ k ) + ∑ i ∈ I − k ( c i k + ε k ) ϕ ( y i k , w i k , μ k ) , 其中 I + k , I − k 分别定义如下： I + k = { i : ϕ ( y i k , w i k , μ k ) > 0 } , I − k = { i : ϕ ( y i k , w i k , μ k ) < 0 } . 又由(3.10)及 ε k ≥ ‖ c k ‖ ∞ ，有 φ ′ ( z k , ε k , μ k ; d z k ) ≤ ( − d z k ) T B k d z k < 0. 由(2.10)，(3.10) (3.11)和(3.14)易得(3.13)成立."
"本节分析算法的收敛性，为此，我们对对称正定矩阵 B k 以及算法产生的无穷点列 { z k } 作如下基本假设： H4.1 无穷点列 { z k } 有界。 H4.2 若H4.1成立，序列 { z k } 的每个极限点 z ∗ = ( x ∗ , y ∗ , w ∗ ) ，满足下层非退化条件： ( y ∗ , w ∗ ) ≠ ( 0 , 0 ) , i = 1 , ⋯ , m . H4.3 存在常数 a , b > 0 ，有 a ‖ z ‖ 2 ≤ z T B k z ≤ b ‖ z ‖ | 2 ,     ∀ z ∈ R n + 2 m , k = 1 , 2 , ⋯ . 根据上面的几个假设，有以下引理成立. 引理4.1 [ 5 ] 如果假设H4.1~H4.3成立，则 1) 存在一个常数 C > 0 ，有 ‖ ( M − I D y k D W k ) − 1 ‖ ≤ C ,     ∀ k ∈ K . 2) 序列 { ( λ k , l k , m k ) } ， { d z k } 有界。 3) 存在一个正整数 k 0 ，使得 ε k = ε k 0 = ε , ∀ k ≥ k 0 。 命题4.2 [ 6 ] 若数列 { v k } , { γ k } 满足 v k ≥ 0 ,     ∑ k = 1 ∞ v k < ∞ ,     γ k + 1 ≤ γ k + v k ,     k = 1 , 2 , ⋯ . (4.1) 则 1) 数列 { γ k } 有上界。即 lim k → ∞ _ _ _ _ γ k < + ∞ ; 2) 数列 { γ k } 整列收敛。 命题4.3 若H4.1成立，则对任意的 δ 1 > δ 2 > 0 ，点列 ( y k , w k ) ∈ R 2 ，有不等式 | ϕ ( y k , w k , δ 2 ) | ≤ | ϕ ( y k , w k , δ 1 ) | + 2 ( ln 2 + M ˜ δ 2 ) δ 1 成立。 证明：存在一个 δ ¯ > 0 ，且 δ 1 < δ ¯ < δ 2 ，由中值定理，有 | ϕ ( y k , w k , δ 2 ) | ≤ | ϕ ( y k , w k , δ 1 ) + ϕ ′ μ ( y k , w k , δ ¯ ) ( δ 2 − δ 1 ) | ≤ | ϕ ( y , w , δ 1 ) | + [ ln ( 1 + e − y μ ) + y μ ⋅ e − y μ 1 + e − y μ + ln ( 1 + e − w μ ) + w μ ⋅ e − w μ 1 + e − w μ ] ( δ 2 − δ 1 ) ≤ | ϕ ( y , w , δ 1 ) | + [ 2 ln 2 + 1 μ ( y μ + w μ ) ] ( δ 2 − δ 1 ) ≤ | ϕ ( y , w , δ 1 ) | + [ 2 ln 2 + 2 μ 2 max { y , w } ] ( δ 2 − δ 1 ) ≤ | ϕ ( y , w , δ 1 ) | + 2 [ ln 2 + 1 δ max { y , w } ] ( δ 2 − δ 1 ) ≤ | ϕ ( y k , w k , δ 1 ) | + 2 ( ln 2 + M ˜ δ 2 ) δ 1 . 由引理3.2，命题4.2及命题4.3易知有以下结论成立. 引理4.2 若H4.1成立，则 lim k → ∞ φ ( z k , ε k , μ k ) = lim k → ∞ φ ( z k + 1 , ε k , μ k ) = φ ( z ∗ , ε , 0 ) . 由引理4.1(2)，不妨做如下假设： d z k = d z ∗ = ( d x ∗ , d y ∗ , d w ∗ ) , x k → x ∗ , B k → B ∗ , l k → l ∗ , m k → m ∗ , k ∈ K . (4.2) 利用上述引理及假设,来证明本文的算法具有全局收敛性。 引理 4.3 若假设H 4.1-H4.3成立，则序列 { d z k } 收敛到0，即 lim k ∈ K d z k = d z ∗ = 0. (4.3) 证明：我们用反证法来证明，假设 d z ∗ ≠ 0 。 由(3.12)有 φ ′ ( z ∗ , ε , 0 ; d z k ) = − ( d z ∗ ) T B ∗ d z ∗ < 0. 当 k → ∞ ，序列 { z k } 收敛于 z ∗ ，记 lim k ∈ K φ ′ ( z k , ε , μ k ; d z k ) = φ ′ ( z ∗ , ε , 0 ; d z ∗ ) . 考虑算法步骤3的线搜索，步长 α 在K上有界，且远大于0，设 α k ≥ α ∗ = inf ( α k , k ∈ K ) > 0 ,     k ∈ K . 又由序列 { φ ( z k , ε , μ k ) } 为单调递减序列，当 μ k 固定时，由序列 { z k } 是收敛到 z ∗ 的,及函数 φ 的连续性，当 k → ∞ 时，有 φ ( z k , ε , μ k ) → φ ( z ∗ , ε , 0 ) 。 由(3.9)及引理2.4.1(3)，有 0 = lim k ∈ K ( φ ( z k + 1 , ε , μ k ) − φ ( z k , ε , μ k ) ) ≤ lim k ∈ K δ α φ ′ ( z k , ε , μ k ; d z k ) ≤ 1 2 δ α ∗ φ ′ ( z k , ε , 0 ; d z k ) , 当 k ∈ K , k → ∞ 时。这与(3.12)矛盾，从而假设 d z ∗ ≠ 0 不成立，即(4.3)成立. 定理4.1 H4.1~H4.3成立，则算法3.1产生的点列 { z k } ，它的每一个聚点 z ∗ = ( x ∗ , y ∗ , w ∗ ) 都是问题(1.1) 的稳定点，即本文的算法是全局收敛的。 证明：由已知，序列 { z k } 是个无穷序列， z k → z ∗ ，有 z ∗ ∈ X 0 ,即 A x ∗ ≤ b ,     w ∗ = N x ∗ + M y ∗ + q , 由(2.7)和(3.3)有 ∇ f ( x ∗ , y ∗ ) + A T λ ∗ + N T l ∗ = 0 , M T l ∗ + D y ∗ m ∗ = 0 , l ∗ = D w ∗ m ∗ , 0 ≤ λ ∗ ⊥ ( b − A x ∗ ) ≥ 0 , lim k → ∞ Φ ( a , b , μ k ) = min ( a , b ) = 0 , (4.4) 其中 D y ∗ ， D w ∗ 定义为 D y ∗ = d i a g ( ∇ y i ϕ ( y i ∗ , w i ∗ , 0 ) , i = 1 , ⋯ , m ) , D w ∗ = d i a g ( ∇ w i ϕ ( y i ∗ , w i ∗ , 0 ) , i = 1 , ⋯ , m ) . 由(2.2)和(3.11)有 0 ≤ w ∗ ⊥ y ∗ ≥ 0 , 又 z ∗ ∈ X 0 ，从而有 z ∗ ∈ X 。 综上所述， z ∗ 是问题(1.1)的稳定点。"
"本文提出了求解均衡约束优化问题的算法，在这一节我们将对这个算法进行数值试验，利用MATLAB软件算法进行了数值实验，通过实验说明这个算法具有有效性和可行性. 算法中的矩阵 B k 是Lagrange函数 L ( z , μ ) = f ( z ) + ∑ j = 1 m μ j g j ( z , μ ) 的二阶Hessian阵的近似估计。矩阵 B k 采用BFGS公式修正： B k + 1 = B k − B k s ^ k ( B k s ^ k ) T s ^ k T B k s ^ k + η ^ k η ^ k T s ^ k T η ^ k , 其中 s ^ k = z k + 1 − z k ,   η ^ k = θ k γ ^ k + ( 1 − θ ) B k s ^ k ，这里 γ ^ k = ∇ L z ( z k + s ^ k , μ k ) − ∇ L z ( z k , μ k ) , θ = { 1 ,       s ^ k γ ^ k ≥ 0.2 s ^ k T B k s ^ k 0.8 s ^ k T B k s ^ k s ^ k T B k s ^ k − s ^ k γ ^ k , 否 则 . 分别选取参数 ξ = 10 ， ε 0 = 10 ， B 0 为 ( n + 2 m ) × ( n + 2 m ) 的单位阵. 问题1 min       f ( x ) = 1 2 x 2 + 1 2 x y − 95 x s .t .           0 ≤ x ≤ 200 ,                   0 ≤ w ⊥ y ≥ 0. 问题2 min       f ( x ) = 1 2 [ ( x 1 + x 2 + y 1 − 15 ) 2 + ( x 1 + x 2 + y 2 − 15 ) 2 ] s .t .           0 ≤ x ≤ 10 ,                   w = N x + M y + q ,                   0 ≤ w ⊥ y ≥ 0 ,                   ( x , y , w ) ∈ R 2 × R 2 × R 2 . 其中 q = ( − 36 − 25 ) ,   M = ( 2 8 / 3 5 / 4 2 ) ,   N = ( 8 / 3 2 2 5 / 4 ) . 问题3 min     f ( x , y ) = 1 2 ( x 1 + 3 y 1 − 4 y 2 − 5 ) 2 + ( x 2 − 15 8 y 1 + 3 y 2 − 9 ) 2 s .t .         0 ≤ x 1 ≤ 10 ,                 0 ≤ x 2 ≤ 10 ,                 0 ≤ y ⊥ [ ( 0 − 1 − 1 0 ) T x + ( 3 − 15 8 − 4 3 ) T y + ( 10 6 ) ] ≥ 0. 问题4 min       f ( x ) = 1 2 x T x + e T y s .t .           A x ≤ b ,                   w = N x + M y + q ,                   0 ≤ w ⊥ y ≥ 0. 其中， M ∈ R m × m , N ∈ R m × n , A ∈ R p × n 分别为随机产生的矩阵，矩阵M严格对角占优的，是P矩阵，其非对角线上的非负向量 q ∈ R m , b ∈ R p 是随机产生的，对于单位向量 e ∈ R n , A , b 满足 A e < b 。 表1和表2是算法3.1的数值实验结果。 Table 1NO ( x 0 , y 0 ) k ( x ∗ , y ∗ ) f ( x * , y * ) ‖ d z k ‖ 1 (0, 0) 13 (93.33333333333336, 26.66666666666664) -3.266666666666669e+003 9.300000000000003e-012 2 (0, 0) 7 (5.00000000000006 9.99999999999994, -0.00000000000000 0.00000000000000) 1.262177448353619e-029 1.010000000000000e-008 3 (0, 0) 3 (5.00000000000000, 9.00000000000000, 0.00000000000000, 0.00000000000000) 0 2.500000000000000e-009 表1. 问题1~问题3的数值实验结果 Table 2NO. ( p , m , n ) 初始点 迭代次数 最优值 ‖ d z k ‖ 4 (30, 30, 50) (ones, zeros) 48 6.376485162e-016 4.207400000e-8 4 (50, 60, 50) (ones, zeros) 56 4.721785683e-014 1.621502153e-6 4 (100, 60, 60) (ones, zeros) 72 8.190904715e-016 3.100586202e-6 表2. 问题4的数值实验结果 在表1和表2中，NO.表示问题的编号， ( p , m , n ) 分别表示x的维数，m表示y的维数，n表示约束的个数。 ‖ d z k ‖ 表示终止时， ‖ d z k ‖ 的对应值。数值实验表明本文的算法3.1是有效的。"
