"本文考虑一类非凸非光滑优化问题，提出了一种惯性邻近交替极小化算法。通过构造一个新的效益函数H，并保证其具有下降性，证明了算法的全局收敛性。当H为Kurdyka-Lojasiewicz函数时，证明了算法的强收敛性。 关键词 :非凸非光滑，Kurdyka-Lojasiewicz性质，惯性，交替极小化方法 Copyright © 2019 by author(s) and Hans Publishers Inc. This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/"
"本文考虑如下非凸非光滑优化问题： min x , y   L ( x , y ) = f ( x ) + g ( y ) + R ( x , y ) (1) 其中 f : ℝ n → ℝ ∪ { ∞ } ， g : ℝ m → ℝ ∪ { ∞ } 为正常下半连续函数， R : ℝ n × ℝ m → ℝ 连续可微。这一模型广泛应用于信号恢复、图像处理等问题。 求解问题(1)的常用方法是基于Gauss-Seidel迭代的交替极小化方法，迭代形式如下： { x k + 1 ∈ arg min { L ( x , y k ) : x ∈ ℝ n } , y k + 1 ∈ arg min { L ( x k + 1 , y ) : y ∈ ℝ m } (2) 在凸的情况下， [ 1 ] 证明当 L ( x , y ) 连续可微，且关于x或y严格凸时，序列 { ( x k , y k ) } 的每一个极限点都是 L ( x , y ) 的稳定点。 [ 2 ] 通过引入正则项去掉了 [ 1 ] 中的严格凸条件，提出邻近交替极小化方法(PAM)，迭代格式如下： { x k + 1 ∈ arg min x { L ( x , y k ) + c k 2 ‖ x − x k ‖ 2 } , y k + 1 ∈ arg min y { L ( x k + 1 , y ) + d k 2 ‖ y − y k ‖ 2 } 对于问题(1)，本文在惯性思想的启发下，结合邻近交替极小化方法，提出一种惯性邻近交替极小化算法。惯性思想最早由Alvarez [ 3 ] 提出，用来解决动力系统问题。惯性思想是指为了得到下一步迭代点需要用到当前迭代点与上一步迭代点的信息，其优点是加快收敛速度。近年来，这一惯性类型的算法越来越受关注。如惯性向前向后分裂算法 [ 4 ] [ 5 ] ，惯性Douglas-Rachford 分裂算法 [ 6 ] ，惯性ADMM [ 7 ] 等。"
"本节列出本文用到的基本概念及性质。 设 η ∈ ( 0 , + ∞ ] ，记 Φ η 为满足如下条件的凹可微函数 φ : [ 0 , η ) → [ 0 , + ∞ ) 的集合 (i) φ = 0 ； (ii) φ 在 ( 0 , η ) 上连续； (iii) φ ′ ( s ) > 0 ， ∀ s ∈ ( 0 , η ) 。 定义1 (Kurdyka-Lojasiewicz性质)设 σ : ℝ d → ( − ∞ , + ∞ ] 是正常下半连续函数。 (i) 设 u ¯ ∈ dom   ∂ σ : = { u ∈ ℝ d : ∂ σ ( u ) ≠ ∅ } ，若存在 η ∈ ( 0 , + ∞ ] ， u ¯ 的一个邻域U及 φ ∈ Φ η 有 φ ′ ( σ ( u ) − σ ( u ¯ ) ) dist ( 0 , ∂ σ ( u ) ) ≥ 1 ， ∀ u ∈ U ∩ [ σ ( u ¯ ) < σ ( u ) < σ ( u ¯ ) + η ] 则称 σ 在 u ¯ 处有Kurdyka-Lojasiewicz (KL)性质。 (ii) 若 σ 在 dom   ∂ σ 中的每一点都满足KL性质，则称 σ 为KL函数。 引理1 (一致Kurdyka-Lojasiewicz性质)设集合 Ω 是紧集， σ : ℝ d → ℝ ∪ { ∞ } 是正常下半连续函数。若 σ 在 Ω 上为常数，且在 Ω 的每一点处都满足KL性质。设 u ¯ ∈ Ω ，则存在 ε > 0 , η > 0 , φ ∈ Φ η 使得 φ ′ ( σ ( u ) − σ ( u ¯ ) ) dist ( 0 , ∂ σ ( u ) ) ≥ 1 ， ∀ { u ∈ ℝ d : d ( u , Ω ) < ε } ∩ { σ ( u ¯ ) < σ ( u ) < σ ( u ¯ ) + η } 引理2 [ 8 ] h : ℝ n → ℝ 是连续可微函数， ∇ h Lipschitz连续(Lipschitz常数为L)，则对任意 x , y ∈ ℝ n ，有 | h ( y ) − h ( x ) − 〈 ∇ h ( x ) , y − x 〉 | ≤ h 2 ‖ y − x ‖ 2"
"本文需要如下假设条件： 假设1 (i) inf L ( x , y ) = f ( x ) + g ( y ) + R ( x , y ) > − ∞ , (ii) 对任意固定的y， ∇ x R ( x , y ) 关于x是Lipschitz连续的， L 1 ( y ) 为Lipschitz常数，即 ‖ ∇ x R ( x 1 , y ) − ∇ x R ( x 2 , y ) ‖ ≤ L 1 ( y ) ‖ x 1 − x 2 ‖ ,     ∀ x 1 , x 2 ∈ ℝ n (iii) 对任意固定的x， ∇ y R ( x , y ) 关于y是Lipschitz连续的， 为Lipschitz常数，即 (iv) 存在 ，使得 ， 。 (v) 在 的有界子集上Lipschitz连续，即对任意有界集 ， ，使得 ， ，有 惯性邻近交替极小化算法(IPAM)： 步0. 给定初始点 ，选取 ， 。 步1. 令 ，计算 (3) 步2. 取 ，并计算 (4) 步3. 令 ，计算 (5)"
"记 为惯性邻近交替极小化算法产生的序列。  引理3：若假设1成立，则 (6) 其中 ， ， 。 证明：由(3)，(5)知， (7) (8) 由引理2得 将上述不等式代入(7)，(8)得 以上两式相加得 由不等式 ， ， ，及假设(v)可知， 进一步由 ， 及假设(ii)，得 移项后可证得(6)式成立。 注1. 若参数 满足下列不等式条件 则有 ，且 。 注2. 记 , 。则有 (9) 其中 。  引理4：若假设1成立， 有界，令 (10) 则 ， 。更进一步，存在常数 ，使得 证明：由最优性条件可知， 因此， 根据函数H的定义，得 故 。 由假设1(v)，得 因此，存在 ，使得 。 引理5：若假设1成立， 有界，则 。 证明：由假设1(i)知 有下界，故 也有下界，再由注2， 非增。根据单调有界定理可知， 收敛，其极限为 。 令N为正整数，将(9)式从 到相加 ，得 令N趋于无穷，得 故 ， 。 又 因此， 。  记 为序列 的一个极限点， 。 定理1：设 为序列 的极限点集。若假设1成立， 有界，则有以下结论成立 (i) 是非空紧的连通集，且 ， (ii) ， (iii) 当且仅当 时， ， (iv) ， (v) H在 上恒为常数。 证明：(i) 证明可参照文献 [ 9 ] 引理5。 (ii) 对任意 ，则存在一个子序列 ，有 。由f的下半连续性，有 。 再由 的定义得， 取 ，有 (11) 在引理5的证明中得， 。 而 ，对(11)式中的 取上极限，得 。因此， 。同样地， 。根据R的连续性， 。故 由引理4及(10)知 ， ( )。再由 的闭性，有 。因此， 。 (iii) 由引理5及 的定义，结论得证。 (iv) 由引理4及引理5知 ， ， 。则 ( )，再由 的闭性，有 ，即 。 (v) 记 ，(h为常数)。对任意 ，则存在一个子序列 ，使得 。再根据(iii)证明过程中所得 。于是， ，即H在 上恒为常数。 定理2：假设H是Kurdyka-Lojasiewicz函数， 有界，则 (i) ， (ii)序列 收敛到L的一个稳定点 。 证明：由定理1， ， 。接下来，将分成两种情况证明。 Case1. 存在一个正整数 ，使得 。由注2知 ， ，则 ， 。于是，定理得证。 Case2. 对所有 ，有 。根据极限的定义，由 ，则对给定 ， ， ，使得当 时，有 。由定理1(i)，即对给定 ， ， ，使得当 时，有 。于是，对给定 ，有 ， ， 。 (i) 由引理1，则 ，有 由 的凹性， (12) 记 。利用注2，结合(12)式，有 移项后，不等号两边同时开方，根据不等式 得 (13) 再由 得 将(13)式代入上式，得 将上式从 相加得 因为 ，则 于是， 令N趋于无穷，得 故 ， 。 于是， ， 因此， 。 (ii) 由(i)可知 为柯西序列，故收敛。由定理1，可知 收敛到L的一个稳定点。"
"为了验证算法的有效性与可行性，本节应用惯性邻近交替极小化算法(IPAM)及邻近交替极小化算法(PAM)求解 问题。数值试验过程均由MATLAB(2014a)实现，程序运行环境为：Windows 7 (64 bite)，RAM：4G，CPU：@ 1.60 GHz 2.30 GHz。 在压缩感知中，基础的问题是从m个不完全实验数据中恢复一个n维的稀疏信号x，( )。该问题可转化为如下模型： 或正则化形式 其中 是实验矩阵， 是观察信号， 是正则化参数， 表示x中非零元素的个数。一般情况下，上述模型是NP难问题。为了克服这一困难，可以用 拟范数来松弛 问题，考虑下述问题 其中 。通过引入一个新的变量 ，将问题转化为带约束的问题 再用罚函数方法将上述问题转化为问题(1)的形式 (14) 利用IPAM求解问题(14)，有 其中 被称为half-shrinkage算子 [ 10 ] 。 利用PAM求解问题(14)，有 在试验过程中，选取 ，并正则化每一列，随机生成含有100个非零元素的稀疏向量 ，每一个样本都服从正态分布。向量 ，其中 ，正则化参数 ，其中 。选取参数如下： ， ， ， ， ， 。除 外的其他参数，两种算法选取相同的参数值。终止准则为 为给定的误差值。计算两种算法在不同情况下分别所需的迭代次数，迭代时间及目标函数值。由图1可知，IPAM与PAM目标函数都趋于一个固定值，说明两种算法都收敛。且由表1知，IPAM比PAM运行时间更少，收敛速度更快。 Table 1 维数 IPAM PAM m n iter time(s) I-obj iter time(s) P-obj 900 1000 110 14.96 2.42 123 17.72 2.50 1000 1100 105 19.14 2.25 121 26.35 2.28 1000 1200 97 21.97 2.64 118 27.97 2.64 1000 1300 129 35.33 2.68 149 40.77 2.79 1000 1400 102 31.2 2.67 123 38.86 2.79 1500 2000 99 86.32 2.68 119 102.25 2.72 2000 3000 99 253.72 2.78 121 310.16 2.87 表1. 数值结果 图1. 目标函数随迭代次数变化趋势"
