<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">PM</journal-id><journal-title-group><journal-title>Pure  Mathematics</journal-title></journal-title-group><issn pub-type="epub">2160-7583</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/PM.2021.114062</article-id><article-id pub-id-type="publisher-id">PM-41581</article-id><article-categories><subj-group subj-group-type="heading"><subject>PM20210400000_53597144.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于广义近似交替方向乘子法求解可分离凸优化问题
  Solving Separable Convex Optimization Problem Based on Generalized Proximal Alternating Direction Method of Multipliers
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>殷</surname><given-names>倩雯</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>党</surname><given-names>亚峥</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>向</surname><given-names>浩东</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>上海理工大学管理学院，上海</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>12</day><month>04</month><year>2021</year></pub-date><volume>11</volume><issue>04</issue><fpage>485</fpage><lpage>495</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    本文提出了一种广义近似交替方向乘子法(gPADMM)来求解可分离凸优化问题。和近似邻近点算法(APPA)和扩展邻近交替方向方法(ePADM)相比，新算法不仅更新自定义矩阵的结构，而且引入随机变量进行随机加速更新步长，从而克服了旧算法固定步长的不灵活性。在某些适当的假设条件下，本文证明了新算法的全局收敛性，并且初步数值实验表明该算法是有效的，收敛速度比旧算法更快。
    In this paper, we propose a generalized-proximal alternating direction method of multipliers (gPADMM) for separable convex optimization problem. Compared with the approximate proximal point algorithm (APPA) and the extend proximal alternating directions method (ePADM), the new algorithm not only updates the structure of customed matrix, but also induces random variables for random acceleration to update the step length, which overcomes the inflexibility of the old al-gorithms' fixed step length. We prove the global convergence of the new algorithm under certain mild conditions. And preliminary numerical experiments show that the algorithm is effective and the gPADMM converges faster than the old algorithms. 
  
 
</p></abstract><kwd-group><kwd>广义近似交替方向乘子法，可分离凸优化，随机加速，全局收敛, Generalized-Proximal Alternating Direction Method of Multipliers</kwd><kwd> Separable Convex Optimization</kwd><kwd> Random Acceleration</kwd><kwd> Global Convergence</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>本文提出了一种广义近似交替方向乘子法(gPADMM)来求解可分离凸优化问题。和近似邻近点算法(APPA)和扩展邻近交替方向方法(ePADM)相比，新算法不仅更新自定义矩阵的结构，而且引入随机变量进行随机加速更新步长，从而克服了旧算法固定步长的不灵活性。在某些适当的假设条件下，本文证明了新算法的全局收敛性，并且初步数值实验表明该算法是有效的，收敛速度比旧算法更快。</p></sec><sec id="s2"><title>关键词</title><p>广义近似交替方向乘子法，可分离凸优化，随机加速，全局收敛</p></sec><sec id="s3"><title>Solving Separable Convex Optimization Problem Based on Generalized Proximal Alternating Direction Method of Multipliers</title><p>Qianwen Yin, Yazheng Dang<sup>*</sup>, Haodong Xiang</p><p>Business School, University of Shanghai for Science and Technology, Shanghai</p><p><img src="//html.hanspub.org/file/9-1251235x5_hanspub.png" /></p><p>Received: Mar. 6<sup>th</sup>, 2021; accepted: Apr. 8<sup>th</sup>, 2021; published: Apr. 15<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/9-1251235x6_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>In this paper, we propose a generalized-proximal alternating direction method of multipliers (gPADMM) for separable convex optimization problem. Compared with the approximate proximal point algorithm (APPA) and the extend proximal alternating directions method (ePADM), the new algorithm not only updates the structure of customed matrix, but also induces random variables for random acceleration to update the step length, which overcomes the inflexibility of the old algorithms' fixed step length. We prove the global convergence of the new algorithm under certain mild conditions. And preliminary numerical experiments show that the algorithm is effective and the gPADMM converges faster than the old algorithms.</p><p>Keywords:Generalized-Proximal Alternating Direction Method of Multipliers, Separable Convex Optimization, Random Acceleration, Global Convergence</p><disp-formula id="hanspub.41581-formula30"><graphic xlink:href="//html.hanspub.org/file/9-1251235x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/9-1251235x8_hanspub.png" /> <img src="//html.hanspub.org/file/9-1251235x9_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>本文考虑一个具有如下形式的可分离凸优化问题</p><p>min { f ( x ) + g ( y ) | A x + B y = b , x ∈ X , y ∈ Y } , (1.1)</p><p>其中 X ⊂ R n 1 , Y ⊂ R n 2 是有界闭合的、凸的、非空集合， f : X → R 和 g : Y → R 是凸函数(不一定是平滑函数)。 A ∈ R m &#215; n 1 , B ∈ R m &#215; n 2 是给定的矩阵， b ∈ R m 是一个向量。</p><p>Glowinski [<xref ref-type="bibr" rid="hanspub.41581-ref1">1</xref>] 和Gabay [<xref ref-type="bibr" rid="hanspub.41581-ref2">2</xref>] 证明了基于增广拉格朗日方法(ALM)的交替方向乘子方法对于问题(1.1)是非常有效的。针对问题(1.1)，ALM算法的迭代形式为</p><p>{ x k + 1 = arg min x ∈ X { f ( x ) + β 2 ‖ A x + B y k − b − 1 β λ k ‖ 2 } , y k + 1 = arg min x ∈ X { g ( y ) + β 2 ‖ A x k + 1 + B y − b − 1 β λ k ‖ 2 } , λ k + 1 = λ k − β ( A x k + 1 + B y k + 1 − b ) . (1.2)</p><p>Gabay [<xref ref-type="bibr" rid="hanspub.41581-ref3">3</xref>] 表明ADMM算法在本质上是Douglas-Rachford分裂方法的一种应用 [<xref ref-type="bibr" rid="hanspub.41581-ref4">4</xref>]。Cai，Gu和He在文献 [<xref ref-type="bibr" rid="hanspub.41581-ref5">5</xref>] 中提供了一种新颖简单的邻近点算法(PPA)来解释ADMM算法，并提出了一种广义的ADMM算法(gADMM)，即它首先产生了一个预测算子，形式如下：</p><p>{ x ˜ k = arg min x ∈ X { f ( x ) + β 2 ‖ A x + B y k − b − 1 β λ k ‖ 2 } , λ ˜ k = λ k − β ( A x ˜ k + B y k − b ) , y ˜ k = arg min y ∈ Y { g ( y ) + β 2 ‖ A x ˜ k + B y − b − 1 β λ ˜ k ‖ 2 } , x k + 1 = x ˜ k , y k + 1 = y k − γ ( y k − y ˜ k ) , λ k + 1 = λ k − γ ( λ k − λ ˜ k ) ,     γ ∈ ( 0 , 2 ) . (1.3)</p><p>其中新的迭代步表示为 w k + 1 = ( x k + 1 , y k + 1 , λ k + 1 ) 。自定义矩阵表示为：</p><p>Q = ( 0 n 1 &#215; n 1 0 n 1 &#215; n 2 0 n 1 &#215; m 0 n 2 &#215; n 1 β B T B − B T 0 m &#215; n 1 − B − 1 β I m )</p><p>通过以上分析，可以发现针对问题(1.1)，ADMM算法有许多变体。进一步研究得到，文献 [<xref ref-type="bibr" rid="hanspub.41581-ref6">6</xref>] 中提出了DRSM算法并在 [<xref ref-type="bibr" rid="hanspub.41581-ref7">7</xref>] 中被进一步解释为邻近点算法的应用。Jiang, B. Q.，Peng, Z.，Deng, K. K.提出了两种新颖的定制邻近点算法，在 [<xref ref-type="bibr" rid="hanspub.41581-ref8">8</xref>] 中将建立所提出方法的全局收敛性和O (1/k)收敛速率。因此，在 [<xref ref-type="bibr" rid="hanspub.41581-ref6">6</xref>] 中建议对PPA应用 [<xref ref-type="bibr" rid="hanspub.41581-ref9">9</xref>] 中提出的加速方案来加速原始ADMM。最近， [<xref ref-type="bibr" rid="hanspub.41581-ref10">10</xref>] 中的工作表明了开发下降型方法求解的可能性，其下降方向是从ADM生成的迭代中得出的。在 [<xref ref-type="bibr" rid="hanspub.41581-ref11">11</xref>] 中，李、袁等人考虑将广义交替方向乘子法与对数-二次近端正则化相结合，以解决具有可分离结构的变分不等式问题(VI)，并建立由在遍历和非遍历意义上的迭代复杂度。袁晓明提出了一种改进的基于PADM的下降方法，该方法继承了 [<xref ref-type="bibr" rid="hanspub.41581-ref12">12</xref>] 中ADM，PPA和下降类型方法的所有优点。在 [<xref ref-type="bibr" rid="hanspub.41581-ref13">13</xref>] 中，徐使用服从高斯分布的随机数来随机扩展步长，并针对一类变分不等式提出了随机步长收缩方法。但是，在某些实际应用中，宽松的步骤可能是不可接受的，甚至是不被允许的。</p><p>为了应对这些实际情况，本文修改了预测步长，并采用随机变量来更新步长，而不是放松固定步长。然后，提出了广义的邻近交替方乘子向法。在一些适当的假设下，本文证明了算法的收敛性。同时，本文通过数值实验，还验证了与以前提出的某些算法相比，新算法在实践中具有更好的数值性能。</p><p>本文的其余部分安排如下。本文的第2节描述了一些相关的基础知识和引理，以便后续证明。在第3节中，本文针对问题(1.1)提出了广义近邻交替方向乘子方法。所提方法的收敛性将在第4节中得到证明。在第5节中，与以前提出的算法相比，一些初步的数值结果被提出来表明新方法的高效率。第六部分总结了本文的一些结论。</p></sec><sec id="s6"><title>2. 预备知识</title><p>本节给出了将在后续当中使用的一些预备知识。贯穿全文，本文将 ‖ u ‖ = u T u 表示为Educlidean范数，而 〈 ⋅ , ⋅ 〉 表示为内积。令 Ω ∈ R m &#215; R n &#215; R r 是R上的一个非空闭合子集。当 P Ω 的可行集Ω是非负正数 R + N 时，向量 x ∈ R 的每个分量i的投影很简单，表示为 ( P Ω [ x ] ) i = max { 0 , x i } 。</p><p>引理2.1 令 ζ &gt; 0 为常数，C为非空封闭的凸集。当且仅当</p><p>x ∗ = P C [ x ∗ − ζ f ( x ∗ ) ] ,           x * ∈ C</p><p>是 VI ( f , C ) 的最优解。</p><p>记   e ( x , ζ ) = x − P C [ x − ζ f ( x ) ] 为投影方程的残差，则 VI ( f , C ) 等价于找到 e ( x , ζ ) 的零点。因此，我们可以将 ‖ ( x , ζ ) ‖ 记为算法的停止准则。下一个引理表明，对于任何 ζ &gt; 0 ， ‖ ( x , ζ ) ‖ 是一个非递减函数。</p><p>众所周知，对于任何x和y，正交投影算子 P Ω 具有以下特性：</p><p>引理2.2 [<xref ref-type="bibr" rid="hanspub.41581-ref14">14</xref>] 令 Ω ∈ R m &#215; R n &#215; R r 是一个非空闭合凸集，那么对于任意的 x , y ∈ R n ，都有</p><p>(1) 〈 x − P Ω ( x ) , P Ω ( x ) − y 〉 ≥ 0 ,   ∀ y ∈ Ω</p><p>(2) 〈 P Ω ( x ) − P Ω ( y ) , x − y 〉 ≥ 0 ,   ∀ x , y ∈ R m &#215; R n &#215; R r</p><p>(3) ‖ P Ω ( x ) − P Ω ( y ) ‖ ≤ ‖ x − y ‖ ,   ∀ x , y ∈ R m &#215; R n &#215; R r</p><p>(4) 〈 x − y , P Ω ( x ) − P Ω ( y ) 〉 ≥ ‖ P Ω ( x ) − P Ω ( y ) ‖ 2 ,   ∀ x , y ∈ R m &#215; R n &#215; R r</p><p>在许多情况下，可行集C具有以下形式： C = { x | A x + B y = b , x ∈ Q } ，其中 A , B ∈ R m &#215; n , b ∈ R m ，而Q是 R + N 的简单凸子集。基本的 VI ( f , C ) 可以转换为结构化的变分不等式问题，表示为 VI ( F , C ) ：寻找一个 u ∗ ∈ Q ，使得</p><p>F ( u ∗ ) T ( u − u ∗ ) ≥ 0 , ∀ u ∈ Q ,</p><p>其中 u : = ( x y ) ， w : = ( x y λ ) ， F ( w ) : = ( − A T λ − B T λ A x + B y − b ) 。</p><p>关于目标函数f的以下定义是非常重要的，并且会在后面证明会使用到。</p><p>定义2.3 设f为从 C → R n 的映射。如果 ( u − v ) T ( f ( u ) − f ( v ) ) ≥ 0 ,   ∀ u , v ∈ C ，那么f在C上是单调的。</p><p>如果C是 R n 的紧凸集，而 F : C → R n 是连续映射，则变分不等式问题(VIP)至少具有一个解。假设函数是单调的，那么可以保证变分不等式问题的解存在且唯一。</p><p>引理2.4 如果C是 R n 的非空闭凸集，而 F : C → R n 是一个连续映射，那么对于任给的 x , y ∈ C ，有 〈 x − y , F ( x ) − F ( y ) 〉 ≥ 0 ,   ∀ x , y ∈ C 。</p><p>定义2.5 假设序列 { X n } 是由 X 1 , X 2 , ⋯ , X n , ⋯ 组成的随机变量，如果对于任意的 ϵ &gt; 0 ，有 lim n → ∞ P { ( X n − X ) &gt; ϵ } = 0 ，那么就说序列 { X n } 以概率收敛到X，并且记为 X n → P X 。</p><p>引理2.6 马尔可夫不等式：对于任何 ϵ &gt; 0 和 r &gt; 0 ，都有</p><p>P ( | X | ≥ ϵ ) ≤ E ( | X | ) r ϵ r</p><p>引理2.7 假设 X n → P X ，那么一定有 X n k → X   a . s . (几乎必然地)。</p></sec><sec id="s7"><title>3. 算法提出</title><p>本节提出了一个gPADMM算法来解决问题(1.1)，其中问题(1.1)的增广拉格朗日形式为</p><p>L ( x , y , λ ) = θ 1 ( x ) + θ 2 ( y ) − λ T ( A x + B y − b ) + β 2 ‖ A x + B y − b ‖ 2 . (3.1)</p><p>如果 ( x * , y ) * ∈ X &#215; Y 是问题的最优解，那么存在一个 λ * ∈ R m ，使得 ( x * , y * , λ * ) 是一个鞍点，满足</p><p>{ L ( x , y * , λ * ) − L ( x * , y * , λ * ) ≥ 0 ,             ∀ x ∈ X L ( x * , y , λ * ) − L ( x * , y * , λ * ) ≥ 0 ,             ∀ y ∈ Y L ( x * , y * , λ * ) − L ( x * , y * , λ ) ≥ 0 ,             ∀ λ ∈ R m (3.2)</p><p>因此，由(3.2)得出</p><p>{ x * = arg min x ∈ X L ( x , y * , λ * ) , y * = arg min y ∈ Y L ( x * , y , λ * ) , λ * = arg min x ∈ X L ( x * , y * , λ ) . (3.3)</p><p>根据 [<xref ref-type="bibr" rid="hanspub.41581-ref12">12</xref>] 中的引理2.1，本文可以得到问题(3.3)的一阶最优条件：</p><p>{ f ( x ) − f ( x * ) − ( x − x * ) ( A T λ * ) ≥ 0 ,             ∀ x ∈ X , g ( y ) − g ( y * ) − ( y − y * ) ( B T λ * ) ≥ 0 ,             ∀ y ∈ Y , ( λ − λ * ) T ( A x * + B y * − b ) ≥ 0 ,                             ∀ λ ∈ R m , (3.4)</p><p>因此，问题的解集也可以表示为包括所有满足条件的 w * ∈ W * ，其中 W : = X &#215; Y &#215; R m ， θ ( u ) : = θ 1 ( x ) + θ 2 ( y ) 和</p><p>u : = ( x y ) ,     w : = ( x y λ ) ,       F ( w ) : = ( − A T λ − B T λ A x + B y − b ) . (3.5)</p><p>综上所述，针对可分离凸优化问题(1.1)，本文提出如下的gPADMM算法：</p><p>注3.1为了确保收敛， ξ k = ω ( a , b ) 需要满足是某个独立且均匀分布的扩展序列，并且 ξ k = ω ( a , b ) 的数学期望为 E ( ξ k ) , k = 1 , 2 , ⋯ 。另外，在整个迭代过程不需要计算 ρ ( A T A ) 或 A − 1 。</p></sec><sec id="s8"><title>4. 收敛性证明</title><p>在本节中，本文充分结合变分不等式来证明算法3.1的全局收敛性。因此，公式(3.6)可变为具有如下形式的变分不等式：</p><p>{ ( x ′ − x ˜ k ) { θ 1 ( x ˜ k ) − A T [ λ k − β ( A x ˜ k + B y k − b ) ] + ( R + S ) ‖ x ˜ k − x k ‖ 2 } ≥ 0 ,       ∀ x ′ ∈ X , ( y ′ − y ˜ k ) { θ 2 ( y ˜ k ) − B T [ λ k − β ( A x ˜ k + B y ˜ k − b ) ] + S ‖ y ˜ k − y k ‖ 2 } ≥ 0 ,       ∀ y ′ ∈ Y , λ ˜ k = λ k − β ( A x ˜ k + B y ˜ k − b ) . (4.1)</p><p>接下来将引入一些重要的引理和定理来证明算法的收敛性，如下所示。</p><p>引理4.1 令 w ˜ k = ( x ˜ k , y ˜ k , λ ˜ k ) 是由公式(3.6)生成得到，那么对于任意的 w * ∈ W * 是问题(1.1)的最优解，得到</p><p>( w k − w * ) T Q ( w k − w ˜ k ) ≥ ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T B ( y k − y ˜ k ) , (4.2)</p><p>其中 Q = ( ( R + S ) I n 1 0 n 1 &#215; n 2 0 n 1 &#215; m 0 n 2 &#215; n 1 β B T B + S I n 2 0 n 2 &#215; m 0 0 1 β I m ) 。</p><p>证明 由于 w * ∈ W * , x ˜ ∈ X 并且 y ˜ ∈ Y ，那么可知</p><p>{ ( x ˜ k − x * ) T ( θ 1 ( x * ) − A T λ * ) ≥ 0 , ( y ˜ k − y * ) T ( θ 2 ( y * ) − B T λ * ) ≥ 0. (4.3)</p><p>将(3.6)分别加入(4.3)中且算子 θ 1 和 θ 2 的单调性，得出</p><p>{ ( A x ˜ k − A x * ) T ( λ ˜ k − λ * ) + ( x ˜ k − x * ) ( R + S ) ( x k − x ˜ k ) ≥ β ( A x ˜ k − A x * ) T ( B y k − B y ˜ k ) , ( B y ˜ k − B y * ) T ( λ ˜ k − λ * ) + ( y ˜ k − x * ) S ( y k − y ˜ k ) ≥ 0 , (4.4)</p><p>因此，由(4.4) (3.6)以及 A x * + B y * = b 得知</p><p>1 β ( λ ˜ k − λ * ) T ( λ k − λ ˜ k ) + ( x ˜ k − x * ) T ( R + S ) ( x k − x ˜ k ) + ( y ˜ k − x * ) T S ( y k − y ˜ k ) ≥ β ( A x ˜ k − A x * ) T ( B y k − B y ˜ k ) , (4.5)</p><p>在(4.5)的两边同时加上 β ( B y ˜ k − B y * ) T ( B y k − B y ˜ k ) 及矩阵Q的定义和 A x * + B y * = b ，于是得到</p><p>( w ˜ k − w * ) T Q ( w k − w ˜ k ) ≥ β ( A x ˜ k + B y ˜ k − b ) T ( B y k − B y ˜ k ) ≥ ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) , (4.6)</p><p>这意味着</p><p>( w ˜ k − w * ) T Q ( w k − w ˜ k ) ≥ ‖ w k − w ˜ k ‖ Q 2 ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) .</p><p>因此，引理4.1得证。</p><p>引理4.2 令 w ˜ k = ( x ˜ k , y ˜ k , λ ˜ k ) 是由公式(3.6)生成得到，那么对于任意的 w * ∈ W * 是问题(1.1)的最优解，有</p><p>‖ w k − w * ‖ Q 2 ≥ ‖ w ˜ k − w * ‖ Q 2 + 2 ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) + ‖ w ˜ k − w k ‖ Q 2 . (4.7)</p><p>证明 由引理4.1和(3.6)式得</p><p>‖ w ˜ k − w * ‖ Q 2 = ‖ w k − w * − ( w k − w ˜ k ) ‖ Q 2 = ‖ w k − w * ‖ Q 2 + 2 ( w k − w * ) T Q ( w k − w ˜ k ) + ‖ w k − w ˜ k ‖ Q 2 ≤ ‖ w k − w * ‖ Q 2 − 2 [ ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) ] + ‖ w k − w ˜ k ‖ Q 2 ≤ ‖ w k − w * ‖ Q 2 − ‖ w k − w ˜ k ‖ Q 2 − 2 ( λ k − λ ˜ k ) T ( B y k − B y ˜ k )</p><p>因此，引理4.2证毕且公式(4.7)表明 d ( w k , w ˜ k ) = w k − w ˜ k 是 ‖ w k − w * ‖ Q 2 的下降方向。</p><p>定理4.1 假设 w * 是问题(1.1)的解，那么对任给的迭代点 w ˜ k = ( x ˜ k , y ˜ k , λ ˜ k ) ，本文定义如下的一些函数：</p><p>{ w k + 1 ( α ) = w k − α k ( w k − w ˜ k ) , θ k ( α ) = ‖ w k − w * ‖ Q 2 − ‖ w k + 1 ( α ) − w * ‖ Q 2 , φ ( w k , w ˜ k ) = ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) , ψ k ( α ) = 2 α φ ( w k , w ˜ k ) − α 2 ‖ w k − w ˜ k ‖ Q 2 . (4.8)</p><p>那么对任意的 w * = ( x * , y * , λ * ) ∈ W * , α ≥ 0 ，存在 θ k ( α ) ≥ ψ k ( α ) (4.9)</p><p>证明 由(4.8)可知</p><p>‖ w k + 1 ( α ) − w * ‖ Q 2 = ‖ w k − α k ( w k − w ˜ k ) − w * ‖ Q 2 = ‖ w k − w * ‖ Q 2 − 2 α k ( w k − w * ) T Q ( w k − w ˜ k ) + α k 2 ‖ w k − w ˜ k ‖ Q 2 ≤ ‖ w k − w * ‖ Q 2 − 2 α φ ( w k , w ˜ k ) + α 2 ‖ w k − w ˜ k ‖ Q 2 = ‖ w k − w * ‖ Q 2 − ψ k ( α ) .</p><p>因此，(4.9)得证。</p><p>从定理4.1可知 ψ k ( α ) 是 θ k ( α ) 的一个下界且 θ k ( α ) ≥ ψ k ( α ) 。由 ψ k ( α ) 的定义可知，它是关于 α 的一个二次函数，且它的最大值</p><p>α k = φ ( w k , w ˜ k ) ‖ w k − w ˜ k ‖ Q 2 = ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) ‖ w k − w ˜ k ‖ Q 2 。</p><p>也是最优的步长。</p><p>定理4.2 如果 0 &lt; a &lt; E ( ξ k ) = ρ &lt; b ，序列 { w k } 是由广义的邻近交替方向乘子法生成，那么有</p><p>E ( ‖ w k + 1 − w * ‖ Q 2 ) ≤ E ( ‖ w k − w * ‖ Q 2 ) − ρ ( 2 − p ) 4 E ( ‖ w k − w ˜ k ‖ Q 2 ) , (4.10)</p><p>证明 由引理4.1和(3.7)，我们得到</p><p>‖ w k + 1 − w * ‖ Q 2 = ‖ w k − η k α k ( w k − w ˜ k ) − w * ‖ Q 2 = ‖ w k − w * ‖ Q 2 − 2 η k α k ( w k − w * ) T Q ( w k − w ˜ k ) + ( η k α k ) 2 ‖ w k − w ˜ k ‖ Q 2 ≤ ‖ w k − w * ‖ Q 2 − 2 η k α k ( ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) ) + η k 2 α k 2 ‖ w k − w ˜ k ‖ Q 2 ≤ ‖ w k − w * ‖ Q 2 − 1 2 η k ( 2 − η k ) α k ( ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) ) . (4.11)</p><p>由于 ξ 1 , ξ 2 , ⋯ , ξ k , ⋯ 是独立且均匀分布，可以推出 η k , w k , w ˜ k 和 ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) 也是独立的。又因为</p><p>E ( η k ) = E ( 1 k ∑ i = 1 k ξ k ) = 1 k ∑ i = 1 k E ( ξ k ) = ρ ,   E ( α ) &gt; 1 2 ,</p><p>那么 ‖ w k + 1 − w * ‖ Q 2 的数学期望满足</p><p>E ( ‖ w k + 1 − w * ‖ Q 2 ) = E ( ‖ w k − η k α k ( w k − w ˜ k ) − w * ‖ Q 2 ) = E ( ‖ w k − w * ‖ Q 2 ) − E ( 2 η k α k ( w k − w * ) T Q ( w k − w ˜ k ) ) + ( η k α k ) 2 E ( ‖ w k − w ˜ k ‖ Q 2 ) ≤ E ( ‖ w k − w * ‖ Q 2 ) − 2 E ( η k ) E ( α k ) E ( ‖ w k − w ˜ k ‖ Q 2 + ( λ k − λ ˜ k ) T ( B y k − B y ˜ k ) )     + E ( η k 2 ) E ( α k 2 ) E ( ‖ w k − w ˜ k ‖ Q 2 ) ≤ E ( ‖ w k − w * ‖ Q 2 ) − 1 4 ρ ( 2 − ρ ) E ( ‖ w k − w ˜ k ‖ Q 2 ) .</p><p>最后，获得本文期望的结果。</p><p>推论4.1 如果 0 &lt; a &lt; E ( ξ k ) = ρ &lt; b ，序列 { w k } 是由广义的邻近交替方向乘子法生成，那么有</p><p>(1) 序列 E ( w k ) 和 E ( w ˜ k ) 都是有界的。</p><p>(2) 序列 E ( ‖ w k + 1 − w * ‖ Q 2 ) 是单调且有界的。</p><p>(3) lim k → ∞ E ( ‖ w k − w ˜ k ‖ 2 ) = 0 。</p><p>定理4.3 如果 0 &lt; a &lt; E ( ξ k ) = ρ &lt; b ，序列 { w k } 是由广义的邻近交替方向乘子法生成，那么序列 { w k } 依概率收敛到 w ∞ ∈ W * 。</p><p>证明 从推论4.1和引理4.2，得到</p><p>lim k → ∞ E ( ‖ A x ˜ k + B y ˜ k − b ‖ Q 2 + ‖ B ( y k − y ˜ k ) ‖ Q 2 ) = 0. (4.12)</p><p>因为序列 { E ( w ˜ k ) } 是有界的，那么它至少有一个聚集点。令 E ( w ∞ ) 是序列 { E ( w ˜ k ) } 的一个聚集点，并且存在一个子序列 { E ( w ˜ k j ) } 收敛到 E ( w ∞ ) ，那么存在一个子序列 { w ˜ k j } 依概率收敛到 ω ∞ ∈ W * ，记为 w ˜ k j → P w ∞ 。</p><p>从引理2.3得到子序列 { w ˜ k j } 几乎必然地收敛到 ω ∞ ，那么它也可标记子序列为 { w ˜ k j } ，记作</p><p>lim j → ∞ w ˜ k j = w ∞       a . s . (4.13)</p><p>结合公式(3.6)、(4.12)和(4.13)，有</p><p>{ lim j → ∞ ( x − x ˜ k j ) T { θ 1 ( x ˜ k j ) − A T λ ˜ k j } ≥ 0 ,           ∀ x ∈ X lim j → ∞ ( y − y ˜ k j ) T { θ 2 ( y ˜ k j ) − B T λ ˜ k j } ≥ 0 ,           ∀ y ∈ Y lim j → ∞ ( A x ˜ k j + B y ˜ k j − b ) = 0</p><p>从而有 { ( x − x ∞ ) T { θ 1 ( x ∞ ) − A T λ ∞ } ≥ 0 ,           ∀ x ∈ X ( y − y ∞ ) T { θ 2 ( y ∞ ) − B T λ ∞ } ≥ 0 ,           ∀ y ∈ Y ( A x ∞ + B y ∞ − b ) = 0 。</p><p>因此，可以推出 ω ∞ ∈ W * 。</p><p>又因为 lim j → ∞ E ( w ˜ k j ) = E ( w ∞ ) ，则 lim l → ∞ E ( ‖ w ˜ k l − w ∞ ‖ Q 2 ) = 0 。同时因为 lim k → ∞ E ( ‖ w k − w ˜ k ‖ Q 2 ) = 0 ，且对任给地 ε &gt; 0 ，有 l &gt; 0 ，于是得到</p><p>E ( ‖ w k l − w ˜ k l ‖ Q 2 ) = ε 2</p><p>和</p><p>E ( ‖ w ˜ k l − w ∞ ‖ Q 2 ) &lt; ε 2 . (4.14)</p><p>因此，对任意的 k &gt; k l ，由(4.14)，可知</p><p>E ( ‖ w k − w ∞ ‖ Q 2 ) ≤ E ( ‖ w k l − w ∞ ‖ Q 2 ) ≤ E ( ‖ w k l − w ˜ k l ‖ Q 2 ) + E ( ‖ w ˜ k l − w ∞ ‖ Q 2 ) &lt; ε . (4.15)</p><p>由此推出 lim k → ∞ E ( ‖ w k − w ∞ ‖ Q 2 ) = 0 。</p><p>结合引理2.2和公式(4.15)，可得对任给的 ε &gt; 0 ，如果存在 l &gt; 0 ，只要 k &gt; l ，就有</p><p>P ( ‖ w k − w ∞ ‖ Q 2 ≥ ϵ ) ≤ E ( ‖ w k − w ∞ ‖ Q 2 ) ϵ &lt; ε</p><p>那么得到 lim k → ∞ P ( ‖ w k − w ∞ ‖ Q 2 ≥ ϵ ) = 0 。</p><p>因此，序列 { ω k } 依概率收敛到 w ∞ ∈ W * ，记作 ω k → P ω ∞ 。</p><p>至此，收敛性证明全部完成。</p></sec><sec id="s9"><title>5. 数值实验</title><p>本节通过数值实验重点介绍算法的有效性。</p><p>例5.1 首先，考虑陶、袁和何 [<xref ref-type="bibr" rid="hanspub.41581-ref15">15</xref>] 提出的财务和统计问题，其形式如下：</p><p>min { 1 2 ‖ X − C ‖ F 2 | X ∈ S + n ∩ S B } , (5.1)</p><p>其中 S B = { H ∈ R n &#215; n | H L ≥ H ≥ H U } 。</p><p>通过引入一个辅助变量Y使得 X − Y = 0 ，问题(5.1)可以重新表示为如下形式的可分离凸优化问题</p><p>min { 1 2 ‖ X − C ‖ F 2 + 1 2 ‖ Y − C ‖ F 2 | X = Y , X ∈ S + n , Y ∈ S B } , (5.2)</p><p>显然地，问题(5.2)是问题(1.1)的一个特殊形式，其中 ρ ( A T A ) = ρ ( B T B ) = 1 。令 λ ∈ R n 是线性约束 X − Y = 0 的拉格朗日乘子。对于给定的 ( X k , Y k , λ k ) ，算法能产生第k+1次迭代步，有</p><p>{ X ˜ k = arg min X ∈ S + n { 1 2 ‖ X − C ‖ 2 + 〈 λ k , X − Y k 〉 + β 2 ‖ X − Y k ‖ 2 + R + S 2 ‖ X − X k ‖ 2 } , Y ˜ k = arg min Y ∈ S B { 1 2 ‖ Y − C ‖ 2 + 〈 λ k , X ˜ k − Y 〉 + β 2 ‖ X ˜ k − Y ‖ 2 + S 2 ‖ Y − Y k ‖ 2 } , λ ˜ k = λ k − β ( X ˜ k − Y ˜ k ) .     (5.3)</p><p>迭代(5.3)的X-子问题是通过SVD分解来进行求解，它承担每次迭代过程中的主要计算负荷。迭代(5.3)的Y-子问题也是一个投影，有如下形式</p><p>Y ˜ k = P S B { 1 S + 1 + β ( X ˜ k − λ k + C + S Y k ) } ,</p><p>其中 P S B 表示根据欧几里得范数到集合S<sub>B</sub>的投影。</p><p>在数值实验中，对于任意的所有 i , j ，设 C = ( c i j ) n &#215; n 是一个满足 c i j ∈ ( − 1 , 1 ) 随机矩阵。对于每个给定，将测试20个随机实例。公平地说，将X<sup>0</sup>和Y<sup>0</sup>设置为 n &#215; n 独立性矩阵， λ 0 是一个n维零向量，并且将 ε = max ( | w k + 1 − w k | ) max ( | w 0 − w ˜ 0 | ) ≤ 10 − 6 记为算法的终止准则。</p><p>得到的实验结果如下图1所示。</p><p>图1. APPA，ePADM，gPADMM三种算法的比较：n取100，200，500</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Numerical results of Example 5.1: Comparisons of APPA, ePADM, gPADM</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  rowspan="2"  ></th><th align="center" valign="middle"  colspan="3"  >p = 1.9</th></tr></thead><tr><td align="center" valign="middle" >gPADMM</td><td align="center" valign="middle" >APPA [<xref ref-type="bibr" rid="hanspub.41581-ref16">16</xref>]</td><td align="center" valign="middle" >ePADM [<xref ref-type="bibr" rid="hanspub.41581-ref16">16</xref>]</td></tr><tr><td align="center" valign="middle" >n = 100</td><td align="center" valign="middle" >Iter. = 266, s = 2.139</td><td align="center" valign="middle" >Iter. = 529, s = 4.725</td><td align="center" valign="middle" >Iter. = 275, s = 2.441</td></tr><tr><td align="center" valign="middle" >n = 200</td><td align="center" valign="middle" >Iter. = 355, s = 12.995</td><td align="center" valign="middle" >Iter. = 686, s = 23.919</td><td align="center" valign="middle" >Iter. = 358, s = 13.013</td></tr><tr><td align="center" valign="middle" >n = 500</td><td align="center" valign="middle" >Iter. = 425, s = 110.273</td><td align="center" valign="middle" >Iter. = 823, s = 216.642</td><td align="center" valign="middle" >Iter. = 430, s = 107.588</td></tr></tbody></table></table-wrap><p>表1. 例5.1的实验结果：APPA，ePADM，gPADMM三种算法的比较</p><p>显然，从表1中可以看出，算法3.1的性能优于APPA算法和ePADM算法，因为其迭代和计算时间更少。因此，结果表明对于问题(1.1)，提出的算法是有效的。</p></sec><sec id="s10"><title>6. 结论</title><p>本文针对线性凸优化问题和可分离凸优化问题，提出了广义的近似交替方向乘子算法，并且通过初步实验结果验证了算法是可行的。算法3.1是一种简单且有希望的迭代方案，其收敛速度比原有算法的收敛速度快。它在其他加速技术和其他应用中进行分析和设计的潜力以及更全面的计算研究是我们进一步研究的方向。</p></sec><sec id="s11"><title>基金项目</title><p>国家自然科学基金(72071130)。</p></sec><sec id="s12"><title>文章引用</title><p>殷倩雯,党亚峥,向浩东. 基于广义近似交替方向乘子法求解可分离凸优化问题Solving Separable Convex Optimization Problem Based on Generalized Proximal Alternating Direction Method of Multipliers[J]. 理论数学, 2021, 11(04): 485-495. https://doi.org/10.12677/PM.2021.114062</p></sec><sec id="s13"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.41581-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Glowinski, R. and Marrocco, A. (1974) Analyse numerique du champ magnetique d’un alternateur par elements finis et sur-relaxation ponctuelle non lineaire. Computer Methods in Applied Mechanics and Engineering, 3, 55-85.  
&lt;br&gt;https://doi.org/10.1016/0045-7825(74)90042-5</mixed-citation></ref><ref id="hanspub.41581-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Gabay, D. and Mercier, B. (1976) A Dual Algorithm for the Solution of Nonlinear Variational Problems via Finite Element Approximation. Computers &amp; Mathematics with Ap-plications, 2, 17-40.  
&lt;br&gt;https://doi.org/10.1016/0898-1221(76)90003-1</mixed-citation></ref><ref id="hanspub.41581-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Gabay, D. (1983) Chapter IX: Applications of the Method of Multipliers to Variational Inequalities. Studies in Mathematics and Its Applications, 15, 299-331. &lt;br&gt;https://doi.org/10.1016/S0168-2024(08)70034-1</mixed-citation></ref><ref id="hanspub.41581-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Douglas, J. and Rachford, H.H. (1956) On the Numerical Solution of Heat Conduction Problems in Two and Three Space Variables. Transactions of the AMS, 82, 421-439. &lt;br&gt;https://doi.org/10.1090/S0002-9947-1956-0084194-4</mixed-citation></ref><ref id="hanspub.41581-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Cai, X.J., Gu, G.Y., He, B.S. and Yuan, X.M. (2013) A Proximal Point Algorithm Revisit on the Alternating Direction Method of Multipliers. Science China Mathematics, 56, 2179-2186. &lt;br&gt;https://doi.org/10.1007/s11425-013-4683-0</mixed-citation></ref><ref id="hanspub.41581-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Eckstein, J. and Bertsekas, D. (1992) On the Douglas-Rachford Splitting Method and the Proximal Point Algorithm for Maximal Monotone Operators. Mathematical Programming, 55, 293-318. &lt;br&gt;https://doi.org/10.1007/BF01581204</mixed-citation></ref><ref id="hanspub.41581-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Martinet, B. (1970) Regularisation, d’inequations variationelles par approximations succesives. Revue française d’informatique et de recherche opérationnelle, 4, 154-159. &lt;br&gt;https://doi.org/10.1051/m2an/197004R301541</mixed-citation></ref><ref id="hanspub.41581-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Jiang, B.Q., Peng, Z. and Deng, K.K. (2019) Two New Customized Proximal Point Algorithms without Relaxation for Linearly Constrained Convex Optimization. Bulletin of the Iranian Mathematical Society, 46, 865-892.  
&lt;br&gt;https://doi.org/10.1007/s41980-019-00298-0</mixed-citation></ref><ref id="hanspub.41581-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Gol’shtein, E.G. and Tret’yakov, N.V. (1979) Modified Lagrangian in Convex Programming and Their Generalizations. In: Point-to-Set Maps and Mathematical Programming, Mathematical Programming Studies Vol. 10, Springer, Berlin, 86-97. &lt;br&gt;https://doi.org/10.1007/BFb0120845</mixed-citation></ref><ref id="hanspub.41581-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Ye, C.H. and Yuan, X.M. (2007) A Descent Method for Structured Monotone Variational Inequalities. Optimization Methods and Software, 22, 329-338. &lt;br&gt;https://doi.org/10.1080/10556780600552693</mixed-citation></ref><ref id="hanspub.41581-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Li, M., Li, X.X. and Yuan, X.M. (2014) Convergence Analysis of the Generalized Alternating Direction Method of Multipliers with Logarithmic-Quadratic Proximal Regularization. Journal of Optimization Theory and Applications, 164, 218-233. &lt;br&gt;https://doi.org/10.1007/s10957-014-0567-x</mixed-citation></ref><ref id="hanspub.41581-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Yuan, X.M. (2009) An Improved Proximal Alternating Direction Method for Monotone Variational Inequalities with Separable Structure. Computational Optimization and Applications, 49, 17-29.  
&lt;br&gt;https://doi.org/10.1007/s10589-009-9293-y</mixed-citation></ref><ref id="hanspub.41581-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">徐海文. 一类变分不等式的随机步长收缩算法[J]. 工程数学学报, 2011, 28(4): 462-469.</mixed-citation></ref><ref id="hanspub.41581-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Wang, Y., Yang, J., Yin, W. and Zhang, Y. (2008) A New Alternating Minimization Algorithm for Total Variation Image Reconstruction. SIAM Journal on Imaging Sciences, 1, 248-272. &lt;br&gt;https://doi.org/10.1137/080724265</mixed-citation></ref><ref id="hanspub.41581-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Tao, M., Yuan, X.M. and He, B.S. (2011) Solving a Class of Matrix Minimization Problems by Linear Variational Inequality Approaches. Linear Algebra and Its Applications, 434, 2343-2352. &lt;br&gt;https://doi.org/10.1016/j.laa.2010.11.041</mixed-citation></ref><ref id="hanspub.41581-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">He, B.S., Li, O.L.Z. and Wang, X. (2012) Proximal-Like Contraction Methods for Monotone Variational Inequalities in a Unified Framework II: Effective Quadruplet and Primary Methods. Computational Optimization and Applications, 5, 649-679.</mixed-citation></ref></ref-list></back></article>