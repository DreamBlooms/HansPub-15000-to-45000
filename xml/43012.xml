<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2021.106197</article-id><article-id pub-id-type="publisher-id">AAM-43012</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20210600000_18637713.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  一种改进的椭圆曲线群签名方案
  An Improved Group Signature Scheme for Elliptic Curves
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>邱</surname><given-names>中保</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>孟</surname><given-names>忻怡</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>宫</surname><given-names>丹丹</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>卫</surname><given-names>培超</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>黄</surname><given-names>永清</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>平</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>null</addr-line></aff><aff id="aff2"><addr-line>河南科技大学数学与统计学院，河南 洛阳</addr-line></aff><pub-date pub-type="epub"><day>08</day><month>06</month><year>2021</year></pub-date><volume>10</volume><issue>06</issue><fpage>1880</fpage><lpage>1886</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  为了实现群内成员的签名的公开性同时保证签名对群外用户的匿名性，本文提出了一种改进的群签名方案。该方案在椭圆曲线数字签名算法的安全性和高效性基础上，在群内引入两个主体对群进行管理和简化签名过程。算法安全性分析表明，该方案具有不可伪造性、抗密钥泄露、防数据篡改、防陷害性和不可抵赖性。算法效率分析表明，本方案与传统的椭圆曲线数字签名算法相比大大简化了运算复杂度，提高了算法的效率。相较于肖帅等人的方案，总体效率基本相同，但却能在验证方式相同情况下，根据对象所有的公钥类型不同，同时对两类对象实现效果不同的签名。
   In order to realize the openness of group members’ signatures and ensure anonymity of signatures to users outside the group, an improved group signature scheme is proposed in this paper. Based on the security and efficiency of elliptic curve digital signature algorithm, two agents are introduced to manage the group and simplify the signature process. The algorithm security analysis shows that the scheme is unforgeable, anti-key leakage, anti data tampering, anti framing and non repudiation. The efficiency analysis shows that compared with the traditional elliptic curve digital signature algorithm, this scheme greatly simplifies the computational complexity and improves the efficiency of the algorithm. Compared with scheme of Xiao Shuai, the overall efficiency is basically the same, but under the same verification mode, according to the different public key types of the objects, the two kinds of objects can be signed with different effects.
 
</p></abstract><kwd-group><kwd>椭圆曲线，数字签名，求逆运算，匿名性, Elliptic Curve</kwd><kwd> Digital Signature</kwd><kwd> Inversion Operation</kwd><kwd> Anonymity</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>为了实现群内成员的签名的公开性同时保证签名对群外用户的匿名性，本文提出了一种改进的群签名方案。该方案在椭圆曲线数字签名算法的安全性和高效性基础上，在群内引入两个主体对群进行管理和简化签名过程。算法安全性分析表明，该方案具有不可伪造性、抗密钥泄露、防数据篡改、防陷害性和不可抵赖性。算法效率分析表明，本方案与传统的椭圆曲线数字签名算法相比大大简化了运算复杂度，提高了算法的效率。相较于肖帅等人的方案，总体效率基本相同，但却能在验证方式相同情况下，根据对象所有的公钥类型不同，同时对两类对象实现效果不同的签名。</p></sec><sec id="s2"><title>关键词</title><p>椭圆曲线，数字签名，求逆运算，匿名性</p></sec><sec id="s3"><title>An Improved Group Signature Scheme for Elliptic Curves</title><p>Zhongbao Qiu, Xinyi Meng, Dandan Gong, Peichao Wei, Yongqing Huang, Ping Zhang<sup>*</sup></p><p>School of Mathematics and Statistics, Henan University of Science and Technology, Luoyang Henan</p><p><img src="//html.hanspub.org/file/2-2621650x5_hanspub.png" /></p><p>Received: May 8<sup>th</sup>, 2021; accepted: May 28<sup>th</sup>, 2021; published: Jun. 9<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/2-2621650x6_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>In order to realize the openness of group members’ signatures and ensure anonymity of signatures to users outside the group, an improved group signature scheme is proposed in this paper. Based on the security and efficiency of elliptic curve digital signature algorithm, two agents are introduced to manage the group and simplify the signature process. The algorithm security analysis shows that the scheme is unforgeable, anti-key leakage, anti data tampering, anti framing and non repudiation. The efficiency analysis shows that compared with the traditional elliptic curve digital signature algorithm, this scheme greatly simplifies the computational complexity and improves the efficiency of the algorithm. Compared with scheme of Xiao Shuai, the overall efficiency is basically the same, but under the same verification mode, according to the different public key types of the objects, the two kinds of objects can be signed with different effects.</p><p>Keywords:Elliptic Curve, Digital Signature, Inversion Operation, Anonymity</p><disp-formula id="hanspub.43012-formula43"><graphic xlink:href="//html.hanspub.org/file/2-2621650x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/2-2621650x8_hanspub.png" /> <img src="//html.hanspub.org/file/2-2621650x9_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>1985年Victor Miller [<xref ref-type="bibr" rid="hanspub.43012-ref1">1</xref>] 和Neal Koblitz [<xref ref-type="bibr" rid="hanspub.43012-ref2">2</xref>] 分别提出了椭圆曲线公钥密码体制(Elliptic Curve Cryptography, ECC)，该体制的安全性是基于椭圆曲线离散对数求解的困难性。相比于其他密码体制，ECC具有计算量小，存储消耗低等优点，椭圆曲线密码体制现已成为一种信息安全标准。基于椭圆曲线密码体制Johnson等人在2001年提出了椭圆曲线数字签名算法(Elliptic Curve Digital Signature, ECDSA)，2005年Brown [<xref ref-type="bibr" rid="hanspub.43012-ref3">3</xref>]，给出了ECDSA方案的不可伪造性证明。后来又有多种改进方案被相继提出。</p><p>2008年，潘晓君 [<xref ref-type="bibr" rid="hanspub.43012-ref4">4</xref>] 提出了一种新的无模逆的签名算法。2009年，侯爱琴等人 [<xref ref-type="bibr" rid="hanspub.43012-ref5">5</xref>] 给出了一种高效的数字签名方案，该方案对Hash值的Hamming重量进行签名，提高了运算效率。2011年，陈亮 [<xref ref-type="bibr" rid="hanspub.43012-ref6">6</xref>] 等人对椭圆数字签名算法进一步优化与设计，新型的ECDSA签名方案在签名、验证过程中不仅避免了模逆运算，而且减少了点乘运算。同年，许德武等人 [<xref ref-type="bibr" rid="hanspub.43012-ref7">7</xref>] 将ELGamal签名方案与椭圆曲线体制的安全性相结合，使用代数运算代替椭圆曲线上的数乘运算，进一步提高系统的安全性。2014年，王国才等人 [<xref ref-type="bibr" rid="hanspub.43012-ref8">8</xref>] 提出了一种高效的分级群签名方案，该方案通过对椭圆曲线群签名方案进行改进，在签名算法与验证上避免了模逆和模乘运算，具有较强的实用性。2015年，白永祥 [<xref ref-type="bibr" rid="hanspub.43012-ref9">9</xref>] 基于椭圆曲线密码系统的优势设计了一种群签名方案，并且使用杂凑函数SHA-3提高了签名的安全性。2019年，陈亚茹等人 [<xref ref-type="bibr" rid="hanspub.43012-ref10">10</xref>] 提出了一种改进方案，该方案结合Hamming距离，通过两次点乘运算和一次求逆运算提高了数字签名的计算效率。2020年，肖帅等人 [<xref ref-type="bibr" rid="hanspub.43012-ref11">11</xref>] 设计出一种较为高效的方案，但该方案并未给出形式化的安全性证明。同年，张平等人 [<xref ref-type="bibr" rid="hanspub.43012-ref12">12</xref>] 针对椭圆曲线数字签名方案中通过替换消息伪造签名的问题给出了一种解决方案，其安全性较经典方案有所提高。</p><p>Chaum等人 [<xref ref-type="bibr" rid="hanspub.43012-ref13">13</xref>] 提出群签名的概念，2020年苏吟雪 [<xref ref-type="bibr" rid="hanspub.43012-ref14">14</xref>] 等人提出了一种基于SM2的双方共同签名协议,该协议为了进一步保护用户信息安全，协议要求签名所用私钥的一部分存储在服务器中，虽然增加了服务器认证用户的机会，但是完成签名的步骤增加了，使签名的效率有所降低。本文沿用文献 [<xref ref-type="bibr" rid="hanspub.43012-ref11">11</xref>] 的椭圆曲线数字签名算法，重点将双方共同签名协议拓展到多方，实现一种特殊类型的群签名方案。方案中群成员因内部消息不再具有匿名性，所以无需签名打开算法，其匿名性体现在对外的签名验证上。</p></sec><sec id="s6"><title>2. 预备知识</title><sec id="s6_1"><title>2.1. 椭圆曲线离散对数问题</title><p>对于有限域F<sub>p</sub> (要求p为一个大素数)，定义在F<sub>p</sub>上的椭圆曲线E为： y 2 = x 3 + a x + b ( mod p ) 且 4 a 3 + 27 b 2 ≠ 0 ( m o d p ) 。椭圆曲线离散对数的问题就是：若已知G，Q两点，寻找一个小于p的整数d使得 Q = d G 是困难的，即无法在多项式时间内完成。</p></sec><sec id="s6_2"><title>2.2. ECDSA方案描述</title><sec id="s6_2_1"><title>2.2.1. 参数选择</title><p>设ECC的参数为 T = ( p , a , b , G , n ) ，其中p为一个很大的素数，F<sub>p</sub>是一个有限域，G是F<sub>p</sub>上的n阶基点，n为一个素数。S为签名者，其公私钥对为 ( Q s , d s ) ，V为验证者。 H : { 0 , 1 } ∗ → { 0 , 1 } n * 是一种安全Hash算法。</p></sec><sec id="s6_2_2"><title>2.2.2. 签名算法</title><p>1) S随机选择一个整数 k ( 1 ≤ k ≤ n − 1 ) 。</p><p>2) 计算 k G = ( x 1 , y 1 ) 和 r = x 1 mod n ；若 r = 0 ，则返回步骤1。</p><p>3) 计算需要签名的消息m的哈希值e， e = H ( m ) 。</p><p>4) 计算 s = k − 1 ( e + d s r ) mod n ，若 s = 0 没，则返回步骤1。</p><p>5) 输出签名 σ = ( s , r ) 。</p></sec><sec id="s6_2_3"><title>2.2.3. 验证算法</title><p>1) 验证s，r是否为区间 [ 1 , n − 1 ] 内的整数，若验证失败，则拒绝签名。</p><p>2) 计算签名消息m的哈希值e， e = H ( m ) 。</p><p>3) 计算 u 1 = e s − 1 ( mod n ) ， u 2 = r s − 1 ( mod n ) 。</p><p>4) 计算 R = u 1 G + u 2 Q = ( x 1 , y 1 ) ，若 R = 0 ，则验证失败，拒绝签名。</p><p>5) 计算 v = x 1 mod n ，若 v = r ，则接受签名，否则拒绝签名。</p></sec></sec></sec><sec id="s7"><title>3. 本文方案</title><p>设椭圆曲线的参数为 T = ( p , a , b , G , n ) ，具体过程如下：</p><sec id="s7_1"><title>3.1. 用户密钥产生算法Ukge</title><p>1) 用户 U i ( i = 1 ， 2 , ⋯ , m ) 随机选取一个整数 d i ， 1 ＜ d i ≤ n − 1 作为私钥。</p><p>2) U i 计算 Q i = d i ⋅ G 作为公钥。</p><p>3) 输出公私钥对 ( Q i , d i ) 。</p></sec><sec id="s7_2"><title>3.2. 群密钥产生算法Gkge</title><p>在准备阶段，每个群成员公开自己的公钥 Q i ( i = 1 , 2 , ⋯ , m ) ，群中心计算 Q = Q 1 + Q 2 + ⋯ + Q m 作为群公钥，那么 d = d 1 + d 2 + ⋯ + d m ( mod n ) 就成为群私钥，但群内任何一位成员都不知道d的具体数值。</p></sec><sec id="s7_3"><title>3.3. 成员加入算法Join</title><p>若用户A想成为群中的一个成员，首先A要向管理员提出申请，获得管理员授权后，A运行Ukge算法，获得公私钥对 ( Q A , d A ) 。然后用户A和管理员进行交互(在安全通道上进行)，用户A向管理员发送自己的公钥信息，然后接收管理员所发送的群基本信息(包括群内成员，各个成员的公钥等)。A和管理员交互之后，管理员将A的公钥在群内公开，之后A便成为一名合法的群成员。群中心更新群的公钥为 Q ′ = Q + Q A 。此时，群的私钥变为 d ′ = d + d A ( mod n ) 。从成员加入算法过程可以得出：当加入新成员时并不需要改变其他群成员的公私钥信息，只需重新计算群公钥Q即可。</p></sec><sec id="s7_4"><title>3.4. 群签名生成算法Gsig</title><p>假设用户U<sub>1</sub>的公私钥对为 ( Q 1 , d 1 ) ，签名过程如下：</p><p>1) U<sub>1</sub>随机选取两个整数 α , β ，其中 1 ≤ α ， β ≤ n − 1 。</p><p>2) 计算 k = ( α d 1 + β ) mod n ；若 k = 0 ，则返回步骤1。</p><p>3) 计算 k G = ( x 1 , y 1 ) 和 r = x 1 mod n ；若 r = 0 ，则返回步骤1。</p><p>4) 计算需要签名的消息m的哈希值 e ， e = H ( m ) 。</p><p>5) 计算 s = ( β + d 1 e r ) mod n ，若 s = 0 ，则返回步骤1。</p><p>6) 计算 ( α − e r ) ⋅ Q ~ + k G = ( x 2 , y 2 ) (这里 Q ~ 是除去U<sub>1</sub>后剩余群成员的公钥之和， Q ~ 是不需要多次计算的，只需计算一次后储存起来，之后直接使用即可)。</p><p>7) 计算 r ' = x 2 mod n ；若 r ′ = 0 ，则返回步骤1。</p><p>8) 输出签名 σ = ( s , α , r , r ′ ) 。</p><p>注意到该算法的6~8步是针对于群成员对外的签名生成过程，若不考虑 r ′ = 0 的情况(可能性很小)，则可以将6~8步交由群中心完成，若签名不对外发放，则6~8步可以直接跳过，输出签名 ( s , α , r ) 即可。</p></sec><sec id="s7_5"><title>3.5. 验证算法GVer</title><p>根据验证对象使用公钥类型的不同可以分为两类：群内成员的验证和群外成员的验证。</p><sec id="s7_5_1"><title>3.5.1. 群内部成员的验证</title><p>对于群内部成员B<sub>1</sub>来说，B<sub>1</sub>拥有U<sub>1</sub>的公钥，验证U<sub>1</sub>的签名时只需要 ( s , α , r ) 即可，验证步骤如下：</p><p>验证 s , α , r 是否为区间 [ 1 , n − 1 ] 内的整数，若验证失败，则拒绝签名。</p><p>1) 计算消息 m 的哈希值 e ， e = H ( m ) 。</p><p>2) 计算 u = e r 。</p><p>3) 计算 s G + ( α − u ) Q 1 = ( x 3 , y 3 ) 。</p><p>4) 计算 v = x 3 mod n 。</p><p>5) 验证 v 和 r 的关系，若 v = r ，则接受签名，否则拒绝签名。</p><p>正确性分析如下：</p><p>若 s , α , r 是A<sub>1</sub>对消息A<sub>1</sub>的签名信息，则：</p><p>( x 3 , y 3 ) = s G + ( α − u ) Q 1 = ( β + d 1 e r ) G + ( α − e r ) d 1 G = ( α d 1 + β ) G = k G = ( x 1 , y 1 )</p><p>所以有： v = x 3 = x 1 = r mod n 。</p></sec><sec id="s7_5_2"><title>3.5.2. 群外部成员的验证</title><p>对于群外部成员B<sub>2</sub>来说，B<sub>2</sub>只有群的公钥，验证步骤如下：</p><p>1) 验证 s , α , r , r ′ 是否为区间 [ 1 , n − 1 ] 内的整数，若验证失败，则拒绝签名。</p><p>2) 计算消息 m 的哈希值 e ， e = H ( m ) 。</p><p>3) 计算 u = e r 。</p><p>4) 计算 s G + ( α − u ) Q 1 = ( x 4 , y 4 ) 。</p><p>5) 计算 v = x 4 m o d n 。</p><p>6) 验证 v 和 r ′ 的关系，若 v = r ′ ，则接受签名，否则拒绝签名。</p><p>正确性分析如下：</p><p>若 ( s , α , r , r ′ ) 是群对消息m的签名信息，则：</p><p>( x 4 , y 4 ) = s G + ( α − u ) Q 1 = ( β + d 1 e r ) G + ( α − e r ) ( d 1 + d 2 + ⋯ + d m ) G = k G + ( α − e r ) ( d 1 + d 2 + ⋯ + d m ) G = k G + ( α − e r ) Q ˜ = ( x 2 , y 2 )</p><p>所以有： v = x 4 = x 2 = r ′ m o d n 。</p></sec></sec></sec><sec id="s8"><title>4. 安全性分析</title><p>1) 不可伪造性：</p><p>若攻击者能够替换消息，虽然能够计算出替换后消息的哈希值，但会话密钥和签名者的私钥都是未知的，不能够伪造出可以通过验证的签名。</p><p>若攻击者能够用随机数 k ′ 来替换k，但接收方验证出来的v和r (或 r ′ )不同，所以可以有效地抵御伪造攻击。</p><p>2) 抗密钥泄露：</p><p>因为大多数情况下，一旦随机数相同就可以构造出一个二阶的线性方程组解出用户的私钥，从而造成私钥的泄露，所以一般来说对不同的消息使用同一签名方案进行签名时，使用的随机数是不相同的。如果本文方案对不同消息进行签名时都使用相同的随机数，那么就可以根据方程组：</p><p>{ s 1 = ( β + d 1 e 1 r 1 ) mod n s 2 = ( β + d 1 e 2 r 2 ) mod n</p><p>(其中 e 1 , s 1 , e 2 , s 2 , r 1 , r 2 是已知的)， β , d 1 是未知的，得出私钥的表达式为</p><p>d 1 = ( r 2 − r 1 ) − 1 ( e 2 − e 1 ) − 1 ( s 2 − s 1 ) − 1 mod n</p><p>如果每次签名的随机数不同，想通过上述攻击方法来破解该方案是无法实现的。假设 β 随机后，上述方程组就变为</p><p>{ s 1 = ( β 1 + d 1 e 1 r 1 ) mod n s 2 = ( β 2 + d 1 e 2 r 2 ) mod n</p><p>未知量为 β 1 , β 2 , d 1 。未知量的个数就由两个变为三个，根据代数知识，不能求出私钥。根据椭圆曲线离散对数难题，已知方程组：</p><p>{ ( α 1 − e 1 r 1 ) Q ˜ + k 1 G = ( x 21 , y 21 ) ( α 2 − e 2 r 2 ) Q ˜ + k 2 G = ( x 22 , y 22 )</p><p>也是无法得到 Q ˜ 的。所以本文方案在保证随机数不同时，能够防止密钥泄露。</p><p>3) 防数据篡改：</p><p>在产生签名时需要待签名信息的哈希值参与，数据的完整性得到了保证，一旦信息发生变化，其对应的哈希值也发生变化，从上述签名信息s的计算方式可以看出，一旦待签名信息哈希值e发生变化，群内部和外部成员都无法通过签名验证，从而保证了签名数据不会被篡改。</p><p>4) 防陷害性：</p><p>由于群内部成员的签名需要各自的私钥参与运算，而用户的私钥是不公开的，因此任何成员都不能以其他成员的名义对群内部进行签名。</p><p>5) 不可抵赖性：</p><p>接收方可以根据发送方的消息签名 σ = ( s , α , r , r ′ ) 来防止发送方的抵赖。</p></sec><sec id="s9"><title>5. 效率分析</title><p>从算法过程可以看出，耗时计算主要集中在签名和验证的执行上。由于加法的运算量较小对算法整体的影响不大，暂且忽略不计。设模乘运算的数据规模是n，一次点乘运算的复杂度为 O ( n 2 ) ，一次求逆运算复杂度大约是点乘运算的9倍，即 O ( 9 n 2 ) 。根据文献 [<xref ref-type="bibr" rid="hanspub.43012-ref11">11</xref>] 一次模乘运算的复杂度为 O ( n 2 l n n ) 。将本文方案与ECDSA方案和肖帅等人方案的运算量进行对比结果见表1。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Comparison of computation cost of three scheme</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  rowspan="2"  >方案</th><th align="center" valign="middle"  colspan="2"  >模乘运算</th><th align="center" valign="middle"  colspan="2"  >求逆运算</th><th align="center" valign="middle"  colspan="2"  >点乘运算</th></tr></thead><tr><td align="center" valign="middle" >签名</td><td align="center" valign="middle" >验证</td><td align="center" valign="middle" >签名</td><td align="center" valign="middle" >验证</td><td align="center" valign="middle" >签名</td><td align="center" valign="middle" >验证</td></tr><tr><td align="center" valign="middle" >ECDSA</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >2</td></tr><tr><td align="center" valign="middle" >肖帅等人的方案</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >本文方案(仅对内签名)</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >2</td></tr><tr><td align="center" valign="middle" >本文方案(同时对内外签名)</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >2</td></tr></tbody></table></table-wrap><p>表1. 三种方案运算量对比</p><p>由表1可知，ECDSA的总运算量为： N 1 = O ( 4 n 2 l n n + 21 n 2 ) 。</p><p>肖帅等人方案的总运算量为： N 2 = O ( 5 n 2 l n n + 2 n 2 ) 。</p><p>本文方案(仅对内签名)的总运算量为： N 3 = O ( 4 n 2 l n n + 3 n 2 ) 。</p><p>本文方案(同时对内外签名)的总运算量为： N 4 = O ( 4 n 2 l n n + 4 n 2 ) 。</p><p>本文方案在对内的签名和验证上总体效率优于ECDSA方案，和肖帅等人的方案效率近似。在签名阶段，本文方案比ECDSA方案多了1次乘法运算，少了1次模逆运算；在验证阶段，本文方案比ECDSA方案少了1次模乘运算，总体上避免了求逆运算，提高了算法的效率。在对外的签名和验证上多了一次点乘运算，但是本文方案给出实现了新的功能，并且可以让群内外验证人员执行相同的验证步骤。总体来说，本文方案加强了算法的安全性，提高了算法的实用性。</p></sec><sec id="s10"><title>6. 结语</title><p>本文首先对于ECDSAC密码体制进行分析，发现该方案ECC具有计算量小，处理速度快等优点。又分析了传统群签名在某些需要公开签名的应用场景下管理员需要反复执行签名打开算法的问题。本文提出了一种既能实现群内成员签名的公开性，又保证签名对群外用户匿名性的签名方案。并对该方案进行安全性和效率分析，发现本方案在保证安全性的情况下还具有较高的效率。在一个不需要经常撤销群内成员的环境下具有很强的适用性，能够很好地满足某些群的公开性需求。</p></sec><sec id="s11"><title>基金项目</title><p>河南省高等学校重点科研项目(项目编号：20A520012)；河南科技大学大学生研究训练计划(SRTP)项目(项目编号：2020173)。</p></sec><sec id="s12"><title>文章引用</title><p>邱中保,孟忻怡,宫丹丹,卫培超,黄永清,张 平. 一种改进的椭圆曲线群签名方案An Improved Group Signature Scheme for Elliptic Curves[J]. 应用数学进展, 2021, 10(06): 1880-1886. https://doi.org/10.12677/AAM.2021.106197</p></sec><sec id="s13"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.43012-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Miller, V. (1986) Uses of Elliptic Curves in Cryptography. LNCS 218: Advances in Cryptology. Springer, Berlin, 387-398.</mixed-citation></ref><ref id="hanspub.43012-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Koblitz, N. (1987) Elliptic Curve Cryptosystem. Mathematics of Computation, 48, 203-209.  
&lt;br&gt;https://doi.org/10.1090/S0025-5718-1987-0866109-5</mixed-citation></ref><ref id="hanspub.43012-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Brown, D.R.L. (2005) Generic Groups, Collision Resistance, and ECDSA. Designs, Codes and Cryptography, 35, 119-152. &lt;br&gt;https://doi.org/10.1007/s10623-003-6154-z</mixed-citation></ref><ref id="hanspub.43012-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">潘晓君. 一种新的基于椭圆曲线的数字签名方案[J]. 计算机系统应用, 2008(1): 35-37.</mixed-citation></ref><ref id="hanspub.43012-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">侯爱琴, 高宝建, 张万绪, 等. 基于椭圆曲线的一种高效率数字签名[J]. 计算机应用与软件, 2009, 26(2): 58-69+71.</mixed-citation></ref><ref id="hanspub.43012-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">陈亮, 游林. 椭圆曲线数字签名算法优化与设计[J]. 电子器件, 2011, 34(1): 89-93.</mixed-citation></ref><ref id="hanspub.43012-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">许德武, 陈伟. 基于椭圆曲线的数字签名和加密算法[J]. 计算机工程, 2011, 37(4): 168-169+189.</mixed-citation></ref><ref id="hanspub.43012-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">王国才, 刘美兰. 基于椭圆曲线的高效分级群签名[J]. 计算机应用研究, 2014, 31(2): 586-589.</mixed-citation></ref><ref id="hanspub.43012-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">白永祥. 一种群签名方案的设计与分析[J]. 智能计算机与应用, 2015, 5(1): 14-17.</mixed-citation></ref><ref id="hanspub.43012-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">陈亚茹, 丛培强, 陈庄. 一种椭圆曲线数字签名的改进方案[J]. 信息安全研究, 2019, 5(3): 217-222.</mixed-citation></ref><ref id="hanspub.43012-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">肖帅, 王绪安, 潘峰. 无模逆运算的椭圆曲线数字签名算法[J]. 计算机工程与应用, 2020, 56(11): 118-123.</mixed-citation></ref><ref id="hanspub.43012-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">张平, 栗亚敏. 前向安全的椭圆曲线数字签名方案[J]. 计算机工程与应用, 2020, 56(1): 115-120.</mixed-citation></ref><ref id="hanspub.43012-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Chaum, D. and Van Heyst, E. (1991) Group Signatures. Advances in Cryptology-EUROCRYPT’91. Springer-Verlag, Berlin, 257-265. &lt;br&gt;https://doi.org/10.1007/3-540-46416-6_22</mixed-citation></ref><ref id="hanspub.43012-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">苏吟雪, 田海博. 基于SM2的双方共同签名协议及其应用[J]. 计算机学报, 2020, 43(4): 701-710.</mixed-citation></ref></ref-list></back></article>