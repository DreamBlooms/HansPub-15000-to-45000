<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">PM</journal-id><journal-title-group><journal-title>Pure  Mathematics</journal-title></journal-title-group><issn pub-type="epub">2160-7583</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/PM.2020.1011122</article-id><article-id pub-id-type="publisher-id">PM-38577</article-id><article-categories><subj-group subj-group-type="heading"><subject>PM20201100000_65343070.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  一种牛顿迭代法的改进——牛顿弦割迭代法
  An Improvement of Newton’s Method —Newton’s Chord Secant Method
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>春辉</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>阚</surname><given-names>渟渟</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>中国地质大学(武汉)，湖北 武汉</addr-line></aff><pub-date pub-type="epub"><day>11</day><month>11</month><year>2020</year></pub-date><volume>10</volume><issue>11</issue><fpage>1031</fpage><lpage>1034</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   牛顿迭代法是非线性方程求根的一个常用的方法，它具有至少二阶的收敛速度，但是需要计算一阶导数值。本文针对牛顿迭代法进行改进，以弦割代替导数，只需计算函数值，不需计算一阶导数值，同样也具有至少二阶的收敛速度，并且形式简单，计算量小，数值试验表明该迭代公式十分有效。 Newton’s method is a commonly used way to find roots of nonlinear equations. It has at least the second-order convergence rate, but it needs to calculate the first-order derivative value. In this paper, the Newton method is improved. The derivative is replaced by a chord secant. It only needs to calculate the value of the function and does not need to calculate the value of the first derivative. It also has at least the second order of convergence speed, and the form is simple and the calculation amount is small. Numerical experiments show that the iterative formula is very effective. 
 
</p></abstract><kwd-group><kwd>非线性方程，牛顿迭代法，弦割, Nonlinear Equation</kwd><kwd> Newton’s Method</kwd><kwd> Chord Secant</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>牛顿迭代法是非线性方程求根的一个常用的方法，它具有至少二阶的收敛速度，但是需要计算一阶导数值。本文针对牛顿迭代法进行改进，以弦割代替导数，只需计算函数值，不需计算一阶导数值，同样也具有至少二阶的收敛速度，并且形式简单，计算量小，数值试验表明该迭代公式十分有效。</p></sec><sec id="s2"><title>关键词</title><p>非线性方程，牛顿迭代法，弦割</p></sec><sec id="s3"><title>An Improvement of Newton’s Method</title><p>—Newton’s Chord Secant Method<sup> </sup></p><p>Chunhui Li, Tingting Kan</p><p>China University of Geosciences (Wuhan), Wuhan Hubei</p><p><img src="//html.hanspub.org/file/4-1251119x4_hanspub.png" /></p><p>Received: Oct. 16<sup>th</sup>, 2020; accepted: Nov. 5<sup>th</sup>, 2020; published: Nov. 12<sup>th</sup>, 2020</p><p><img src="//html.hanspub.org/file/4-1251119x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>Newton’s method is a commonly used way to find roots of nonlinear equations. It has at least the second-order convergence rate, but it needs to calculate the first-order derivative value. In this paper, the Newton method is improved. The derivative is replaced by a chord secant. It only needs to calculate the value of the function and does not need to calculate the value of the first derivative. It also has at least the second order of convergence speed, and the form is simple and the calculation amount is small. Numerical experiments show that the iterative formula is very effective.</p><p>Keywords:Nonlinear Equation, Newton’s Method, Chord Secant</p><disp-formula id="hanspub.38577-formula8"><graphic xlink:href="//html.hanspub.org/file/4-1251119x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/4-1251119x7_hanspub.png" /> <img src="//html.hanspub.org/file/4-1251119x8_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>非线性方程 f ( x ) = 0 的解法是数值分析 [<xref ref-type="bibr" rid="hanspub.38577-ref1">1</xref>] 研究的重要课题之一，其解法多种多样，有不动点迭代法 [<xref ref-type="bibr" rid="hanspub.38577-ref2">2</xref>]，牛顿迭代法 [<xref ref-type="bibr" rid="hanspub.38577-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.38577-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.38577-ref5">5</xref>]。最经典的牛顿迭代法具有二阶的收敛速度，但需计算一阶导数值。本文给出了避免一阶导数计算的一个新的迭代公式，它无需计算导数值，只需计算函数值，但也能和经典的牛顿迭代法一样，达到二阶的收敛速度。</p></sec><sec id="s6"><title>2. 非线性方程的求根方法</title><sec id="s6_1"><title>2.1. 牛顿迭代法</title><p>广泛使用的牛顿迭代法公式：</p><p>x n + 1 = x n − f ( x n ) f ′ ( x n ) (1)</p><p>在公式(1)中，需要计算一阶导数值，在函数本身复杂的情况下是十分不利的。</p></sec><sec id="s6_2"><title>2.2. 牛顿弦割迭代法</title><p>若考虑到函数的表达式十分复杂，那么为了避免导数值繁杂的计算，本文提出用弦割</p><p>f ( x n + λ f ( x n ) ) − f ( x n ) λ f ( x n )         0 &lt; λ &lt; 1 (2)</p><p>来近似代替导数值。可以看到，这个弦割线只包括函数值和参数 λ ，形式简单，摒弃导数值，保留函数值。因此，本文给出牛顿弦割迭代公式：</p><p>x n + 1 = x n − f ( x n ) f ( x n + λ f ( x n ) ) − f ( x n ) λ f ( x n )         0 &lt; λ &lt; 1</p><p>即</p><p>x n + 1 = x n − λ f 2 ( x n ) f ( x n + λ f ( x n ) ) − f ( x n )         0 &lt; λ &lt; 1 (3)</p><p>选取适当的 λ ，牛顿割线迭代法具有至少二阶的收敛速度。</p></sec></sec><sec id="s7"><title>3. 相关定义、定理</title><sec id="s7_1"><title>3.1. 定义1</title><p>设迭代关系式 x n + 1 = x n − φ ( x n ) ，在 n → ∞ 时，极限为方程 x = φ ( x ) 的一个根 x * ，记每次它的迭代误差为 e n = x n − x * ，在 n → ∞ 时，有 lim n → ∞ e n + 1 e n p = c ( c ≠ 0 ) ，就称 x n + 1 = x n − φ ( x n ) 为p阶收敛。</p></sec><sec id="s7_2"><title>3.2. 定理1</title><p>设非线性函数 f ( x ) 的零点为 x * ，在 x * 的某邻域二阶导数存在，且 f ′ ( x ) ≠ 0 , f ″ ( x ) ≠ 0 ，则(3)在 x * 的领域附近至少达到二阶收敛。</p><p>证 把 f ( x n ) 在 x * 点泰勒展开</p><p>f ( x n ) = f ′ ( x * ) e n + f ″ ( x * ) 2 e n 2 + o ( e n 2 ) (4)</p><p>x n + λ f ( x n ) − x * = ( 1 + λ f ′ ( x * ) ) e n + λ f ″ ( x * ) 2 e n 2 + o ( e n 2 ) (5)</p><p>( x n + λ f ( x n ) − x * ) 2 = ( 1 + λ f ′ ( x * ) ) 2 e n 2 + o ( e n 2 ) (6)</p><p>把 f ( x n + λ f ( x n ) ) 在 x * 点泰勒展开，带入(4)和(5)</p><p>f ( x n + λ f ( x n ) ) = f ′ ( x * ) ( 1 + λ f ′ ( x * ) ) e n + f ″ ( x * ) 2 ( λ 2 f ′ 2 ( x * ) + 3 λ f ′ ( x * ) + 1 ) e n 2 + o ( e n 2 ) (7)</p><p>由(4)和(7)</p><p>f ( x n + λ f ( x n ) ) − f ( x n ) = λ f ′ 2 ( x * ) e n + f ″ ( x * ) f ′ ( x * ) 2 ( λ 2 f ′ ( x * ) + 3 λ ) e n 2 + o ( e n 2 ) (8)</p><p>所以</p><p>x n + 1 = x n − λ f 2 ( x n ) f ( x n + λ f ( x n ) ) − f ( x n ) = x n − λ ( f ′ 2 ( x * ) e n 2 + f ′ ( x * ) f ″ ( x * ) e n 3 ) + o ( e n 3 ) λ f ′ 2 ( x * ) e n + f ″ ( x * ) f ′ ( x * ) 2 ( λ 2 f ′ ( x * ) + 3 λ ) e n 2 + o ( e n 2 ) = x n − e n + f ″ ( x * ) f ′ ( x * ) e n 2 + o ( e n 2 ) 1 + f ″ ( x * ) 2 f ′ ( x * ) ( λ f ′ ( x * ) + 3 ) e n + o ( e n ) = x n − ( e n + f ″ ( x * ) f ′ ( x * ) e n 2 + o ( e n 2 ) ) ( 1 − f ″ ( x * ) 2 f ′ ( x * ) ( λ f ′ ( x * ) + 3 ) e n + o ( e n ) ) = x n − e n + f ″ ( x * ) 2 f ′ ( x * ) ( λ f ′ ( x * ) + 1 ) e n 2 + o ( e n 2 ) (9)</p><p>两边同时减去 x * 有</p><p>x n + 1 − x * = x n − x * − e n + f ″ ( x * ) 2 f ′ ( x * ) ( λ f ′ ( x * ) + 1 ) e n 2 + o ( e n 2 )</p><p>e n + 1 = f ″ ( x * ) 2 f ′ ( x * ) ( λ f ′ ( x * ) + 1 ) e n 2 + o ( e n 2 ) (10)</p><p>lim n → ∞ e n + 1 e n 2 = f ″ ( x * ) 2 f ′ ( x * ) ( λ f ′ ( x * ) + 1 ) ≠ 0 (11)</p><p>一定存在一个 λ ，使得上式不等于0，得证。</p></sec></sec><sec id="s8"><title>4. 数值检验</title><p>实例1 设 f ( x ) = e x − 1 ，求 f ( x ) 在 [ − 1 , 1 ] 上的零点，见表1，精确零点： x * = 0 。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Numerical experiment about zeros of the function: f ( x ) = e x − </title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >λ = 0.5</th><th align="center" valign="middle" >λ = 0.25</th></tr></thead><tr><td align="center" valign="middle" >x 0</td><td align="center" valign="middle" >0.5</td><td align="center" valign="middle" >0.5</td></tr><tr><td align="center" valign="middle" >x 1</td><td align="center" valign="middle" >0.169000</td><td align="center" valign="middle" >0.137575</td></tr><tr><td align="center" valign="middle" >x 2</td><td align="center" valign="middle" >0.020059</td><td align="center" valign="middle" >0.011399</td></tr><tr><td align="center" valign="middle" >x 3</td><td align="center" valign="middle" >0.000300</td><td align="center" valign="middle" >0.000081</td></tr><tr><td align="center" valign="middle" >x 4</td><td align="center" valign="middle" >0.000000</td><td align="center" valign="middle" >0.000000</td></tr></tbody></table></table-wrap><p>表1. f ( x ) = e x − 1 的零点数值检验</p><p>实例2 设 f ( x ) = x − e − x ，求 f ( x ) 在 [ 0 , 1 ] 上的零点，见表2，精确零点： x * = 0.567143 ⋯ 。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Numerical experiment about zeros of the function: f ( x ) = x − e − </title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >λ = 0.5</th><th align="center" valign="middle" >λ = 0.25</th></tr></thead><tr><td align="center" valign="middle" >x 0</td><td align="center" valign="middle" >1.0</td><td align="center" valign="middle" >1.0</td></tr><tr><td align="center" valign="middle" >x 1</td><td align="center" valign="middle" >0.519451</td><td align="center" valign="middle" >0.528368</td></tr><tr><td align="center" valign="middle" >x 2</td><td align="center" valign="middle" >0.566391</td><td align="center" valign="middle" >0.566759</td></tr><tr><td align="center" valign="middle" >x 3</td><td align="center" valign="middle" >0.567143</td><td align="center" valign="middle" >0.567143</td></tr><tr><td align="center" valign="middle" >x 4</td><td align="center" valign="middle" >0.567143</td><td align="center" valign="middle" >0.567143</td></tr></tbody></table></table-wrap><p>表2. f ( x ) = x − e − x 的零点数值检验</p><p>从上述实例数值检验结果看到，牛顿弦割迭代法形式优美，计算简单，充分挖掘函数值的信息价值，从而避免计算复杂的导数值，并且这种方法具有至少二阶的收敛迭代速度。另外，由于 λ 取值的不同，使得本文公式求解非线性函数的零点也具有更多的灵活性和泛化性。</p></sec><sec id="s9"><title>文章引用</title><p>李春辉,阚渟渟. 一种牛顿迭代法的改进——牛顿弦割迭代法An Improvement of Newton’s Method —Newton’s Chord Secant Method[J]. 理论数学, 2020, 10(11): 1031-1034. https://doi.org/10.12677/PM.2020.1011122</p></sec><sec id="s10"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.38577-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">李庆扬, 王能超, 易大义. 数值分析[M]. 第4版. 武汉: 华中科技大学出版社, 2006.</mixed-citation></ref><ref id="hanspub.38577-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">高尚. 不动点迭代的一点注记[J]. 大学数学, 2003, 19(4): 85-88.</mixed-citation></ref><ref id="hanspub.38577-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">李慧敏, 王晓燕. 对牛顿迭代法及改进的总结[J]. 科技信息, 2013(4): 275-277.</mixed-citation></ref><ref id="hanspub.38577-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">朱静芬, 韩丹夫. “牛顿类”迭代的收敛性和误差估计[J]. 浙江大学学报(理学版), 2005, 32(6): 623-626.</mixed-citation></ref><ref id="hanspub.38577-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">吴新元. 对牛顿迭代法的一个重要修改[J]. 应用数学和力学, 1999, 20(8): 3-5.</mixed-citation></ref></ref-list></back></article>