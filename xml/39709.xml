<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2021.111003</article-id><article-id pub-id-type="publisher-id">CSA-39709</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20210100000_75955721.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  融合社交网络用户相似度的社会化推荐
  Social Recommendation with Social Network Users Similarity
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>邓</surname><given-names>志彬</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>平华</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>熊</surname><given-names>建斌</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>广东技术师范大学自动化学院，广东 广州</addr-line></aff><aff id="aff2"><addr-line>广东工业大学计算机学院，广东 广州</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>08</day><month>01</month><year>2021</year></pub-date><volume>11</volume><issue>01</issue><fpage>19</fpage><lpage>27</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对传统的社会化推荐准确率不高问题，在综合考虑社交网络子图拓扑、用户信任和用户评分相似性等社交网络用户相似度影响因素的基础上，提出了一种融合社交网络用户相似度的社会化推荐算法SRSUS。算法以传统矩阵分解为框架，首先使用图卷积神经网络对用户社交网络进行学习得到包含社交网络子图拓扑结构和连接关系的用户潜在特征，然后利用社交关系计算用户社会信任度，接着利用评分数据计算用户评分相似性，最后综合使用用户潜在特征、用户信任度和用户评分相似性计算社交网络用户相似度并将其融入用户评分矩阵分解中，以此预测用户对预测项目的评分值。Filmtrust、Ciao和Epinions等公开数据集上的实验结果表明：本文算法普遍优于其他的社会化推荐算法。 In view of the low accuracy of traditional social recommendation, a social recommendation algorithm SRSUS integrating social network user similarity was proposed based on the comprehensive consideration of social network user similarity factors, such as subgraph topology, user trust and user rating similarity. The algorithm takes traditional matrix decomposition as the framework. Firstly, the graph convolutional neural network is used to learn the user’s social network to obtain the user’s potential characteristics including the topology structure and connection relations of the social network subgraph. Then social relation is used to calculate user’s social trust and score data is used to calculate the user rating similarity. Finally, user potential characteristics, user trust and user rating similarity are comprehensively used to calculate social network user similarity and then integrate it into user rating matrix decomposition. In this way, the user's rating of the predicted item can be predicted. Experimental results on Epinions, Filmtrust, Ciao and other public data sets show that this algorithm is generally superior to other social recommendation algorithms. 
  
 
</p></abstract><kwd-group><kwd>社会化推荐，社交网络用户相似度，矩阵分解，图卷积神经网络, Social Recommendation</kwd><kwd> Social Network Users Similarity</kwd><kwd> Matrix Factorization</kwd><kwd> Graph Convolutional Neural Network</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>针对传统的社会化推荐准确率不高问题，在综合考虑社交网络子图拓扑、用户信任和用户评分相似性等社交网络用户相似度影响因素的基础上，提出了一种融合社交网络用户相似度的社会化推荐算法SRSUS。算法以传统矩阵分解为框架，首先使用图卷积神经网络对用户社交网络进行学习得到包含社交网络子图拓扑结构和连接关系的用户潜在特征，然后利用社交关系计算用户社会信任度，接着利用评分数据计算用户评分相似性，最后综合使用用户潜在特征、用户信任度和用户评分相似性计算社交网络用户相似度并将其融入用户评分矩阵分解中，以此预测用户对预测项目的评分值。Filmtrust、Ciao和Epinions等公开数据集上的实验结果表明：本文算法普遍优于其他的社会化推荐算法。</p></sec><sec id="s2"><title>关键词</title><p>社会化推荐，社交网络用户相似度，矩阵分解，图卷积神经网络</p></sec><sec id="s3"><title>Social Recommendation with Social Network Users Similarity</title><p>Zhibin Deng<sup>1</sup>, Pinghua Chen<sup>1</sup>, Jianbin Xiong<sup>2</sup></p><p><sup>1</sup>School of Computer, Guangdong University of Technology, Guangzhou Guangdong</p><p><sup>2</sup>School of Automation, Polytechnic Normal University, Guangzhou Guangdong</p><p><img src="//html.hanspub.org/file/3-1541978x4_hanspub.png" /></p><p>Received: Dec. 11<sup>th</sup>, 2020; accepted: Jan. 5<sup>th</sup>, 2021; published: Jan. 12<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/3-1541978x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>In view of the low accuracy of traditional social recommendation, a social recommendation algorithm SRSUS integrating social network user similarity was proposed based on the comprehensive consideration of social network user similarity factors, such as subgraph topology, user trust and user rating similarity. The algorithm takes traditional matrix decomposition as the framework. Firstly, the graph convolutional neural network is used to learn the user’s social network to obtain the user’s potential characteristics including the topology structure and connection relations of the social network subgraph. Then social relation is used to calculate user’s social trust and score data is used to calculate the user rating similarity. Finally, user potential characteristics, user trust and user rating similarity are comprehensively used to calculate social network user similarity and then integrate it into user rating matrix decomposition. In this way, the user's rating of the predicted item can be predicted. Experimental results on Epinions, Filmtrust, Ciao and other public data sets show that this algorithm is generally superior to other social recommendation algorithms.</p><p>Keywords:Social Recommendation, Social Network Users Similarity, Matrix Factorization, Graph Convolutional Neural Network</p><disp-formula id="hanspub.39709-formula15"><graphic xlink:href="//html.hanspub.org/file/3-1541978x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/3-1541978x7_hanspub.png" /> <img src="//html.hanspub.org/file/3-1541978x8_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>近年来，尽管推荐算法 [<xref ref-type="bibr" rid="hanspub.39709-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.39709-ref2">2</xref>] 在很多方面都取得了成功，但冷启动和数据稀疏问题仍然是影响算法性能的重要因素。为了解决这些问题，许多学者开始研究社会化推荐方法 [<xref ref-type="bibr" rid="hanspub.39709-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.39709-ref4">4</xref>]，根据用户间的社交关系构建社交网络，并结合用户兴趣偏好进行推荐。但传统的社会化推荐只考虑了社交朋友关系，停留在一种粗糙层次水平上。社交朋友关系通常不能表示用户兴趣相似性，需要对用户相似性进行深层次的分析。影响用户兴趣相似性因素有很多种，例如社交网络子图拓扑结构、用户交互信息和用户评分信息等。</p><p>为解决上述存在的问题，本文提出了一种融合社交网络用户相似度的社会化算法SRSUS (Social Recommendation with Social network User Similarity)，即融合用户的评分信息和用户间社交网络信息，对传统的矩阵分解技术进行优化。首先使用图卷积神经网络学习得到具有用户社交关系和兴趣特征的用户节点在低维向量空间的潜在特征，然后利用社会信任网络、用户评分矩阵和用户潜在特征来计算用户间相似度，最后将相似用户的信息融入矩阵分解模型中，以预测用户对项目的评分。在Epinions、Filmtrust和Ciao三个公开数据集上实验分析表明：本文算法的推荐性能要优于以往基于社交网络的推荐模型，有效缓解了数据稀疏性对推荐结果的影响。</p></sec><sec id="s6"><title>2. 相关工作</title><p>随着社交网络的快速发展，基于社交网络的推荐算法已然成为了推荐领域中一个有前景的研究热点。基于矩阵分解的推荐算法因其不受数据稀疏的影响、灵活性高且推荐性能好等特点，成为许多研究者在其基础上融入社交信息的推荐模型的重要原因。Yang等人 [<xref ref-type="bibr" rid="hanspub.39709-ref5">5</xref>] 提出了TrustMF模型，该算法同时考虑用户信任和被信任信息，从这两方面进行建模学习得到两个不同的特征向量。SoRec算法 [<xref ref-type="bibr" rid="hanspub.39709-ref6">6</xref>] 提出了一种基于概率矩阵分解的因子分析方法，通过同时使用用户的社交网络信息和评分记录来解决数据稀疏和预测准确性差的问题。随后Ma等人又提出了RSTE算法 [<xref ref-type="bibr" rid="hanspub.39709-ref7">7</xref>]，该算法假设用个人偏好和好友影响来共同决定目标用户的评分。SoReg算法 [<xref ref-type="bibr" rid="hanspub.39709-ref8">8</xref>] 在SoRec算法的基础上进行改进提出了一种具有社交正则化的矩阵分解框架。Zhang等人 [<xref ref-type="bibr" rid="hanspub.39709-ref9">9</xref>] 以社交网络为辅助信息，提出了一种基于社交推荐算法的矩阵分解算法，系统地说明了如何利用社交规则化设计矩阵分解目标函数。吴清春等人 [<xref ref-type="bibr" rid="hanspub.39709-ref10">10</xref>] 构建了加权社会信任网络，使用用户评分信息和社会信任关系两部分信息来计算用户间相似度。</p><p>上述提到的基于社交网络的推荐模型已被证明能够有效的提升传统推荐模型的性能，但仍然存在着一些缺陷。近年来，深度学习技术在推荐系统中取得巨大成功 [<xref ref-type="bibr" rid="hanspub.39709-ref11">11</xref>]。Kipf等人 [<xref ref-type="bibr" rid="hanspub.39709-ref12">12</xref>] 提出的图卷积神经网络(Graph Convolutional Neural Networks, GCN)因其理论上的优雅性和相对较高的性能而备受关注。Van den Berg等人 [<xref ref-type="bibr" rid="hanspub.39709-ref13">13</xref>] 提出了GraphSAGE模型，该模型通过学习节点邻居的特性来生成嵌入。Leskovec等人 [<xref ref-type="bibr" rid="hanspub.39709-ref14">14</xref>] 将卷积神经网络应用到推荐系统中提出一种图卷积网络模型PinSage，该模型对商品节点生成包含图结构和节点特征信息的节点嵌入表示。He等人 [<xref ref-type="bibr" rid="hanspub.39709-ref15">15</xref>] 提出了LightGCN模型，通过在用户–项目交互图上线性传播用户和项目嵌入来学习用户和项目嵌入，并将在所有层上学习到的嵌入的加权总和用作最终嵌入。上述研究表明图卷积神经网络能够很好的建模图的结构属性和节点的特征信息，然后融入推荐算法中以提升推荐效率。相比于传统的方法，图卷积神经网络之所以能够在推荐任务上引起研究人员的关注就是因为其能够更好的利用推荐系统中用户和商品的属性信息。</p></sec><sec id="s7"><title>3. 社交网络用户相似度计算</title><sec id="s7_1"><title>3.1. 社交网络用户潜在特征计算</title><p>在现实中，每个用户不仅会受到自己朋友的影响，还会受到朋友的朋友的影响。因此，我们需要挖掘这种社交网络的隐性关系信息 [<xref ref-type="bibr" rid="hanspub.39709-ref16">16</xref>]。图卷积神经网络是一种可以处理图数据的模型，例如社交网络、通信网络、知识图谱、蛋白分子网络等。在图卷积神经网络中，每个节点通过聚合邻居的信息来更新其自身的嵌入表示，同样地，邻居的信息又来自各自邻居的邻居。使用图卷积可以把节点在图中的高维信息降维到低维的向量表示，且保持在图中原有的结构。模型传播过程如图1所示。模型的输入包括：1) 用户节点的特征向量表示X，本文采用用户的历史行为信息作为用户的特征向量输入，可用一个 n &#215; m 的矩阵表示，n为用户数、m为项目数，若用户u对项目i进行了评分则视为1，否则为0；2) 矩阵形式的社交网络图结构，一般用邻接矩阵A表示。输出是包含用户潜在特征和图结构信息的节点向量表示。</p><p>图1. 图卷积神经网络传播过程</p><p>隐藏层中每一层都会使用(1)式的传播规则将信息聚合起来，从而形成下一层的特征：</p><p>H ( l + 1 ) = f ( H ( l ) , A ) = σ ( D ˜ − 1 2 A ˜ D ˜ − 1 2 H ( l ) W ( l ) ) (1)</p><p>其中 σ ( • ) 是激活函数， A ˜ = A + I N 是具有自连接的邻接矩阵， I N 是单位矩阵。 D ˜ 是 A ˜ 的对角节点度矩阵， D ˜ − 1 2 A ˜ D ˜ − 1 2 是对 A ˜ 进行对称归一化，防止发生梯度消失或爆炸。 H ( l ) 是第l层的输出， H ( 0 ) = X 为用户特征矩阵。 W ( l ) 是第l层的权重矩阵，模型训练前随机初始化参数，随着训练不断更新。</p><p>经过(1)式训练得到一个 n &#215; d 的用户特征矩阵，每一行向量代表的就是每一个用户，因此可以采用余弦相似性函数计算用户 U i 和 U j 的相似度，如(2)式所示：</p><p>s i m s o c i a l ( U i , U j ) = ∑ d = 1 d U i d &#215; U j d ∑ d = 1 d ( U i d ) 2 ∑ d = 1 d ( U j d ) 2 (2)</p><p>U i d 、 U j d 为用户 U i 、 U j 的第d维向量值。</p></sec><sec id="s7_2"><title>3.2. 社交网络用户信任度计算</title><p>随着社交网络的不断发展，研究人员开始将用户间的社交关系融入到推荐算法中以提高推荐的准确率 [<xref ref-type="bibr" rid="hanspub.39709-ref17">17</xref>]。在现有的一些社交网络数据集中，数据大部分都为二值型数据，即用户间若有社交关系则为1，否则为0。但是这种二值型数据无法充分描述用户间的信任程度，从而导致融入了社交关系的推荐算法准确度上升的空间有限。本文通过用户间的社交关系构建一个社交网络，然后使用用户–项目评分矩阵的信息来计算用户间的信任度。</p><p>在关系图 G = { U , E , W } 中，U为用户的集合，E为边的集合，W为边的权重。若用户u和用户v具有社交关系，则节点u与节点v间可以连成边 E u , v 。同时，若用户u和用户v对同一个项目进行了评分，则其边 E u , v 的权重 W u , v 就增加1，遍历完其他所有的项目求出最后的边权重 W u , v 。根据此网络图，直接信任度 T ( u , v ) 可由公式(3)获得：</p><p>T ( u , v ) = W u , v f ( U u , U v ) (3)</p><p>其中 W u , v 为用户u到用户v的边权重， f ( U u , U v ) 为用户u和用户v共同评分项目的并集。例如用户A和用户B对同样的10个项目进行了评分且他们评分的项目并集数为100，那么用户A和用户B之间的直接信任度为 T ( u , v ) = 10 / 100 = 0.1 。</p><p>假设用户u和用户v之间存在至少一条路径，那么路径的集合可以表示为 P a t h ( u , v ) = { p 1 ( u , v ) , p 2 ( u , v ) , ⋯ , p n ( u , v ) } ，则每条路径为 p i ( u i , v i ) = ( u i , a i 1 , a i 2 , ⋯ , v i ) 。每条路径信任值随路径长度d的增加而减少，且 d ∈ [ 1 , 3 ] 。计算方式如公式(4)所示：</p><p>T r u s t p i ( u i , v i ) = ( T ( u i , a i 1 ) + T ( a i 1 , a i 2 ) + ⋯ + T ( a i j , v i ) ) &#215; e − ( d − 1 ) (4)</p><p>最终得到的用户u和用户v之间的信任度通过式(5)取平均值的方式计算得出：</p><p>T r u s t ( u , v ) = ∑ i ∈ n T r u s t p i ( u i , v i ) n (5)</p><p>其中n表示用户u可以到达用户v的路径总数。</p></sec><sec id="s7_3"><title>3.3. 用户评分相似度计算</title><p>用户的行为数据可以反映出用户的兴趣偏好，即从物品方面来对用户进行归类。基于用户的协同过滤算法正是利用了这一点。根据用户对物品的历史行为信息即评分数据来计算用户间相似度，然后将最相似用户的偏好物品作为推荐。用户对物品的行为数据可以有很多种类，本文使用最常见的评分信息作为用户向量化表示的依据。</p><p>假设推荐系统中包含m个用户 U = ( U 1 , U 2 , ⋯ , U m ) 和n个物品 V = ( V 1 , V 2 , ⋯ , V n ) ，那么用户对物品的评分信息可以表示为一个 m &#215; n 的矩阵 R m &#215; n ：</p><p>R m &#215; n = ( R 11 … R 1 n ⋮ ⋱ ⋮ R m 1 ⋯ R m n )</p><p>那么我们可以将用户 U i 表示为一个n维的向量，其在每一维上的值为对应用户对物品的评分值： U i = ( R i 1 , R i 2 , ⋯ , R i n ) 。我们采用余弦相似度公式得到用户评分相似度，公式如下式(6)：</p><p>s i m s c o r e ( U i , U j ) = ∑ k = 1 n R i k &#215; R j k ∑ k = 1 n R i k 2 &#215; ∑ k = 1 n R j k 2 (6)</p><p>该式的计算结果越大，说明用户 U i 和用户 U j 的相似度越大，当这个值为1时，我们认为这两个用户是相同的；当这个值为0时，代表这两个用户完全不同。特别地，当用户u未对物品i进行评分时，认为其 R u i 的值为0。</p></sec></sec><sec id="s8"><title>4. 社会化推荐算法SRSUS</title><sec id="s8_1"><title>4.1. 算法原理</title><p>在现实生活中，总会存在相似的人或物，即“物以类聚，人以群分”。由于一些传统的社交推荐模型只对用户的直接邻居计算相似度来改进评分预测，且忽略了用户间存在的信任关系，因此考虑利用用户间的社交关系、信任关系和评分相似性即用户的兴趣偏好来计算用户间的相似度并融入矩阵分解方法中，提出了一个全新的推荐模型，其最小化目标函数为：</p><p>L = 1 2 ∑ i = 1 m ∑ j = 1 n I i j ( R i j − U i V j T ) 2 + λ 1 2 ‖ U ‖ F 2 + λ 2 2 ‖ V ‖ F 2 λ 3 2 ∑ i = 1 m ∑ U j ∈ F ( i ) s i m ( U i , U j ) ‖ U i − U j ‖ 2 (7)</p><p>上述目标函数的第一项是矩阵分解模型，其中 I i j 表示用户i对项目j是否有评分，若有评分则为1， R i j 为真实评分， U i V j T 为预测评分；第二和第三项是用户和项目特征向量的正则化项以防止过拟合的产生；第四项表示相似用户之间的特征也应该相似，即使得相似度大的用户之间的特征向量相似性尽可能大。其中 F ( i ) 表示用户 U i 相似的k个近邻用户集合，用户间的相似度 s i m ( U i , U j ) 定义如下(8)式所示：</p><p>s i m ( U i , U j ) = α s i m s o c i a l ( U i , U j ) + β T r u s t ( U i , U j ) + γ s i m s c o r e ( U i , U j ) (8)</p><p>其中融合因子 α , β , γ ∈ [ 0 , 1 ] 为控制用户相似度的权重参数，且 α + β + γ = 1 。</p><p>本文通过梯度下降法最小化目标函数(7)式可以计算出用户和项目的特征矩阵，令 Z i = s i m ( U i , U j ) ‖ U i − U j ‖ ， U i 和 V j 的求解如下式(9) (10)：</p><p>∂ L ∂ U i = ∑ i = 1 m I i j ( R i j − U i V j T ) V j + λ 1 U i + λ 3 ∑ i = 1 m Z i &#215; Z ′ i (9)</p><p>∂ L ∂ V j = ∑ j = 1 n I i j ( R i j − U i V j T ) U i + λ 2 V j (10)</p></sec><sec id="s8_2"><title>4.2. 算法步骤</title></sec></sec><sec id="s9"><title>5. 实验结果与分析</title><sec id="s9_1"><title>5.1. 数据集</title><p>本文主要使用FilmTrust、Ciao和Epinions三个数据集进行实验，它们都包含有用户评分和用户社交关系信息。FilmTrust是一个电影资源网站，用户可以对各类电影进行评分，也可以和其他用户构建信任关系；Ciao和Epinions都是关于用户对物品进行打分和评论的网站，同时还可以添加对其他用户的信任。数据集的基本信息如下表1所示。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Dataset information statistic</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >数据集</th><th align="center" valign="middle" >用户数</th><th align="center" valign="middle" >项目数</th><th align="center" valign="middle" >评分数</th><th align="center" valign="middle" >评分稀疏度</th><th align="center" valign="middle" >社交关系数</th><th align="center" valign="middle" >社交关系稀疏度</th></tr></thead><tr><td align="center" valign="middle" >FilmTrust</td><td align="center" valign="middle" >1508</td><td align="center" valign="middle" >2071</td><td align="center" valign="middle" >40163</td><td align="center" valign="middle" >1.1415%</td><td align="center" valign="middle" >1853</td><td align="center" valign="middle" >0.4391%</td></tr><tr><td align="center" valign="middle" >Ciao</td><td align="center" valign="middle" >7317</td><td align="center" valign="middle" >104,975</td><td align="center" valign="middle" >283,319</td><td align="center" valign="middle" >0.0368%</td><td align="center" valign="middle" >111,781</td><td align="center" valign="middle" >0.2087%</td></tr><tr><td align="center" valign="middle" >Epinions</td><td align="center" valign="middle" >4929</td><td align="center" valign="middle" >139,738</td><td align="center" valign="middle" >664,824</td><td align="center" valign="middle" >0.0169%</td><td align="center" valign="middle" >487,181</td><td align="center" valign="middle" >0.1096%</td></tr></tbody></table></table-wrap><p>表1. 数据集信息统计</p></sec><sec id="s9_2"><title>5.2. 评价指标</title><p>为了验证推荐算法的性能，本文采用两种常用的评价指标：平均绝对误差(MAE)和均方根误差(RSME)，其公式如(9) (10)所示。</p><p>MAE = ∑ ( i , j ) ∈ N | R i j − r i j | | N | (11)</p><p>RMSE = ∑ ( i , j ) ∈ N | R i j − r i j | | N | (12)</p><p>其中，N表示待测评分集合， R i j 表示用户 U i 对项目 V j 的真实评分， r i j 表示预测的评分。它们的值越小，推荐的精度越高。</p></sec><sec id="s9_3"><title>5.3. 实验结果与分析</title><p>在本文提出的模型中，参数 α , β , γ 会对推荐结果产生不同的影响。 α 用来控制社交网络相似度的比重； β 用来控制社交信任度的比重； γ 用来控制用户评分相似度的比重。因此，我们研究这些参数对FilmTrust、Ciao、Epinions数据集上SRSUS模型性能的影响。</p><p>图2. 参数 α 对RMSE、MAE值的影响</p><p>图2显示了 α 对我们模型中RMSE和MAE的影响。图2中， α 为0时表示用户相似度仅考虑社交信任度和用户评分相似度， α 为1时表示用户相似度仅考虑社交网络相似度。由图2可见，当 α 为0.8时MAE和RMSE的值最小。经过后续实验得知，当 α = 0.8 , β = 0.1 , γ = 0.1 时模型效果最佳。因此本文提出的算法参数设置如下：用户特征向量维度设置为10维， α , β , γ 设置为0.8,0.1,0.1， λ 1 , λ 2 , λ 3 设置为0.01。</p><p>算法在融合用户社交网络中，用户相似近邻数目k也会对推荐性能产生不同程度的影响。因此本文还针对不同的个数k对SRSUS算法进行了实验。结果如图3所示。</p><p>图3. 不同近邻用户数目对RMSE、MAE值的影响</p><p>从上面的结果图中可以看出，不同的相似用户数目会对推荐效果产生不同的影响。当相似用户的数目为20时，算法在上述三个数据集中的MAE值和RMSE值均为最低。</p><p>最后，为了充分证明SRSUS算法的有效性，我们选取了推荐系统领域中经典的矩阵分解相关模型进行对比，如概率矩阵分解的社会化推荐算法SoRec [<xref ref-type="bibr" rid="hanspub.39709-ref6">6</xref>]、社会信任集成推荐算法RSTE [<xref ref-type="bibr" rid="hanspub.39709-ref7">7</xref>]、社会正则化推荐算法SoReg [<xref ref-type="bibr" rid="hanspub.39709-ref8">8</xref>]、融合社交关系的矩阵分解推荐模型SoRegIM [<xref ref-type="bibr" rid="hanspub.39709-ref10">10</xref>] 和融合用户潜在因子的社会化推荐模型SGCNMF [<xref ref-type="bibr" rid="hanspub.39709-ref16">16</xref>]。</p><p>从表2中可以看出SRSUS算法在推荐效果上优于其他几种算法。这是因为SRSUS不仅考虑了用户的评分偏好，而且还考虑了融合用户间信任度和用户社交网络潜在特征。充分说明了使用用户评分、用户潜在特征、用户社会信任关系三部分信息计算用户间的相似度有利于提高评分预测的准确性。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Performance comparison of different algorithm</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >数据集</th><th align="center" valign="middle" >评价指标</th><th align="center" valign="middle" >SoRec</th><th align="center" valign="middle" >RSTE</th><th align="center" valign="middle" >SoReg</th><th align="center" valign="middle" >SGCNMF</th><th align="center" valign="middle" >SoRegIM</th><th align="center" valign="middle" >SRSUS</th></tr></thead><tr><td align="center" valign="middle" >FilmTrust</td><td align="center" valign="middle" >MAE RMSE</td><td align="center" valign="middle" >0.6690 0.8610</td><td align="center" valign="middle" >0.6748 0.8430</td><td align="center" valign="middle" >0.6573 0.8593</td><td align="center" valign="middle" >0.6480 0.8377</td><td align="center" valign="middle" >0.6416 0.8259</td><td align="center" valign="middle" >0.6270 0.8209</td></tr><tr><td align="center" valign="middle" >Epinions</td><td align="center" valign="middle" >MAE RMSE</td><td align="center" valign="middle" >0.9812 1.1473</td><td align="center" valign="middle" >0.9441 1.1877</td><td align="center" valign="middle" >0.9745 1.1360</td><td align="center" valign="middle" >0.8658 1.0792</td><td align="center" valign="middle" >0.9372 1.1303</td><td align="center" valign="middle" >0.8506 1.0653</td></tr><tr><td align="center" valign="middle" >Ciao</td><td align="center" valign="middle" >MAE RMSE</td><td align="center" valign="middle" >0.7836 1.0155</td><td align="center" valign="middle" >0.8143 1.0526</td><td align="center" valign="middle" >0.7745 1.0193</td><td align="center" valign="middle" >0.7489 1.0034</td><td align="center" valign="middle" >0.7516 0.9849</td><td align="center" valign="middle" >0.7415 0.9802</td></tr></tbody></table></table-wrap><p>表2. 不同算法的性能对比</p></sec></sec><sec id="s10"><title>6. 总结与展望</title><p>随着社交网络技术的快速发展，用户规模不断扩大，融合社交信息的推荐模型在推荐系统性能上有很大的提升。本文在现有社会化推荐系统的基础上，提出了一种融合用户潜在特征的社会化推荐算法。该算法在计算相似度时，不仅利用了用户对项目的评分偏好，还考虑了用户社交特征和社会信任关系。本文将这三者融入矩阵分解模型中，提升了模型的推荐性能。除了用户的潜在关系之外，项目的潜在关系也会对推荐系统的性能造成影响，因此该算法仍有提升的空间。未来会在本算法基础上研究如何利用知识图谱来约束项目潜在特征等多个方面加以改进。</p></sec><sec id="s11"><title>基金项目</title><p>广东省科技计划项目(2020B1010010010, 2019B101001021)；广东省自然科学基金项目(2019A1515010700)。</p></sec><sec id="s12"><title>文章引用</title><p>邓志彬,陈平华,熊建斌. 融合社交网络用户相似度的社会化推荐Social Recommendation with Social Network Users Similarity[J]. 计算机科学与应用, 2021, 11(01): 19-27. https://doi.org/10.12677/CSA.2021.111003</p></sec><sec id="s13"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.39709-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Lu, Z.Q., Dou, Z.C., Lian, J.X., et al. (2015) Content-Based Collaborative Filtering for News Topic Recommendation. Proceedings of the 29th Conference on Artificial Intelligence, Austin, 25-30 January 2015, 217-223.</mixed-citation></ref><ref id="hanspub.39709-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Ji, K., Sun, R., Li, X., et al. (2016) Improving Matrix Approximation for Recommendation via a Clustering-Based Reconstructive Method. Neurocomputing, 173, 912-920. &lt;br&gt;https://doi.org/10.1016/j.neucom.2015.08.046</mixed-citation></ref><ref id="hanspub.39709-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Pan, J.C., Zhang, X.M. and Wang, X. (2016) Improved Singular Value Decomposition Recommender Algorithm Based on User Reliability. Journal of Chinese Computer System, 37, 2171-2176.</mixed-citation></ref><ref id="hanspub.39709-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Massa, P. and Bhattacharjee, B. (2004) Using Trust in Recommender Systems: An Experimental Analysis. LNCS 2995: Proceedings of the 2nd International Conference on Trust Management, Oxford, 29 March-1 April 2004, 221-235.  
&lt;br&gt;https://doi.org/10.1007/978-3-540-24747-0_17</mixed-citation></ref><ref id="hanspub.39709-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Yang, B., Lei, Y., Liu, D., et al. (2013) Social Collaborative Filtering by Trust. In: Proceedings of the Twenty-Third International Joint Conference on Artificial Intelligence, Morgan Kaufmann, San Francisco, 2747-2753.</mixed-citation></ref><ref id="hanspub.39709-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Ma, H., Yang, H.X., Lyu, M.R., et al. (2008) SoRec: Social Recommenda-tion Using Probabilistic Matrix Factorization. In: Proceedings of the 17th on Information and Knowledge Management, ACM Press, New York, 978-991.  
&lt;br&gt;https://doi.org/10.1145/1458082.1458205</mixed-citation></ref><ref id="hanspub.39709-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Ma, H., King, I. and Lyu, M.R. (2009) Learning Tore Commend with Social Trust Ensemble. Proceedings of the 32nd International ACM SIGIR Conference on Research and Develop-ment in Information Retrieval, Boston, 19-23 July 2009, 203-210. &lt;br&gt;https://doi.org/10.1145/1571941.1571978</mixed-citation></ref><ref id="hanspub.39709-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Ma, H., Zhou, D., Liu, C., et al. (2011) Recommender Systems with Social Regularization. Forth International Conference on Web Search &amp; Web Data Mining, Hong Kong, 9-12 Feb-ruary 2011, 287-296.  
&lt;br&gt;https://doi.org/10.1145/1935826.1935877</mixed-citation></ref><ref id="hanspub.39709-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, T.W., Li, W.P., Wang, L., et al. (2020) Social Recommen-dation Algorithm Based on Stochastic Gradient Matrix Decomposition in Social Network. Journal of Ambient Intelli-gence and Humanized Computing, 11, 601-608.  
&lt;br&gt;https://doi.org/10.1007/s12652-018-1167-7</mixed-citation></ref><ref id="hanspub.39709-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">吴清春, 贾彩燕. 一种融合社交关系的矩阵分解推荐模型[J]. 计算机工程, 2020, 46(8): 72-77+84.</mixed-citation></ref><ref id="hanspub.39709-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Chen, H.X., Yin, H.Z., Chen, T., et al. (2020) Social Boosted Recommenda-tion with Folded Bipartite Network Embedding. IEEE Transactions on Knowledge and Data Engineering. &lt;br&gt;https://doi.org/10.1109/TKDE.2020.2982878</mixed-citation></ref><ref id="hanspub.39709-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Kipf, T.N. and Welling, M. (2016) Semi-Supervised Classifica-tion with Graph Convolutional Networks. ICLR International Conference on Learning Representations, Toulon, 26-27 April 2017. arXiv:1609.02907.</mixed-citation></ref><ref id="hanspub.39709-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Berg, R.V.D., Kipf, T.N. and Welling, M. (2017) Graph Convolutional Matrix Completion.</mixed-citation></ref><ref id="hanspub.39709-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Ying, R., He, R., Chen, K., et al. (2018) Graph Convolutional Neural Networks for Web-Scale Rec-ommender Systems. ACM International Conference on Knowledge Discovery and Data Mining, London, 19-23 August 2018, 974-983.  
&lt;br&gt;https://doi.org/10.1145/3219819.3219890</mixed-citation></ref><ref id="hanspub.39709-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">He, X.N., Deng, K., Wang, X., et al. (2020) LightGCN: Simplify-ing and Powering Graph Convolution Network for Recommendation. Proceedings of the 43rd International ACM SIGIR Conference on Research and Development in Information, Xi’an, 25-30 July 2020, 639-648. &lt;br&gt;https://doi.org/10.1145/3397271.3401063</mixed-citation></ref><ref id="hanspub.39709-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">赵亮, 陈平华, 廖威平. 融合社交网络用户潜在因子的社会化推荐[J]. 计算机工程与应用, 2020, 56(24): 169-174.</mixed-citation></ref><ref id="hanspub.39709-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">杨鹏, 邵堃, 霍星, 张阳洋, 景永俊. 融合用户隐含偏好的社会化推荐算法[J]. 小型微型计算机系统, 2019, 40(10): 2039-2045.</mixed-citation></ref></ref-list></back></article>