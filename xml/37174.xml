<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2020.98151</article-id><article-id pub-id-type="publisher-id">AAM-37174</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20200800000_58118579.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于Floyd算法的疏散路径设计
  Evacuation Path Design Based on Floyd Algorithm
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>白</surname><given-names>彩云</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>于</surname><given-names>耀华</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>阳</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>越</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郭</surname><given-names>爽</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>孙</surname><given-names>欣宇</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>覃</surname><given-names>昶潔</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>大连民族大学理学院，辽宁 大连</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>04</day><month>08</month><year>2020</year></pub-date><volume>09</volume><issue>08</issue><fpage>1292</fpage><lpage>1297</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    疏散路径的设计在建筑安全领域有着重要的应用。疏散路径的设计往往基于最短路径理论。本文给出了一座办公建筑的平面图和网络图，并利用Floyd算法设计了该建筑紧急疏散路径，之后还考虑了当个别安全通道出口突发事故而无法正常使用的情况下如何选择最优的疏散路径。
    The design of evacuation path has an important application in building safety. The design of evacuation path is usually based on the shortest path theory. This paper gives the plan and network diagram of an office building, and uses Floyd algorithm to design the emergency evacuation path of the building. Then, it also considers how to choose the optimal evacuation path in the case that the exit accident of some safe passage cannot be used normally. 
  
 
</p></abstract><kwd-group><kwd>最优路径，疏散路径，Floyd算法, Optimal Path</kwd><kwd> Evacuation Path</kwd><kwd> Floyd Algorithm</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于Floyd算法的疏散路径设计</title><p>白彩云，于耀华<sup>*</sup>，李阳<sup>*</sup>，王越，郭爽，孙欣宇，覃昶潔</p><p>大连民族大学理学院，辽宁 大连</p><p>收稿日期：2020年7月27日；录用日期：2020年8月13日；发布日期：2020年8月20日</p><disp-formula id="hanspub.37174-formula58"><graphic xlink:href="//html.hanspub.org/file/21-2621285x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>疏散路径的设计在建筑安全领域有着重要的应用。疏散路径的设计往往基于最短路径理论。本文给出了一座办公建筑的平面图和网络图，并利用Floyd算法设计了该建筑紧急疏散路径，之后还考虑了当个别安全通道出口突发事故而无法正常使用的情况下如何选择最优的疏散路径。</p><p>关键词 :最优路径，疏散路径，Floyd算法</p><disp-formula id="hanspub.37174-formula59"><graphic xlink:href="//html.hanspub.org/file/21-2621285x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/21-2621285x8_hanspub.png" /> <img src="//html.hanspub.org/file/21-2621285x9_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>随着经济的发展和进步，人们越来越重视生活中的安全性问题。安全性问题也是评判一座建筑好坏的标准之一。因此，建筑空间疏散路径的设计成为近年来大家关注的热点问题。</p><p>通常情况下，建筑空间的疏散路径设计是以最短路径理论为基础来进行研究的。最短路径理论的经典算法较多，比如至今还广为使用的Dijkstra算法、Floyd算法、SPFA算法和Bellman-Ford算法等 [<xref ref-type="bibr" rid="hanspub.37174-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.37174-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.37174-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.37174-ref4">4</xref>]，但是我们在解决实际问题的时候往往不能仅考虑单一的距离长短问题，其他现实因素有时也需要纳入考虑范围之内。</p><p>本文给出了一个建筑空间的平面图形，并绘制了该建筑的网络示意图。然后利用经典的Floyd算法设计了七个人群聚集地的疏散路线。并且还考虑当某些紧急出口无法正常使用时，这七个人群聚集地如何选择其他出口。</p></sec><sec id="s4"><title>2. 问题介绍</title><p>如图1所示，这是某建筑物的一个平层结构图。</p><p>图1. 建筑结构图</p><p>A , B , C , D , E , F , G 所在位置代表该建筑的办公室、会议室、开放式办公区等七个人群相对密集的地点。我们将这七个地点作为起点。而 S 1 , S 2 , S 3 是应急楼梯的位置，作为终点。为了防止突发事故发生时人群慌不择路，我们需要分别为这七个起点的人群设计最优的疏散路径。终点就是 S 1 , S 2 , S 3 其中之一。我们把七个起点和三个终点作为网络示意图的节点。</p></sec><sec id="s5"><title>3. 节点间的距离测量</title><p>各节点间的距离计算方法如下：若 M , N 是平面图中任意两节点，则 M , N 两点的距离 D ( M , N ) 是由10次测量值 d i , i = 1 , ⋯ , 10 按照下面公式算得的：</p><p>D ( M , N ) = ∑ i = 1 10 ρ i d i 。</p><p>记 d &#175; 为10次测量值的均值，令 a i = | d i − d &#175; | , i = 1 , ⋯ , 10 。然后取 d m 的权值</p><p>ρ m = a m ∑ i = 1 10 a i , m = 1 , ⋯ , 10 。</p><p>用以上方法来确定节点之间的距离能使距离值更准确。为方便计算，在本文中，将节点 A , B , S 2 , G , C , S 3 , D , E , F , S 1 按照顺序记为 x 1 , x 2 , ⋯ , x 10 ，则任意两节点 x i 与 x j 之间的距离记为 D i j 。</p></sec><sec id="s6"><title>4. 利用Floyd算法设计疏散路径</title><p>首先，介绍该算法步骤：</p><p>第1步 定义初始的距离矩阵 M 0 和节点序列矩阵 Q 0 ；</p><p>第k步 令第k行、第k列为枢轴行和枢轴列，对于矩阵 M k − 1 中的每一个元素 D i j 做以下步骤，如果满足条件： D i k + D k j &lt; D i j ( i ≠ k , j ≠ k , i ≠ j ) ，那么可以进行下面的转化：</p><p>用 D i k + D k j 代替 M k − 1 中的元素 D i j ，得到矩阵 M k ；</p><p>用k代替矩阵 Q k − 1 中的元素 q i j ，得到矩阵 Q k 。令 k = k + 1 ，如果 k = n + 1 ，停止；否则，重复第k步。</p><p>经过n步后，可以从矩阵 M n 中按照下面规则得到节点i和节点j之间的最短路径；</p><p>其中，</p><p>在矩阵 M n 中， D i j 表示节点i和节点j之间的最短路径的长度；</p><p>在矩阵 Q n 中可以确定中间节点 k = q i j (根据得到的路径 i → k → j )。如果 q i k = k 并且 q k j = j ，停止，因为路径中的所有中间节点都已找到。否则，在节点i与节点k之间以及节点k与节点j之间重复上面的步骤。</p></sec><sec id="s7"><title>5. 数值实验</title><p>(1) 各个节点之间的距离网络描述图如图2所示。</p><p>(2) 使用Matlab编程，按照 A , B , S 2 , G , C , S 3 , D , E , F , S 1 为顺序构造距离矩阵 M 0 = ( D i j ) 10 &#215; 10 和节点矩阵 Q 0 。上文已经注明 D i j 表示任意两节点之间的距离(单位：m)，且用inf表示没有边相连接或是人们在正常情况下不会选择的线路的两点间距离。</p><p>M 0 = ( 0 7.3 18.5 16.4 inf 42.8 35.6 24.1 18.9 24 7.3 0 12 15.3 inf 53 49.9 46.2 41 41.5 18.2 12 0 25.6 38.8 inf 67.4 56.2 50.1 inf 16.4 15.3 25.6 0 13.9 23.7 27.1 31.3 34.1 39.7 inf inf 38.8 13.9 0 20 28.9 34.3 44.9 60.4 42.8 53 inf 13.9 20 0 21.5 32.6 45.6 inf 35.6 49.9 67.4 27.1 28.9 21.5 0 5.6 16 31 24.1 46.2 56.2 31.3 34.3 32.6 5.6 0 9 28 18.9 41 50.1 34.1 44.9 45.6 16 9 0 15 24 41.5 inf 39.7 60.4 inf 31 28 15 0 ) ，而 Q 0 = ( 0 ) 10 &#215; 10 。</p><p>图2. 网络图</p><p>利用Floyd算法来计算出最优路径，得到最终的矩阵 M 10 ，</p><p>M 10 = ( 0 7.3 18.5 16.4 30.3 40.1 29.7 24.1 18.9 24 7.3 0 12 15.3 29.2 39 37 31.4 26.2 31.3 18.2 12 0 25.6 38.8 49.3 47.9 42.3 37.1 42.2 16.4 15.3 25.6 0 13.9 23.7 27.1 31.3 34.1 39.7 30.3 29.2 38.8 13.9 0 20 28.9 34.3 43.3 53.6 30.3 29.2 39.5 13.9 20 0 21.5 27.1 36.1 51.1 29.7 37 48.2 27.1 28.9 21.5 0 5.6 14.6 29.6 24.1 31.4 42.6 31.3 34.3 27.1 5.6 0 9 24 18.9 26.2 37.4 34.1 43.3 36.1 14.6 9 0 15 24 31.3 42.5 39.7 53.6 51.1 29.6 24 15 0 ) 。</p><p>且 M 10 表明了各个起点与应急通道之间最优路径的距离，例如该矩阵第一行表示A起点到 A , B , S 2 , G , C , S 3 , D , E , F , S 1 点的最短路径长度，而比较A点到三个终点的路径长度，发现最佳逃生路径为出口 S 2 ，距离为18.5米。由此总结出所有起点对应的最佳疏散出口如表1所示：</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Escape path tabl</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >起点</th><th align="center" valign="middle" >A</th><th align="center" valign="middle" >B</th><th align="center" valign="middle" >C</th><th align="center" valign="middle" >D</th><th align="center" valign="middle" >E</th><th align="center" valign="middle" >F</th><th align="center" valign="middle" >G</th></tr></thead><tr><td align="center" valign="middle" >最佳出口</td><td align="center" valign="middle" >S<sub>2</sub></td><td align="center" valign="middle" >S<sub>2</sub></td><td align="center" valign="middle" >S<sub>3</sub></td><td align="center" valign="middle" >S<sub>3</sub></td><td align="center" valign="middle" >S<sub>3</sub></td><td align="center" valign="middle" >S<sub>1</sub></td><td align="center" valign="middle" >S<sub>1</sub></td></tr></tbody></table></table-wrap><p>表1. 疏散路径表</p><p>但是在某种紧急情况下，可能出现应急出口因为安全原因而无法使用，这时就需要重新考虑各个地点与应急之间的最优路径问题了。于是本文又考虑了当三个出口分别出现问题，无法使用时，这七个起点如何选择路线。</p><p>将无法使用的应急出口与各个地点间的距离权重设置为inf。假设 S 1 无法使用，我们首先得到初始距离矩阵</p><p>M 0 = ( 0 7.3 18.5 16.4 inf 42.8 35.6 24.1 18.9 inf 7.3 0 12 15.3 inf 53 49.9 46.2 41 inf 18.2 12 0 25.6 38.8 inf 67.4 56.2 50.1 inf 16.4 15.3 25.6 0 13.9 23.7 27.1 31.3 34.1 inf inf inf 38.8 13.9 0 20 28.9 34.3 44.9 inf 42.8 53 inf 13.9 20 0 21.5 32.6 45.6 inf 35.6 49.9 67.4 27.1 28.9 21.5 0 5.6 16 inf 24.1 46.2 56.2 31.3 34.3 32.6 5.6 0 9 inf 18.9 41 50.1 34.1 44.9 45.6 16 9 0 inf inf inf inf inf inf inf inf inf inf 0 )</p><p>利用Floyd算法计算后得到最终的矩阵：</p><p>M 10 = ( 0 7.3 18.5 16.4 30.3 40.1 29.7 24.1 18.9 inf 7.3 0 12 15.3 29.2 39 37 31.4 26.2 inf 18.2 12 0 25.6 38.8 49.3 47.9 42.3 37.1 inf 16.4 15.3 25.6 0 13.9 23.7 27.1 31.3 34.1 inf 30.3 29.2 38.8 13.9 0 20 28.9 34.3 43.3 inf 30.3 29.2 39.5 13.9 20 0 21.5 27.1 36.1 inf 29.7 37 48.2 27.1 28.9 21.5 0 5.6 14.6 inf 24.1 31.4 42.6 31.3 34.3 27.1 5.6 0 9 inf 18.9 26.2 37.4 34.1 43.3 36.1 14.6 9 0 inf inf inf inf inf inf inf inf inf inf 0 )</p><p>从而得到在 S 1 无法使用的情况下所有起点对应的最佳出口如表2所示：</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Evacuation path without S1 exi</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >起点</th><th align="center" valign="middle" >A</th><th align="center" valign="middle" >B</th><th align="center" valign="middle" >C</th><th align="center" valign="middle" >D</th><th align="center" valign="middle" >E</th><th align="center" valign="middle" >F</th><th align="center" valign="middle" >G</th></tr></thead><tr><td align="center" valign="middle" >最佳出口</td><td align="center" valign="middle" >S<sub>2</sub></td><td align="center" valign="middle" >S<sub>2</sub></td><td align="center" valign="middle" >S<sub>3</sub></td><td align="center" valign="middle" >S<sub>3</sub></td><td align="center" valign="middle" >S<sub>3</sub></td><td align="center" valign="middle" >S<sub>3</sub></td><td align="center" valign="middle" >S<sub>3</sub></td></tr></tbody></table></table-wrap><p>表2. S<sub>1</sub>出口无法使用时的疏散路径</p><p>同理可得当 S 2 无法使用的情况下所有起点对应的最佳出口如表3所示：</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Evacuation path without S2 exi</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >起点</th><th align="center" valign="middle" >A</th><th align="center" valign="middle" >B</th><th align="center" valign="middle" >C</th><th align="center" valign="middle" >D</th><th align="center" valign="middle" >E</th><th align="center" valign="middle" >F</th><th align="center" valign="middle" >G</th></tr></thead><tr><td align="center" valign="middle" >最佳出口</td><td align="center" valign="middle" >S<sub>1</sub></td><td align="center" valign="middle" >S<sub>1</sub></td><td align="center" valign="middle" >S<sub>3</sub></td><td align="center" valign="middle" >S<sub>3</sub></td><td align="center" valign="middle" >S<sub>3</sub></td><td align="center" valign="middle" >S<sub>1</sub></td><td align="center" valign="middle" >S<sub>1</sub></td></tr></tbody></table></table-wrap><p>表3. S<sub>2</sub>出口无法使用时的疏散路径</p><p>S 3 无法使用的情况下所有起点对应的最佳出口如表4所示：</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Evacuation path without S3 exi</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >起点</th><th align="center" valign="middle" >A</th><th align="center" valign="middle" >B</th><th align="center" valign="middle" >C</th><th align="center" valign="middle" >D</th><th align="center" valign="middle" >E</th><th align="center" valign="middle" >F</th><th align="center" valign="middle" >G</th></tr></thead><tr><td align="center" valign="middle" >最佳出口</td><td align="center" valign="middle" >S<sub>2</sub></td><td align="center" valign="middle" >S<sub>2</sub></td><td align="center" valign="middle" >S<sub>2</sub></td><td align="center" valign="middle" >S<sub>2</sub></td><td align="center" valign="middle" >S<sub>1</sub></td><td align="center" valign="middle" >S<sub>1</sub></td><td align="center" valign="middle" >S<sub>1</sub></td></tr></tbody></table></table-wrap><p>表4. S<sub>3</sub>出口无法使用时的疏散路径</p></sec><sec id="s8"><title>6. 结论</title><p>本文利用经典Floyd算法求解了一个建筑空间的疏散路径设计问题。并给出了当某个紧急出口无法使用情况下如何重新选择路径的方法。</p></sec><sec id="s9"><title>基金项目</title><p>大连民族大学大学生创新创业项目(201912026039，201912026449)，大连民族大学理学院信息与计算科学专业建设项目。</p></sec><sec id="s10"><title>文章引用</title><p>白彩云,于耀华,李 阳,王 越,郭 爽,孙欣宇,覃昶潔. 基于Floyd算法的疏散路径设计Evacuation Path Design Based on Floyd Algorithm[J]. 应用数学进展, 2020, 09(08): 1292-1297. https://doi.org/10.12677/AAM.2020.98151</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.37174-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">车建涛, 高方玉, 解玉文, 李端玲, 牛坤, 马士恩. 基于Dijkstra算法的水下机器人路径规划[J]. 机械设计与研究, 2020, 36(1): 44-48.</mixed-citation></ref><ref id="hanspub.37174-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">唐志华. 基于floyd和遗传算法的应急物流LRP优化研究[J]. 现代商贸工业, 2019, 40(19): 25-28.</mixed-citation></ref><ref id="hanspub.37174-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">张巍, 姜大立, 周振, 徐建楠. 基于Floyd算法的常规导弹连续波次作战运输规划[J]. 国防科技, 2019, 40(3): 18-27.</mixed-citation></ref><ref id="hanspub.37174-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">邱晓鹏, 王丽君. 基于Floyd算法的最短路径优化研究[J]. 太原师范学院学报(自然科学版), 2019, 18(2): 53-56+67.</mixed-citation></ref></ref-list></back></article>