<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2016.63023</article-id><article-id pub-id-type="publisher-id">CSA-17247</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20160300000_68496923.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  云计算中虚拟资源高效分配策略研究
  An Efficient Virtual Resources Allocation Strategy for Cloud Computing
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>于</surname><given-names>宁</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>金泉</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>倪</surname><given-names>丽娜</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>山东科技大学信息科学与工程学院，山东 青岛；山东科技大学山东省智慧矿山信息技术省级重点实验室，山东 青岛</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>tjzhangjinquan@126.com(张金)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>01</day><month>03</month><year>2016</year></pub-date><volume>06</volume><issue>03</issue><fpage>184</fpage><lpage>189</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  本文针对目前云数据中心主机服务器在空转时间段对能源消耗巨大的问题，建立了虚拟资源申请–分配模型，提出了一种虚拟资源分配的策略。该策略在满足用户需求前提下，对主机服务器最大化利用，以此来降低基础设施对能源的消耗。通过“端”对云任务进行统计综合，提交云中心，云中心的资源管理器对云任务进行统一分配，以达到对服务器的最佳利用。仿真结果表明，我们提出的策略对不同任务数目、类型的云任务调度具有较好的效果，能够提高云计算中心服务器的利用率。
   In this paper, a virtual resource application-allocation model and an efficient virtual resource al-location strategy are presented aiming at the huge energy consumption problem during the idle time of host server in cloud data center. The strategy can maximize the use of the host server and reduce energy consumption of the infrastructure under the premise of meeting the users’ needs. The cloud tasks are submitted to the cloud center after the statistical synthesis at the ends of the cloud, and unified allocated by the resource manager of cloud center in order to achieve optimal utilization of the servers. Simulation results show that our proposed strategy has good effect for different number and type of cloud tasks scheduling, and can improve the utilization of cloud computing center server.
   
   
  
 
</p></abstract><kwd-group><kwd>云计算，虚拟资源，分配策略, Cloud Computing</kwd><kwd> Virtual Resource</kwd><kwd> Allocation Strategy</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>云计算中虚拟资源高效分配策略研究<sup> </sup></title><p>于宁<sup>1,2</sup>，张金泉<sup>1,2*</sup>，倪丽娜<sup>1,2</sup></p><p><sup>1</sup>山东科技大学信息科学与工程学院，山东 青岛</p><p><sup>2</sup>山东科技大学山东省智慧矿山信息技术省级重点实验室，山东 青岛</p><disp-formula id="hanspub.17247-formula161"><graphic xlink:href="http://html.hanspub.org/file/11-1540565x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2016年3月5日；录用日期：2016年3月26日；发布日期：2016年3月29日</p><disp-formula id="hanspub.17247-formula162"><graphic xlink:href="http://html.hanspub.org/file/11-1540565x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文针对目前云数据中心主机服务器在空转时间段对能源消耗巨大的问题，建立了虚拟资源申请–分配模型，提出了一种虚拟资源分配的策略。该策略在满足用户需求前提下，对主机服务器最大化利用，以此来降低基础设施对能源的消耗。通过“端”对云任务进行统计综合，提交云中心，云中心的资源管理器对云任务进行统一分配，以达到对服务器的最佳利用。仿真结果表明，我们提出的策略对不同任务数目、类型的云任务调度具有较好的效果，能够提高云计算中心服务器的利用率。</p><p>关键词 :云计算，虚拟资源，分配策略</p><disp-formula id="hanspub.17247-formula163"><graphic xlink:href="http://html.hanspub.org/file/11-1540565x9_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>云计算通过互联网提供动态、易扩展、虚拟化的资源，提供这些资源的往往是具有庞大规模计算机集群的云数据中心。通常情况下，一个云计算中心有数万甚至数百万的服务器，这些云计算中心的能源消耗是巨大的。可以通过两种途径减少这些大规模基础设施对能源的消耗：一是降低单一服务器的能耗；二是进行虚拟资源优化来提高服务集群的整体资源利用率。</p><p>目前对于虚拟资源优化的相关研究主要集中于优化资源调度、优化资源分配以及资源有效管理等方面。有学者提出分层调度方法 [<xref ref-type="bibr" rid="hanspub.17247-ref1">1</xref>] 、多目标蚁群算法 [<xref ref-type="bibr" rid="hanspub.17247-ref2">2</xref>] 以及引入经济学方法比如纳什均衡 [<xref ref-type="bibr" rid="hanspub.17247-ref3">3</xref>] 、市场经济机制 [<xref ref-type="bibr" rid="hanspub.17247-ref4">4</xref>] 等提高资源利用率。文献 [<xref ref-type="bibr" rid="hanspub.17247-ref5">5</xref>] 提出多目标遗传算法，通过设计适应度函数，解决动态资源分配问题。文献 [<xref ref-type="bibr" rid="hanspub.17247-ref6">6</xref>] 针对资源调度问题中的成本最小化和期限约束模型，提出了基于遗传算法的动态目标优化策略。文献 [<xref ref-type="bibr" rid="hanspub.17247-ref7">7</xref>] 针对不同的资源类型，提出了多资源包装算法，并在iVCE中实现了一个原型。文献 [<xref ref-type="bibr" rid="hanspub.17247-ref8">8</xref>] 设计了一个体系架构，根据应用的特征和当前的工作负载，在云集群环境中找到最优的cpu密集型和io密集型工作的分配比例。文献 [<xref ref-type="bibr" rid="hanspub.17247-ref9">9</xref>] 在讨论了多种基本要素的虚拟机迁移情况下，提出了基于队列的虚拟机迁移模型。文献 [<xref ref-type="bibr" rid="hanspub.17247-ref10">10</xref>] 在考虑时间价格差异和对任务延迟的容忍度情况下，提出了一个动态的虚拟资源租赁算法，来使得云服务提供商尽可能达到利润最大化。本文研究虚拟资源高效率整合方法，提高计算中心的资源利用率，以达到减少能源消耗、降低运行成本的目的。</p></sec><sec id="s4"><title>2. 系统模型</title><sec id="s4_1"><title>2.1. 预备知识</title><p>虚拟资源可分为：计算型、通信型、磁盘型以及三者之间的互相组合 [<xref ref-type="bibr" rid="hanspub.17247-ref11">11</xref>] 。本文所提出的资源分配策略，在各类资源整体综合的基础上借助云端来进行，将虚拟资源分成最基本的三类：计算型、通信型、磁盘型。其中云端代表着云计算中的应用企业。用户通过“端”这个桥梁来获取服务，“端”向服务集群申请资源，在“端”进行资源统计。假设用P代表计算型资源，N代表通信带宽型资源，D代表磁盘存储型资源，那么对于用户i的申请，端可以建立一个向量来指向用户i所申请的资源，并且对用户申请进行统计，向服务集群进行集中申请。</p></sec><sec id="s4_2"><title>2.2. 问题模型</title><p>我们对整个资源申请过程建立模型。其中用户通过端向云服务集群申请资源，端在统计用户的申请后，向资源管理器递交统计结果，资源管理器通过综合分析资源申请与云服务集群中资源的使用情况，计算判断得出虚拟资源分配的最优配置，并将结果提交给云服务集群，最后云集群分配资源。图1为我们所提出的虚拟资源申请–分配模型。</p><p>模型将云资源申请–分配整体流程概括化表示。云用户是虚拟资源的申请者，代表云计算模型中的消费者。云服务集群为虚拟资源的提供者，代表云计算模型中的生产者。“端”代表云计算模型中的中间商，通过利用资源管理器，统计云用户的资源申请，在进行综合分析的基础上，向云集群申请到合适的资源并分配给云用户。这样也就完成了一次云资源申请–分配的流程。</p><p>假设在某一时刻有n个用户向端提交资源申请，对于这一时刻，端对云用户所申请资源的统计结果用一个n &#215; 3的资源申请矩阵s1表示：</p><disp-formula id="hanspub.17247-formula164"><graphic xlink:href="http://html.hanspub.org/file/11-1540565x10_hanspub.png"  xlink:type="simple"/></disp-formula><p>假设服务集群中每个主机服务器能承载的最大资源数为。对于整个服务器集群，可分为三类：正在使用且已存储满、正在使用且未满、未使用。第一种可以不予考虑，第二种我们用资源可分配矩阵m表示，其中 表示第i台主机剩余可分配的资源。</p><disp-formula id="hanspub.17247-formula165"><graphic xlink:href="http://html.hanspub.org/file/11-1540565x11_hanspub.png"  xlink:type="simple"/></disp-formula><p>在对整个资源申请进行建模分析之后，虚拟资源分配问题可简化为两个分支：</p><p>一是如何将资源申请首先分配到运行中的未满服务器中；</p><p>二是如何将未分配的资源进行优化配置，使得新开服务器可以最佳利用。</p></sec><sec id="s4_3"><title>2.3. 解决方案</title><p>本文的虚拟资源申请—分配模型采用以下步骤：1) 检测运行中的服务器是否可继续分配；2) 可分配则分配并且继续检验；3) 若不可分配则将剩余申请进行综合配置并分配到新开服务器中。</p><p>第一个分支：检测运行中的服务器是否可继续分配，可以通过比对建立的两个矩阵。</p><disp-formula id="hanspub.17247-formula166"><graphic xlink:href="http://html.hanspub.org/file/11-1540565x12_hanspub.png"  xlink:type="simple"/></disp-formula><p>将申请资源矩阵与可分配资源矩阵进行逐一比对。考虑资源分配效率，比对若满足条件<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/11-1540565x13_hanspub.png" xlink:type="simple"/></inline-formula>≤<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/11-1540565x14_hanspub.png" xlink:type="simple"/></inline-formula>，则直接分配。分配完毕，双方更新，重新比对。这里我们新建立一个矩阵s2作为比对完成后的剩余资源申请矩阵，s2中的矩阵行存储比对完成后剩余矩阵，表示正在运行的服务器不能满足其需求，需要重开服务器。</p><p>图1. 虚拟资源分配模型</p><p>若矩阵s2非空，则表示有资源申请未满足，并且运行中的服务器已经不能满足资源分配需求，因此需要重开服务器。</p><p>这里我们引入线性不等式方程。通过求解线性不等式方程来使得新开服务器资源利用率达到最大。因为s2矩阵是从资源申请矩阵抽离出的一部分，我们假设仍有t个任务未分配，用如下矩阵表示：</p><disp-formula id="hanspub.17247-formula167"><graphic xlink:href="http://html.hanspub.org/file/11-1540565x16_hanspub.png"  xlink:type="simple"/></disp-formula><p>对于新开服务器，其能承载的最大资源数为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/11-1540565x17_hanspub.png" xlink:type="simple"/></inline-formula>，我们建立一个线性不等式方程。设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/11-1540565x18_hanspub.png" xlink:type="simple"/></inline-formula>为一台服务器的最佳配置，可列下列线性方程不等式：</p><disp-formula id="hanspub.17247-formula168"><graphic xlink:href="http://html.hanspub.org/file/11-1540565x19_hanspub.png"  xlink:type="simple"/></disp-formula><p>将此不等式进行整理得：</p><disp-formula id="hanspub.17247-formula169"><graphic xlink:href="http://html.hanspub.org/file/11-1540565x20_hanspub.png"  xlink:type="simple"/></disp-formula><p>对于此不等式，因为缺少目标函数，所以并没有确切的解。而解此不等式的最好办法是枚举所有可能性，即将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/11-1540565x21_hanspub.png" xlink:type="simple"/></inline-formula>中，从<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/11-1540565x22_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/11-1540565x23_hanspub.png" xlink:type="simple"/></inline-formula>枚举到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/11-1540565x24_hanspub.png" xlink:type="simple"/></inline-formula>，然后从其中选出最优解。针对虚拟资源的最优配置理论，我们再添加额外限制条件，令单台主机服务器接受最大数目的申请任务，即：令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/11-1540565x25_hanspub.png" xlink:type="simple"/></inline-formula>，使得max最大。</p><p>因为云计算面向的客户群是庞大的，同样资源申请数目也是庞大的。所以在建立的s2矩阵中，会有多行。因此若对s2直接处理，计算量很大。本文选择对s2进行分组，其中分组数目综合考虑云任务申请资源大小以及服务器的配置高低。假设分组完成后每组所含云任务数量为COUNT，此时的t = COUNT。再解上面的线性不等式，根据COUNT的数量来决定难易。</p></sec></sec><sec id="s5"><title>3. 仿真性能分析</title><sec id="s5_1"><title>3.1. 仿真环境</title><p>仿真平台使用Java在Eclipse上开发。平台模拟拥有一定数量服务器的数据中心，并随机产生一定数目的云任务用于实例验证。云任务的数目为1~7000，已开启的服务器数量定义为1~50台之间，未开启的服务器数目为0~500台。假定每台主机具有4 G内存、10 M带宽、10 G存储。</p></sec><sec id="s5_2"><title>3.2. 真性能与分析</title><p>1) 固定分组数目，对比先到先得策略与本文策略。</p><p>首先固定云任务分组数量为每组10个，随机产生100~7000个云任务，对比先到先得策略(First Come First Served)与本文策略，如图2所示。</p><p>系统在接受到虚拟云任务后，通过对云任务进行统计，得到在最优情况下需要开启的主机服务器数目，然后对比先到先得策略与本文策略实际开启的主机数目。图中显示，在云任务只有较少数量时，产生的主机额外开销比较大。但是随着云任务数量的增加，两种策略产生的主机额外开销基本稳定。通过对比，本文的策略优于先到先得策略，主机额外开销稳定在7%左右。</p><p>2) 分组数目对策略的影响</p><p>本文采取策略需要分组来使得新开主机达到最优利用，分组之后每组虚拟云任务数量一般在5~19之间，主要根据主机配置以及云任务大小来定。固定云任务数量为2000，通过对比每组6~19个云任务的分组，如图3所示，随着每组云任务数量的不断增多，额外主机开销渐趋稳定，但策略运行时间急剧增加。因此通过考虑各方面因素，每组云任务数量定在10~14，策略会达到最优。</p></sec></sec><sec id="s6"><title>4. 总结</title><p>本文研究在满足云计算环境用户资源申请的前提下，如何有效降低数据中心服务器的能耗。论文提</p><p>图2. 先到先得策略与本文策略下产生的额外主机开销对比</p><p>图3. 每组所含云任务数目不同情况下的额外主机开销与运行时间对比</p><p>出了一种高效率的虚拟资源分配策略，通过云中间商“端”对云用户虚拟任务进行统计，资源管理器对云任务进行分组，找到每一组中新开启主机的最优任务配比，以使主机服务器得到最大利用。模拟仿真了不同条件来测试策略的性能。结果表明，本文策略比先到先分配策略有优势，并且本文策略在云任务数量增多以及分组数目的变化的情况下均有一定的稳定性，能成功提高主机服务器的利用率。</p></sec><sec id="s7"><title>基金项目</title><p>本文得到国家自然科学基金项目(No. 61272093)，山东省高等学校科技计划项目(No. J15LN19, No. J13LN18)，青岛市博士后研究人员应用研究项目(云计算在矿山地质数据存储及分析中的应用)的支持。</p></sec><sec id="s8"><title>文章引用</title><p>于宁,张金泉,倪丽娜. 云计算中虚拟资源高效分配策略研究 An Efficient Virtual Resources Allocation Strategy for Cloud Computing[J]. 计算机科学与应用, 2016, 06(03): 184-189. http://dx.doi.org/10.12677/CSA.2016.63023</p></sec><sec id="s9"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.17247-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Ran, J.H., Li, S.Q., Liu, Y., et al. (2011) Study on Management and Dispatching of Virtual Computing Resources Based on Pool Theory. 2011 7th International Conference on Wireless Communications, Networking and Mobile Computing (WiCOM), Wuhan, 23-25 September 2011, 1-7.</mixed-citation></ref><ref id="hanspub.17247-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Gao, Y., Guan, H., Qi, Z., et al. (2013) A Multi-Objective Ant Colony System Algorithm for Virtual Machine Placement in Cloud Computing. Journal of Computer and System Sciences, 79, 1230-1242.  
&lt;br&gt;http://dx.doi.org/10.1016/j.jcss.2013.02.004</mixed-citation></ref><ref id="hanspub.17247-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Hassan, M.M. and Alamri, A. (2014) Virtual Machine Resource Al-location for Multimedia Cloud: A Nash Bargaining Approach. Procedia Computer Science, 34, 571-576. &lt;br&gt;http://dx.doi.org/10.1016/j.procs.2014.07.074</mixed-citation></ref><ref id="hanspub.17247-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">You, X., Xu, X., Wan, J., et al. (2009) Ras-m: Resource Allocation Strategy Based on Market Mechanism in Cloud Computing. ChinaGrid Annual Conference, ChinaGrid’09, Yantai, 21-22 August 2009, 256-263.</mixed-citation></ref><ref id="hanspub.17247-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Deng L, Yao L. (2015) Dynamic Allocation of Virtual Resources Based on Genetic Algorithm in the Cloud. Advances in Services Computing, 9464, 153-164.</mixed-citation></ref><ref id="hanspub.17247-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Chen, Z.G., Du, K.J., Zhan, Z., et al. (2015) Deadline Constrained Cloud Computing Resources Scheduling for Cost Optimization Based on Dynamic Ob-jective Genetic Algorithm. 2015 IEEE Congress on IEEE Evolutionary Computation (CEC), Sendai, 25-28 May 2015, 708-714.</mixed-citation></ref><ref id="hanspub.17247-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Huang, D., Du, P., Zhu, C., et al. (2015) Multi-Resource Packing for Job Scheduling in Virtual Machine Based Cloud Environment. 2015 IEEE Symposium on Service-Oriented System Engineering (SOSE), San Francisco Bay, 30 March- 3 April 2015, 216-221.</mixed-citation></ref><ref id="hanspub.17247-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Choi, J., Adufu, T., Kim, Y., et al. (2015) A Job Dispatch Optimization Method on Cluster and Cloud for Large-scale High-Throughput Computing Service. 2015 International Conference on Cloud and Autonomic Computing (ICCAC), Boston, 21-25 September 2015, 283-290.</mixed-citation></ref><ref id="hanspub.17247-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Liaqat, M., Ninoriya, S., Shuja, J., et al. (2016) Virtual Machine Migration Enabled Cloud Resource Management: A Challenging Task. arXiv preprint arXiv:1601.03854</mixed-citation></ref><ref id="hanspub.17247-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Zhou, A., Sun, Q., Sun, L., et al. (2015) Maximizing the Profits of Cloud Service Providers via Dynamic Virtual Resource Renting Approach. EURASIP Journal on Wireless Communications and Networking, 2015, 1-12.  
&lt;br&gt;http://dx.doi.org/10.1186/s13638-015-0256-y</mixed-citation></ref><ref id="hanspub.17247-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">周山杰. 云计算环境下面向任务分类的个性虚拟化策略[D]: [硕士学位论文]. 沈阳: 辽宁大学, 2012.</mixed-citation></ref></ref-list></back></article>