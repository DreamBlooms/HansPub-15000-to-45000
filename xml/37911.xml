<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">JISP</journal-id><journal-title-group><journal-title>Journal of Image and Signal Processing</journal-title></journal-title-group><issn pub-type="epub">2325-6753</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/JISP.2020.94021</article-id><article-id pub-id-type="publisher-id">JISP-37911</article-id><article-categories><subj-group subj-group-type="heading"><subject>JISP20200400000_77997842.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  图像边缘检测的量子算法
  Quantum Algorithm for Edge Detection
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>越</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>梁</surname><given-names>世东</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>中山大学物理学院物理系，广东 广州；香港城市大学物理系，香港</addr-line></aff><aff id="aff3"><addr-line>中山大学物理学院物理系，广东 广州；中山大学，光电材料与技术国家重点实验室，广东 广州中山大学，广东省显示材料与技术重点实验室，广东 广州</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>28</day><month>09</month><year>2020</year></pub-date><volume>09</volume><issue>04</issue><fpage>173</fpage><lpage>178</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    边缘检测是图像处理中的基本问题之一，边缘检测的许多算法是基于经典的图像处理技术。本文将介绍基于量子力学框架下的边缘检测量子算法，及其图像特征向量技术在图像检测中的应用。量子算法基于图像经典信息的量子化，通过图像处理中各类元素与量子力学基本物理量一一对应，通过图像特征构造的系统的哈密顿量，应用量子演化技术学习图像的轮廓，从而，给出我们期望的图像轮廓。我们应用像素灰度梯度、像素灰度的二阶差分、Sobel算子卷积等方法作为特征向量来构造哈密顿量。通过一组标准图(从BSDS500公开数据集的图片)测试我们的量子算法，结果显示我们的量子算法的灵敏度比传统Canny算法提高了25%，而且具有更强的抗噪声能力。
    Edge detection is one of the fundamental problems in the image processing. Many algorithms of edge detection are based on the classical image processing technology. In this paper, we introduce the quantum algorithm of edge detection based on quantum mechanics and its application in image detection. Quantum algorithm is based on the quantization of the classical information of the image and one-to-one correspondence between various elements of the image processing and the concept and variables of quantum mechanics. By constructing the Hamiltonian for the image features, the quantum evolution technology for the quantum information of images learns the profile of the image, so as to give the desired image contour. We use the techniques of the pixel gray gradient, second order difference of pixel gray, Sobel operator convolution as the feature vectors to construct Hamiltonian. Our quantum algorithms are tested by a set of standard pictures (coming from BSDS500 exposed database). The testing results show that our quantum algorithm has a 25% higher sensitivity than the traditional Canny algorithm and has a stronger denoise ability. 
  
 
</p></abstract><kwd-group><kwd>量子算法，边缘检测，特征向量，哈密顿量设计，阈值控制, Quantum Algorithm</kwd><kwd> Edge Detection</kwd><kwd> Feature Vector</kwd><kwd> Hamiltonian Design</kwd><kwd> 
Threshold Control</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>边缘检测是图像处理中的基本问题之一，边缘检测的许多算法是基于经典的图像处理技术。本文将介绍基于量子力学框架下的边缘检测量子算法，及其图像特征向量技术在图像检测中的应用。量子算法基于图像经典信息的量子化，通过图像处理中各类元素与量子力学基本物理量一一对应，通过图像特征构造的系统的哈密顿量，应用量子演化技术学习图像的轮廓，从而，给出我们期望的图像轮廓。我们应用像素灰度梯度、像素灰度的二阶差分、Sobel算子卷积等方法作为特征向量来构造哈密顿量。通过一组标准图(从BSDS500公开数据集的图片)测试我们的量子算法，结果显示我们的量子算法的灵敏度比传统Canny算法提高了25%，而且具有更强的抗噪声能力。</p></sec><sec id="s2"><title>关键词</title><p>量子算法，边缘检测，特征向量，哈密顿量设计，阈值控制</p></sec><sec id="s3"><title>Quantum Algorithm for Edge Detection</title><p>Yue Li<sup>1,2</sup>, Shidong Liang<sup>1,3,4*</sup></p><p><sup>1</sup>Department of Physics, Sun Yat-sen University, Guangzhou Guangdong</p><p><sup>2</sup>Department of Physics, City University of Hong Kong, Hong Kong</p><p><sup>3</sup>State Key Laboratory of Optoelectronic Material and Technology, Sun Yat-sen University, Guangzhou Guangdong</p><p><sup>4</sup>Guangdong Province Key Laboratory of Display Material and Technology, Sun Yat-sen University, Guangzhou Guangdong</p><p><img src="//html.hanspub.org/file/1-2670235x4_hanspub.png" /></p><p>Received: Sep. 5<sup>th</sup>, 2020; accepted: Sep. 21<sup>st</sup>, 2020; published: Sep. 28<sup>th</sup>, 2020</p><p><img src="//html.hanspub.org/file/1-2670235x6_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>Edge detection is one of the fundamental problems in the image processing. Many algorithms of edge detection are based on the classical image processing technology. In this paper, we introduce the quantum algorithm of edge detection based on quantum mechanics and its application in image detection. Quantum algorithm is based on the quantization of the classical information of the image and one-to-one correspondence between various elements of the image processing and the concept and variables of quantum mechanics. By constructing the Hamiltonian for the image features, the quantum evolution technology for the quantum information of images learns the profile of the image, so as to give the desired image contour. We use the techniques of the pixel gray gradient, second order difference of pixel gray, Sobel operator convolution as the feature vectors to construct Hamiltonian. Our quantum algorithms are tested by a set of standard pictures (coming from BSDS500 exposed database). The testing results show that our quantum algorithm has a 25% higher sensitivity than the traditional Canny algorithm and has a stronger denoise ability.</p><p>Keywords:Quantum Algorithm, Edge Detection, Feature Vector, Hamiltonian Design, Threshold Control</p><disp-formula id="hanspub.37911-formula2"><graphic xlink:href="//html.hanspub.org/file/1-2670235x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/1-2670235x8_hanspub.png" /> <img src="//html.hanspub.org/file/1-2670235x9_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>在科学技术快速发展的今日，图像处理技术在科研、军事、工业生产、卫生、教育等与人类生活息息相关的领域得到广泛的应用。人脸识别、自动驾驶、各种无人服务，这些新兴技术都体现了机器视觉系统正确认知客观世界的重要性。1980年，MIT的Marr和Hildreth整合并提出了基本的边缘检测理论 [<xref ref-type="bibr" rid="hanspub.37911-ref1">1</xref>]。1986年，Canny在IEEE的期刊发表了著名的A computational approach to edge detection，带来了流行至今的经典Canny边缘检测算法 [<xref ref-type="bibr" rid="hanspub.37911-ref2">2</xref>]，包含了高斯滤波、非极大抑制、双阈值检测等步骤，在一般情况下的图像有不错的准确度。1987年JUN S. HUANG和DONG H. TSENG提出了基于相似度检验的边缘检测统计理论 [<xref ref-type="bibr" rid="hanspub.37911-ref3">3</xref>]。2003年，Zhao，Wang和Yu将细胞神经网络CNN和吉布斯图像类比，并应用在基因算法来检测图像边缘 [<xref ref-type="bibr" rid="hanspub.37911-ref4">4</xref>]。2010年后，Hongpeng TIAN使用了Julong DENG提出的灰度理论来进行边缘检测 [<xref ref-type="bibr" rid="hanspub.37911-ref5">5</xref>]。Jan J. Koenderink则重新审视了前人工作，改进了边缘检测理论并带来了Three Pixels Representation方案 [<xref ref-type="bibr" rid="hanspub.37911-ref6">6</xref>]。</p><p>量子力学是现代物理的重要基础，为微观系统提供了完整的理论和数学框架。基于量子力学理论，系统的状态由波函数描述，状态的演化遵守薛定谔方程，系统的演化依赖系统能量的哈密顿量算符。这一理论框架近年来被推广到量子信息和量子计算领域。经典比特推广到包含量子相干性的量子比特，通过量子力学的理论框架来处理经典信息和图像分析和学习等问题。</p><p>本世纪初开始，出现许多应用量子力学方法在图像处理的研究。Eldar和Oppenheim尝试在信号处理中使用量子方法，利用量子测量等概念进行信号估计和检测 [<xref ref-type="bibr" rid="hanspub.37911-ref7">7</xref>]。Aytekin提出了一种应用量子力学方法，通过求解图像信息的薛定谔方程，给出图像波函数的分割部分 [<xref ref-type="bibr" rid="hanspub.37911-ref8">8</xref>]。Fu和Lou等人提出医学图像边缘检测的量子算法 [<xref ref-type="bibr" rid="hanspub.37911-ref9">9</xref>] [<xref ref-type="bibr" rid="hanspub.37911-ref10">10</xref>]。Youssry、El-Rafei和Elramly比较了量子算法和经典算法的图像处理，并给出灵敏度与特异度测试 [<xref ref-type="bibr" rid="hanspub.37911-ref11">11</xref>]。Mastriani引入了量子布洛赫球的概念量子化经典信息，并用于图像边缘检测 [<xref ref-type="bibr" rid="hanspub.37911-ref12">12</xref>] [<xref ref-type="bibr" rid="hanspub.37911-ref13">13</xref>] [<xref ref-type="bibr" rid="hanspub.37911-ref14">14</xref>]。2019年，Yuan和Salvador等人利用NEQR模型和量子并行算法，设计了一个量子比较器来实现边缘检测的量子算法。该算法包括了图像平滑、寻找高光梯度和边缘跟踪三步骤 [<xref ref-type="bibr" rid="hanspub.37911-ref15">15</xref>]。这些研究显示出量子算法在图像边缘检测方面具有超过经典算法的优越性。</p><p>本文先介绍图像边缘检测中的量子算法的基本理论框架。在第二节，介绍量子信息的布洛赫球表示和经典量子信息的对应，以及在图像边缘检测的基本理论框架。然后，在第三节，我们给出图像边缘检测的哈密顿量的构造，以及图像边缘检测的特征向量算法，并从无噪声下的单体对象推广到含噪声的复杂对象。在第四节，我们给出图像边缘检测的量子算法，并在第五节给出图像边缘检测的测试结果，及其各种算法的比较分析。我们给出基于特征向量技术的量子算法在灵敏度和特异度测试优于经典Canny边缘检测算法。最后，我们给出总结与展望。</p></sec><sec id="s6"><title>2. 经典信息与量子信息对应</title><sec id="s6_1"><title>2.1. 布洛赫球和量子比特</title><p>经典的信息用二值函数(0, 1)表示(比特)。基于量子力学框架，二值函数表示的经典信息可以推广为0和1的叠加态表示，即量子比特(qubit)，</p><p>量子比特表示为</p><p>| ψ 〉 = α | 0 〉 + β | 1 〉 (1)</p><p>满足</p><p>| α | 2 + | β | 2 = 1 (2)</p><p>或者</p><p>| ψ 〉 = cos θ | 0 〉 + e i ϕ sin θ | 1 〉 (3)</p><p>状态 | 0 〉 可以由向量 ( 1 , 0 ) T 表示，而状态 | 1 〉 可以由向量 ( 0 , 1 ) T 表示。因此，系统的一般状态可以由向量 ( α , β ) T 表示。通过(1)或者(3)，可以将经典比特推广到量子比特，并用布洛赫球面来表示，见图1。状态 | 0 〉 位于布洛赫球面的北极，状态 | 1 〉 处于布洛赫球面的南极。叠加态 | ψ 〉 可以由前面两个互相正交的基底以复数叠加构成。布洛赫球面提供了一种可视化单个量子比特状态的有效方法，经常用作有关量子计算和量子信息的测试，能更加直观地表示量子二态问题。经典比特位于布洛赫球面上的0和1两个点。而量子比特可以看成是把经典信息推广到复的布洛赫球面上。在执行测量操作前，图像像素均处在和的叠加态上，即可以位于球面上任意一点。</p></sec><sec id="s6_2"><title>2.2. 经典边缘检测与量子力学概念的类比</title><p>图像边缘检测可以看成是通过一个二态封闭量子系统。待处理图像中的每个像素都在量子比特的布洛赫球面上的一个位置。我们希望检测后得到的边缘图每个像素占据南极和北极两个量子态之一。在边缘检测中属于前景的像素应该演变为相同的最终稳定状态，而属背景类的像素应该以更高的概率结束占据另一个稳定状态。背景类对应基态 | 0 〉 ，而前景类对应激发态 | 1 〉 。因此，未经过量子算法测量的原像素处于基态和激发态的叠加态。</p><p>因此，像素隶属于背景的概率是 | α | 2 ，而属于前景的概率是 | β | 2 。为了确定像素的类，每个态都必须依据薛定谔方程来演化至末态。因为将系统引至稳定态的哈密顿量是由一组基于图像的特征矩阵构成，所以系统的哈密顿量必须依赖于该特征向量。阈值操作等同于测量操作，使完成了演化后的量子态发生坍缩，使得像素坍缩到前景类或者背景类 [<xref ref-type="bibr" rid="hanspub.37911-ref11">11</xref>]。在图2，我们给出了经典--量子类比。</p><p>图1. 经典比特和量子比特的布洛赫球面</p><p>图2. 单体对象的边缘检测和量子力学间的类比</p></sec><sec id="s6_3"><title>2.3. 薛定谔方程的解</title><p>每个像素对应的初态都通过薛定谔方程演化到末态。在任意时刻t，薛定谔方程的一般解可以表示为</p><disp-formula id="hanspub.37911-formula3"><label>(4)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/1-2670235x27_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中是初态，U是幺正算符，它表示量子态演化，也称为演化算符。一般来说，对于不同形式的哈密顿量，演化算符有三种可能的表达形式 [<xref ref-type="bibr" rid="hanspub.37911-ref11">11</xref>] [<xref ref-type="bibr" rid="hanspub.37911-ref19">19</xref>]：</p><p>(1) 哈密顿量不依赖时间，演化算符可以表示为</p><p>U ( t , t 0 ) = e − i ℏ ( t − t 0 ) H (5)</p><p>为了方便，可以令 t 0 = 0 ，即表示初态时刻为零，这样，t时刻的量子态表示为</p><p>| ψ ( t ) 〉 = e − i ℏ t H | ψ ( t 0 ) 〉 (6)</p><p>(2) 哈密顿量与时间有关，不同时间的算符H是可交换的，即</p><p>[ H ( t 1 ) , H ( t 2 ) ] = H ( t 1 ) H ( t 2 ) − H ( t 2 ) H ( t 1 ) = 0 (7)</p><p>这时，演化算符表示为</p><p>U ( t , t 0 ) = e − i ℏ ∫ t 0 t H ( τ ) d τ (8)</p><p>同样令 t 0 = 0 ，t时刻的量子态表示为</p><p>| ψ ( t ) 〉 = e − i ℏ ∫ 0 t H ( τ ) d τ | ψ ( 0 ) 〉 (9)</p><p>(3) 哈密顿量与时间有关，但不同时间的算符H是不可交换的，即</p><p>[ H ( t 1 ) , H ( t 2 ) ] = H ( t 1 ) H ( t 2 ) − H ( t 2 ) H ( t 1 ) ≠ 0 (10)</p><p>在这种情况下，不可能得到封闭形式的解，仅有数值解和无穷级数解。</p></sec></sec><sec id="s7"><title>3. 量子力学的构造</title><p>量子算法成功的关键是构造适当的哈密顿算符。哈密顿算符是决定状态如何随时间演变的因素，因此它将由 n &#215; n 矩阵表示，其中n是状态空间的维度。哈密顿算符通常是厄米算子，以确保其特征值是实的。在图像边缘检测中，哈密顿量将表示为2 &#215; 2厄米矩阵。</p><p>为了不出现无穷级数解或数值解，哈密顿量应该满足前一小节中的情况(1)或(2)。我们构造哈密顿量的矩阵形式，使得它具有相同的时间依赖性。即</p><p>H ( t ) = g ( t ) S &#175; (11)</p><p>其中 S &#175; 是2&#215;2矩阵，原则上g是t的任意函数，这样，有</p><p>[ H ( t 1 ) , H ( t 2 ) ] = g ( t 1 ) S &#175; g ( t 2 ) S &#175; − g ( t 2 ) S &#175; g ( t 1 ) S &#175; = 0 (12)</p><p>通过求解薛定谔方程执行测量的某个时刻操作。为了解决这个问题，对哈密顿量附加一些条件：系统的末态得出的概率必须收敛到特定值，以确保系统演化时间够长时，获得的够准确的所需的概率。选择恰当的函数g使得等式(6)中的积分在 t → ∞ 收敛。令g函数为</p><disp-formula id="hanspub.37911-formula4"><label>(13)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/1-2670235x41_hanspub.png"  xlink:type="simple"/></disp-formula><p>这样满足了积分收敛的条件</p><disp-formula id="hanspub.37911-formula5"><label>(14)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/1-2670235x42_hanspub.png"  xlink:type="simple"/></disp-formula><p>这样，在给定二态量子力学系统的初始和最终状态，这形式的哈密顿量，可以使得初态正确演化为所需的末态。如果假设初始状态为 | 0 〉 并且将像素分类为背景像素，则最终状态应为 | 0 〉 。基于哈密顿量的这种构造，哈密顿量可以表示为 [<xref ref-type="bibr" rid="hanspub.37911-ref16">16</xref>]，</p><p>H = 2 i ℏ π e − t ( 0 − 1 1 0 ) (15)</p><p>另一方面，如果初态为 | 0 〉 且像素分类为前景像素，那么末态应为 | 1 〉 ，这时哈密顿量表示为</p><p>H = 1 2 i ℏ π e − t ( 0 − 1 1 0 ) (16)</p><p>这表明对于该特定的初始状态，哈密顿量的矩阵部分在背景和前景像素情况下都相同。两种情况之间的差异是常量。</p><p>也就是说，哈密顿量的具体形式依赖于像素提取的特征，并给出态的正确演化。这样，对于图像边缘检测，哈密顿量可以推广为</p><p>H = i ℏ π f ( x &#175; ) ( 0 − 1 1 0 ) (17)</p><p>其中 f ( x ) 是像素点的特征 x &#175; 的函数，也是哈密顿量中唯一未知量。函数f可以取不同的形式，取决于提取的特征向量，如下</p><p>f ( x ) = ∑ n = 0 m a n x n n ( m ∈ Z + ) ， f ( x ) = ∑ n = 0 m a n x n ( m ∈ Z + ) ， f ( x ) = W 2 ⋅ 1 1 + e − W 1 ⋅ X + b 1 + b 2 (18)</p><p>具体来讲，将待处理像素和其最临近的四个像素的差作为像素特征向量，以整个图像像素灰度矩阵为 p i j ，图3中 p 22 为待处理像素，</p><p>图3. 像素排列及四方向灰度差提取</p><p>特征向量 x &#175; 由四部分组成，分别是：向上灰度差， x 1 = p 22 − p 21 。向右灰度差， x 2 = p 22 − p 32 。向左灰度差， x 3 = p 22 − p 23 向下灰度差， x 4 = p 22 − p 12 。</p><p>特征向量函数 f ( x &#175; ) 表示为，</p><p>f ( x &#175; ) = a 0 + a 1 x 1 + a 2 x 2 2 + a 3 x 3 3 + a 4 x 4 4 (19)</p><p>其中系数 a 0 , a 1 , a 2 , a 3 , a 4 是需要训练的特征参数。也可以用图2模仿 [<xref ref-type="bibr" rid="hanspub.37911-ref9">9</xref>] 的方法来考察 p 23 的特征。</p><p>我们使用监督学习方法来估计 f ( x &#175; ) 的系数 a n 。使用的样本可以来自有限大小的图像窗口，选择的是随机矩形窗口。此窗口的大小需小于原图像的10%，并且应包含图像前景和背景。我们选取的窗口大小为原图的1/16。</p><p>训练成功的判据为算法输出窗口与训练窗口的Ground Truth (下称GT)图像的相同像素数量(前景像素加背景像素)达到最大值，即，</p><p>e i j = { 1 p i j t r a i n ≠ p i j w i n d o w 0 p i j t r a i n = p i j w i n d o w (20)</p><p>当 ∑ e i j 训练误差值取最小值时， f ( x &#175; ) 的系数 a n 训练成功。</p></sec><sec id="s8"><title>4. 核心算法</title><p>输入图像中的每个像素都可被当作一个量子态。第一步：将像素初始化为状态 | 0 〉 的特定状态。选择任意初始状态不会影响结果。由于哈密顿量是某个像素的特征的函数，因此要对每个像素进行运算。第二步是构建哈密顿量：从理论上讲，每个系统都可以拥有特定的哈密顿算符。然而，我们决定对图像或类似图像中的所有像素使用单一形式的算符。哈密顿量的形式是从基于图像的特征估计构造的，所选图像窗口的监督学习训练得到特征向量的参数。特征可以是像素的灰度差，或者可以是从围绕像素的邻域导出的特征向量(Sobel等各类算子卷积)。训练结果要求总误差值达到最小。第三步：把运算算符代入薛定谔方程中求解。解决方案应该导致概率收敛到特定值，以便达到稳定状态，避免了时间相关的测量。第四步：使用阈值处理执行测量操作。指定阈值T。如果像素为前景 | β | 2 的概率大于阈值T，则像素的类将是前景，否则将其分类为背景。对输入图像中的每个像素重复该过程。核心阈值T的选取方法并未唯一。本文的处理方法是利用步骤二提取的训练窗口，在训练结束后的窗口边界寻找数值极大值，在将此极大值归一化为阈值T。算法的流程图见图4。特征向量选取见(19)式及之前的说明。</p><p>图4. 量子算法基本流程图</p></sec><sec id="s9"><title>5. 测试结果与分析</title><sec id="s9_1"><title>5.1. 实验准备</title><p>本文最终使用了九种像素的特征向量：Sobel算子卷积矩阵、Prewitt算子卷积矩阵，Roberts算子卷积矩阵，Log算子卷积矩阵，Laplace算子卷积矩阵，灰度矩阵旋度，灰度值上下左右四个方向的梯度，灰度值梯度的模矩阵，像素梯度的二阶差分矩阵。标准对照选用经典Canny边缘检测算法，并附带了数据集自带的原图和Ground Truth图片。</p><p>本实验全部算法使用MATLAB编写，版本为MATLABR2018b。实验用计算机弘基Swift SF314-51；处理器为Intel(R)Core(TM)i5-7200U CPU；系统为windows10，64位操作系统；内存8 GB；二核四线程。实验中的处理图像大部分来自加州大学伯克利分校的公开数据集BSDS500 [<xref ref-type="bibr" rid="hanspub.37911-ref17">17</xref>] [<xref ref-type="bibr" rid="hanspub.37911-ref18">18</xref>]，其他来自Windows画图工具。</p><p>衡量标准采用sensitivity灵敏度和specificity特异度。灵敏度的定义为通过分割算法正确地分类前景的像素的数量与图像中的前景像素的总数量的比率。特异性的定义是通过分割算法正确分类为背景的像素数量与图像中背景像素的总数量的比率。</p><p>Sensitivity = TP TP + FN (21)</p><p>Specificity = TN TN + FP (22)</p><p>上面公式中，“TP”是被算法正确分类的前景的个数。“FN”是算法将原图前景错误输出成背景的个数。“TN”是被算法正确分类的背景的个数。“FP”是算法将原图前景错误输出成背景的个数。理想目标为量子算法输出的边缘图像的灵敏度和特异度均达到100%，即输出图像和目标图像的GT图片完全吻合。“TP”可通过比较GT图和结果图的相同白色像素数量获得；“FN”可通过比较GT图白色像素和结果图的黑色像素的重合数获得；“TN”可通过比较GT图和结果图的相同黑色像素数量获得；“FN”可通过比较GT图黑色像素和结果图的白色像素的重合数获得，具体见图5结果评估矩阵。</p><p>图5. 结果评估矩阵</p></sec><sec id="s9_2"><title>5.2. 测试结果</title><p>基于上述量子算法，我们测试七组图片，它们来自BSDS500数据集，一组为windows画图工具绘制的亮度渐变图，并对上述算法得到的边缘图像与数据集自带的GT图像比较，进行灵敏度和特异度测试。图6~13展示了来自BSDS500的待处理图像，图像的GT图，九种基于不同技术的量子算法输出的边缘图像和经典Canny算法的边缘图像。其中图组11中的原图添加了均值为0，方差为0.2的高斯噪声。表1给出这些算法(包括量子算法和经典算法)的统计结果，包括八组图像的平均灵敏度和特异度。见图6~13。</p><p>图6. 亮度渐变图像的边缘检测</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Test results of nine quantum edge detection algorithms and Canny edge detection algorithm</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >特征</th><th align="center" valign="middle"  colspan="2"  >sobel算子</th><th align="center" valign="middle"  colspan="2"  >prewitt算子</th><th align="center" valign="middle"  colspan="2"  >roberts算子</th><th align="center" valign="middle"  colspan="2"  >log算子</th><th align="center" valign="middle"  colspan="2"  >拉普拉斯算子</th></tr></thead><tr><td align="center" valign="middle" >Image</td><td align="center" valign="middle" >sensitivity %</td><td align="center" valign="middle" >specificity %</td><td align="center" valign="middle" >Sensitivity %</td><td align="center" valign="middle" >specificity %</td><td align="center" valign="middle" >sensitivity %</td><td align="center" valign="middle" >specificity %</td><td align="center" valign="middle" >sensitivity %</td><td align="center" valign="middle" >specificity %</td><td align="center" valign="middle" >sensitivity %</td><td align="center" valign="middle" >specificity %</td></tr><tr><td align="center" valign="middle" >渐变</td><td align="center" valign="middle" >30.96</td><td align="center" valign="middle" >69.04</td><td align="center" valign="middle" >7.53</td><td align="center" valign="middle" >92.47</td><td align="center" valign="middle" >30.27</td><td align="center" valign="middle" >69.73</td><td align="center" valign="middle" >13.51</td><td align="center" valign="middle" >86.49</td><td align="center" valign="middle" >8.31</td><td align="center" valign="middle" >91.69</td></tr><tr><td align="center" valign="middle" >人脸</td><td align="center" valign="middle" >40.66</td><td align="center" valign="middle" >87.68</td><td align="center" valign="middle" >47.39</td><td align="center" valign="middle" >82.35</td><td align="center" valign="middle" >21.33</td><td align="center" valign="middle" >87.18</td><td align="center" valign="middle" >34.24</td><td align="center" valign="middle" >89.5</td><td align="center" valign="middle" >30.23</td><td align="center" valign="middle" >90.21</td></tr><tr><td align="center" valign="middle" >人物</td><td align="center" valign="middle" >34.09</td><td align="center" valign="middle" >88.7</td><td align="center" valign="middle" >37.54</td><td align="center" valign="middle" >86.69</td><td align="center" valign="middle" >28.43</td><td align="center" valign="middle" >86.02</td><td align="center" valign="middle" >20.05</td><td align="center" valign="middle" >90.69</td><td align="center" valign="middle" >22.84</td><td align="center" valign="middle" >89.26</td></tr><tr><td align="center" valign="middle" >动物</td><td align="center" valign="middle" >47.79</td><td align="center" valign="middle" >86.13</td><td align="center" valign="middle" >46.63</td><td align="center" valign="middle" >86.4</td><td align="center" valign="middle" >30.8</td><td align="center" valign="middle" >89.15</td><td align="center" valign="middle" >18.84</td><td align="center" valign="middle" >91.16</td><td align="center" valign="middle" >22.74</td><td align="center" valign="middle" >90.12</td></tr><tr><td align="center" valign="middle" >植物</td><td align="center" valign="middle" >38.27</td><td align="center" valign="middle" >89.38</td><td align="center" valign="middle" >27.47</td><td align="center" valign="middle" >94.11</td><td align="center" valign="middle" >25.75</td><td align="center" valign="middle" >95.15</td><td align="center" valign="middle" >20.64</td><td align="center" valign="middle" >94.12</td><td align="center" valign="middle" >23.77</td><td align="center" valign="middle" >91.77</td></tr><tr><td align="center" valign="middle" >风景</td><td align="center" valign="middle" >42.86</td><td align="center" valign="middle" >84.62</td><td align="center" valign="middle" >33.32</td><td align="center" valign="middle" >90.02</td><td align="center" valign="middle" >29.93</td><td align="center" valign="middle" >82.47</td><td align="center" valign="middle" >30.11</td><td align="center" valign="middle" >83.22</td><td align="center" valign="middle" >32.41</td><td align="center" valign="middle" >90.47</td></tr><tr><td align="center" valign="middle" >飞机</td><td align="center" valign="middle" >45.12</td><td align="center" valign="middle" >97.81</td><td align="center" valign="middle" >46.09</td><td align="center" valign="middle" >97.52</td><td align="center" valign="middle" >45.92</td><td align="center" valign="middle" >98.25</td><td align="center" valign="middle" >37.13</td><td align="center" valign="middle" >97.64</td><td align="center" valign="middle" >39.79</td><td align="center" valign="middle" >97.7</td></tr><tr><td align="center" valign="middle" >噪声</td><td align="center" valign="middle" >23.26</td><td align="center" valign="middle" >95.5</td><td align="center" valign="middle" >16.63</td><td align="center" valign="middle" >98.23</td><td align="center" valign="middle" >NA</td><td align="center" valign="middle" >NA</td><td align="center" valign="middle" >8.11</td><td align="center" valign="middle" >96.45</td><td align="center" valign="middle" >NA</td><td align="center" valign="middle" >NA</td></tr><tr><td align="center" valign="middle" >平均</td><td align="center" valign="middle" >37.88</td><td align="center" valign="middle" >87.36</td><td align="center" valign="middle" >32.83</td><td align="center" valign="middle" >90.97</td><td align="center" valign="middle" >30.35</td><td align="center" valign="middle" >86.85</td><td align="center" valign="middle" >22.83</td><td align="center" valign="middle" >91.16</td><td align="center" valign="middle" >25.73</td><td align="center" valign="middle" >91.60</td></tr><tr><td align="center" valign="middle" >特征</td><td align="center" valign="middle"  colspan="2"  >旋度算子</td><td align="center" valign="middle"  colspan="2"  >上下左右像素灰度差</td><td align="center" valign="middle"  colspan="2"  >像素灰度梯度</td><td align="center" valign="middle"  colspan="2"  >像素灰度梯度二阶差分</td><td align="center" valign="middle"  colspan="2"  >经典Canny算法</td></tr><tr><td align="center" valign="middle" >Image</td><td align="center" valign="middle" >sensitivity %</td><td align="center" valign="middle" >Specificity %</td><td align="center" valign="middle" >Sensitivity %</td><td align="center" valign="middle" >Specificity %</td><td align="center" valign="middle" >sensitivity %</td><td align="center" valign="middle" >specificity %</td><td align="center" valign="middle" >sensitivity %</td><td align="center" valign="middle" >specificity %</td><td align="center" valign="middle" >sensitivity %</td><td align="center" valign="middle" >specificity %</td></tr><tr><td align="center" valign="middle" >渐变</td><td align="center" valign="middle" >12.41</td><td align="center" valign="middle" >87.59</td><td align="center" valign="middle" >9.38</td><td align="center" valign="middle" >90.63</td><td align="center" valign="middle" >30.73</td><td align="center" valign="middle" >69.27</td><td align="center" valign="middle" >13.66</td><td align="center" valign="middle" >86.34</td><td align="center" valign="middle" >5.26</td><td align="center" valign="middle" >94.74</td></tr><tr><td align="center" valign="middle" >人脸</td><td align="center" valign="middle" >25.58</td><td align="center" valign="middle" >89.15</td><td align="center" valign="middle" >30.55</td><td align="center" valign="middle" >90.7</td><td align="center" valign="middle" >76.82</td><td align="center" valign="middle" >68.30</td><td align="center" valign="middle" >14.6</td><td align="center" valign="middle" >90.77</td><td align="center" valign="middle" >20.53</td><td align="center" valign="middle" >93.78</td></tr><tr><td align="center" valign="middle" >人物</td><td align="center" valign="middle" >23.38</td><td align="center" valign="middle" >86.4</td><td align="center" valign="middle" >37.04</td><td align="center" valign="middle" >83.52</td><td align="center" valign="middle" >36.48</td><td align="center" valign="middle" >86.63</td><td align="center" valign="middle" >24.51</td><td align="center" valign="middle" >84.04</td><td align="center" valign="middle" >18.27</td><td align="center" valign="middle" >92.14</td></tr><tr><td align="center" valign="middle" >动物</td><td align="center" valign="middle" >27.45</td><td align="center" valign="middle" >89.86</td><td align="center" valign="middle" >40.32</td><td align="center" valign="middle" >88.13</td><td align="center" valign="middle" >48.38</td><td align="center" valign="middle" >85.9</td><td align="center" valign="middle" >23.79</td><td align="center" valign="middle" >92.62</td><td align="center" valign="middle" >21.87</td><td align="center" valign="middle" >94.82</td></tr><tr><td align="center" valign="middle" >植物</td><td align="center" valign="middle" >15.83</td><td align="center" valign="middle" >92.94</td><td align="center" valign="middle" >45.21</td><td align="center" valign="middle" >88.25</td><td align="center" valign="middle" >38.43</td><td align="center" valign="middle" >96.09</td><td align="center" valign="middle" >21.65</td><td align="center" valign="middle" >93.05</td><td align="center" valign="middle" >15.76</td><td align="center" valign="middle" >95.4</td></tr><tr><td align="center" valign="middle" >风景</td><td align="center" valign="middle" >15.31</td><td align="center" valign="middle" >93.9</td><td align="center" valign="middle" >26.2</td><td align="center" valign="middle" >88.4</td><td align="center" valign="middle" >45.94</td><td align="center" valign="middle" >86.99</td><td align="center" valign="middle" >30.76</td><td align="center" valign="middle" >89.43</td><td align="center" valign="middle" >21.95</td><td align="center" valign="middle" >94.19</td></tr><tr><td align="center" valign="middle" >飞机</td><td align="center" valign="middle" >35.27</td><td align="center" valign="middle" >97.22</td><td align="center" valign="middle" >53.83</td><td align="center" valign="middle" >97.52</td><td align="center" valign="middle" >68.2</td><td align="center" valign="middle" >97.5</td><td align="center" valign="middle" >45.36</td><td align="center" valign="middle" >96.4</td><td align="center" valign="middle" >33.66</td><td align="center" valign="middle" >99.36</td></tr><tr><td align="center" valign="middle" >噪声</td><td align="center" valign="middle" >NA</td><td align="center" valign="middle" >NA</td><td align="center" valign="middle" >22.79</td><td align="center" valign="middle" >97.96</td><td align="center" valign="middle" >26.11</td><td align="center" valign="middle" >98.11</td><td align="center" valign="middle" >12.11</td><td align="center" valign="middle" >94.06</td><td align="center" valign="middle" >17</td><td align="center" valign="middle" >98.59</td></tr><tr><td align="center" valign="middle" >平均</td><td align="center" valign="middle" >22.89</td><td align="center" valign="middle" >91.01</td><td align="center" valign="middle" >33.17</td><td align="center" valign="middle" >90.64</td><td align="center" valign="middle" >46.39</td><td align="center" valign="middle" >86.10</td><td align="center" valign="middle" >23.31</td><td align="center" valign="middle" >90.84</td><td align="center" valign="middle" >19.29</td><td align="center" valign="middle" >95.38</td></tr></tbody></table></table-wrap><p>表1. 九种量子边缘检测算法算法和Canny边缘检测算法的测试结果</p></sec><sec id="s9_3"><title>5.3. 分析</title><p>在亮度渐变图(图6)中，传统的Canny算法只能检测到强度变化较大的边缘，获得了5.26%的灵敏度，而使用Sobel算子、Roberts算子和像素梯度的量子算法的灵敏度均在30%以上。</p><p>在人脸图中(图7)，传统算法的灵敏度为20.53%，而Prewitt算子和Roberts算子的量子算法的灵敏度为40%以上，像素梯度的灵敏度为达到了76.82%。人物图中(图8)，传统Canny算法灵敏度为18.27%，而Prewitt算子、像素灰度差、像素灰度梯度的量子算法的灵敏度都大于36%。</p><p>在蝴蝶图中(图9)，传统算法的灵敏度为21.87%，而Sobel算子、Prewitt算子和像素梯度的量子算法取得了46%以上的灵敏度。在植物图中(图10)，传统算法的结果为15.76%，Sobel算子和梯度算子的量子算法的结果在38%左右，梯度差的量子算法取得的灵敏度为45.21%。</p><p>图7. BSDS500人脸图像的边缘检测</p><p>图8. BSDS500人物图像的边缘检测</p><p>在金字塔风景图中(图11)，传统算法的灵敏度为21.95%，Sobel算子和像素梯度的量子算法的结果均大于42%。</p><p>在飞机图片(图12)的结果显示，传统算法的灵敏度为33.66%，Sobel算子、Prewitt算子、Roberts算子的量子算法灵敏度落在45.10%~46.10%，梯度差量子算法的灵敏度为53.83%，像素梯度的算法结果为68.20%。</p><p>在天鹅图像(图13)中，我们添加了噪声，用来评价噪声存在时的算法性能。由于边缘检测算法更加注重对主体的边缘提取，所以更加优先考察结果中的灵敏度sensitivity。总体来说，大多数结果都优于传统的经典算法。在渐变图中，传统的Canny算法只能检测到强度变化较大的边缘，获得了5.26%的灵敏度，而使用Sobel算子、Roberts算子和像素梯度的量子算法的灵敏度均在30%以上。</p><p>图9. BSDS500蝴蝶图像的边缘检测</p><p>图10. BSDS500植物图像的边缘检测</p><p>图11. BSDS500金字塔图像的边缘检测</p><p>图12. BSDS500飞机图像的边缘检测</p><p>在噪声图像中，使用了Roberts算子、拉普拉斯算子和旋度算子的量子算法无法提取目标边缘，传统算法的结果为17.00%，而Sobel算子和像素梯度和梯度差的量子算法均取得大于22%的灵敏度。但是，在视觉效果上量子算法的除噪能力没有Canny算法强。至于特异度方面，传统算法的平均特异度为95.38%，而在灵敏度测试中表现较好的用Sobel算子为特征向量的量子算法和用像素梯度为特征向量的量子算法的平均特异度只有87.36%和86.10%，均低于90%，而其他特征向量的量子算法的平均特异度都大于90%，小于91.61%。低特异度这跟量子算法输出的边缘宽度较大有关。BSDS500数据局自带的Ground Truth图片的边缘宽度均为1像素，而量子算法得到部分边缘有数个像素宽。值得注意的是像素差的量子算法，在灵敏度测试和特异度测试中均取得较好的结果。</p><p>图13. 含噪声的BSDS500图像的边缘检测</p></sec></sec><sec id="s10"><title>6. 总结与展望</title><p>传统的逐像素方法的缺点是不能明确地包含对象信息。本文给出的量子算法甚至在存在噪声的图像中实现更优的灵敏度结果，体现了强大的普适性。基于这些方法构造哈密顿量有许多优点。我们选择时间依赖的哈密顿量，避免了数值求解薛定谔方程。这使我们能够通过演化算符给出薛定谔方程的闭合解，从而在运行时提供了显著的计算速度增益。另一个优点是在算法中给出的普适的哈密顿量形式，可以很容易地适用于不同的图像边缘检测问题。这使量子算法具有很大的潜力。</p><p>值得指出的是，量子算法在特异度即确定背景的表现不如传统算法。对于图像中的所有像素，简单的阈值处理能产生较高精度。在像素级阈值处理或自适应阈值处理的复杂高级技术中可用于改善结果。对于噪声图像，导致误差的错误分类的像素也只与灰度这种特征有关，对象内部的较暗部分在加上噪声后无法被识别为前景类。该问题期望通过形态学手段来构造特征向量来解决。也可以考虑引入与像素相关联的量子系统之间的耦合。可见，量子力学的理论框架为研究耦合系统的图像处理提供了有效的量子算法。</p><p>在特征向量的选用上，像素梯度为特征向量的普遍最优解，但是在个别情况，该特征向量会引起算法特异度偏低。此时，可以将特征向量修改为像素差。旋度算子、拉普拉斯算子和Roberts算子一定程度会破坏目标信息的完整性，以至于无法检测噪声图像的目标边缘。而Sobel算子和Prewitt算子被广泛应用在各种编程语言中。使用这两种算子来构造哈密顿量的量子算法会比较方便，在减少代码行数的同时也能获得较好的结果。</p><p>量子算法在未来能通过优化哈密顿量的设计，引入更多的拟合手段，例如使用机器学习常用的非线性拟合公式，可望进一步提高结果。在实际应用上，量子算法可以在医学方面处理患者的X光图、CT图等，去除体内随机影响，更加精准地判断病灶。我们相信在不久的未来，量子算法在边缘检测和图像分割乃至信号处理领域上会大显身手。</p></sec><sec id="s11"><title>致谢</title><p>感谢广东省科技计划项目，项目编号：2020B1212060030。</p></sec><sec id="s12"><title>文章引用</title><p>李 越,梁世东. 图像边缘检测的量子算法Quantum Algorithm for Edge Detection[J]. 图像与信号处理, 2020, 09(04): 173-178. https://doi.org/10.12677/JISP.2020.94021</p></sec><sec id="s13"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.37911-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Marr, D. and Hildreth, E. (1980) Theory of Edge Detection. Proceedings of the Royal Society of London, London, 187-217. https://doi.org/10.1098/rspb.1980.0020</mixed-citation></ref><ref id="hanspub.37911-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Canny, J. (1986) A Computational Approach to Edge Detection. IEEE Transactions on Pattern Analysis and Machine Intelligence, 6, 679-698. https://doi.org/10.1109/TPAMI.1986.4767851</mixed-citation></ref><ref id="hanspub.37911-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Huang, J.S. and Tseng, D.H. (1988) Statistical Theory of Edge Detection. Computer Vision Graphics and Image Processing, 43, 337-346. https://doi.org/10.1016/0734-189X(88)90087-4</mixed-citation></ref><ref id="hanspub.37911-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Zhao, J.-Y., Wang, H.-M. and Yu, D.-H. (2003) A New Approach for Edge Detection of Noisy Image Based on CNN. International Journal of Circuit Theory and Applications, 31, 119-131. https://doi.org/10.1002/cta.210</mixed-citation></ref><ref id="hanspub.37911-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Tian, H.-P. (2011) A Survey of Image Edge Detection Based on GreyTheory. Advanced Materials Research, 301-303, 853-858. https://doi.org/10.4028/www.scientific.net/AMR.301-303.853</mixed-citation></ref><ref id="hanspub.37911-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Koenderink, J.J. (2012) Theory of “Edge Detection”. In: Åström, K., Persson, L.E. and Silvestrov, S., Eds., Analysis for Science, Engineering and Beyond, Springer Proceedings in Mathematics, Springer, Berlin, 35-49. 
https://doi.org/10.1007/978-3-642-20236-0_3</mixed-citation></ref><ref id="hanspub.37911-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Eldar, Y. and Oppenheim, A.V. (2002) Quantum Signal Processing. IEEE Signal Processing Magazine, 19, 12-32. 
https://doi.org/10.1109/MSP.2002.1043298</mixed-citation></ref><ref id="hanspub.37911-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Aytekin, C., Kiranyaz, S. and Gabbouj, M. (2013) Quantum Mechanics in Computer Vision: Automatic Object Extraction. 2013 IEEE International Conference on Image Processing, Melbourne, 15-18 September 2013, 2489-2493 
https://doi.org/10.1109/ICIP.2013.6738513</mixed-citation></ref><ref id="hanspub.37911-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Fu, X.-W., Ding, M.-Y., Sun, Y.-G. and Chen, S.-B. (2009) A New Quantum Edge Detection Algorithm for Medical Images. Proceedings of SPIE—The International Society for Optical Engineering, 7497, Article ID: 749724. 
https://doi.org/10.1117/12.832499</mixed-citation></ref><ref id="hanspub.37911-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Lou, L.-T., Lu, L., Li, L.-G., Gao, W.-L., Li, L.-L. and Fu, Z.-L. (2009) Automatic contour extraction for Multiple Objects Based on Schroedinger Transform of Image. Proceedings of SPIE—The International Society for Optical Engineering, 7495, Article ID: 749545. https://doi.org/10.1117/12.829020</mixed-citation></ref><ref id="hanspub.37911-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Youssry, A., El-Rafei, A. and Elramly, S. (2015) A Quantum Mechanics-Based Framework for Image Processing and Its Application to Image Segmentation. Quantum Information Processing, 14, 3613-3638. 
https://doi.org/10.1007/s11128-015-1072-3</mixed-citation></ref><ref id="hanspub.37911-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Mastriani, M. (2014) Quantum Edge Detection for Image Segmentation in Optical Environments. 
https://arxiv.org/abs/1409.2918</mixed-citation></ref><ref id="hanspub.37911-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Mastriani, M. (2014) Optimal Estimation of States in Quantum Image Processing. 
http://export.arxiv.org/abs/1406.5121</mixed-citation></ref><ref id="hanspub.37911-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Mastriani, M. (2014) Quantum Image Processing? http://export.arxiv.org/abs/1512.02942</mixed-citation></ref><ref id="hanspub.37911-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Yuan, S.-Z., Venegas-Andraca, S.E., Wang, Y.-C., Luo, Y. and Mao, X.-F. (2019) Quantum Image Edge Detection Algorithm. International Journal of Theoretical Physics, 58, 2823-2833. 
https://doi.org/10.1007/s10773-019-04166-9</mixed-citation></ref><ref id="hanspub.37911-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Butkovskiy, A.G. and Samoilenko, Y.I. (1990) Control of Quantum-Mechanical Processes and System. Springer, Berlin. https://doi.org/10.1007/978-94-009-1994-5</mixed-citation></ref><ref id="hanspub.37911-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Arbelaez, P., Maire, M., Fowlkes, C. and Malik, J. (2011) Contour Detection and Hierarchical Image Segmentation. IEEE Transactions on Pattern Analysis &amp; Machine Intelligence, 33, 898-916. 
https://doi.org/10.1109/TPAMI.2010.161</mixed-citation></ref><ref id="hanspub.37911-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">University of California, Berkeley. Berkley Segmentation Data Set and Benchmarks 500.  
https://www2.eecs.berkeley.edu/Research/Projects/CS/vision/grouping/resources.html</mixed-citation></ref><ref id="hanspub.37911-ref19"><label>19</label><mixed-citation publication-type="other" xlink:type="simple">Nielsen, M. and Chuang, I. (2007) Quantum Computation and Quantum Information. Cambridge University Press, Cambridge.</mixed-citation></ref><ref id="hanspub.37911-ref20"><label>20</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, Y., Lu, K. and Gao, Y.H. (2015) QSobel: A Novel Quantum Image Edge Extraction Algorithm. Science China Information Sciences, 58, 1-13. https://doi.org/10.1007/s11432-014-5158-9</mixed-citation></ref></ref-list></back></article>