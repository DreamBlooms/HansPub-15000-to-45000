<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2020.101003</article-id><article-id pub-id-type="publisher-id">CSA-33820</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20200100000_25077163.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  改进的A*算法在定制公交路径规划中的应用
  Application of Improved A* Algorithm in Customized Bus Path Planning
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>刘</surname><given-names>月锟</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>刘</surname><given-names>秀燕</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>青岛理工大学信息与控制工程学院，山东 青岛</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>31</day><month>12</month><year>2019</year></pub-date><volume>10</volume><issue>01</issue><fpage>21</fpage><lpage>28</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   路径搜索是智能交通技术中的核心问题，定制公交路线需要考虑乘车便捷、运营成本、运行距离等因素，传统的A*算法一般用来求解两点间最短路径问题，该算法普遍存在搜索时间较长、效率较低、所求路径不一定最短等问题。因此，本文提出一种基于改进的A*算法的动态路径规划措施，将公交站点作为定制公交的乘车点，并把预计乘车人数与估价函数结合，不仅考虑了成本因素，还将路口作为路径规划的节点，对路径方向剪枝，提高搜索效率。本文针对改进后的A*算法进行实验，并与传统A*算法对比，实验结果表明，改进后的A*算法减少了路径搜索次数，提高了路径规划效率，同时降低公交公司的运营成本，达到了动态、实时路径规划的目的。 Path search is the core problem in intelligent transportation technology. Customized bus routes need to consider factors such as convenient travel, operating costs, and distance traveled. Traditional A* algorithms are generally used to solve the shortest path between two points. The algorithm has many problems such that the search time is long with low efficiency and the searched path is not necessarily the shortest. Therefore, this paper proposes a dynamic path planning measure based on the improved A* algorithm. The bus station is used as a point for customizing the bus, and the estimated number of passengers is combined with the valuation function. Not only is the cost factor considered, but also the intersection is taken as the nodes of the path plan pruning the path direction to improve the search efficiency. This paper conducts experiments on the improved A* algorithm and compares it with the traditional A* algorithm. The experimental results show that the improved A* algorithm reduces the number of route searches, improves the efficiency of route planning, and reduces the operating costs of bus companies for the purpose of dynamic and real-time path planning. 
  
 
</p></abstract><kwd-group><kwd>路径规划，改进A*算法，定制公交，估价函数, Path Planning</kwd><kwd> Improved A* Algorithm</kwd><kwd> Customized Bus</kwd><kwd> Valuation Function</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>改进的A*算法在定制公交路径规划中的应用<sup> </sup></title><p>刘月锟，刘秀燕<sup>*</sup></p><p>青岛理工大学信息与控制工程学院，山东 青岛</p><disp-formula id="hanspub.33820-formula47"><graphic xlink:href="//html.hanspub.org/file/3-1541628x5_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2019年12月12日；录用日期：2019年12月30日；发布日期：2020年1月6日</p><disp-formula id="hanspub.33820-formula48"><graphic xlink:href="//html.hanspub.org/file/3-1541628x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>路径搜索是智能交通技术中的核心问题，定制公交路线需要考虑乘车便捷、运营成本、运行距离等因素，传统的A*算法一般用来求解两点间最短路径问题，该算法普遍存在搜索时间较长、效率较低、所求路径不一定最短等问题。因此，本文提出一种基于改进的A*算法的动态路径规划措施，将公交站点作为定制公交的乘车点，并把预计乘车人数与估价函数结合，不仅考虑了成本因素，还将路口作为路径规划的节点，对路径方向剪枝，提高搜索效率。本文针对改进后的A*算法进行实验，并与传统A*算法对比，实验结果表明，改进后的A*算法减少了路径搜索次数，提高了路径规划效率，同时降低公交公司的运营成本，达到了动态、实时路径规划的目的。</p><p>关键词 :路径规划，改进A*算法，定制公交，估价函数</p><disp-formula id="hanspub.33820-formula49"><graphic xlink:href="//html.hanspub.org/file/3-1541628x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/3-1541628x8_hanspub.png" /> <img src="//html.hanspub.org/file/3-1541628x9_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>信息技术的发展对公共交通影响越来越大，近几年来，定制公交开始进入公众视野，相对于传统公交，定制公交具有相对灵活的运行方式，能提供便捷、环保、舒适的合乘服务 [<xref ref-type="bibr" rid="hanspub.33820-ref1">1</xref>]。目前国内对于定制公交的研究主要集中在定制公交的优势、存在的问题、运营模式、票价制度、系统评价及运行方案等方面 [<xref ref-type="bibr" rid="hanspub.33820-ref2">2</xref>]，而定制公交的线路规划和站点选择的研究相对不足。</p><p>在定制公交线路规划研究中，根据起点和终点的不同，有“一对一”、“多对一”、“多对多”等模式。文献 [<xref ref-type="bibr" rid="hanspub.33820-ref3">3</xref>] 使用蚁群算法求解“多对一”定制公交线路方案，对于多起点多终点的“多对多”定制公交模式，一般将问题归结为车辆路径问题(VRP) [<xref ref-type="bibr" rid="hanspub.33820-ref4">4</xref>]，使用蚂蚁算法对路径求解；通过构建解空间树 [<xref ref-type="bibr" rid="hanspub.33820-ref5">5</xref>]，可以将多起点多终点问题转换为单起点单终点问题，用蚂蚁算法求解路径；文献 [<xref ref-type="bibr" rid="hanspub.33820-ref6">6</xref>] 在交通条件动态变化状态时，提出了一种基于遗传算法和蚁群算法的动态最短路径算法；文献 [<xref ref-type="bibr" rid="hanspub.33820-ref7">7</xref>] 运用层次分析法建立道路综合权值模型，A*算法求解最短路径。在定制公交的站点选择研究中，文献 [<xref ref-type="bibr" rid="hanspub.33820-ref4">4</xref>] 使用K-means聚类算法求解站点，文献 [<xref ref-type="bibr" rid="hanspub.33820-ref8">8</xref>] 对K-means聚类算法进行改进提出K-means++聚类算法求解站点，文献 [<xref ref-type="bibr" rid="hanspub.33820-ref9">9</xref>] 提出了一种考虑乘客分布和线路方向的站点分割聚类算法，以最大最小蚁群算法进行求解。</p><p>当前线路规划的研究本质上都是求解起点和终点之间的最小距离路径，定制公交的线路规划需要在路径最短和服务更多市民中进行权衡；当前城市管理中站点的设定都有严格的规定，不能随意设置。针对目前定制公交存在的路径规划、站点选择方面的问题，本文提出一种新型定制公交乘车模式，依托现有公交站点组成的公交网络，定制公交只在公交站点停车，公众选择最近公交站点乘车，城市公交站点是长期选择的结果，基本满足公众就近出行需要，这样就解决了站点选择的难题；将路口作为路径规划的节点，所有站点均处于相邻的两个路口之间，通过改进A*算法实现路径的动态规划，该路径规划既考虑距离因素，也考虑乘车人数因素，达到便捷乘车和经济效益的统一，提高了公众出行的效率。</p></sec><sec id="s4"><title>2. 定制公交路径规划算法</title><sec id="s4_1"><title>2.1. 启发式搜索算法</title><p>路径规划中常用启发式搜索算法，如：蚂蚁算法、遗传算法、A*算法等，启发式搜索就是在状态空间搜索中对每一个搜索的位置进行评估，得到最好的位置，再从这个位置进行搜索直到目标，这样可以省略大量无谓的搜索路径，提高效率。</p><p>在启发式搜索中，对位置的估价是十分重要的，估价是用估价函数表示，算法表示为：f(n) = g(n) + h(n)</p><p>其中f(n)是节点n的估价函数，g(n)是在状态空间中从初始节点到n节点的实际代价，h(n)是从n到目标节点最佳路径的估计代价。</p></sec><sec id="s4_2"><title>2.2. A*算法</title><p>A*算法是一种典型的启发式搜索算法，建立在Dijkstra算法的基础之上，广泛应用于游戏地图、现实世界中，用来寻找两点之间的最短路径 [<xref ref-type="bibr" rid="hanspub.33820-ref10">10</xref>]。A*算法是一种静态路网中求解最短路径最有效的直接搜索方法，A*算法能够高效地找到两点之间的最优路径。但在A*算法中，往往通过一个函数来计算每个节点的权值，而这个函数，则决定算法的搜索效率。</p></sec><sec id="s4_3"><title>2.3. A*算法存在的问题</title><p>A*算法广泛应用于各种路径搜索问题，虽然A*算法优势比较明显，寻路过程中可以更智能地分析最优路径并减少搜索的冗余节点。但是，A*算法在路径规划应用中经常用来求解最短路径 [<xref ref-type="bibr" rid="hanspub.33820-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.33820-ref10">10</xref>] [<xref ref-type="bibr" rid="hanspub.33820-ref11">11</xref>]，而定制公交运行中既需要考虑距离、时间因素，又需要考虑乘客乘车便捷、运营公司的经济效益，所以求得最短路径不一定是最优的路径。</p><p>如图1所示，设A站为起点，B站为终点，从A开始，有两个分支，分别到达C站和D站。</p><p>假设一：设C站等待人数五人，D站等待人数三人，从A到C300 m，从A到D300 m，此时如果想减少成本增加收入，应选择最优策略即从A站到C站，而传统的A*算法也有可能选择A到D。</p><p>假设二：设C站等待人数五人，D站等待人数五人，从A到C200 m，从A到D300 m，此时如果想减少成本增加收入，应选择最优策略即从A站到C站。</p><p>假设三：设C站等待人数三人，D站等待人数五人，从A到C300 m，从A到D400 m，此时如果想减少成本增加收入，应选择最优策略即从A站到D站，而传统的A*算法则会选择较短的A到C，造成成本的增加。</p><p>总之，A*算法虽然可以规划最短的线路，但并未考虑综合成本的问题，所生成的最短线路不一定是在成本和便捷方面最优的路线。</p><p>图1. A*算法路径规划</p></sec></sec><sec id="s5"><title>3. 改进的A*算法</title><p>针对A*算法在定制公交路径规划时无法综合考量多种因素的问题，本文提出一种改进的A*算法。现有公交站点组成定制公交运输网络，定制公交只在公交站点停车，公众选择最近公交站点乘车，解决站点选择问题；所有公交站点都处于运行方向不同的一个路段中，路段的端点为路口，将路口作为路径规划的节点，在传统A*算法基础上，将预计乘车人数与估价函数结合，估价函数中f(n)含有距离和人数信息，同时估计的成本函数h(n)也含有距离和人数信息，在路径规划时将不必要路径方向剪枝，提高搜索效率。</p><sec id="s5_1"><title>3.1. 路网结构</title><p>将实际的路网结构抽象为二维网格，根据运行方向成为有向图，节点为路口，节点与节点之间为路段，路段结构如图2所示，C、D、E、F为公交站点，A、B为路口，路口记录所在方位、进入方向的预计乘车人数、坐标数据和路段长度，如：在路口A中记录路段AB数据为：站点C、D的预计乘车人数，路段AB在A的右方，坐标数据为[X,Y]，路段AB长度。</p><p>图2. 路段结构</p></sec><sec id="s5_2"><title>3.2. 估价函数</title><p>在A*算法中需要估算h(n)，h(n)估算方法为：</p><p>1) 依次搜索n节点相邻节点，计算邻接点与n组成的向量和n与终点组成的向量的夹角，如果夹角大于90度，说明远离终点而去，则不进行搜索；</p><p>2) 对于符合条件的邻接点，计算邻接点到终点的欧几里得距离，得到h(n)。</p><p>改进后的A*算法需要计算预计乘车人数，预计乘车人数估算方法为：</p><p>1) 搜索n节点的有效邻接点，统计n与人员乘车终点向量和n与终点向量夹角；</p><p>2) 如果向量夹角小于45度，则统计该乘车人，否则不统计；</p><p>3) 统计各方向预计乘车人数x。</p><p>估价函数为：f(n) = g(n) + h(n)，其中g(n)为成本函数，g(n) = g(v) + cost(v,n)，v为n的父节点，g(v)为起点到v的实际综合成本，n为v的邻接点，cost(v,n)为计算成本，在路径规划中由v到n的距离和预计乘车人数组成，修改g(n)为：</p><p>g(n) = g(v) + α*vn + (β/(1 + x))*vn</p><p>其中：vn为v到n的距离，x为v到n路段预计乘车人数，α、β为调整参数，取值范围为[0,1]，α = 0、β = 1时，以乘车人数为重要计算标准，α = 1、β = 0时，为传统的A*算法。h(n)为n节点到终点的欧几里得距离。</p></sec><sec id="s5_3"><title>3.3. 改进后的A*算法</title><p>改进后A*算法以实际公交站点为乘车地点，一个路段的乘车人数统计在路段入口，公交站点不进行位置计算与搜索，参与路径规划的只是路网中的路口；改进后的A*算法见算法1。</p><p>算法1：改进的A*算法。</p><p>输入：起点src(x0,y0)，终点dst(x,y)，路网结构grid(x,y)；</p><p>输出：规划路径path；</p><p>说明：g(n)计算n节点的g值，f(n)计算n节点的f值，set_father(n)设置n节点的父节点，get_father(n)获得n节点的父节点，adjvex(n)n节点的邻接点。</p><p>(1) open={},close={},path={}</p><p>(2) open←src,g(src)=0，f(src)</p><p>(3) while(open&lt;&gt;null){</p><p>(4) v=f_min(open) //取open表中最小f值的节点</p><p>(5) if(v==dst) break</p><p>(6) close←v，open→v</p><p>(7) while(adjvex(v)&lt;&gt;null){</p><p>(8) m=adjvex(v)</p><p>(9) if(angle( , )&lt;=90){</p><p>(10) x=person( )//计算vm路段乘车人数</p><p>(11) g(m)= g(v)+vm+(1+x)*vm</p><p>(12) h(m)=dist( ) //m到dst的欧几里得距离</p><p>(13) f(m)=g(m)+h(m) //计算m点的f值</p><p>(14) if(m not in open and m not in close)</p><p>(15) set_father(m)←v</p><p>(16) open←m</p><p>(17) else</p><p>(18) if( m in open and g(m)</p><p>(19) g_old(m)=g(m)</p><p>(20) set_father(m)←v</p><p>(21) if( m in close and g(m)</p><p>(22) g_old(m)=g(m)</p><p>(23) set_father(m)←v</p><p>(24) open←m</p><p>(25) close→m }</p><p>(26) } //adjvex(v) 循环结束</p><p>(27) } //open&lt;&gt;null循环结束</p><p>(28) if(v==dst)</p><p>(29) path←v,m=v</p><p>(30) while((m&lt;&gt;src){</p><p>(31) m= get_father(m)</p><p>(32) path←m}</p><p>(33) print path</p><p>(34) else</p><p>(35)print搜索失败</p><p>改进的A*算法在定制公交路径规划时有可能规划出的路线不是最短路径，但考虑了乘车人数的因素，既为乘车人最大程度的提供便利，又提供了公交运营方的收益，是适应定制公交开行的意图的；改进的A*算法在路径选择时，对与行进方向背离的路径进行剪枝处理，提高了搜索效率。</p></sec></sec><sec id="s6"><title>4. 改进后的A*算法与传统A*算法的对比</title><p>实际城市路网结构大致为表格状，依此建立数据模型，使用c++语言编写传统A*算法与改进后的A*算法程序，选择多个测试样例，进行结果对比。</p><p>测试例1，数据模型如图3表示，假设以C为起点，G为终点，标注在路线上的数字为两站点之间的距离，标注在点附近的为去某一站的人数。</p><p>图3. 测试样例1路网结构模型</p><p>运行结果如表1所示，从C到G，用传统A*算法与改进A*算法规划出的路径长度是相同的，但由于应用了改进后的估价函数和剪枝算法，乘车人数最优，搜索的点次也变少了，更快的规划出路线。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Test example 1 algorithm comparison tabl</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法名称</th><th align="center" valign="middle" >搜索路径</th><th align="center" valign="middle" >路径长度</th><th align="center" valign="middle" >乘车人数</th><th align="center" valign="middle" >搜索点次</th></tr></thead><tr><td align="center" valign="middle" >传统A*算法</td><td align="center" valign="middle" >C→B→A→D→G</td><td align="center" valign="middle" >4.8</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >23</td></tr><tr><td align="center" valign="middle" >改进A*算法</td><td align="center" valign="middle" >C→F→E→H→G</td><td align="center" valign="middle" >4.8</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >11</td></tr></tbody></table></table-wrap><p>表1. 测试样例1算法对比表</p><p>改进后的A*算法搜索路径长度为4.8与传统A*算法相等，乘车人数6人比传统A*算法多1人，提高20%，搜索次数由23次减少到11次，减少无效搜索52%。</p><p>测试例2，数据模型如图4所示，假设以C为起点，G为终点，标注在路线上的数字为两站点之间的距离，标注在点附近的为去某一站的人数。</p><p>图4. 测试样例2路网结构模型</p><p>运行结果如表2所示，从C到G，用传统A*算法与改进A*算法规划出的路径长度是相同的，但由于应用了改进后的估价函数和剪枝算法，乘车人数最优，搜索的点次也变少了，更快的规划出路线。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Test example 2 algorithm comparison tabl</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法名称</th><th align="center" valign="middle" >搜索路径</th><th align="center" valign="middle" >路径长度</th><th align="center" valign="middle" >乘车人数</th><th align="center" valign="middle" >搜索点次</th></tr></thead><tr><td align="center" valign="middle" >传统A*算法</td><td align="center" valign="middle" >C→B→A→D→G</td><td align="center" valign="middle" >4.8</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >23</td></tr><tr><td align="center" valign="middle" >改进A*算法</td><td align="center" valign="middle" >C→B→E→H→G</td><td align="center" valign="middle" >4.8</td><td align="center" valign="middle" >7</td><td align="center" valign="middle" >13</td></tr></tbody></table></table-wrap><p>表2. 测试样例2算法对比表</p><p>改进后的A*算法搜索路径长度为4.8与传统A*算法相等，乘车人数7人比传统A*算法多2人，提高40%，搜索次数由23次减少到13次，减少无效搜索43%。</p><p>测试例3，数据模型如图5所示，假设以C为起点，G为终点，标注在路线上的数字为两站点之间的距离，标注在点附近的为去某一站的人数。</p><p>图5. 测试样例3路网结构模型</p><p>运行结果如表3所示，从C到G，用传统A*算法与改进A*算法规划出的路径长度是相同的，但由于应用了改进后的估价函数和剪枝算法，乘车人数最优，搜索的点次也变少了，更快的规划出路线。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Test example 3 algorithm comparison tabl</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法名称</th><th align="center" valign="middle" >搜索路径</th><th align="center" valign="middle" >路径长度</th><th align="center" valign="middle" >乘车人数</th><th align="center" valign="middle" >搜索点次</th></tr></thead><tr><td align="center" valign="middle" >传统A*算法</td><td align="center" valign="middle" >C→B→A→D→G</td><td align="center" valign="middle" >4.8</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >23</td></tr><tr><td align="center" valign="middle" >改进A*算法</td><td align="center" valign="middle" >C→B→E→D→G</td><td align="center" valign="middle" >4.8</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >13</td></tr></tbody></table></table-wrap><p>表3. 测试样例3算法对比表</p><p>改进后的A*算法搜索路径长度为4.8与传统A*算法相等，乘车人数10人比传统A*算法多1人，提高11%，搜索次数由23次减少到11次，减少无效搜索43%。</p><p>从测试样例看，改进的A*算法在路径规划中能找到最优路径，搜索路径的乘车人数要优于传统A*算法，并且提高了搜索效率。</p></sec><sec id="s7"><title>5. 结束语</title><p>本文针对传统A*算法在定制公交线路规划时存在的问题，提出一种改进的A*算法，以现有公交站点组成的定制公交运输网络，定制公交只在公交站点停车，解决站点选择问题，将路口作为路径规划的节点，在传统A*算法基础上，将预计乘车人数与估价函数结合，估价函数中f(n)含有距离和人数信息，同时成本函数g(n)也含有距离和人数信息，在路径规划时将不必要路径方向剪枝，提高搜索效率。改进后的A*算法简化了节点模型、改进了估价函数，将距离和乘车人数都作为影响估价函数的因素，既提高了路径搜索效率，又能得到综合效益最优路线。</p></sec><sec id="s8"><title>基金项目</title><p>山东省自然科学基金资助项目(编号：ZR2017BF043)；山东省大学生创新创业训练计划项目(编号：S201910429064)。</p></sec><sec id="s9"><title>文章引用</title><p>刘月锟,刘秀燕. 改进的A*算法在定制公交路径规划中的应用Application of Improved A* Algorithm in Customized Bus Path Planning[J]. 计算机科学与应用, 2020, 10(01): 21-28. https://doi.org/10.12677/CSA.2020.101003</p></sec><sec id="s10"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.33820-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">郭嫚. 基于多点对多点开行模式的定制公交线路规划研究[D]: [硕士学位论文]. 成都: 西南交通大学, 2018.</mixed-citation></ref><ref id="hanspub.33820-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">胡郁葱, 陈栩, 罗嘉陵. 多起终点多车型混载的定制公交线路规划模型[J]. 广西师范大学学报(自然科学版), 2018, 36(4): 1-10.</mixed-citation></ref><ref id="hanspub.33820-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">王俊培. 大城市定制公交服务体系研究[D]: [硕士学位论文]. 西安: 长安大学, 2015.</mixed-citation></ref><ref id="hanspub.33820-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">马继辉, 王飞, 王娇, 等. 定制公交站点和线路规划研究[J]. 城市交通, 2017(2): 21-25.</mixed-citation></ref><ref id="hanspub.33820-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">陆乾杰, 陈志平, 张林佳, 等. 基于蚁群算法多起点多终点社区公交路径规划[J]. 杭州电子科技大学学报(自然科学版), 2016, 36(3): 84-88.</mixed-citation></ref><ref id="hanspub.33820-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, S.J. and Zhang, Y. (2018) A Hybrid Genetic and Ant Colony Algorithm for Finding the Shortest Path in Dynamic Traffic Networks. Automatic Control and Computer Sciences, 52, 67-76.  
&lt;br&gt;https://doi.org/10.3103/S014641161801008X</mixed-citation></ref><ref id="hanspub.33820-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">李少伟, 曹成涛. 基于A*算法的复杂交通环境下出行者最优路径分析研究[J]. 软件工程, 2019, 22(6): 29-32.</mixed-citation></ref><ref id="hanspub.33820-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Huo, E.-Z., Miao, R. and Luan, S. (2019) Research on the Location Selection of Customized Shuttle Bus Stations Based on the MassData of Online Taxi-hailing Service. Abstract Proceedings of the 2019 World Transport Convention, Beijing, 2019, 33.</mixed-citation></ref><ref id="hanspub.33820-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Liu, K. and Liu, C. (2019) The Study of Customized Bus Site and Route Planning Based on Site Segmentation Clustering Algorithm. Abstract Proceedings of the 2019 World Transport Convention (Cross-Cutting), Beijing, 2019, 110.</mixed-citation></ref><ref id="hanspub.33820-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">冯来春, 梁华为, 杜明博, 等. 基于A*引导域的RRT智能车辆路径规划算法[J]. 计算机系统应用, 2017, 26(8): 127-133.</mixed-citation></ref><ref id="hanspub.33820-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">彭澎. 基于A*算法的路径规划算法研究[D]: [硕士学位论文]. 马鞍山: 安徽工业大学, 2017.</mixed-citation></ref></ref-list></back></article>