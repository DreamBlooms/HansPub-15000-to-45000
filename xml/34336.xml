<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2020.92030</article-id><article-id pub-id-type="publisher-id">AAM-34336</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20200200000_53406186.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于拉丁方的数字图像加密算法设计
  Design of Digital Image Encryption Algorithm Based on Latin Square
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>汤</surname><given-names>艳华</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>田</surname><given-names>传俊</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>深圳大学电子与信息工程学院，广东 深圳</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>03</day><month>02</month><year>2020</year></pub-date><volume>09</volume><issue>02</issue><fpage>257</fpage><lpage>262</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   首先利用一个16阶拉丁方设计了一种基本密码系统，给出了它所决定非线性可逆变换和加解密变换的代数计算公式。然后，综合利用这种基本密码系统和现有的Logistic混沌系统，提出了一种新的流密码算法。最后，将这种流密码算法应用在图像加密中，并对加解密效果进行了仿真，仿真效果说明该算法具有良好的加解密效果。 Firstly, a basic cryptosystem is designed by using a 16 order Latin square, and formulas of the non-linear reversible transformations of encryption and decryption are presented. Secondly, a new stream cipher algorithm is proposed by using this basic cryptosystem and the existing Logistic chaotic system. Finally, this stream cipher algorithm is applied to encrypt digit image, and the im-age encryption and decryption are simulated. The simulation shows that this algorithm has good encryption and decryption effect. 
 
</p></abstract><kwd-group><kwd>流密码算法，数字图像加密算法，16阶拉丁方，可逆变换代数式, Stream Cipher Algorithm</kwd><kwd> Digital Image Encryption Algorithm</kwd><kwd> 16 Order Latin Square</kwd><kwd> Formula of Nonlinear Reversible Transformation</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于拉丁方的数字图像加密算法设计<sup> </sup></title><p>汤艳华，田传俊</p><p>深圳大学电子与信息工程学院，广东 深圳</p><p>收稿日期：2020年2月5日；录用日期：2020年2月20日；发布日期：2020年2月27日</p><disp-formula id="hanspub.34336-formula38"><graphic xlink:href="//html.hanspub.org/file/15-2621079x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>首先利用一个16阶拉丁方设计了一种基本密码系统，给出了它所决定非线性可逆变换和加解密变换的代数计算公式。然后，综合利用这种基本密码系统和现有的Logistic混沌系统，提出了一种新的流密码算法。最后，将这种流密码算法应用在图像加密中，并对加解密效果进行了仿真，仿真效果说明该算法具有良好的加解密效果。</p><p>关键词 :流密码算法，数字图像加密算法，16阶拉丁方，可逆变换代数式</p><disp-formula id="hanspub.34336-formula39"><graphic xlink:href="//html.hanspub.org/file/15-2621079x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/15-2621079x7_hanspub.png" /> <img src="//html.hanspub.org/file/15-2621079x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>流密码算法是当前密码学理论的关键研究问题之一，在数字信息的加密中有重要作用。普遍认为，完善保密系统是流密码算法的理论基础 [<xref ref-type="bibr" rid="hanspub.34336-ref1">1</xref>]。自从Shannon提出了完善保密系统模型以来 [<xref ref-type="bibr" rid="hanspub.34336-ref2">2</xref>]，已有不少文献都对相关的理论模型及其实际应用进行了研究，但还是有不少相关问题值得进一步研究。例如，当前的常见流密码算法都是基于模2加法运算来设计的，但模2加法运算过于简单，因而会影响到流密码算法设计的应用效果。最近的文献 [<xref ref-type="bibr" rid="hanspub.34336-ref3">3</xref>] 建立了一种新的更广泛完善保密系统模型。该理论模型将流密码系统设计细分为两个阶段：基本密码系统与应用密码系统。当以新旧两种完善保密系统模型作为理论基础时，尽管两种模型在应用密码系统中关键的密钥流序列的设计上的要求形式上差别不算太大，但是，它们在基本密码系统的设计上却有非常明显的区别：旧模型所能设计的基本密码系统的类型是很少的，而新模型所能设计的基本密码系统的类型与技巧都非常丰富。因此，本文将提出一种基本密码系统的新设计方法，进而再构造一种新的流密码算法。</p><p>由文献 [<xref ref-type="bibr" rid="hanspub.34336-ref3">3</xref>] 可知，现有常见流密码算法的基本密码系统是利用模2加法设计的，这等价于利用单一的2阶拉丁方所设计的基本密码系统。文献 [<xref ref-type="bibr" rid="hanspub.34336-ref3">3</xref>] 的主要结果将2阶拉丁方推广为更一般的任意阶拉丁方组来设计基本密码系统了。这样，一些常见流密码算法如A5和RC4等所用的基于2阶拉丁方或模2加法运算的设计方法都是在新模型下所能提出的设计方法的特殊情形。除了2阶拉丁方和文献 [<xref ref-type="bibr" rid="hanspub.34336-ref4">4</xref>] 所用的4阶拉丁方来设计基本密码系统之外，当前很少有文献讨论利用高于4阶拉丁方来设计基本密码系统。因此，本文将研究基于16阶拉丁方设计基本密码系统的新方法，并结合基于常见的Logistic离散混沌系统来设计一种新的流密码算法。</p></sec><sec id="s4"><title>2. 一些基本概念</title><p>参照现有密码学文献，流密码算法需要对基本明文单元依次进行加解密变换，相关步骤如下：1) 设明文单元序列为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x9_hanspub.png" xlink:type="simple"/></inline-formula>；2) 设任一密钥为k，利用一个以k为参数的密钥流产生器来产生一个密钥流序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x10_hanspub.png" xlink:type="simple"/></inline-formula>；3) 设利用加密变换E依次加密得到的密文为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x11_hanspub.png" xlink:type="simple"/></inline-formula>，其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x12_hanspub.png" xlink:type="simple"/></inline-formula>，对任意<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x13_hanspub.png" xlink:type="simple"/></inline-formula>；4) 最后利用解密变换D将c依次解密可恢复出明文单元序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x14_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>当前，常见的明文单元<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x15_hanspub.png" xlink:type="simple"/></inline-formula>是1比特，加密变换E为模2加法：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x16_hanspub.png" xlink:type="simple"/></inline-formula>等。参照文献 [<xref ref-type="bibr" rid="hanspub.34336-ref3">3</xref>]，在<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x17_hanspub.png" xlink:type="simple"/></inline-formula>上的可逆变换只有恒等变换与取反变换，因而所能设计的基本密码系统会很简单。为了设计更复杂的基本密码系统，先介绍如下一些概念 [<xref ref-type="bibr" rid="hanspub.34336-ref5">5</xref>]。</p><p>设n阶方阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x18_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x19_hanspub.png" xlink:type="simple"/></inline-formula>满足<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x20_hanspub.png" xlink:type="simple"/></inline-formula>，并记</p><disp-formula id="hanspub.34336-formula40"><label>(2-1)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/15-2621079x21_hanspub.png"  xlink:type="simple"/></disp-formula><p>定义2.1. 设<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x22_hanspub.png" xlink:type="simple"/></inline-formula>。如果<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x23_hanspub.png" xlink:type="simple"/></inline-formula>上所有不同的数字在n阶方阵A的每行和每列中都出现，则称A为n阶拉丁方。</p><p>定义2.2. 如果A和B都是由<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x24_hanspub.png" xlink:type="simple"/></inline-formula>构成的n阶方阵，且<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x25_hanspub.png" xlink:type="simple"/></inline-formula>的n<sup>2</sup>个元素组成的集合等于<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x26_hanspub.png" xlink:type="simple"/></inline-formula>，则称A和B是正交的。特别地，当<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x27_hanspub.png" xlink:type="simple"/></inline-formula>个拉丁方<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x28_hanspub.png" xlink:type="simple"/></inline-formula>两两正交时，称<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x29_hanspub.png" xlink:type="simple"/></inline-formula>为正交拉丁方组。</p><p>例如，如下的4阶矩阵都是拉丁方，且<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x30_hanspub.png" xlink:type="simple"/></inline-formula>是两两正交的。</p><disp-formula id="hanspub.34336-formula41"><label>(2-2)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/15-2621079x31_hanspub.png"  xlink:type="simple"/></disp-formula><p>文献 [<xref ref-type="bibr" rid="hanspub.34336-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.34336-ref4">4</xref>] 研究了4阶拉丁方组来设计基本密码系统。本文将考虑利用如下更高的16阶拉丁方来设计基本密码系统。</p><disp-formula id="hanspub.34336-formula42"><label>(2-3)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/15-2621079x32_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x33_hanspub.png" xlink:type="simple"/></inline-formula>表示如下可逆变换：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x34_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x35_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x36_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x37_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x38_hanspub.png" xlink:type="simple"/></inline-formula>等。显然，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x39_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x40_hanspub.png" xlink:type="simple"/></inline-formula>是一一对应的，因而可将<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x41_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x42_hanspub.png" xlink:type="simple"/></inline-formula>中相互对应的数不加区别 [<xref ref-type="bibr" rid="hanspub.34336-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.34336-ref4">4</xref>]。因此，基于L设计的基本密码系统<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x43_hanspub.png" xlink:type="simple"/></inline-formula>满足<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x44_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x45_hanspub.png" xlink:type="simple"/></inline-formula>。这样，下面将所设计的流密码系统的具体明文单元设为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x46_hanspub.png" xlink:type="simple"/></inline-formula>，对任意<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x47_hanspub.png" xlink:type="simple"/></inline-formula>，等等。</p></sec><sec id="s5"><title>3. 一种新的流密码算法设计</title><p>由文献 [<xref ref-type="bibr" rid="hanspub.34336-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.34336-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.34336-ref8">8</xref>] 可知，流密码算法的设计是当前密码算法研究的一个重要问题。下面将设计一种新的流密码算法。参照文献 [<xref ref-type="bibr" rid="hanspub.34336-ref3">3</xref>]，流密码系统可分为基本密码系统和应用密码系统，其中，应用密码系统设计的关键是密钥序列空间的设计。上面已设计出一个理论基本密码系统<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x48_hanspub.png" xlink:type="simple"/></inline-formula>。为了方便实际应用，还要将理论加密变换T和解密变换<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x49_hanspub.png" xlink:type="simple"/></inline-formula>转化为实际密钥空间K与加密变换E和解密变换D来实现。下面先讨论与<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x50_hanspub.png" xlink:type="simple"/></inline-formula>相应的实际基本密码系统<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x51_hanspub.png" xlink:type="simple"/></inline-formula>的设计问题。</p><p>1) 实际基本密码系统<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x52_hanspub.png" xlink:type="simple"/></inline-formula>的设计</p><p>将<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x53_hanspub.png" xlink:type="simple"/></inline-formula>中每个可逆变换利用简单运算表示如下：对任意<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x54_hanspub.png" xlink:type="simple"/></inline-formula>，</p><disp-formula id="hanspub.34336-formula43"><graphic xlink:href="//html.hanspub.org/file/15-2621079x55_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.34336-formula44"><graphic xlink:href="//html.hanspub.org/file/15-2621079x56_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.34336-formula45"><graphic xlink:href="//html.hanspub.org/file/15-2621079x57_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x58_hanspub.png" xlink:type="simple"/></inline-formula>是二进制数，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x59_hanspub.png" xlink:type="simple"/></inline-formula>表示十进制数，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x60_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x61_hanspub.png" xlink:type="simple"/></inline-formula>。类似地，可将<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x62_hanspub.png" xlink:type="simple"/></inline-formula>的代数计算公式一一写出来，在此省略。这样，可将基本实际密钥空间设计为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x63_hanspub.png" xlink:type="simple"/></inline-formula>：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x64_hanspub.png" xlink:type="simple"/></inline-formula>，对任意<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x65_hanspub.png" xlink:type="simple"/></inline-formula>。因此，基本加密函数E的计算公式为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x66_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>更进一步，基本加密函数和解密函数的具体设计方法如下：</p><p>a) 基本加密函数E：对任一2比特明文<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x67_hanspub.png" xlink:type="simple"/></inline-formula>和4比特密钥<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x68_hanspub.png" xlink:type="simple"/></inline-formula>，其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x69_hanspub.png" xlink:type="simple"/></inline-formula>，可利用如下统一代数式将加密变换<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x70_hanspub.png" xlink:type="simple"/></inline-formula>设计为</p><disp-formula id="hanspub.34336-formula46"><graphic xlink:href="//html.hanspub.org/file/15-2621079x71_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x72_hanspub.png" xlink:type="simple"/></inline-formula>，且</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x73_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x74_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x75_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x76_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x77_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x78_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x79_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x80_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x81_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x82_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x83_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x84_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x85_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x86_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x87_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p>b) 基本解密函数D：对任一2比特密文<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x88_hanspub.png" xlink:type="simple"/></inline-formula>和4比特密钥<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x89_hanspub.png" xlink:type="simple"/></inline-formula>，其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x90_hanspub.png" xlink:type="simple"/></inline-formula>，可将解密变换<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x91_hanspub.png" xlink:type="simple"/></inline-formula>设计为</p><disp-formula id="hanspub.34336-formula47"><graphic xlink:href="//html.hanspub.org/file/15-2621079x92_hanspub.png"  xlink:type="simple"/></disp-formula><p>至此就完成了实际基本密码系统<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x93_hanspub.png" xlink:type="simple"/></inline-formula>的设计。</p><p>2) 应用密码系统中密钥流序列的设计</p><p>上面已设计出实际基本密码系统<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x94_hanspub.png" xlink:type="simple"/></inline-formula>，还需要设计应用密钥空间才构成一个完整的流密码算法。下面再来讨论应用系统中密钥序列空间的设计问题，将利用现有的Logistic混沌系统所决定的一个密钥流发生器来对密钥流序列空间进行设计。该混沌系统表达式如下：</p><disp-formula id="hanspub.34336-formula48"><graphic xlink:href="//html.hanspub.org/file/15-2621079x95_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x96_hanspub.png" xlink:type="simple"/></inline-formula>，对任意<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x97_hanspub.png" xlink:type="simple"/></inline-formula>，且<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x98_hanspub.png" xlink:type="simple"/></inline-formula>。当<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x99_hanspub.png" xlink:type="simple"/></inline-formula>时，系统会处于混沌的状态。利用该混沌系统是容易产生2元密钥流序列的。更进一步，为了能与基本密码系统配合使用，还需要将所产生2元密钥序列变成16元密钥序列，以便下面使用。</p><p>当基本密码系统和密钥流序列组成密钥空间设计好后就能综合构造出一种流密码算法了，可将它用于数字信息的加解密变换之中，并可利用Matlab仿真来实现数字图像信息的加解密变换。</p><p>下面就给出一种新的流密码算法设计步骤：</p><p>a) 选择一幅数字灰度图像作为明文，在Matlab软件中，该明文可表示成一个矩阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x100_hanspub.png" xlink:type="simple"/></inline-formula>，其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x101_hanspub.png" xlink:type="simple"/></inline-formula>，对任意<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x102_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>b) 将图像矩阵I中每个8比特像素转换为比特序列而得到2元明文序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x103_hanspub.png" xlink:type="simple"/></inline-formula>。之后，将明文序列依次转化为16元明文单元序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x104_hanspub.png" xlink:type="simple"/></inline-formula>，其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x105_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x106_hanspub.png" xlink:type="simple"/></inline-formula>，等等；</p><p>c) 利用Logistic混沌系统迭代产生16元密钥流序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x107_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x108_hanspub.png" xlink:type="simple"/></inline-formula>，等等；</p><p>d) 加密变换：依次对明文单元加密<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x109_hanspub.png" xlink:type="simple"/></inline-formula>，对任一<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x110_hanspub.png" xlink:type="simple"/></inline-formula>，可得到16元密文序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x111_hanspub.png" xlink:type="simple"/></inline-formula>。若有必要，并可将c变换为2元密文序列，以便得到加密后的灰度图像；</p><p>e) 解密变换：依次对密文序列解密<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x112_hanspub.png" xlink:type="simple"/></inline-formula>，对任一<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x113_hanspub.png" xlink:type="simple"/></inline-formula>，可得到16元明文序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x114_hanspub.png" xlink:type="simple"/></inline-formula>。然后将m可还原为原数字图像矩阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/15-2621079x115_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>按照上述步骤，在Matlab中仿真的加解密效果图可见图1，其中，对照的流密码算法为利用模2加法和Logistic系统所设计的密码算法。</p><p>图1. 算法仿真效果图</p><p>更进一步，对两种算法加密图像之后的图像信息的相关性进行数值计算的结果可见表1。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Simulation data of correlatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >方向</th><th align="center" valign="middle" >原图</th><th align="center" valign="middle" >本算法</th><th align="center" valign="middle" >常见密码算法</th></tr></thead><tr><td align="center" valign="middle" >水平</td><td align="center" valign="middle" >0.9357</td><td align="center" valign="middle" >0.0026</td><td align="center" valign="middle" >0.0076</td></tr><tr><td align="center" valign="middle" >竖直</td><td align="center" valign="middle" >0.9682</td><td align="center" valign="middle" >0.00016</td><td align="center" valign="middle" >0.0012</td></tr><tr><td align="center" valign="middle" >对角</td><td align="center" valign="middle" >0.9084</td><td align="center" valign="middle" >0.0053</td><td align="center" valign="middle" >0.0039</td></tr></tbody></table></table-wrap><p>表1. 相关性仿真数据</p><p>由该表可知，明文在各个方向的相关系数都接近于1，经过加密后的图像的相关系数在所有的方向都接近0，说明像素间的相关性已被加密变换打乱了。与常见流密码算法相比，新算法在水平，竖直方向更好，在对角方向的相关系数和常用密码算法有微小差异。</p><p>下面再进行信息熵分析，可分析出加密后的图像像素值之间分散的均匀程度。根据图像信息熵的定义式(3-1)和最大熵原理知，由于本文所选取的Lena图像的灰度取值范围是[0, 255]，因而图中各像素值的概率出现的最大信息熵为8。数值越接近8就说明图像像素之间分散得越均匀。</p><disp-formula id="hanspub.34336-formula49"><label>(3-1)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/15-2621079x117_hanspub.png"  xlink:type="simple"/></disp-formula><p>通过仿真计算，可得到原始图像信息熵为7.4442，利用新流密码算法加密图像后的信息熵为7.9974，利用常用密码系统加密图像后的信息熵为7.9972，两种密文图的熵都比明文图的熵更接近最大理想值8。这说明利用高阶拉丁方设计的流密码系统具有一定的参考价值。</p></sec><sec id="s6"><title>4.小结</title><p>本文研究了基于16阶拉丁方的基本密码系统的设计问题，并结合常见的密钥流产生器提出了一种流密码算法。经过仿真分析可知，该算法的加密效果良好，为后续研究更高阶的拉丁方变换矩阵打下了一定的基础。</p></sec><sec id="s7"><title>文章引用</title><p>汤艳华,田传俊. 基于拉丁方的数字图像加密算法设计Design of Digital Image Encryption Algorithm Based on Latin Square[J]. 应用数学进展, 2020, 09(02): 257-262. https://doi.org/10.12677/AAM.2020.92030</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.34336-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">张斌, 徐超, 冯登国. 流密码的设计与分析: 回顾, 现状与展望. 密码学报, 2016, 3(6): 527-545.</mixed-citation></ref><ref id="hanspub.34336-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Shannon, C.E. (1949) Communication Theory of Secrecy System. Bell System Technical Journal, 28, 656-715.</mixed-citation></ref><ref id="hanspub.34336-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">田传俊. 密钥非均匀分布的完善保密通信系统[J]. 通信学报, 2018, 39(11): 1-9.</mixed-citation></ref><ref id="hanspub.34336-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">田传俊. 基于4阶正交拉丁方组实际基本密码系统设计[J]. 深圳大学学报, 2020, 待发表.</mixed-citation></ref><ref id="hanspub.34336-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">李超. 用线性取余变换造正交拉丁方和幻方[J]. 应用数学学报, 1996, 19(2): 231-238.</mixed-citation></ref><ref id="hanspub.34336-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">丁存生, 肖国镇. 流密码学及其应用[M]. 北京: 国防工业出版社, 1994.</mixed-citation></ref><ref id="hanspub.34336-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">杨刘洋, 吕翔. 一种基于完备拉丁方的图像加密算法[J]. 计算机应用研究, 2015, 32(11): 3435-3442.</mixed-citation></ref><ref id="hanspub.34336-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Yin, Q. and Wang, C. (2018) A New Chaotic Image Encryption Scheme Using Breadth-First Search and Dynamic Diffusion. International Journal of Bifurcation and Chaos, 28, Article ID: 1850047.</mixed-citation></ref></ref-list></back></article>