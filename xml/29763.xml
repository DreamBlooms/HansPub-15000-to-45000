<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2019.84067</article-id><article-id pub-id-type="publisher-id">AAM-29763</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20190400000_33934143.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  二阶锥规划基于SOC函数的新光滑牛顿算法
  A New Smoothing Newton Method for Se-cond-Order Cone Optimization Based on SOC Function
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>梁</surname><given-names>晓娟</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>曾</surname><given-names>友芳</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>广西大学数学与信息科学学院，广西 南宁</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>09</day><month>04</month><year>2019</year></pub-date><volume>08</volume><issue>04</issue><fpage>602</fpage><lpage>612</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    本文在向量值Fischer-Burmeister (FB)函数和向量值Natural-Residual (NR)函数的基础上，提出一种求解二阶锥规划(SOCP)问题的光滑函数。用一个带扰动的牛顿方程组去获得搜索方向，在适当假设下，分析了算法的全局收敛和局部收敛速度，给出了数值实验结果。
    Based on the Fischer-Burmeister function and the Natural-Residual function, a new smoothing Newton method is proposed for solving the second-order cone programming. This algorithm adopts a Newton equation with disturbance to gain the search direction. Under suitable assumptions, we prove that the proposed method is globally and locally quadratically convergent. Finally, some numerical results are given. 
  
 
</p></abstract><kwd-group><kwd>二阶锥规划，光滑牛顿法，全局收敛，局部二次收敛, Second-Order Cone Programming</kwd><kwd> Smoothing Newton Method</kwd><kwd> Global Convergence</kwd><kwd> Quadratical Convergence</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>二阶锥规划基于SOC函数的新光滑牛顿算法<sup> </sup></title><p>梁晓娟，曾友芳</p><p>广西大学数学与信息科学学院，广西 南宁</p><p><img src="//html.hanspub.org/file/4-2620910x1_hanspub.png" /></p><p>收稿日期：2019年3月27日；录用日期：2019年4月11日；发布日期：2019年4月18日</p><disp-formula id="hanspub.29763-formula10"><graphic xlink:href="//html.hanspub.org/file/4-2620910x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文在向量值Fischer-Burmeister (FB)函数和向量值Natural-Residual (NR)函数的基础上，提出一种求解二阶锥规划(SOCP)问题的光滑函数。用一个带扰动的牛顿方程组去获得搜索方向，在适当假设下，分析了算法的全局收敛和局部收敛速度，给出了数值实验结果。</p><p>关键词 :二阶锥规划，光滑牛顿法，全局收敛，局部二次收敛</p><disp-formula id="hanspub.29763-formula11"><graphic xlink:href="//html.hanspub.org/file/4-2620910x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/4-2620910x7_hanspub.png" /> <img src="//html.hanspub.org/file/4-2620910x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>本文主要考虑以下线性二阶锥规划问题：</p><p>min ∑ i r c i T x i s .t .   ∑ i r A i x i = b ， x i ≻ _ 0 K n i , i ∈ I = { 1 , 2 , ⋯ , r } (1.1)</p><p>其中， b ∈ R m , c i ∈ R n i , A i ∈ R m &#215; n i , 是已知量， x i ≻ _ 0 K n i ( i ∈ I ) 表示 x i ∈ K n i 是变量。 K n i 是维数为 n i 的二阶锥，即</p><p>K n i = { x i = ( x i 0 ; x &#175; i ) ∈ R n i | x i 0 ≥ ‖ x &#175; i ‖ } ,</p><p>这里 ‖ . ‖ 为向量的欧几里得范数。易知 K n i 是自对偶的，即 K n i = ( K n i ) * = { s i ∈ R i n | x i T s i ≥ 0 , ∀ x i ∈ K n i } 其对偶规划为：</p><p>max b T y s .t .   A i T y + s i = c i , i ∈ I , s i ≻ _ 0 K n i , i ∈ I . (1.2)</p><p>其中 y ∈ R m , s i ∈ K n i , I = { 1 , 2 , ⋯ , r } 。为便于问题的描述，使用如下记号：</p><p>n ≜ ∑ i = 1 r n i , K = K n i &#215; K n i &#215; ⋯ &#215; K n i , A = ( A 1 , A 2 , ⋯ , A r ) ∈ R m &#215; n , c = ( c 1 , c 2 , ⋯ , c r ) ∈ R n , x = ( x 1 ; x 2 ; ⋯ ; x r ) ∈ K , s = ( s 1 ; s 2 ; ⋯ ; s r ) ∈ K .</p><p>这里用 R n 表示n维实列向量，且将 R n 1 &#215; R n 2 &#215; ⋯ &#215; R n r 定义为 R n 1 + n 2 + ⋯ + n r ，因此 ( x 1 ; x 2 ; ⋯ ; x r ) ∈ K 是 R n 1 + n 2 + ⋯ + n r 中的列向量。则上面(1.1)和(1.2)式可转化为如下简洁形式：</p><p>min { c T x | A x = b , x ∈ K } . (1.3)</p><p>其对偶问题：</p><p>max { b T y | A T y + s = c , s ∈ K , y ∈ R m } . (1.4)</p><p>二阶锥规划是一类非光滑凸规划问题，它是在仿射空间与有限个二阶锥的笛卡尔积的交集上极小化或极大化一个线性函数。在现实生活中有着广泛的应用：许多工程，力学，投资组合，线线阵列等都可以转化为二阶锥问题求解。此外，许多数学问题也可转化为二阶锥求解，如线性规划，二次规划，凸二次约束二次规划，范数极小化，因而研究二阶锥规划具有重要的理论与现实意义。本文在向量值FB函数和向量值NR函数的基础上进行改进，得到了一个新的光滑函数，利用得到的光滑函数，把二阶锥互补函数转化为一个非线性方程组问题，并给出求解二阶锥问题的一个光滑化算法，在无严格互补条件的假设下，证明算法全局收敛和局部二次收敛。</p></sec><sec id="s4"><title>2. 基础知识</title><p>二阶锥规划建立在与二阶锥相伴的代数基础上，为了更好地研究二阶锥规划，下面将简要介绍与二阶锥相伴的欧几里得若当代数的基本概念和与之相关的重要结论，二阶锥规划的对偶理论和最优性条件等。先介绍一些记号，其中U表示反射矩阵， E n − 1 表示 ( n − 1 ) 阶单位阵， A r w ( x ) 表示一个箭形矩阵，本文用相应的大写字母表示箭形矩阵， X = A r w ( x ) ， S = A r w ( s ) ， W = A r w ( w ) 。</p><p>U ≜ ( 1 0 T 0 − E n − 1 ) ∈ R n &#215; n , A r w ( x ) ≜ ( x 1 x &#175; T x &#175; x 0 E n − 1 ) , e ≜ ( 1 ; 0 ) ∈ R n .</p><p>对于 ∀ x = ( x 0 ; x &#175; ) ∈ R &#215; R n − 1 , s = ( s 0 ; s &#175; ) ∈ R &#215; R n − 1 ，定义如下若当积：</p><p>x ∘ s ≜ ( x T s x 0 s &#175; + s 0 x &#175; ) = A r w ( x ) s = A r w ( x ) A r w ( s ) e = X S e .</p><p>记 x 2 ≜ x ∘ x ， x + y 表示通常的向量的向量加法。</p><p>定理2.1：(谱分解定理) (文 [<xref ref-type="bibr" rid="hanspub.29763-ref1">1</xref>] )</p><p>对向量x定义与二阶锥有关的谱分解为： x = λ 1 c 1 + λ 2 c 2 ，其中x的谱值 λ i 和与之对应的谱向量 c i 如下：</p><p>λ i = x 0 + ( − 1 ) i + 1 ‖ x &#175; ‖ , i = 1 , 2. c i = { 1 2 ( 1 ; ( − 1 ) i + 1 x &#175; ‖ x &#175; ‖ ) , x &#175; ≠ 0 ; 1 2 ( 1 ; ( − 1 ) i + 1 ω ) , x &#175; = 0 ;     i = 1 , 2 。 ω ∈ R n − 1 是满足 ‖ ω ‖ = 1 的任意向量。</p><p>关于谱值，谱向量的相关性质归纳如下：</p><p>1) x ∈ K ⇔ λ 2 ≥ λ 1 ≥ 0 , x ∈ K 0 ⇔ λ 2 ≥ λ 1 &gt; 0 ，</p><p>2) 对任意的 x ∈ R n ， x 2 = λ 1 2 c 1 + λ 2 2 c 2 ∈ K ，</p><p>3) 对任意的 x ∈ K ， x = λ 1 c 1 + λ 2 c 2 ∈ K 。</p><p>在线性规划中，互补性条件为：若 x ≥ 0 , s ≥ 0 ，则 x T s = 0 当且仅当 x i s i = 0 , i = 1 , ⋯ , r ，二阶锥规划有着类似于线性规划的互补性条件。</p><p>引理2.1：(互补性条件)设 x , s ∈ K ，即 x i , s i ∈ K i , i = 1 , ⋯ , r ，则 x T s = 0 当且仅当 x i ∘ s i = 0 。</p><p>在线性规划中，若原问题与对偶问题任意一个存在最优解，则另一个也存在最优解，且原问题与对偶问题最优值相等，但二阶锥规划不具有这种性质，若要二阶锥规划的强对偶理论成立，必须使得原问题与对偶问题同时存在严格可行解。因此二阶锥规划的最优性条件为：</p><p>定理2.2：(最优性条件) (文 [<xref ref-type="bibr" rid="hanspub.29763-ref2">2</xref>] )如果(1.3)和(1.4)都有严格可行解，则 ( x , ( y , s ) ) 是(1.3)和(1.4)的最优解对当且仅当</p><p>{ A x = b , x ∈ K , A T y + s = c , s ∈ K , x ∘ s = 0 . (2.1)</p><p>对二阶锥规划，其二阶锥互补函数定义如下：</p><p>定义2.1：(文 [<xref ref-type="bibr" rid="hanspub.29763-ref3">3</xref>] )如果向量值函数 ϕ soc : R n &#215; R n → R n 满足</p><p>ϕ soc ( x , s ) = 0 ⇔ x ∘ s = 0 , x ∈ K , s ∈ K . (2.2)</p><p>则称 ϕ soc 为二阶锥互补函数。</p><p>结合问题(1.3)和(1.4)的最优性条件，定义函数 H ( x , y , s ) : R n + m + n → R m + n + n 如下：</p><p>H ( x , y , s ) = ( b − A x c − A T y − s ϕ soc ( x − s ) ) ， (2.3)</p><p>其中 ϕ soc ( x − s ) 是任意的二阶锥互补函数。易见 H ( x , y , s ) = 0 是与最优性条件等价的方程组，由此可知， H ( x , y , s ) = 0 的解 ( x * , y * , s * ) 满足最优性条件，是问题(1.3)和(1.4)的最优解对。由上易知，求解此方程组的关键在于构造合适的二阶锥互补函数。由于常见的二阶锥互补函数在(0,0) 点不可微(即非光滑)，例如向量值FB函数，向量值NR函数等，不能直接用牛顿法求解为了进一步研究，先给出光滑化的概念。</p><p>定义2.2：(文 [<xref ref-type="bibr" rid="hanspub.29763-ref4">4</xref>] )对于不可微函数 h : R n → R m ，考虑带有参数 μ &gt; 0 的函数 h μ : R n → R m ，如果它具备如下性质：</p><p>1) 对于任意的 μ &gt; 0 ， h μ 是光滑的；</p><p>2) lim μ → 0 h μ ( x ) = h ( x ) , ∀ x ∈ R n ，</p><p>则称 h μ 是h的光滑函数。</p></sec><sec id="s5"><title>3. 一个新的光滑函数及其性质</title><p>光滑函数在二阶锥规划光滑算法研究中起着重要作用(文 [<xref ref-type="bibr" rid="hanspub.29763-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.29763-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.29763-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.29763-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.29763-ref9">9</xref>] )。由于向量值FB函数和向量值NR函数并不处处连续可微，大大影响了其实际应用。本文通过光滑化对称扰动得到一个新的向量值函数 ϕ ( μ , x , s ) : R + &#215; R n &#215; R n → R n ：</p><p>ϕ ( μ , x , s ) = x + s − μ ( x − s ) 2 + ( 1 − μ ) ( x 2 + s 2 ) + 2 μ 2 e (3.1)</p><p>为了减少变量的个数，使证明简单，令 z = ( μ , x , y ) ，定义函数 H ( z ) 如下：</p><p>H ( z ) = ( e μ − 1 b − A x ϕ ( μ , x , c − A T y ) ) ， (3.2)</p><p>显然，若 ( 0 , x * , y * ) 是 H ( z ) = 0 的解，则 ( x * , y * , c − A T y * ) 是原问题(1.3)及其对偶问题(1.4)的最优解。因此，可考虑用牛顿法求解 H ( z ) = 0 ，但对于所构造的 H ( z ) ，其雅可比矩阵必须是非奇异的。在讨论 H ( z ) 的性质之前先介绍相关结论。</p><p>引理3.1：(文 [<xref ref-type="bibr" rid="hanspub.29763-ref3">3</xref>] )对于任意的 a 1 , ⋯ , a p ∈ R n ，令 χ ( a 1 , ⋯ , a p ) = ∑ i = 1 p ( a i ) 2 。则 χ 是全局利普希茨连续的；若 v 0 ≠ ‖ v &#175; ‖ ，其中 v = ( v 0 ; v &#175; ) ∈ R &#215; R n − 1 且 v = ∑ i = 1 p ( a i ) 2 ，则 χ 在 ( a 1 , ⋯ , a p ) 的任意邻域是连续可微的。</p><p>定理3.1：设函数 H ( z ) 由(3.2)定义，令 ω = μ ( x − s ) 2 + ( 1 − μ ) ( x 2 + s 2 ) + 2 μ 2 e , μ ∈ ( 0 , 1 ) ，则对任意的 ϕ ( μ , x , s ) ∈ R + &#215; R n &#215; R n ，有以下结论：</p><p>1) ϕ ( μ , x , s ) 是全局利普希茨连续的处处光滑函数，且在任意 ( μ , x , s ) 处连续可微，有</p><p>ϕ ′ μ ( μ , x , s ) = − W − 1 ( x ∘ s + 2 μ e ) , (3.3)</p><p>ϕ ′ x ( μ , x , s ) = E n − W − 1 ( X − μ S ) , (3.4)</p><p>ϕ ′ s ( μ , x , s ) = E n − W − 1 ( S − μ X ) . (3.5)</p><p>2) ϕ ( μ , x , s ) 在 μ = 0 处是光滑的。</p><p>证明：1) 由引理3.1可知 ϕ ( μ , x , s ) 是全局利普希茨连续且在任意 ( μ , x , s ) 处连续可微。由 ω ′ μ ( μ , x , s ) = W − 1 ( x ∘ s + 2 μ e ) ，知</p><p>ϕ ′ μ ( μ , x , s ) = − W − 1 ( x ∘ s + 2 μ e ) , (3.6)</p><p>同理可得：</p><p>ω ′ x ( μ , x , s ) = W − 1 ( X − μ S ) , ω ′ s = W − 1 ( S − μ X ) .</p><p>由此可得：</p><p>ϕ ′ x ( μ , x , s ) = E n − W − 1 ( X − μ S ) , (3.7)</p><p>ϕ ′ s ( μ , x , s ) = E n − W − 1 ( S − μ X ) . (3.8)</p><p>2) 对于任意的 x = ( x 0 ; x &#175; ) , s = ( s 0 ; s &#175; ) ∈ R &#215; R n − 1 ，由谱分解定理有</p><p>ω 2 = λ 1 ( μ ) u 1 ( μ ) + λ 2 ( μ ) u 2 ( μ ) ,</p><p>因此</p><p>ϕ ( μ , x , s ) = x + s − ( λ 1 ( μ ) u 1 ( μ ) + λ 2 ( μ ) u 2 ( μ ) ) ,</p><p>其中</p><p>λ i ( μ ) = μ ( x − s ) 2 + ( 1 − μ ) ( x 2 + s 2 ) + 2 μ 2 + 2 ( − 1 ) i + 1 ‖ v ( μ ) ‖ , i = 1 , 2.</p><p>u i ( μ ) = { 1 2 ( 1 ; ( − 1 ) i + 1 v ( μ ) ‖ v ( μ ) ‖ ) , v ( μ ) ≠ 0 ; 1 2 ( 1 ; ( − 1 ) i + 1 w ) , v ( μ ) = 0 . i = 1 , 2.</p><p>其中 v ( μ ) = μ ( x 0 − s 0 ) ( x &#175; − s &#175; ) + ( 1 − μ ) ( x 0 x &#175; + s 0 s &#175; ) ， ω ∈ R n − 1 是满足 ‖ ω ‖ = 1 的任意向量。同理有 ϕ ( 0 , x , s ) = x + s − ( λ 1 u 1 + λ 2 u 2 ) ，其中 λ i = ‖ x ‖ 2 + ‖ s ‖ 2 + 2 ( − 1 ) i + 1 ‖ v ‖ , i = 1 , 2 。</p><p>u i = { 1 2 ( 1 ; ( − 1 ) i + 1 v ‖ v ‖ ) , v ≠ 0 ; 1 2 ( 1 ; ( − 1 ) i + 1 w ) , v = 0 . i = 1 , 2.</p><p>其中 v = x 0 s 0 + x &#175; s &#175; ， ω ∈ R n − 1 是满足 ‖ ω ‖ = 1 的任意向量。</p><p>不失一般性，取 ω ∈ R n − 1 和 v ( μ ) 中的一致，显然 lim μ → 0 v ( μ ) = v ，于是 lim μ → 0 λ i ( μ ) = λ i , lim μ → 0 u i ( μ ) = u i ，因此 lim μ → 0 ϕ ( μ , x , s ) = ϕ ( 0 , x , s ) ，结合 ϕ ( μ , x , s ) 在任意 ( μ , x , s ) 处连续可微，知 ϕ ( μ , x , s ) 是光滑的，因此由光滑函数的定义知 ϕ ( μ , x , s ) 是 ϕ ( 0 , x , s ) 的一个光滑函数。</p></sec><sec id="s6"><title>4. 算法的描述</title><p>记 z ( μ , x , y ) : R + &#215; R n &#215; R n , θ ( z ) = ‖ H ( z ) ‖ 2 , η = θ ( z ) + 1 ，令 γ ∈ ( 0 , 1 ) ，当 H ( z ) ≠ 0 时，定义函数 β , β &#175; : R n + m + 1 → R + : β ( z ) = e μ γ min { 1 , θ ( z ) } , β &#175; ( z ) = γ min { 1 , θ ( z ) } 。在矩阵A行满秩的假设下，可证明算法是适定的。</p><p>算法4.1：(二阶锥规划的一个光滑型牛顿法)</p><p>步骤0：给出常数 δ , σ , μ 0 ∈ ( 0 , 1 ) , γ ∈ ( 0 , 1 ) 满足 γ μ 0 &lt; 1 2 , γ η &lt; 1 2 ，任取 ( x 0 , y 0 ) ∈ R n &#215; R m ， z 0 = ( μ 0 , x 0 , y 0 ) , z &#175; = ( μ 0 , 0 , 0 ) ，令 k : = 0 。</p><p>步骤1：若 H ( z k ) = 0 ，停止，其中 ϕ ( z k ) 及 H ( z k ) 分别由(2.5)和(2.6)式所定义，否则令 β k : = β ( z k ) 。</p><p>步骤2：(确定搜索方向)解线性方程组 H ( z k ) + H ′ ( z k ) Δ z k = β k z &#175; 得到搜索方向 Δ z k 。</p><p>步骤3：(确定步长)记 α k 是满足下式的最小非负整数 α ：</p><p>θ ( z k + δ α Δ z k ) ≤ [ 1 − σ ( 1 − 2 γ μ 0 η ) δ α ] θ ( z k ) ,</p><p>令步长 t k = δ α k 。</p><p>步骤4：令 z k + 1 = z k + t k Δ z k , k : = k + 1 ，返回步骤1。</p><p>在证明算法的适定性之前，先介绍相关性质。</p><p>引理4.1：(文 [<xref ref-type="bibr" rid="hanspub.29763-ref10">10</xref>] ) 对任意 μ &gt; 0 ，</p><p>− μ ≤ 1 − e μ e μ ≤ − μ e − μ . (4.1)</p><p>引理4.2：(文 [<xref ref-type="bibr" rid="hanspub.29763-ref11">11</xref>] )对于任意的 x , y ∈ R 和 ω ≻ 0 K n ，如果 ω 2 ≻ x K n 2 + y 2 ，则</p><p>[ A r w ( ω ) − A r w ( x ) ] [ A r w ( ω ) − A r w ( y ) ] ≻ 0 ， A r w ( ω ) − A r w ( x ) ≻ 0 ， A r w ( ω ) − A r w ( y ) ≻ 0 ，且当 ≻ 变为 ≻ _ 时，上述结论仍然成立。</p><p>定理4.1：令 z = ( μ , x , y ) ∈ R + &#215; R n &#215; R m ， H ( z ) : R 1 + n + m → R 1 + m + n 由(3.2)定义，则有以下结论成立：</p><p>1) 在任意点 z = ( μ , x , y ) 处， H ( z ) 全局利普希茨连续，并且连续可微，其雅克比矩阵表示为：</p><p>H ′ ( z ) = ( e μ 0 0 0 − A 0 ϕ ′ μ ( z ) ϕ ′ x ( z ) − ϕ ′ s ( z ) A T ) , (4.2)</p><p>2) 对任意的 μ &gt; 0 ， H ′ ( z ) 非奇异。</p><p>证明：由定理3.1知(1)成立。下证(2)成立，对任意给定的 μ &gt; 0 ，要证 H ′ ( z ) 非奇异，只需证明方程组 H ′ ( z ) Δ z = 0 只有零解，即 Δ z = ( Δ μ , Δ x , Δ y ) = 0 。将(4.2)式代入 H ′ ( z ) Δ z = 0 中可知</p><p>Δ μ = 0 , A Δ x = 0 , ϕ ′ x ( z ) Δ x − ϕ ′ s ( z ) A T Δ y = 0 (4.3)</p><p>将(3.7)，(3.8)式中的 ϕ ′ x ( z ) ， ϕ ′ x ( z ) 代入(4.3)式并将等式左右的两端同时左乘以W，得：</p><p>[ W − ( X − μ S ) Δ x ] − [ W − ( S − μ X ) ] A T Δ y = 0. (4.4)</p><p>因 w 2 − μ ( x − s ) 2 − ( 1 − μ ) ( x 2 + s 2 ) = 2 μ 2 e ∈ K 0 ，由引理4.2可知：矩阵 W − ( S − μ X ) 正定，从而 W − ( S − μ X ) 可逆。将方程(4.4)左乘 Δ x T [ W − ( S − μ X ) ] − 1 ，结合 A Δ x = 0 ，得： Δ x T [ W − ( S − μ X ) ] − 1 [ W − ( X − μ S ) ] Δ x − Δ x T [ W − ( S − μ X ) ] − 1 [ W − ( S − μ X ) ] A T Δ y = 0 . 令 Δ x ˜ [ W − ( S − μ X ) ] − 1 Δ x ， 则</p><p>Δ x ˜ T [ W − ( X − μ S ) ] [ W − ( S − μ X ) ] Δ x ˜ = 0 . (4.5)</p><p>由引理4.2可知矩阵 [ W − ( X − μ S ) ] [ W − ( S − μ X ) ] 正定。因此 Δ x ˜ = 0 ，进而 Δ x = 0 。结合矩阵A行满秩的假设和(4.4)式，知 Δ y = 0 。这就说明 H ′ ( z ) Δ z = 0 只有零解，故 H ′ ( z ) 非奇异。</p><p>定理4.2：设矩阵A行满秩，如果 μ k &gt; 0 ，则算法4.1是适定的。</p><p>证明：因为矩阵A行满秩且 μ k &gt; 0 ，由定理4.1知 H ′ ( z ) 非奇异，所以算法4.1的步骤2是适定的。令 Δ z k = ( Δ μ k , Δ x k , Δ y k ) ∈ R &#215; R n &#215; R m 是步骤2中方程组的解，则对任意的 t ∈ ( 0 , 1 ] ，有</p><p>μ k + 1 = μ k + t Δ μ k = μ k + t ( 1 − e μ k e μ k + β k μ 0 e μ k ) ≥ ( 1 − t ) μ k + t μ 0 β k e μ k &gt; 0. (4.6)</p><p>由 β ( z ) 的定义有 β ( z ) ≤ e μ γ θ ( z ) ，</p><p>e μ k + t Δ μ k − 1 = e μ k e t Δ μ k − 1 = e μ k ( 1 + t Δ μ k + O ( t 2 ) ) − 1 = e μ k − 1 + t ( 1 − e μ k ) + t β k μ 0 + O ( t 2 ) = ( 1 − t ) ( e μ k − 1 ) + t β k μ 0 + O (t2)</p><p>从而</p><p>( e μ k + t Δ μ k − 1 ) 2 = ( 1 − t ) 2 ( e μ k − 1 ) 2 + 2 t ( 1 − t ) β k ( e μ k − 1 ) μ 0 + t 2 β k μ 0 + O ( t 2 ) ≤ ( 1 − 2 t ) ) ( e μ k − 1 ) 2 + 2 t e μ k γ θ ( z k ) ( e μ k − 1 ) μ 0 + O ( t 2 ) ≤ ( 1 − 2 t ) ( e μ k − 1 ) 2 + 2 t γ μ 0 η θ ( z k ) .</p><p>在上述最后一个不等式利用 e μ k − 1 ≤ θ ( z k ) , e μ k ≤ η 可得。</p><p>令 φ ( z k ) = ( b − A x k ϕ ( z k ) ) , 并记 Φ ( z k ) = ‖ ϕ ( z k ) ‖ 2 , 可得 ( Φ ′ ( z k ) ) T Δ z k = − 2 ‖ ϕ ( z k ) ‖ 2 = − 2 Φ ( z k ) ，</p><p>从而</p><p>Φ ( z k + t Δ z k ) = Φ ( z k ) + t ( Φ ′ ( z k ) ) T Δ z k + ο ( t ) = Φ ( z k ) − 2 t Φ ( z k ) + ο ( t ) = ( 1 − 2 t ) Φ ( z k ) + ο ( t ) .</p><p>因此</p><p>θ ( z k + t Δ z k ) = ‖ H ( z k + t Δ z k ) ‖ 2 ≤ ( 1 − 2 t ) ( e μ k − 1 ) 2 + 2 t γ μ 0 η θ ( z k ) + ( 1 − 2 t ) Φ ( z k ) + ο ( t ) ≤ ( 1 − 2 t ) θ ( z k ) + 2 t γ μ 0 η θ ( z k ) + ο ( t ) ≤ [ 1 − ( 1 − 2 γ μ 0 η ) t ] θ ( z k ) + ο ( t ) .</p><p>因为 γ μ 0 η &lt; 1 ，所以存在一个常数 t &#175; ∈ ( 0 , 1 ] ，使得对任意的 t ∈ ( 0 , t &#175; ] ，有</p><p>θ ( z k + t Δ z k ) ≤ [ 1 − σ ( 1 − 2 γ μ 0 η ) t ] θ ( z k ) , (4.7)</p><p>即步骤3可在有限步终止，故步骤3是适定的。综上可知，算法4.1是适定的。</p></sec><sec id="s7"><title>5. 收敛性分析</title><p>定理5.1：1) 设矩阵A行满秩且 { z k : = ( μ k , x k , y k ) } 是算法4.1生成的无穷迭代点列，则对 ∀ k ≥ 0 ，若 μ k &gt; 0 , z k ∈ Λ , θ ( z k ) ≤ θ ( z 0 ) ，则 z k + 1 ∈ Λ ，其中</p><p>Λ : = { z : = ( μ , x , y ) ∈ R + &#215; R n &#215; R m | μ ≥ β ( z ) μ 0 } , (5.1)</p><p>2) (全局收敛性) { z k } 的任意聚点 z * = ( μ * , x * , y * ) 都是 H ( z k ) = 0 的解。</p><p>证明：1) 根据 β ( z ) 的定义分两种情况讨论：</p><p>i) 若 θ ( z k ) ≤ 1 ，则 β k = γ e μ k ‖ θ ( z k ) ‖ 。对任意的 t ∈ ( 0 , 1 ] ，从(4.7)式知</p><p>θ ( z k + t Δ z k ) ≤ [ 1 − σ ( 1 − 2 γ μ 0 η ) t ] θ ( z k ) ，故 β &#175; ( z k + t Δ z k ) = γ θ ( z k + t Δ z k ) . 。由于 z k ∈ Λ ，可得</p><p>μ k + t Δ μ k − β &#175; ( z k + t Δ z k ) μ 0 ≥ ( 1 − t ) μ k + t γ μ 0 θ ( z k ) − β &#175; ( z k + t Δ z k ) μ 0 ≥ ( 1 − t ) β &#175; k μ 0 + t γ μ 0 θ ( z k ) − γ θ ( z k + t Δ z k ) μ 0 ≥ ( 1 − t ) γ θ ( z k ) μ 0 + t γ μ 0 θ ( z k ) − γ [ 1 − σ ( 1 − 2 γ μ 0 η ) t ] θ ( z k ) μ 0 = 2 γ σ ( 1 − γ μ 0 η ) t θ ( z k ) μ 0 ≥ 0.</p><p>ii) 若 θ ( z k ) &gt; 1 ，则 β k = γ e μ k , β &#175; k : = β &#175; ( z k ) = γ 。对任意的 z ∈ R 2 n + 1 ，有 β &#175; ( z ) ≤ γ ，从而对任意的 t ∈ ( 0 , 1 ] ，有</p><p>μ k + t Δ μ k − β &#175; ( z k + t Δ z k ) μ 0 = μ k + t ( 1 − e μ k e μ k + β k μ 0 e μ k ) − β &#175; ( z k + t Δ z ) k μ 0 ≥ ( 1 − t ) μ k + t γ μ 0 − γ μ 0 ≥ ( 1 − t ) β &#175; k μ 0 + t γ μ 0 − γ μ 0 = ( 1 − t ) γ μ 0 + t γ μ 0 − γ μ 0 = 0.</p><p>从而 z k + 1 ∈ Λ 。</p><p>2) 不失一般性，设 z * 是点列 { z k } 的任意聚点，要证 H ( z * ) = 0 ，用反证法。假设 ‖ H ( z * ) ‖ &gt; 0 ，由算法4.1的步骤3知 { ‖ H ( z k ) ‖ } 单调下降且有界，结合 H ( z k ) 的连续性，有 lim k → + ∞ ‖ H ( z k ) ‖ = ‖ H ( z * ) ‖ 。由 β ( ⋅ ) 的定义知 β ( z k ) 单调下降且趋于 β ( z * ) : β * = β ( z * ) = e μ * γ min { 1 , θ ( z * ) } &gt; 0 。另外，由(5.1)和(4.6)式得到：</p><p>0 &lt; μ k + 1 = μ k + t Δ μ k = μ k + t ( 1 − e μ k e μ k + β k μ 0 e μ k ) ≤ μ k + t ( − μ k e μ k + e μ k β &#175; k μ 0 e μ k ) ≤ μ k + t ( − μ k e μ k + μ k ) ≤ μ k .</p><p>即 μ k 是单调下降的，则 lim k → + ∞ μ k = μ * 。对 μ k ≥ β k μ 0 两边取极限，有 μ * ≥ β * μ 0 &gt; 0 。由定理4.1知 H ′ ( z * ) 存在且非奇异。由引理4.1知：存在 z * 的一个闭邻域 N ( z * ) 和正数 t &#175; ∈ ( 0 , 1 ] ，使得对于任意的 z = ( μ , x , y ) ∈ N ( z * ) 和所有的 t ∈ [ 0 , t &#175; ] ，都有 μ &gt; 0 ， H ′ ( z ) 非奇异且</p><p>θ ( z k + t Δ z k ) ≤ [ 1 − σ ( 1 − 2 γ μ 0 η ) t ] θ ( z k ) .</p><p>可以找到一个非负整数 τ ，使得 δ τ ∈ [ 0 , t &#175; ] ，当k充分大时，有</p><p>θ ( z k + 1 ) ≤ [ 1 − σ ( 1 − 2 γ μ 0 η ) t ] θ ( z k ) .</p><p>由步骤3知，对于充分大的k，步长 t k = δ α k ≥ δ τ ，因此有</p><p>θ ( z k + 1 ) ≤ [ 1 − σ ( 1 − 2 γ μ 0 η ) t k ] θ ( z k ) ≤ [ 1 − σ ( 1 − 2 γ μ 0 η ) δ τ ] θ ( z k ) .</p><p>这与序列 { θ ( z k ) } 的极限 θ ( z * ) &gt; 0 矛盾，故 θ ( z * ) = 0 ，即 H ( z * ) = 0 ，因此算法4.1是全局收敛的。</p><p>接下来证明算法的一个局部收敛性，在证明之前先介绍相关引理。</p><p>引理5.1 (文 [<xref ref-type="bibr" rid="hanspub.29763-ref12">12</xref>] )：如果 V ∈ ∂ F ( z * ) 都是非奇异的，那么存在 z * 的一个邻域 N ( z * ) 和一个常数 C &gt; 0 ，使得对于任意的 z k ∈ N z * 和任意的 V ∈ ∂ F ( z k ) 。V非奇异且 ‖ V − 1 ‖ ≤ C 。</p><p>定理5.2 (局部二次收敛)：设矩阵A行满秩且 z * 是算法4.1产生的迭代点列 { z k } 的任意聚点，则当k充分大时， { z k } 二阶收敛到 z * ，即 ‖ z k + 1 − z * ‖ = O ( ‖ z k − z * ‖ 2 ) ，且 μ k + 1 = O ( μ k 2 ) 。</p><p>证明：由定理5.1的(2)知 H ( z * ) = 0 ，又由定理4.1知 H ′ ( z * ) 存在且非奇异。故由引理5.1知，存在一个常数 C &gt; 0 ，对于充分接近 z * 的所有点 z k ，有 ‖ ( H ′ ( z k ) ) − 1 ‖ ≤ C 。由定理3.1和定理4.1知 H ( z ) 在 z k 处是全局利普希茨连续的强半光滑函数，因为 H ( x + Δ x ) − H ( x ) − V ( Δ x ) = O ( ‖ Δ x ‖ 1 + p ) ，当 z k 充分接近 z * 时，由半光滑函数的定义知，当 z k 充分接近点 z * 时，有</p><p>‖ H ( z k ) ‖ = ‖ H ( z k ) − H ( z * ) ‖ = O ( ‖ z k − z * ‖ )</p><p>和</p><p>H ( z * ) − H ( z k ) − H ′ ( z k ) ( z * − z k ) = O ( ‖ z k − z * ‖ 2 ) .</p><p>又 β k = e μ k γ min { 1 , ‖ H ( z k ) ‖ 2 } ≤ ‖ H ( z k ) ‖ 2 ，即 β k = O ( ‖ H ( z k ) ‖ 2 ) = O ( ‖ z k − z * ‖ 2 ) 。因此，</p><p>‖ z k + Δ z k − z * ‖ = ‖ z k + ( H ′ ( z k ) ) − 1 ( β k z &#175; − H ( z k ) ) − z * ‖ = ‖ ( H ′ ( z k ) ) − 1 [ H ′ ( z k ) ( z k − z * ) + β k z &#175; − H ( z k ) ] ‖ ≤ ‖ ( H ′ ( z k ) ) − 1 ‖ ‖ H ( z * ) − H ( z k ) − H ′ ( z k ) ( z * − z k ) + β k z &#175; ‖ ≤ C [ ‖ H ( z * ) − H ( z k ) − H ′ ( z k ) ( z * − z k ) ‖ + β k μ 0 ] = O ( ‖ z k − z * ‖ 2 ) . (5.2)</p><p>进一步有</p><p>‖ H ( z k + Δ z k ) ‖ = O ( ‖ z k + Δ z k − z * ‖ ) = O ( ‖ z k − z * ‖ 2 ) = O ( ‖ H ( z k ) ‖ 2 ) (5.3)</p><p>即当 z k 充分接近 z * 时，有 z k + 1 = z k + Δ z k 。由(4.5)知</p><p>‖ z k + 1 − z * ‖ = O ( ‖ z k − z * ‖ 2 ) (5.4)</p><p>即算法4.1是二次收敛的，其次，当k充分大时， H ( z k ) 单调减少趋向于 H ( z * ) ，即 H ( z k ) → 0 ，所以 β k = e μ k γ ‖ H ( z k ) ‖ 2 ，又因为 z k + 1 = z k + Δ z k ，所以当k充分大时有</p><p>μ k + 1 = μ k + Δ μ k = β k μ 0 e μ k = γ ‖ H ( z k ) ‖ 2 μ 0 . (5.5)</p><p>结合(5.3)式知，当 z k 充分接近 z * 时，有</p><p>μ k + 1 μ k = ‖ H ( z k ) ‖ 2 ‖ H ( z k − 1 ) ‖ 2 = O (     ‖ H ( z k − 1 ) ‖ 4 )       ‖ H ( z k − 1 ) ‖ 2 = O   (   ‖ H ( z k − 1 ) ‖ 2 ) = O ( μ k ) ,</p><p>即 μ k + 1 = O ( μ k 2 ) 。</p></sec><sec id="s8"><title>6. 数值试验</title><p>为了检验算法4.1的有效性，本文用Matlab 2014a编程，在Inter (R) Pentium (R) 4CPU，3.40 GHz，2 GB内存，Windows 7操作系统的电脑上做数值试验。测试问题是随机生成的规模n = 2 m从20到800维不等且r = 1的二阶锥规划问题。具体步骤为：首先生成随机的行满秩矩阵 A ∈ R m &#215; n 和随机向量 x , s ∈ K 0 ，然后令 b = A x , c = A T y + s , ，则得到的二阶锥规划的原问题和对偶问题都存在最优解且最优值相等。在测试问题过程中，初始点选取 x 0 = e ∈ R n , y 0 = 0 ∈ R m 。参数取值为： μ 0 = 0.01 , δ = 0.65 , σ = 0.35 , γ = 0.90 。终止准则为 ‖ H ( z k ) ‖ ≤ 10 − 6 。计算结果列于表1，其中IT和CPU(s)表示每个测试问题进行10次所求得最优解时所用的平均迭代次数和平均时间。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> The numerical experiment results of the algorith</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  colspan="6"  >算法4.1文 [<xref ref-type="bibr" rid="hanspub.29763-ref13">13</xref>]</th></tr></thead><tr><td align="center" valign="middle" >n</td><td align="center" valign="middle" >m</td><td align="center" valign="middle" >IT</td><td align="center" valign="middle" >CPU (s)</td><td align="center" valign="middle" >IT</td><td align="center" valign="middle" >CPU(s)</td></tr><tr><td align="center" valign="middle" >20</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >0.05</td><td align="center" valign="middle" >-</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >50</td><td align="center" valign="middle" >25</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >0.07</td><td align="center" valign="middle" >-</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >50</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >0.12</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >0.11</td></tr><tr><td align="center" valign="middle" >200</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >0.16</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >0.53</td></tr><tr><td align="center" valign="middle" >300</td><td align="center" valign="middle" >150</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >0.80</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >1.15</td></tr><tr><td align="center" valign="middle" >400</td><td align="center" valign="middle" >200</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >1.60</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >2.55</td></tr><tr><td align="center" valign="middle" >500</td><td align="center" valign="middle" >250</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >3.08</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >6.13</td></tr><tr><td align="center" valign="middle" >600</td><td align="center" valign="middle" >300</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >5.34</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >9.74</td></tr><tr><td align="center" valign="middle" >700</td><td align="center" valign="middle" >350</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >7.31</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >18.93</td></tr><tr><td align="center" valign="middle" >800</td><td align="center" valign="middle" >400</td><td align="center" valign="middle" >18</td><td align="center" valign="middle" >12.86</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >22.74</td></tr></tbody></table></table-wrap><p>表1. 算法的数值实验结果</p><p>由表1可以看出，算法是有效的，并且可以求解大规模的二阶锥规划问题，它只需较少的CPU时间就可以得到满足终止条件的解。并且本文中的算法4.1求解问题所用时间大部分比文献 [<xref ref-type="bibr" rid="hanspub.29763-ref13">13</xref>] 所用时间少。</p></sec><sec id="s9"><title>基金项目</title><p>国家自然科学基金(11561005)。</p></sec><sec id="s10"><title>文章引用</title><p>梁晓娟,曾友芳. 二阶锥规划基于SOC函数的新光滑牛顿算法A New Smoothing Newton Method for Se-cond-Order Cone Optimization Based on SOC Function[J]. 应用数学进展, 2019, 08(04): 602-612. https://doi.org/10.12677/AAM.2019.84067</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.29763-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Faraut, J. and Koranyi, A. (1994) Analysis on Symmetric Cone. Clarendon Press, Oxford.</mixed-citation></ref><ref id="hanspub.29763-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Alizadeh, F. and Goldfarb, D. (2003) Second-Order Cone Programming. Mathematical Programming: Series B, 95, 3-51.</mixed-citation></ref><ref id="hanspub.29763-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Sun, D.F. (2005) Strong Semismoothness of the Fischer-Burmeister SDC and SOC Complentarity Functions. Mathematical Pro-gramming, 103, 575-581. &lt;br&gt;https://doi.org/10.1007/s10107-005-0577-4</mixed-citation></ref><ref id="hanspub.29763-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Hayashi, S., Yamashita, N. and Fuku-shima, M. (2005) A Combined Smoothing and Regularization Method for Monotone Second-Order Cone Complemen-tarity Problems. SIAM Journal on Optimization, 15, 593-615.  
&lt;br&gt;https://doi.org/10.1137/S1052623403421516</mixed-citation></ref><ref id="hanspub.29763-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Chi, X.N. and Liu, S.Y. (2009) A One-Step Smoothing Newton Method for Second-Order Cone Programming. Journal of Computational and Applied Mathematics, 223, 114-123. &lt;br&gt;https://doi.org/10.1016/j.cam.2007.12.023</mixed-citation></ref><ref id="hanspub.29763-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Chi, X.N. and Liu, S.Y. (2009) A Non-Interior Continuation Method for Second Cone Optimization. Optimization, 58, 965-979. &lt;br&gt;https://doi.org/10.1080/02331930701763421</mixed-citation></ref><ref id="hanspub.29763-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Tang, J.Y., Dong, L., Fang, L. and Zhou, J.C. (2014) Smoothing Newton Algorithm for the Second-Order Cone Programming with a Nonmonotone Line Search. Optimization Letters, 8, 1753-1771.  
&lt;br&gt;https://doi.org/10.1007/s11590-013-0699-1</mixed-citation></ref><ref id="hanspub.29763-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Tang, J.Y., He, G.P., Dong, L., Fang, L. and Zhou, J.C. (2015) A Globally and Quadratically Convergent Smoothing Newton Method for Solving Second-Order Cone Optimization. Ap-plied Mathematical Modelling, 39, 2180-2193.  
&lt;br&gt;https://doi.org/10.1016/j.apm.2014.10.027</mixed-citation></ref><ref id="hanspub.29763-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Fang, L. and Feng, Z.Z. (2011) A Smoothing Newton-Type Method for Second-Order Cone Programming Problems Based on a New Smoothing Fischer-Burmeister Function. Computational &amp; Applied Mathematics, 30, 569-588.  
&lt;br&gt;https://doi.org/10.1590/S1807-03022011000300005</mixed-citation></ref><ref id="hanspub.29763-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Jiang, H. (1997) Smoothed Fischer-Burmeister Equation Methods for the Complementarity Problem. Technical Report. Department of Mathematics, The University of Melbourne, Parville, Victoria, Australia.</mixed-citation></ref><ref id="hanspub.29763-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Fukushima, M., Luo, Z.Q. and Tseng, P. (2001) Smoothing Functions for Second-Order Cone Complementarity Problems. SIAM Journal on Optimization, 12, 436-460. &lt;br&gt;https://doi.org/10.1137/S1052623400380365</mixed-citation></ref><ref id="hanspub.29763-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Qi, L.Q. and Sun, J. (1993) A Nonsmooth Version of Newton’s Method. Mathematical Programming, 58, 353-367.  
&lt;br&gt;https://doi.org/10.1007/BF01581275</mixed-citation></ref><ref id="hanspub.29763-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">汤京永, 贺国平. 二阶锥规划的一步光滑牛顿法[J]. 数学物理学报, 2012, 32(4): 768-778.</mixed-citation></ref></ref-list></back></article>