<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">ORF</journal-id><journal-title-group><journal-title>Operations Research and Fuzziology</journal-title></journal-title-group><issn pub-type="epub">2163-1476</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/ORF.2017.71004</article-id><article-id pub-id-type="publisher-id">ORF-19808</article-id><article-categories><subj-group subj-group-type="heading"><subject>ORF20170100000_32703560.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  非线性方程组问题的一个三项共轭梯度算法
  A Three-Term Conjugate Gradient Algorithm for Nonlinear Equations Problems
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>黄</surname><given-names>玲花</given-names></name><xref ref-type="aff" rid="aff1"><sub>1</sub></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>广西财经学院信息与统计学院，广西 南宁</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>linghuahuang@163.com</email></corresp></author-notes><pub-date pub-type="epub"><day>24</day><month>02</month><year>2017</year></pub-date><volume>07</volume><issue>01</issue><fpage>31</fpage><lpage>36</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   本文设计一个三项共轭梯度算法，用来求解非线性方程组问题，建议的算法优点是：(1) 搜索方向的充分下降性；(2) 搜索方向的信赖域特点；(3) 算法能保证具有全局收敛性；(4) 算法能成功求解一千维以上的非线性方程组问题。 This paper designs a three-term conjugate gradient algorithm for nonlinear equations problems and the proposed algorithm has four advantages: (1) the sufficient descent property is satisfied for the search direction; (2) the trust region feature holds for the direction too; (3) the global convergence of the proposed algorithm is possessed; (4) the new algorithm can successfully solve nonlinear equations problems with 1000 dimensions. 
  
 
</p></abstract><kwd-group><kwd>方程组问题，三项共轭梯度，全局收敛性, Nonlinear Equations Problems</kwd><kwd> Three-Term Conjugate Gradient</kwd><kwd> Global Convergence</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>非线性方程组问题的一个三项共轭梯度算法<sup> </sup></title><p>黄玲花</p><p>广西财经学院信息与统计学院，广西 南宁</p><p>收稿日期：2017年2月6日；录用日期：2017年2月21日；发布日期：2017年2月24日</p><disp-formula id="hanspub.19808-formula84"><graphic xlink:href="http://html.hanspub.org/file/4-1700083x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文设计一个三项共轭梯度算法，用来求解非线性方程组问题，建议的算法优点是：(1) 搜索方向的充分下降性；(2) 搜索方向的信赖域特点；(3) 算法能保证具有全局收敛性；(4) 算法能成功求解一千维以上的非线性方程组问题。</p><p>关键词 :方程组问题，三项共轭梯度，全局收敛性</p><disp-formula id="hanspub.19808-formula85"><graphic xlink:href="http://html.hanspub.org/file/4-1700083x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2017 by author and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="http://image.hanspub.org:8080\Html/htmlimages\1-2890033x\e70a10f1-7c93-45ea-9603-062237856e4b.png" /><img src="http://image.hanspub.org:8080\Html\htmlimages\1-2890033x\e898c85e-ffc4-45c9-b817-14224a4d6960.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>本文研究下面的非线性方程组问题：</p><disp-formula id="hanspub.19808-formula86"><label>(1.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1700083x9_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x10_hanspub.png" xlink:type="simple"/></inline-formula>是连续可微函数，不难看出问题(1.1)的求解等价于求解如下形式的最小值优化问题模型：</p><disp-formula id="hanspub.19808-formula87"><label>(1.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1700083x11_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x12_hanspub.png" xlink:type="simple"/></inline-formula>表示欧式范数。则非线性方程组问题(1.1)就转化为了一个最小值的优化问题(1.2)，我们将对(1.2)提出其求解的新算法。求解一个最优化问题，常采用数值迭代方法，一般的迭代公式定义为</p><disp-formula id="hanspub.19808-formula88"><label>(1.3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1700083x13_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x14_hanspub.png" xlink:type="simple"/></inline-formula>是搜索方向，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x15_hanspub.png" xlink:type="simple"/></inline-formula>表示步长，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x16_hanspub.png" xlink:type="simple"/></inline-formula>代表第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x17_hanspub.png" xlink:type="simple"/></inline-formula>次迭代点(或称为当前点)，有了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x18_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x19_hanspub.png" xlink:type="simple"/></inline-formula>，产生第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x20_hanspub.png" xlink:type="simple"/></inline-formula>个迭代点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x21_hanspub.png" xlink:type="simple"/></inline-formula> (或称为下一个迭代点)；依次类推，根据(1.3)产生一个迭代序列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x22_hanspub.png" xlink:type="simple"/></inline-formula>，设计算法主要是分析迭代序列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x23_hanspub.png" xlink:type="simple"/></inline-formula>是否收敛到某一聚点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x24_hanspub.png" xlink:type="simple"/></inline-formula>或得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x25_hanspub.png" xlink:type="simple"/></inline-formula>？</p><p>本文将针对(1.2)设计一个新的三项共轭梯度法，众所周知共轭梯度算法是一类非常有效的求解目标函数最小值的优化方法 [<xref ref-type="bibr" rid="hanspub.19808-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.19808-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.19808-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.19808-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.19808-ref5">5</xref>] ，特别是对大规模优化问题，其搜索方向定义形式是：</p><disp-formula id="hanspub.19808-formula89"><graphic xlink:href="http://html.hanspub.org/file/4-1700083x26_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x27_hanspub.png" xlink:type="simple"/></inline-formula>表示共轭梯度参数，它是共轭梯度法设计的关键。鉴于此方法设计简单、程序容易实现，很多学者便成功将此类方法应用于(1.1)的求解(见文献 [<xref ref-type="bibr" rid="hanspub.19808-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.19808-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.19808-ref8">8</xref>] 等)，受此启发，我们将做进一步的研究，设计一个三项共轭梯度算法，新方法具有不错的性质和特点。第二部分，给出设计好的三项共轭梯度方法和及其具体的算法步骤，第三部分分析算法的下降性、信赖域特点和全局收敛性，第四部分进行非线性方程组问题的检验。</p></sec><sec id="s4"><title>2. 公式和算法</title><p>建议的三项共轭梯度公式如下：</p><disp-formula id="hanspub.19808-formula90"><label>(2.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1700083x28_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x29_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x30_hanspub.png" xlink:type="simple"/></inline-formula>是常数。上述公式的思想是受文章 [<xref ref-type="bibr" rid="hanspub.19808-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.19808-ref8">8</xref>] 启发设计的。下面给出该三项共轭梯度算法详细步骤：</p><p>算法1：(三项共轭梯度算法)</p><p>步骤0：初始条件的赋值，初始迭代点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x31_hanspub.png" xlink:type="simple"/></inline-formula>，常数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x32_hanspub.png" xlink:type="simple"/></inline-formula>，置<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x33_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步骤1：条件<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x34_hanspub.png" xlink:type="simple"/></inline-formula>满足，停止算法；否则转步骤2。</p><p>步骤2：解(2.1)获得搜索方向<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x35_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步骤3：通过下面线搜索技术</p><disp-formula id="hanspub.19808-formula91"><label>(2.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1700083x36_hanspub.png"  xlink:type="simple"/></disp-formula><p>获得步长<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x37_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步骤4：置<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x38_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步骤5：如果条件<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x39_hanspub.png" xlink:type="simple"/></inline-formula>满足，算法停止并取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x40_hanspub.png" xlink:type="simple"/></inline-formula>；否则置</p><disp-formula id="hanspub.19808-formula92"><label>(2.3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1700083x41_hanspub.png"  xlink:type="simple"/></disp-formula><p>步骤6：置<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x42_hanspub.png" xlink:type="simple"/></inline-formula>，转到步骤1。</p><p>注：线搜索技术(2.2)是文献 [<xref ref-type="bibr" rid="hanspub.19808-ref7">7</xref>] 最先给出，(2.3)是投影技术，由文献 [<xref ref-type="bibr" rid="hanspub.19808-ref9">9</xref>] 给出。</p></sec><sec id="s5"><title>3. 信赖域特点、充分下降性以及全局收敛性</title><p>我们首先通过下面的引理证明算法1的信赖域的特点和充分下降性。</p><p>引理3.1：(2.1)产生的搜索方向<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x43_hanspub.png" xlink:type="simple"/></inline-formula>满足</p><disp-formula id="hanspub.19808-formula93"><label>(3.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1700083x44_hanspub.png"  xlink:type="simple"/></disp-formula><p>和</p><disp-formula id="hanspub.19808-formula94"><label>(3.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1700083x45_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x46_hanspub.png" xlink:type="simple"/></inline-formula>是常数。</p><p>证明：根据(2.1)的定义形式，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x47_hanspub.png" xlink:type="simple"/></inline-formula>时，不难获得(3.1)和(3.2)。下面讨论<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x48_hanspub.png" xlink:type="simple"/></inline-formula>时的情况，同样利用(2.1)有</p><disp-formula id="hanspub.19808-formula95"><graphic xlink:href="http://html.hanspub.org/file/4-1700083x49_hanspub.png"  xlink:type="simple"/></disp-formula><p>从而获得(3.1)。根据(3.1)的结果，易得</p><disp-formula id="hanspub.19808-formula96"><graphic xlink:href="http://html.hanspub.org/file/4-1700083x50_hanspub.png"  xlink:type="simple"/></disp-formula><p>取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x51_hanspub.png" xlink:type="simple"/></inline-formula>，则(3.2)式的左边成立。关于(3.2)的右边不等式，需要再次利用(2.1)来获得，具体如下</p><disp-formula id="hanspub.19808-formula97"><graphic xlink:href="http://html.hanspub.org/file/4-1700083x52_hanspub.png"  xlink:type="simple"/></disp-formula><p>最后一个不等式利用了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x53_hanspub.png" xlink:type="simple"/></inline-formula>获得，任取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x54_hanspub.png" xlink:type="simple"/></inline-formula>，(3.2)的右边不等式便能获得。综上所述，关系式(3.1)和(3.2)都是成立的。证毕！</p><p>关系式(3.1)被称为充分下降性，而关系式(3.2)被称为信赖域的特征。从证明过程可以看出，我们建议的三项共轭梯度的搜索方向在没有其他假设条件的情况下，自身就能拥有这两个优点，关系式(3.1)和(3.2)对算法的收敛性起着至关重要的作用。为进一步获得三项共轭梯度算法的全局收敛性，需要一些假设条件。</p><p>假设A：(i) 假设问题(1.1)的解存在；</p><p>(ii)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x55_hanspub.png" xlink:type="simple"/></inline-formula>满足Lipschitz条件，也就是</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x56_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x57_hanspub.png" xlink:type="simple"/></inline-formula>是Lipschitz常数。</p><p>根据假设A和获得的引理3.1，便可以证明算法1的全局收敛性结论。此结论的证明与参考文献 [<xref ref-type="bibr" rid="hanspub.19808-ref7">7</xref>] 的证明过程相似，我们就不再详述。</p><p>定理3.1：若迭代序列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x58_hanspub.png" xlink:type="simple"/></inline-formula>是由算法1产生的且假设A的条件满足，则关系式</p><disp-formula id="hanspub.19808-formula98"><graphic xlink:href="http://html.hanspub.org/file/4-1700083x59_hanspub.png"  xlink:type="simple"/></disp-formula><p>成立。</p><p>此定理被称为算法1的全局收敛性定理。</p></sec><sec id="s6"><title>4. 数值实验</title><p>为验证建议的三项共轭梯度算法是有效的，本节将对下面的问题(见表1)利用计算机编写程序计算。</p><p>我们将利用Matlab R2009a编写程序代码，程序是在Windows 7系统、CPU为Intel (R) Xeon (R)，E5507 2.27 GHz、64位操作系统、6.00GB内存上运行。算法中的参数选取分别是：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x60_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x61_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x62_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1700083x63_hanspub.png" xlink:type="simple"/></inline-formula>。表2中第一行参数含义分别是：NI代表迭代次数，Nq代表函数值次数，Dim代表所检验问题的维数，Cpu-Time代表程序在计算机上运行的CPU时间，Val代表程序终止时的范数值。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Problems nam</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >Nr.</th><th align="center" valign="middle" >名称</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >Exponential function 2</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >Trigonometric function</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >Logarithmic function</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >Broyden Tridiagonal function</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >Trigexp function</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >Strictly convex function 1</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >Variable dimensioned function</td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >Extended Freudentein and Roth function</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >Discrete boundary value problem</td></tr><tr><td align="center" valign="middle" >10</td><td align="center" valign="middle" >Troesch problem</td></tr></tbody></table></table-wrap><p>表1. 问题名称</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Numerical result</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >Nr.</th><th align="center" valign="middle" >Dim</th><th align="center" valign="middle" >NI/Nq</th><th align="center" valign="middle" >Cpu-Time</th><th align="center" valign="middle" >Val</th></tr></thead><tr><td align="center" valign="middle"  rowspan="2"  >1</td><td align="center" valign="middle" >800</td><td align="center" valign="middle" >57/206</td><td align="center" valign="middle" >0.218401</td><td align="center" valign="middle" >9.958541e-005</td></tr><tr><td align="center" valign="middle" >1500</td><td align="center" valign="middle" >24/93</td><td align="center" valign="middle" >0.249602</td><td align="center" valign="middle" >8.792103e-005</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >2</td><td align="center" valign="middle" >800</td><td align="center" valign="middle" >35/70</td><td align="center" valign="middle" >0.124801</td><td align="center" valign="middle" >9.849371e-005</td></tr><tr><td align="center" valign="middle" >1500</td><td align="center" valign="middle" >34/68</td><td align="center" valign="middle" >0.249602</td><td align="center" valign="middle" >8.990512e-005</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >3</td><td align="center" valign="middle" >800</td><td align="center" valign="middle" >4/5</td><td align="center" valign="middle" >0.000000</td><td align="center" valign="middle" >3.878205e-005</td></tr><tr><td align="center" valign="middle" >1500</td><td align="center" valign="middle" >4/5</td><td align="center" valign="middle" >0.046800</td><td align="center" valign="middle" >3.246054e-005</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >4</td><td align="center" valign="middle" >800</td><td align="center" valign="middle" >76/152</td><td align="center" valign="middle" >0.202801</td><td align="center" valign="middle" >8.833125e-005</td></tr><tr><td align="center" valign="middle" >1500</td><td align="center" valign="middle" >78/156</td><td align="center" valign="middle" >0.468003</td><td align="center" valign="middle" >8.953038e-005</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >5</td><td align="center" valign="middle" >800</td><td align="center" valign="middle" >229/594</td><td align="center" valign="middle" >0.748805</td><td align="center" valign="middle" >9.804039e-005</td></tr><tr><td align="center" valign="middle" >1500</td><td align="center" valign="middle" >227/590</td><td align="center" valign="middle" >1.778411</td><td align="center" valign="middle" >9.532705e-005</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >6</td><td align="center" valign="middle" >800</td><td align="center" valign="middle" >50/100</td><td align="center" valign="middle" >0.156001</td><td align="center" valign="middle" >9.109563e-005</td></tr><tr><td align="center" valign="middle" >1500</td><td align="center" valign="middle" >52/104</td><td align="center" valign="middle" >0.343202</td><td align="center" valign="middle" >8.173231e-005</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >7</td><td align="center" valign="middle" >800</td><td align="center" valign="middle" >1/2</td><td align="center" valign="middle" >0.000000</td><td align="center" valign="middle" >0.000000e+000</td></tr><tr><td align="center" valign="middle" >1500</td><td align="center" valign="middle" >1/2</td><td align="center" valign="middle" >0.031200</td><td align="center" valign="middle" >0.000000e+000</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >8</td><td align="center" valign="middle" >800</td><td align="center" valign="middle" >616/1693</td><td align="center" valign="middle" >1.934412</td><td align="center" valign="middle" >4.555189e-005</td></tr><tr><td align="center" valign="middle" >1500</td><td align="center" valign="middle" >714/1957</td><td align="center" valign="middle" >5.444435</td><td align="center" valign="middle" >1.939103e-005</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >9</td><td align="center" valign="middle" >800</td><td align="center" valign="middle" >28/57</td><td align="center" valign="middle" >0.093601</td><td align="center" valign="middle" >8.779266e-005</td></tr><tr><td align="center" valign="middle" >1500</td><td align="center" valign="middle" >26/53</td><td align="center" valign="middle" >0.202801</td><td align="center" valign="middle" >9.421179e-005</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >10</td><td align="center" valign="middle" >800</td><td align="center" valign="middle" >0/1</td><td align="center" valign="middle" >0.000000</td><td align="center" valign="middle" >0.000000e+000</td></tr><tr><td align="center" valign="middle" >1500</td><td align="center" valign="middle" >0/1</td><td align="center" valign="middle" >0.000000</td><td align="center" valign="middle" >0.000000e+000</td></tr></tbody></table></table-wrap><p>表2. 数值结果</p><p>从表格中测验结果能够看出：(1) 给定的三项共轭梯度算法能成功求解这10个非线性方程组问题，范数值接近于零说明利用新算法几乎得到了其精确解，其中第十个问题就获得了精确解；(2) 随着检验问题规模的增大，NI和Nq的变化不大，有的个别问题反而减少，但Cpu-Time均会适当增加，这也证明了算法的合理性；(3) 有些问题的Cpu-Time = 0，这证明算法在运行时，几乎没有占用系统的CPU时间。</p></sec><sec id="s7"><title>文章引用</title><p>黄玲花. 非线性方程组问题的一个三项共轭梯度算法 A Three-Term Conjugate Gradient Algorithm for Nonlinear Equations Problems[J]. 运筹与模糊学, 2017, 07(01): 31-36. http://dx.doi.org/10.12677/ORF.2017.71004</p></sec><sec id="s8"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.19808-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Andrei, N. (2008) Another Hybrid Conjugate Gradient Algorithm for Unconstrained Optimization. Numerical Algorithms, 47, 143-156. https://doi.org/10.1007/s11075-007-9152-9</mixed-citation></ref><ref id="hanspub.19808-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Fletcher, R., Reeves, C.M., et al. (1964) Function Minimization by Conjugate Gradients. Computer Journal, 7, 149-154. https://doi.org/10.1093/comjnl/7.2.149</mixed-citation></ref><ref id="hanspub.19808-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Polak, E. and Ribière, G. (1968) Note sur la convergence de méthodes de directions conjuguées. Rev. Francaise Imformat Recherche Opertionelle, 16, 35-43.</mixed-citation></ref><ref id="hanspub.19808-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Wei, Z., Yao, S. and Liu, L. (2006) The Convergence Properties of Some New Conjugate Gradient Methods. Applied Mathematics &amp; Computation, 183, 1341-1350. https://doi.org/10.1016/j.amc.2006.05.150</mixed-citation></ref><ref id="hanspub.19808-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Yuan, G. (2009) Modified Nonlinear Conjugate Gradient Methods with Sufficient Descent Property for Large-Scale Optimization Problems. Optimization Letters, 3, 11-21. https://doi.org/10.1007/s11590-008-0086-5</mixed-citation></ref><ref id="hanspub.19808-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Li, Q. and Li, D.H. (2011) A Class of Derivative-Free Methods for Large-Scale Nonlinear Monotone Equations. IMA Journal of Numerical Analysis, 31, 1625-1635. https://doi.org/10.1093/imanum/drq015</mixed-citation></ref><ref id="hanspub.19808-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Li, D. and Wang, L. (2011) A Modified Fletcher-Reeves-Type Derivative-Free Method for Symmetric Nonlinear Equations. Numerical Algebra, Control and Optimization, 1, 71-82. https://doi.org/10.3934/naco.2011.1.71</mixed-citation></ref><ref id="hanspub.19808-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Yuan, G. and Zhang, M. (2015) A Three-Terms Polak-Ribière-Polyak Conjugate Gradient Algorithm for Large-Scale Nonlinear Equations. Journal of Computational &amp; Applied Mathematics, 286, 186-195.  
https://doi.org/10.1016/j.cam.2015.03.014</mixed-citation></ref><ref id="hanspub.19808-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Solodov, M.V. and Svaiter, B.F. (1998) A Globally Convergent Inexact Newton Method for Systems of Monotone Equations. Reformulation: Nonsmooth, Piecewise Smooth, Semismooth and Smoothing Methods, Springer, US, 1411- 1414.</mixed-citation></ref></ref-list></back></article>