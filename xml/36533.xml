<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">FIN</journal-id><journal-title-group><journal-title>Finance</journal-title></journal-title-group><issn pub-type="epub">2161-0967</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/FIN.2020.104037</article-id><article-id pub-id-type="publisher-id">FIN-36533</article-id><article-categories><subj-group subj-group-type="heading"><subject>FIN20200400000_75474962.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>经济与管理</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于LSTM的量化股票预测
  LSTM Based Quantitative Stock Forecasting
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>赵</surname><given-names>建群</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>岐</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>悦</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>广东科贸职业学院经济管理学院，广东 广州</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>29</day><month>05</month><year>2020</year></pub-date><volume>10</volume><issue>04</issue><fpage>366</fpage><lpage>373</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  股票特征通常夹杂较多噪声数据，而带噪数据会影响股票预测模型的预测精度。本文提出一种对股票数据特征进行量化编码的方法，并使用长短期记忆网络构建预测模型，对量化后的数据进行预测。数据集采用沪深300成分股，在对股票数据量化后进行3分类涨跌幅预测。实验结果表明，使用量化编码对股票特征处理后，预测效果优于使用原始数据预测。
   The features of stock are usually mixed with many noise data, and noisy data will affect the predic-tion accuracy of stock prediction model. In this paper, a quantitative coding method for stock data features is proposed, and a prediction model is constructed by using short and long term memory network to predict the quantified data. The data set uses the Shanghai and Shenzhen 300 compo-nent stocks, after the stock data quantification carries on the 3 classification rise and fall forecast. The experimental results show that the prediction effect is better than that of the original data after the stock feature is processed by quantitative coding.
 
</p></abstract><kwd-group><kwd>特征量化，LSTM，沪深300，涨跌幅预测, Characteristic Quantification</kwd><kwd> LSTM</kwd><kwd> Shanghai and Shenzhen 300</kwd><kwd> Forecast of Increase or Decrease</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于LSTM的量化股票预测<sup> </sup></title><p>赵建群，张岐，王悦</p><p>广东科贸职业学院经济管理学院，广东 广州</p><p>收稿日期：2020年6月25日；录用日期：2020年7月9日；发布日期：2020年7月16日</p><disp-formula id="hanspub.36533-formula17"><graphic xlink:href="//html.hanspub.org/file/12-1140511x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>股票特征通常夹杂较多噪声数据，而带噪数据会影响股票预测模型的预测精度。本文提出一种对股票数据特征进行量化编码的方法，并使用长短期记忆网络构建预测模型，对量化后的数据进行预测。数据集采用沪深300成分股，在对股票数据量化后进行3分类涨跌幅预测。实验结果表明，使用量化编码对股票特征处理后，预测效果优于使用原始数据预测。</p><p>关键词 :特征量化，LSTM，沪深300，涨跌幅预测</p><disp-formula id="hanspub.36533-formula18"><graphic xlink:href="//html.hanspub.org/file/12-1140511x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/12-1140511x7_hanspub.png" /> <img src="//html.hanspub.org/file/12-1140511x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>随着国内股票市场的逐步完善，越来越多的研究机构和公司投入股票的分析和预测研究。对股票指数进行分析预测，能够快速掌握股票市场的发展动态，也能一定程度上反映国家的经济状况。由于影响股票数据的因素复杂多变，且股票序列本身具有随机游走等特性 [<xref ref-type="bibr" rid="hanspub.36533-ref1">1</xref>]，使得股票预测成为经济领域的一大难题。</p><p>股票预测已有较长的历史。统计学方法是最先用于现代股票市场预测的方法之一，其通过对股票数据的整理和分析，预测股票价格的短期走势。其中较为成功的有自回归移动平均(ARMA)模型 [<xref ref-type="bibr" rid="hanspub.36533-ref2">2</xref>]，该模型由于对股票数据优异表现沿用至今。SVM [<xref ref-type="bibr" rid="hanspub.36533-ref3">3</xref>]、集成学习 [<xref ref-type="bibr" rid="hanspub.36533-ref4">4</xref>] 等机器学习的方法也常用于股票预测，王禹等人boosting的方法，在添加股票的纵向变化指标后预测股票走势 [<xref ref-type="bibr" rid="hanspub.36533-ref5">5</xref>]，在股票预测的精度上取得了一定的提升。深度神经网络也是现在主流的股票预测模型之一，在股票预测上优异的表现得益于其强大的非线性拟合能力。邓凤欣利用LSTM网络对股票价格的走势做了预测，其结果表明使用LSTM的预测精度水平较高 [<xref ref-type="bibr" rid="hanspub.36533-ref6">6</xref>]。</p><p>在股票特征处理上，现有的研究大都使用特征归一化处理。同时在预测方式上，以拟合股票收盘价走势和预测股票涨跌为主。本文在已有研究的基础上，通过对股票交易的特征进行量化和编码，对股票价格的涨跌幅度进行预测。在网络结构上，选择LSTM作为量化股票预测的基本网络，使用量化后的数据对其进行训练，以预测股票价格的涨跌幅范围，并将结果和未将股票特征量化训练的模型做了比较分析。</p></sec><sec id="s4"><title>2. 特征量化和模型结构</title><sec id="s4_1"><title>2.1. 股票数据集描述</title><p>股票价格的变动通常和多种因素有关，其中能直接影响到其变化的则是股票的基本交易指标 [<xref ref-type="bibr" rid="hanspub.36533-ref7">7</xref>]。开盘价、最高价、最低价、收盘价以及成交量等5维数据是最为常用的股票交易指标，使用神经网络预测股票时，常将这5维数据作为模型的输入，预测股票的价格走势或涨跌变化。本文也使用这5维特征作为股票数据的输入特征。</p><p>在股票数据的选择上，使用中证100指数的成分股作为基础数据来源。沪深300是为了反映沪深股市超大市值公司的股票价格表现而挑选出的300只股票 [<xref ref-type="bibr" rid="hanspub.36533-ref8">8</xref>]。由于该股票集的选取标准严格，其成份股市值高，影响大，所以研究该数据集的股票发展规律也有助于分析国内股票市场。</p><p>在数据集时间跨度上，本文使用2013年~2017年的沪深300指数的成分股票，并将筛选后的股票数据集划分为训练集和测试集。其数据集详细信息见表1。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Overview of stock data set</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >数据集</th><th align="center" valign="middle" >时间跨度</th><th align="center" valign="middle" >交易天数(天)</th><th align="center" valign="middle" >股票数量(只)</th><th align="center" valign="middle" >股票数据总量</th></tr></thead><tr><td align="center" valign="middle" >沪深300</td><td align="center" valign="middle" >2013~2017</td><td align="center" valign="middle" >1215</td><td align="center" valign="middle" >160</td><td align="center" valign="middle" >194,400</td></tr><tr><td align="center" valign="middle" >训练集</td><td align="center" valign="middle" >2013~2016</td><td align="center" valign="middle" >971</td><td align="center" valign="middle" >160</td><td align="center" valign="middle" >155,360</td></tr><tr><td align="center" valign="middle" >测试集</td><td align="center" valign="middle" >2017</td><td align="center" valign="middle" >244</td><td align="center" valign="middle" >160</td><td align="center" valign="middle" >39,040</td></tr></tbody></table></table-wrap><p>表1. 股票数据集概况</p></sec><sec id="s4_2"><title>2.2. 股票的特征量化</title><p>在训练时选择包含多只股票的数据集时，由于各只股票受上市时间、公司规模等因素的影响，其股票价格差别较大，这导致模型难以学习整体股票数据的变化规律；除此之外，股票市场易受各种外部因素的影响，从而造成涨跌停等特殊情况，导致该时间段内的股票特征数值过高或过低。这样的数据对模型来说等同于噪声数据，会对模型的学习造成误导。因此本文在构建整体股票数据集时，将先对每只股票数据按其价格范围进行均匀量化，然后再将其合并到整体的数据集中。</p><p>在量化之前，本文先对因部分股票停盘而造成的缺失数据进行填充。填充方式为将缺失数据上一交易日的股票数据填充为缺失数据。这样在每只股票的时间维度上可以保持统一。</p><p>具体量化时，将单只股票的5维特征在最大值和最小值之间划分为4个区间，从低到高依次编码为1~4。然后按照每个特征值所属的区间，将其编码为对应的数值。</p><p>表2是原始的部分股票特征数据，表3则是按照上述方法进行量化编码后的特征数据。对比可以看出，在经过量化处理后，在同一时间段上，由于股票体量等因素造成的价格差异被消除了。同时，对同一只股票，其涨跌停的数据经过量化平滑后，数值变化波动较小，有利于过滤噪声数据。</p><p>除此之外，股票特征中成交量其量纲和其他4维数据不同，造成在数量级有较大的差异，而量化编码过程是在每一维股票特征上单独进行的，因此经过量化，原来量纲带来的影响也被消除，这样数据不用再经过归一化的处理。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Partial stock characteristic dat</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >日期</th><th align="center" valign="middle" >开盘价</th><th align="center" valign="middle" >最高价</th><th align="center" valign="middle" >收盘价</th><th align="center" valign="middle" >最低价</th><th align="center" valign="middle" >成交量</th><th align="center" valign="middle" >涨跌幅</th></tr></thead><tr><td align="center" valign="middle" >2017/7/24</td><td align="center" valign="middle" >10.82</td><td align="center" valign="middle" >11.06</td><td align="center" valign="middle" >10.95</td><td align="center" valign="middle" >10.73</td><td align="center" valign="middle" >1,692,664</td><td align="center" valign="middle" >0.55</td></tr><tr><td align="center" valign="middle" >2017/7/25</td><td align="center" valign="middle" >10.98</td><td align="center" valign="middle" >11.27</td><td align="center" valign="middle" >11.0</td><td align="center" valign="middle" >10.95</td><td align="center" valign="middle" >1,954,768</td><td align="center" valign="middle" >0.46</td></tr><tr><td align="center" valign="middle" >2017/7/26</td><td align="center" valign="middle" >10.92</td><td align="center" valign="middle" >11.18</td><td align="center" valign="middle" >10.74</td><td align="center" valign="middle" >10.66</td><td align="center" valign="middle" >1,697,412</td><td align="center" valign="middle" >-2.36</td></tr></tbody></table></table-wrap><p>表2. 部分股票特征数据</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Some stock characteristic data after quantificatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >日期</th><th align="center" valign="middle" >开盘价</th><th align="center" valign="middle" >最高价</th><th align="center" valign="middle" >收盘价</th><th align="center" valign="middle" >最低价</th><th align="center" valign="middle" >成交量</th><th align="center" valign="middle" >涨跌幅</th></tr></thead><tr><td align="center" valign="middle" >2017/7/24</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0.55</td></tr><tr><td align="center" valign="middle" >2017/7/25</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >0.46</td></tr><tr><td align="center" valign="middle" >2017/7/26</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >-2.36</td></tr></tbody></table></table-wrap><p>表3. 量化后的部分股票特征数据</p></sec><sec id="s4_3"><title>2.3. 神经网络结构基础</title><p>神经网络通过强大的非线性拟合能力，成为最为流行的人工智能模型之一，在分类和预测任务中都有优异的表现。它通过模拟神经单元的构造和功能来设计相关的网络模型，再通过不同的连接方式搭建不同的神经网络 [<xref ref-type="bibr" rid="hanspub.36533-ref9">9</xref>]。</p><p>1986年Rumelhart等人提出的反向传播(BP)的前馈神经网络是最早提出的神经网络，其通过引入隐藏层来实现非线性计算 [<xref ref-type="bibr" rid="hanspub.36533-ref10">10</xref>]；循环神经网络(RNN)则在序列相关的数据上做了改进，通过在神经网络层之间引入有向循环连接，使其具备时序数据的记忆功能 [<xref ref-type="bibr" rid="hanspub.36533-ref11">11</xref>]。但RNN在长期依赖的问题上，随着需要提取的依赖项的长度增加时，梯度将不会再更新，甚至出现梯度消失等现象，因此需要对RNN进行改进，以解决信息的长期依赖 [<xref ref-type="bibr" rid="hanspub.36533-ref12">12</xref>]。</p><p>长短期记忆网络(LSTM)是RNN的一种改进网络结构 [<xref ref-type="bibr" rid="hanspub.36533-ref13">13</xref>]，相较普通的神经网络，LSTM加入了可控门单元。LSTM结构如图1所示，其包括输入门i<sub>t</sub>、输出门o<sub>t</sub>、遗忘门f<sub>t</sub>等门结构，这些特殊的设计能够实现细胞状态C<sub>t</sub>的更新，式(1)、(2)、(3)是3个门的更新公式。其中，σ表示激活函数，W和b分别表示权重矩阵和偏置，下标f、i、o代表遗忘门、输入门和输出门。h<sub>t</sub><sub> − 1</sub>表示t − 1时LSTM细胞的输出，x<sub>t</sub>代表t时刻的输入。</p><p>f t = σ ( W f ⋅ [ h t − 1 , X t ] + b f ) (1)</p><p>i t = σ ( W i ⋅ [ h t − 1 , X t ] + b i ) (2)</p><p>o t = σ ( W o ⋅ [ h t − 1 , X t ] + b o ) (3)</p><p>在计算时，首先从当前时刻的输入和上一时刻隐藏层状态的信息中选择出要遗弃的部分，该部分是由遗忘门来实现的。然后由输入门决定神经单元要更新的值，通过Tanh函数更新神经单元状态。最终神经单元输出的状态由输出门决定，其先用Sigmoid层决定要输出的神经单元状态，然后将这些状态用Tanh函数压缩在−1到1之间。</p><p>图1. LSTM单元结构</p></sec><sec id="s4_4"><title>2.4. 股票预测模型</title><p>本文使用LSTM网络作为基本网络结构，将量化编码后的股票特征数据作为输入变量。在模型输出上，使用涨、跌和小幅度涨跌等3类的分类方式做涨跌幅预测。</p><p>为了确定3个类别的划分界限，本文对股票数据集的涨跌幅做了统计。图2是股票数据集股票价格涨跌幅分布的直方图，可以看出，沪深300股票集的股票涨跌幅主要集中在&#177;5%以内，也有部分样本出现了涨跌停的情况。</p><p>图2. 数据集的涨跌幅分布</p><p>图3是以涨跌幅1%为界限的3分类直方图，从图可以看出，在涨(涨幅超过1%)、跌(跌幅超过1%)和小幅度涨跌(涨跌幅在&#177;1%之间)的样本数量接近。分类预测中，多个分类的样本数均衡分布，能提高模型的精度。</p><p>因此，本文将股票的涨跌幅以上述分类方式做3分类，即在涨区间的即为0；小幅度涨跌区间编码为1；跌区间编码为2，并将这3个分类用Onehot表示为：[0,0,1]、[0,1,0]、[1,0,0]。将编码后的涨跌分类作为标签，用以监督模型的训练。</p><p>图3. 3个分类的样本分布</p><p>在框架选择上，使用Tensorflow作为深度学习的框架，并使用GPU加速计算。在网络结构上，输入数据先进入一个全连接层，然后连接1层LSTM网络层。最后在输出端外接一个Softmax层，可将输出转换为各个类别的概率，从而输出预测的类别。神经网络内部节点数为64，初始的学习率为0.006。</p><p>图4是股票预测模型。由于使用3分类的预测方式，本文选择交叉熵函数作为模型的损失函数，用于评估模型预测的各类别的概率分布和实际分布之间的差异。预测值和标签值越为接近，损失函数的值就越小。在模型输出最终输出值后，需要将误差反向传播回去，不断更新模型的权重值，直至训练迭代结束。</p><p>图4. 股票预测模型</p></sec></sec><sec id="s5"><title>3. 实验与结果</title><p>为了验证股票特征量化处理的预测效果，本文在训练数据集上分别使用经过量化编码处理后的股票特征数据和经过归一化处理的原始数据，其他的参数保持一致，训练后对应的模型分别为模型1和模型2。本文将处理后的数据集划分为训练集、验证集和测试集。对每只股票，将其数据的前80%作为训练集，剩余20%作为测试集。训练集中，又以8比2的比例将其划分为训练集和验证集。训练集用于训练调节LSTM网络参数，测试集用于评测效果。验证集数据用于判断模型收敛时的迭代次数，避免过拟合。</p><p>在模型评估上，本文除使用分类准确率作为判断模型优劣的标准外，还使用了精确率、召回率和F1值等指标，以较为全面的比对两个模型在预测性能上的差异。</p><p>图5. 模型1损失函数变化</p><p>图6. 模型2损失函数变化</p><p>图5和图6分别是模型1和模型2训练过程中损失函数的变化图象。由图可以看出，使用量化的股票交易数据训练模型时，在迭代了60次左右收敛。相比使用非量化数据，模型收敛速度较快，在迭代20次时就已经收敛。在模型保存上，保存验证集损失函数最小时的模型，作为测试集的预测模型。</p><p>表4是模型1和模型2在测试集上的表现，由表可以看出，模型1在准确率和F1上的表现都优于模型2，这说明对股票交易数据进行量化处理可以有效的过滤噪声数据，使特征数据更加平滑，利于模型对股票价格变动规律的学习。</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Performance of different models in test se</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >模型名称</th><th align="center" valign="middle" >准确率</th><th align="center" valign="middle" >精度</th><th align="center" valign="middle" >召回率</th><th align="center" valign="middle" >F1</th></tr></thead><tr><td align="center" valign="middle" >模型1</td><td align="center" valign="middle" >0.56</td><td align="center" valign="middle" >0.58</td><td align="center" valign="middle" >0.49</td><td align="center" valign="middle" >0.55</td></tr><tr><td align="center" valign="middle" >模型2</td><td align="center" valign="middle" >0.53</td><td align="center" valign="middle" >0.52</td><td align="center" valign="middle" >0.41</td><td align="center" valign="middle" >0.46</td></tr></tbody></table></table-wrap><p>表4. 不同模型在测试集的表现</p><p>为了测试模型单只股票预测效果，本文从数据集中随机抽选了3只个股，分别在两个模型上测试预测精度。</p><table-wrap id="table5" ><label><xref ref-type="table" rid="table5">Table 5</xref></label><caption><title> Performance of single stock on Model </title></caption><table><tbody><thead><tr><th align="center" valign="middle" >股票名称</th><th align="center" valign="middle" >准确率</th><th align="center" valign="middle" >精度</th><th align="center" valign="middle" >召回率</th><th align="center" valign="middle" >F1</th></tr></thead><tr><td align="center" valign="middle" >浦发银行</td><td align="center" valign="middle" >0.60</td><td align="center" valign="middle" >0.72</td><td align="center" valign="middle" >0.49</td><td align="center" valign="middle" >0.56</td></tr><tr><td align="center" valign="middle" >中信证券</td><td align="center" valign="middle" >0.57</td><td align="center" valign="middle" >0.39</td><td align="center" valign="middle" >0.35</td><td align="center" valign="middle" >0.36</td></tr><tr><td align="center" valign="middle" >中兴通讯</td><td align="center" valign="middle" >0.56</td><td align="center" valign="middle" >0.41</td><td align="center" valign="middle" >0.33</td><td align="center" valign="middle" >0.34</td></tr></tbody></table></table-wrap><p>表5. 单只股票在模型1上的表现</p><table-wrap id="table6" ><label><xref ref-type="table" rid="table6">Table 6</xref></label><caption><title> Performance of single stock on model </title></caption><table><tbody><thead><tr><th align="center" valign="middle" >股票名称</th><th align="center" valign="middle" >准确率</th><th align="center" valign="middle" >精度</th><th align="center" valign="middle" >召回率</th><th align="center" valign="middle" >F1</th></tr></thead><tr><td align="center" valign="middle" >浦发银行</td><td align="center" valign="middle" >0.59</td><td align="center" valign="middle" >0.58</td><td align="center" valign="middle" >0.49</td><td align="center" valign="middle" >0.55</td></tr><tr><td align="center" valign="middle" >中信证券</td><td align="center" valign="middle" >0.55</td><td align="center" valign="middle" >0.42</td><td align="center" valign="middle" >0.19</td><td align="center" valign="middle" >0.24</td></tr><tr><td align="center" valign="middle" >中兴通讯</td><td align="center" valign="middle" >0.53</td><td align="center" valign="middle" >0.25</td><td align="center" valign="middle" >0.21</td><td align="center" valign="middle" >0.29</td></tr></tbody></table></table-wrap><p>表6. 单只股票在模型2上的表现</p><p>从表5和表6可以看出，在单只股票预测上，由于个股的发展规律各不相同，预测精度也各有差别。在准确率上，单只股票在两个模型的表现较为接近，但在F1上，模型1要优于模型2。因此，在实际对单只股票进行预测时，可以使用对股票特征进行量化的方式训练模型。</p></sec><sec id="s6"><title>4. 总结</title><p>在股票涨跌预测上，本文使用对股票特征量化的方式，对股票特征数据进行过滤和平滑，使用量化编码后的数据和原始数据分别训练股票预测模型。结果表明，在沪深300数据集上，经过量化处理的股票特征更容易让模型学习到股票价格发展的规律，其测试集的各项指标都优于使用原始数据训练的模型。在单只股票预测上，使用量化数据训练的模型表现也优于使用原始数据训练的模型。</p><p>但是，金融时间序列预测的数据来源于市场的真实数据，而市场运行于博弈过程中。如果某种预测方法明显优于其他方法，且在相应的市场操作过程中该预测方法起到一定作用时，则会随着时间的推移，其性能会下降，因此，也就不会有预测准确性能特别优异的算法存在。而本文提出的基于股票数据特征量化编码的数据处理方法，并结合LSTM网络构建的预测模型，其主要目的是在没有特别突发事件的影响下，在仅仅基于主要的交易数据本身(不考虑其他事件)，尽可能获得一种适应能力更强的、预测准确度较高、性能稳定的预测方法。</p></sec><sec id="s7"><title>文章引用</title><p>赵建群,张岐,王 悦. 基于LSTM的量化股票预测LSTM Based Quantitative Stock Forecasting[J]. 金融, 2020, 10(04): 366-373. https://doi.org/10.12677/FIN.2020.104037</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.36533-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">刘长虎, 陶建格, 崔衍秋. 股票价格指数的投资功能[J]. 市场论坛, 2004(3): 71-72.</mixed-citation></ref><ref id="hanspub.36533-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">丁玮珂. 基于ARMA模型预测股票价格的实证分析[J]. 广西质量监督导报, 2019(5): 151-153.</mixed-citation></ref><ref id="hanspub.36533-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">高雯. 基于支持向量机参数优化算法的股票智能投顾策略研究[D]: [硕士学位论文]. 上海: 上海师范大学, 2018.</mixed-citation></ref><ref id="hanspub.36533-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Lai, R.K., Fan, C.Y., Huang, W.H., et al. (2009) Evolving and Clustering Fuzzy Decision Tree for Financial Time Series Data Forecasting. Expert Systems with Applications, 36, 3761-3773. &lt;br&gt;https://doi.org/10.1016/j.eswa.2008.02.025</mixed-citation></ref><ref id="hanspub.36533-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">王禹. 基于Cart树和Boosting算法的股票预测模型[D]: [硕士学位论文]. 哈尔滨: 哈尔滨理工大学, 2018.</mixed-citation></ref><ref id="hanspub.36533-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">邓凤欣. LSTM神经网络在股票价格趋势预测上的应用[D]: [硕士学位论文]. 广州: 广东外语外贸大学, 2018.</mixed-citation></ref><ref id="hanspub.36533-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">吴贻鼎, 朱翔, 黄继瑜, 明海山. 基于神经网络的证券市场预测[J]. 计算机应用, 2002(5): 31-33.</mixed-citation></ref><ref id="hanspub.36533-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">唐勇, 洪晓梅, 朱鹏飞. 投资者情绪与股票价格之间的信息溢出效应研究——基于行业差异视角[J]. 武汉金融, 2019(9): 49-57.</mixed-citation></ref><ref id="hanspub.36533-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">阎平凡, 张长水. 人工神经网络与模拟进化计算[M]. 北京: 清华大学出版社, 1900.</mixed-citation></ref><ref id="hanspub.36533-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Rumelhart, D.E., Hinton, G.E. and Williams, R.J. (1986) Learning Representations by Back-Propagating Errors. Nature, 323, 533-536. &lt;br&gt;https://doi.org/10.1038/323533a0</mixed-citation></ref><ref id="hanspub.36533-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Chung, J., Gulcehre, C., Cho, K., et al. (2015) Gated Feedback Recurrent Neural Networks. 32nd International Conference on Machine Learning, 2067-2075.</mixed-citation></ref><ref id="hanspub.36533-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Bengio, Y. (1994) Learning Long-Term Dependencies with Gradient Descent Is Difficult. IEEE Transactions on Neural Networks, 5, 157-166. &lt;br&gt;https://doi.org/10.1109/72.279181</mixed-citation></ref><ref id="hanspub.36533-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Hochreiter, S. and Schmidhuber, J. (1997) Long Short-Term Memory. Neural Computation, 9, 1735-1780.  
&lt;br&gt;https://doi.org/10.1162/neco.1997.9.8.1735</mixed-citation></ref></ref-list></back></article>