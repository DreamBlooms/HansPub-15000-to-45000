<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">JISP</journal-id><journal-title-group><journal-title>Journal of Image and Signal Processing</journal-title></journal-title-group><issn pub-type="epub">2325-6753</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/JISP.2017.62009</article-id><article-id pub-id-type="publisher-id">JISP-20214</article-id><article-categories><subj-group subj-group-type="heading"><subject>JISP20170200000_53423469.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于多核DSP的图像增强实现
  Multi-Core DSP Based Super-Resolution Enhancement
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>蒲</surname><given-names>夏</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>卿</surname><given-names>粼波</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>吴</surname><given-names>晓红</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>余</surname><given-names>艳梅</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>四川大学电子信息学院，四川 成都</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>pusummer@126.com(蒲夏)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>20</day><month>04</month><year>2017</year></pub-date><volume>06</volume><issue>02</issue><fpage>71</fpage><lpage>77</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对移动便捷安检设备快速识别物体的需求，我们设计实现了一种基于TMS320C6678的图像超分辨率增强系统。该系统首先采用双三次插值算法放大原始图像，然后采用暗通道算法进行图像增强，并对暗通道算法中的高斯滤波处理部分进行了OpenMp多核加速处理。实现结果表明，增强后的图片特征清晰，便于观察；且利用多核DSP增强后的时间缩短，相当于单核的0.49倍。 To meet the demand of mobile security inspection equipment to rapidly recognize objects, an image super-resolution enhancement system based on TMS320C6678 is designed and realized in this paper. This system first uses bi-cubic interpolation to magnify the image, then uses dark channel algorithm to enhance the image, and adopts OpenMp multi-core acceleration processing to accelerate the Gauss filter processing part of the dark channel algorithm. The results show that the enhanced images are clear to be observed. And the processing time is shortened, which is equivalent to nearly half of the single core.
    
  
 
</p></abstract><kwd-group><kwd>多核DSP，OpenMp，超分辨率重建, Multi-Core DSP</kwd><kwd> OpenMp</kwd><kwd> Super Resolution Reconstruction</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于多核DSP的图像增强实现<sup> </sup></title><p>蒲夏，卿粼波，吴晓红，余艳梅<sup>*</sup></p><p>四川大学电子信息学院，四川 成都</p><disp-formula id="hanspub.20214-formula1"><graphic xlink:href="http://html.hanspub.org/file/1-2670104x5_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2017年3月24日；录用日期：2017年4月17日；发布日期：2017年4月20日</p><disp-formula id="hanspub.20214-formula2"><graphic xlink:href="http://html.hanspub.org/file/1-2670104x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>针对移动便捷安检设备快速识别物体的需求，我们设计实现了一种基于TMS320C6678的图像超分辨率增强系统。该系统首先采用双三次插值算法放大原始图像，然后采用暗通道算法进行图像增强，并对暗通道算法中的高斯滤波处理部分进行了OpenMp多核加速处理。实现结果表明，增强后的图片特征清晰，便于观察；且利用多核DSP增强后的时间缩短，相当于单核的0.49倍。</p><p>关键词 :多核DSP，OpenMp，超分辨率重建</p><disp-formula id="hanspub.20214-formula3"><graphic xlink:href="http://html.hanspub.org/file/1-2670104x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2017 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="http://image.hanspub.org:8080\Html/htmlimages\1-2890033x\e70a10f1-7c93-45ea-9603-062237856e4b.png" /><img src="http://image.hanspub.org:8080\Html\htmlimages\1-2890033x\e898c85e-ffc4-45c9-b817-14224a4d6960.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>在数字图像处理领域，分辨率是图像质量一个十分重要的指标，图像的分辨率高说明它能够呈现出更多的细节和丰富的信息。G20峰会期间，为进一步提高会场安保级别，相关管理部门需要对进场人员进行更快更有效的安全检查。毫米波安检仪采集的图像分辨率低，噪声大，不利于观察，故需要一种把低分辨率图像重建成高分辨率图像的便于携带且快速高效系统。</p><p>随着数字信号处理器DSP的快速发展，科研人员利用DSP平台开展了不少的图像处理相关领域的研究工作与工程项目。2012年2月邓建青等利用Fourier-Mellin变换法等算法进行运动估计，然后利用基于边缘保持的凸集投影简化方法在DM642上实现超分辨率重建，采用的相机分辨率为720 &#215; 576，重建时间耗费20 s左右 [<xref ref-type="bibr" rid="hanspub.20214-ref1">1</xref>] 。2014年12月朱才高等在TMS320C6678上利用图像分层处理的细节增强基本框架，提出了一种基于引导滤波器的高动态范围红外图像显示与细节增强算法，实现了图像视频流的传输、处理等系列功能 [<xref ref-type="bibr" rid="hanspub.20214-ref2">2</xref>] 。在2015年7月，叶宗民等为光学目标特性研究提供高质量的图像在VPM6467DSP上实现对舰船目标低分辨率红外视频的超分辨率重构 [<xref ref-type="bibr" rid="hanspub.20214-ref3">3</xref>] 。目前，针对毫米波安检图像重建的具体应用，还没有现成的开发应用技术可循，而在已有的一些相关应用中，TMS320C6678是研究开发人员较多采用的DSP之一。</p><p>TMS320C6678是一款基于KeyStone架构的八核DSP，每个核拥有最高可达1.25 Ghz的主频，32 K的一级程序缓存L1P，32 K的一级数据缓存L1D，512 K的本地二级存储L2SRAM，可自由配置成Cache和普通SRAM，另外还有4 M的共享内存MSM，也可将其配置成共享二级缓存和共享三级缓存，另外TMS320C6678支持OpenMp多核模型，还拥有丰富的外设接口、EDMA、SRIO等，可以与外界迅速的进行数据交换 [<xref ref-type="bibr" rid="hanspub.20214-ref4">4</xref>] 。因此，基于项目的需求及我们开发的难易程度，本文选择了TMS320C6678处理器。</p><p>OpenMp是由OpenMP Architecture Review Board牵头提出的，用于共享内存并行系统的多线程程序设计的一套指导性的编译处理方案(Compiler Directive)。OpenMP支持的编程语言包括C语言、C++和Fortran；OpenMp提供了对并行算法的高层抽象描述，程序员通过在源代码中加入专用的pragma来指明自己的意图，由此编译器可以自动将程序进行并行化。当选择忽略这些pragma，或者编译器不支持OpenMp时，程序又可退化为通常的程序，代码仍然可以正常运作，只是不能利用多线程来加速程序的运行。</p><p>关于超分辨率的重建的研究也很多，并且不少算法都取得了不错的效果，但这些方法基本上都是基于PC的算法，算法复杂度较高，要在嵌入式系统上实现还存在实际困难，比如系统资源等问题。因此，针对安检图像分辨率低的问题，本文基于TMS320C6678系统，首先选取双三次(Bicubic)插值算法，将原始图像放大4倍。由于放大后的图像细节模糊，不便于观察，通过实验对比发现，暗通道算法在处理此类图像上具有良好效果。故继而采用暗通道算法，通过暗通道去雾算法进行图像增强，使放大后的模糊细节得以恢复 [<xref ref-type="bibr" rid="hanspub.20214-ref7">7</xref>] 。实验结果表明，进行超分辨率重建后的图像局部比未重建之前的局部细节更加清晰，具有更好的表现性；而且本文在算法的实现过程中还采用了OpenMp模型，对超分辨率算法进行多核加速 [<xref ref-type="bibr" rid="hanspub.20214-ref8">8</xref>] ，对一幅48 &#215; 128分辨率的图片重建到192 &#215; 512的实验，在1Ghz单核下耗时363 ms，在八核下耗时180 ms。</p></sec><sec id="s4"><title>2. 算法描述</title><sec id="s4_1"><title>2.1. 插值算法</title><p>双三次插值，作为一种较复杂的插值方法，双三次插值算法采用了待采样点四周16个点的灰度值作三次插值，并考虑了4个直接邻点的灰度值与各邻点之间的灰度变换率影响。三次运算可以得到分辨率更高的图像，但也带来了更大的运算。</p><p>其数学表达式如下：</p><disp-formula id="hanspub.20214-formula4"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x10_hanspub.png"  xlink:type="simple"/></disp-formula><p>双三次插值公式如下：</p><disp-formula id="hanspub.20214-formula5"><label>. (2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x11_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，A、B、C均为矩阵，形式如下：</p><disp-formula id="hanspub.20214-formula6"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x12_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.20214-formula7"><label>(4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x13_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.20214-formula8"><label>(5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x14_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x15_hanspub.png" xlink:type="simple"/></inline-formula>表示源图像<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x16_hanspub.png" xlink:type="simple"/></inline-formula>像素点的灰度值。</p></sec><sec id="s4_2"><title>2.2. 暗通道增强算法</title><p>有一个有雾图片的表达公式在计算机视觉领域中运用广泛，该式如式(6)：</p><disp-formula id="hanspub.20214-formula9"><label>(6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x17_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x18_hanspub.png" xlink:type="simple"/></inline-formula>代表待处理有雾图像，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x19_hanspub.png" xlink:type="simple"/></inline-formula>代表想要得到的无雾图片，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x20_hanspub.png" xlink:type="simple"/></inline-formula>是透射率，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x21_hanspub.png" xlink:type="simple"/></inline-formula>则是全局大气光值(global atmospheric light)；</p><p>下面需要从式(6)中得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x22_hanspub.png" xlink:type="simple"/></inline-formula>，但是式(6)里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x23_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x24_hanspub.png" xlink:type="simple"/></inline-formula>都是未知的。</p><p>为此，先研究暗通道的数学定义，如下式(7)：</p><disp-formula id="hanspub.20214-formula10"><label>(7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x25_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x26_hanspub.png" xlink:type="simple"/></inline-formula>为暗通道图，而等式右侧：C为R，G，B中的某一通道，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x27_hanspub.png" xlink:type="simple"/></inline-formula>是图中某一像素点，Ω(X)则是点x周围的一个小区域；</p><p>这个公式的意思可以这样理解：取出原图每个像素点中最小的通道值后，得到一幅灰色的图，然后对该图进行最小值滤波，这样就得到了暗通道图。下面来看看究竟是如何从公式(6)推出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x28_hanspub.png" xlink:type="simple"/></inline-formula>的：</p><p>首先对式(6)两边取最小，得：</p><disp-formula id="hanspub.20214-formula11"><label>(8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x29_hanspub.png"  xlink:type="simple"/></disp-formula><p>再次取最小，得：</p><disp-formula id="hanspub.20214-formula12"><label>(9)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x30_hanspub.png"  xlink:type="simple"/></disp-formula><p>由(7)可知：暗通道图是稀疏的，绝大多数元素为零或者趋向于零，可近似得到式(10)：</p><disp-formula id="hanspub.20214-formula13"><label>(10)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x31_hanspub.png"  xlink:type="simple"/></disp-formula><p>进一步对其进行限制，如下式(11)：</p><disp-formula id="hanspub.20214-formula14"><label>(11)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x32_hanspub.png"  xlink:type="simple"/></disp-formula><p>为了保持图像的真实感，取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-2670104x33_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>最终得到：</p><disp-formula id="hanspub.20214-formula15"><label>(12)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-2670104x34_hanspub.png"  xlink:type="simple"/></disp-formula></sec></sec><sec id="s5"><title>3. 基于多核DSP的图像超分辨率重建算法实现</title><p>本文为了在多核DSP上实现图像超分辨率重建，首先在PC端将图片转化为dat格式的数据通过seed-560-v2仿真器加载到DSP内存，然后再从内存中取数据进行一系列处理，处理完后再放回另一段内存，然后再使用CCS自带的Image Analyzer工具查看处理过后的图片，整个系统框图如图1所示：</p><p>对于图像增强本文首先采用双三次插值算法对其进行图像放大，考虑到DSP所具有的软件流水功能，为了加快进度，对R、G、B三通道同时插值；由于放大后图像细节不明显，本文又采用暗通道去雾算法进行增强处理。通过对整个增强算法进行时间统计，发现整个暗通道去雾算法主要耗时在高斯滤波处理上，于是，我们将其高斯滤波部分单独提取出来，利用DSP的OpenMp进行多核加速处理，本文采用的核数是8核，其线程也为8，采用OpenMp部分程序如图2所示，private (sum, gindex, windex, …)表示变量sum，gindex，windex在每个线程里都拥有私有拷贝，其它的线程不能访问该线程里的私有备份，而share (tmpdata)则相反，里面的共享tmyupdata数组是线程间共享的，即线程都可以访问。</p><p>由于本文在图像输入阶段的原始大小和放大倍数都是已知的，结合DSP中内存有限的实际情况，最终统一采用静态分配内存，如图3所示。本文原始图片的数据量大，故将原始的图像数据和一些处理的</p><p>图1. 系统框图</p><p>中间结果数据放在DDR3上。</p></sec><sec id="s6"><title>4. 实验结果及数据分析</title><p>在实验初期，尝试多种图像增强算法后，发现局部增强效果均不明显，达不到更快更有效的安全检查目的。经过对大量图片反复测试，双三次插值和暗通道去雾组合算法在增强毫米波图像方面具有一定的效果，增强后的图像能够满足基本的观察应用需求。如图4(a)所示，表示未经处理过的原图，图中可以看出有很多不清晰的地方，如果不进行图像增强，不利于观察；图4(b)表示经过双三次插值放大后的图，放大后整体效果不太好，整个图片显得模糊，需要对其进行增强；图4(c)表示增强后的效果图，与原图相比较，大小与清晰度提高很大。</p><p>由于DSP系统其独特的处理性能，对于浮点数，乘法具有很快的速度，于是将超分辨率算法移植到TMS320C6678上运行，在编写该程序时，所使用的DSP优化技术：1) OpenMp优化 [<xref ref-type="bibr" rid="hanspub.20214-ref9">9</xref>] ：即把某些非常耗时的算法部分进行多核加速2) 32字节对齐：由于TMS320C6678是一款32的处理器，它可以一次处理32位的数据，于是我们在定义内存时，设置成32字节对齐，在经过上述优化后，得到的执行时间如表1所示。</p></sec><sec id="s7"><title>5. 结论</title><p>本文在多核DSP上实现了一个超分辨率重建系统，对多幅原始图片进行重建实验。以其中一幅大小</p><p>图2. 高斯滤波OpenMp加速处理程序</p><p>图3. DSP中静态分配内存</p><p>图4. 实验原图及测试图<sup>1</sup></p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Optimized contrast time char</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >处理方法</th><th align="center" valign="middle" >不优化</th><th align="center" valign="middle" >优化</th></tr></thead><tr><td align="center" valign="middle" >耗时时间</td><td align="center" valign="middle" >363 ms</td><td align="center" valign="middle" >180 ms</td></tr></tbody></table></table-wrap><p>表1. 优化对比时间图</p><p>为48 &#215; 128的原始图片为例，将其重建到4倍，即192 &#215; 512，在不经过任何的优化下，耗时363 ms，经过多核等各种加速后，耗时180 ms。从实验结果可以看出，本文重建后的效果良好，更加有利于相关人员观察，达到了预期效果。</p></sec><sec id="s8"><title>基金项目</title><p>“成都市科技惠民项目”(2015-HM01-00293-SF)。</p></sec><sec id="s9"><title>文章引用</title><p>蒲夏,卿粼波,吴晓红,余艳梅. 基于多核DSP的图像增强实现 Multi-Core DSP Based Super-Resolution Enhancement[J]. 图像与信号处理, 2017, 06(02): 71-77. http://dx.doi.org/10.12677/JISP.2017.62009</p></sec><sec id="s10"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.20214-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">邓建青, 刘晶红, 刘铁军. 基于DSP系统的超分辨率图像重建技术研究[J]. 液晶与显示, 2012, 27(1): 114-120.</mixed-citation></ref><ref id="hanspub.20214-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">朱才高, 隋修宝, 朱道广, 等. 基于TMS320C6678的高动态范围红外图像细节增强算法改进与实现[J]. 光学与光电技术, 2014, 12(1): 92-96.</mixed-citation></ref><ref id="hanspub.20214-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">叶宗民, 周亚凡, 李永新, 等. 基于VPM6467的红外视频超分辨率重构设计[J]. 舰船科学技术, 2015, 37(7): 83-87.</mixed-citation></ref><ref id="hanspub.20214-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Instruments, T. (2011) Open MP Programming for TMS320C66x Multicore DSPs.</mixed-citation></ref><ref id="hanspub.20214-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">龚卫国, 潘飞宇, 李进明. 用双层重建法实现单幅图像的超分辨率重建[J]. 光学精密工程, 2014, 22(3): 720-729.</mixed-citation></ref><ref id="hanspub.20214-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">殷明, 水珺, 栾静, 等. 基于插值与剪切波融合的图像超分辨率重建[J]. 计算机工程, 2015, 41(5): 274-279.</mixed-citation></ref><ref id="hanspub.20214-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">刘海波, 杨杰, 吴正平, 等. 基于暗通道先验和Retinex理论的快速单幅图像去雾方法[J]. 自动化学报, 2015, 41(7): 1264-1273.</mixed-citation></ref><ref id="hanspub.20214-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Instrument, T. (2013) DataSheet Tms320c6678 Multicore Fixed and Floating-Point Digital Signal Processor. SPRS691D.</mixed-citation></ref><ref id="hanspub.20214-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Instrument, T. (2012) TMS320C6000 Optimizing Compiler v7.4 User's Guide. SPRU187U.</mixed-citation></ref></ref-list></back></article>