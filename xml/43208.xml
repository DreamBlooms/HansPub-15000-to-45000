<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">PM</journal-id><journal-title-group><journal-title>Pure  Mathematics</journal-title></journal-title-group><issn pub-type="epub">2160-7583</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/PM.2021.116128</article-id><article-id pub-id-type="publisher-id">PM-43208</article-id><article-categories><subj-group subj-group-type="heading"><subject>PM20210600000_98861005.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  组合恒等式证明的几种方法
  Several Methods for Proving Combinatorial Identities
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郑</surname><given-names>欢欢</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>靳</surname><given-names>海涛</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>天津职业技术师范大学理学院，天津</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>03</day><month>06</month><year>2021</year></pub-date><volume>11</volume><issue>06</issue><fpage>1137</fpage><lpage>1145</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    通过含有二项式系数的一些恒等式，介绍了组合证明法、积分法、差分法、生成函数法和机器证明法五种常用的恒等式的证明方法。
    By proving some identities involving binomial coefficients, this paper introduces five well-known methods for proving combinatorial identities, including the methods of combination, integration, finite difference, generating functions and mechanical proving. 
  
 
</p></abstract><kwd-group><kwd>二项式系数，组合恒等式，生成函数，机器证明, Binomial Coefficients</kwd><kwd> Combinatorial Identities</kwd><kwd> Generating Functions</kwd><kwd> Mechanical Proving</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>通过含有二项式系数的一些恒等式，介绍了组合证明法、积分法、差分法、生成函数法和机器证明法五种常用的恒等式的证明方法。</p></sec><sec id="s2"><title>关键词</title><p>二项式系数，组合恒等式，生成函数，机器证明</p></sec><sec id="s3"><title>Several Methods for Proving Combinatorial Identities<sup> </sup></title><p>Huanhuan Zheng, Haitao Jin</p><p>School of Science, Tianjin University of Technology and Education, Tianjin</p><p><img src="//html.hanspub.org/file/17-1251332x4_hanspub.png" /></p><p>Received: May 10<sup>th</sup>, 2021; accepted: Jun. 11<sup>th</sup>, 2021; published: Jun. 18<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/17-1251332x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>By proving some identities involving binomial coefficients, this paper introduces five well-known methods for proving combinatorial identities, including the methods of combination, integration, finite difference, generating functions and mechanical proving.</p><p>Keywords:Binomial Coefficients, Combinatorial Identities, Generating Functions, Mechanical Proving</p><disp-formula id="hanspub.43208-formula11"><graphic xlink:href="//html.hanspub.org/file/17-1251332x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/17-1251332x7_hanspub.png" /> <img src="//html.hanspub.org/file/17-1251332x8_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>组合序列的相关和式一直是组合数学研究的热点，特别是含有二项式系数、Stirling数、Catalan数、harmonic数、Euler数、Fibonacci数等的相关恒等式。目前，关于超几何恒等式的研究已经较为成熟，对非超几何恒等式，一个证明思路是将其转化成超几何恒等式进行证明 [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>]。本文通过含有二项式系数 [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.43208-ref2">2</xref>] 的一些恒等式 [<xref ref-type="bibr" rid="hanspub.43208-ref3">3</xref>] 来介绍组合恒等式的常用证明方法：组合证明法 [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.43208-ref2">2</xref>]、积分法 [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.43208-ref4">4</xref>]、差分法 [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>]、生成函数法 [<xref ref-type="bibr" rid="hanspub.43208-ref5">5</xref>] 和机器证明法 [<xref ref-type="bibr" rid="hanspub.43208-ref6">6</xref>]。</p></sec><sec id="s6"><title>2. 基础知识</title><p>定义1 二项式系数 [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>]：对非负整数 k ， ( n k ) = n ! k ! ( n − k ) ! = n k _ k ! ，其中 n k _ = n ( n − 1 ) ⋯ ( n − k + 1 ) 为 n 的 k</p><p>次降阶乘，规定 n 0 _ = 1 。</p><p>定义2 对给定数列 { a n } ，称对应的幂级数 f ( x ) = a 0 + a 1 x + a 2 x 2 + ⋯ + a n x n + ⋯ 为其生成函数 [<xref ref-type="bibr" rid="hanspub.43208-ref5">5</xref>]。</p><p>定义3 Fibonacci数列 [<xref ref-type="bibr" rid="hanspub.43208-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.43208-ref8">8</xref>]： F n + 2 = F n + F n + 1 ，初始条件为 F 0 = 0 , F 1 = 1 。</p><p>定义4 Lucas数列 [<xref ref-type="bibr" rid="hanspub.43208-ref9">9</xref>]： L n + 2 = L n + L n + 1 ，初始条件为 L 0 = 2 , L 1 = 1 。</p><p>众所周知，Fibonacci数列可表示成二项式系数的相关和式 [<xref ref-type="bibr" rid="hanspub.43208-ref2">2</xref>]。</p><p>定理1 对非负整数 n ，有 F n + 1 = ∑ i = 0 ⌊ n 2 ⌋ ( n − i i ) 。</p><p>下面我们给出Fibonacci数列和Lucas数列的生成函数，可参考文献 [<xref ref-type="bibr" rid="hanspub.43208-ref5">5</xref>]。</p><p>定理2 记 F ( x ) 和 L ( x ) 分别为Fibonacci数列和Lucas数列的生成函数，则</p><p>F ( x ) = ∑ n = 0 + ∞ F n x n = x 1 − x − x 2 , L ( x ) = ∑ n = 0 + ∞ L n x n = 2 − x 1 − x − x 2 .</p></sec><sec id="s7"><title>3. 组合恒等式证明的常用五种方法</title><sec id="s7_1"><title>3.1. 组合证明法</title><p>组合证明法的思路是对恒等式两端赋予一定的组合意义将其化为计数问题，再通过构造两个计数对象之间的双射，根据双射的一一对应来得到恒等式。下面以两个经典例子进行说明。</p><p>例1证明Chu-Vandermonde恒等式 [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>] ∑ i + j = k ( m i ) ( n j ) = ( m + n k ) (其中 m , k 为非负整数)。</p><p>证明由两个集合元素的个数分别为 m , n ，分别在其中找一个大小为 i , j 的子集，其中 i + j = k ，对</p><p>所有满足条件的 i , j 求和，即： ∑ i + j = k ( m i ) ( n j ) ；另一方面，对集合元素个数为 m + n 的集合，其子集大小为 k 的集合的方法数为： ( m + n k ) ；综上：即有： ∑ i + j = k ( m i ) ( n j ) = ( m + n k ) 。</p><p>例2证明 ∑ k = 0 n ( k m ) = ( n + 1 m + 1 ) [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>]。</p><p>证明对于等式右边：假设我们抛了 n + 1 次硬币，其中有 m + 1 次正面朝上，方法数为 ( n + 1 m + 1 ) 。对</p><p>于等式左边选择 m 个位置，可供选择的位置总数就是求和的变量，如果最后一个正面朝上出现在 k + 1 位置上，那么可能出现的方法数就是在最后一个正面朝上出现之前从 k 个可能的位置中选 m 个位置的方法</p><p>数，即 ( k m ) 。综上：即有 ∑ k = 0 n ( k m ) = ( n + 1 m + 1 ) 。</p></sec><sec id="s7_2"><title>3.2. 积分法</title><p>积分法的主要思想是将求和项或其一部分利用积分表示出来，通过交换积分与求和次序直接得到等式右端或验证左右两端积分后的结果相同来证明恒等式。下面给出两个例子：</p><p>例3 证明 ∑ k = 0 n ( n k ) ( x 2 k + 1 − x 1 k + 1 ) y n − k ( k + 1 ) 2 = 1 n + 1 ∑ k = 0 n ( ( x 2 + y ) n + 1 − ( x 1 + y ) n + 1 ) y n − k k + 1 [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>]。<sup> </sup></p><p>证明令 ∑ k = 0 n ( n k ) ( x 2 k + 1 − x 1 k + 1 ) y n − k k + 1 = ( x 2 + y ) n + 1 − ( x 1 + y ) n + 1 n + 1 中的 x 2 = x , x 1 = 0 得到：</p><p>∑ k = 0 n ( n k ) x k + 1 y n − k k + 1 = ( x + y ) n + 1 − y n + 1 n + 1 .</p><p>对 ∑ k = 0 n ( n k ) x k + 1 y n − k k + 1 = ( x + y ) n + 1 − y n + 1 n + 1 两边同时除以 x 得到： ∑ k = 0 n ( n k ) x k y n − k k + 1 = 1 n + 1 ( x + y ) n + 1 − y n + 1 x .</p><p>对 ∑ k = 0 n ( n k ) x k y n − k k + 1 = 1 n + 1 ( x + y ) n + 1 − y n + 1 x 两边同时对 x 从 x 1 到 x 2 求积分</p><p>等式左边得： ∫ x 1 x 2 ∑ k = 0 n ( n k ) x k y n − k k + 1 d x = ∑ k = 0 n ( n k ) x k + 1 y n − k ( k + 1 ) 2 | x 2 x 1 = ∑ k = 0 n ( n k ) ( x 2 k + 1 − x 1 k + 1 ) y n − k ( k + 1 ) 2 .</p><p>等式右边得：</p><p>∫ x 1 x 2 1 n + 1 ( x + y ) n + 1 − y n + 1 x d x = 1 n + 1 ∫ x 1 x 2 ( x + y ) n + 1 − y n + 1 x d x = 1 n + 1 ∫ x 1 x 2 ∑ k = 0 n ( x + y ) k y n − k d x = 1 n + 1 ∑ k = 0 n ( x + y ) k + 1 y n − k k + 1 | x 2 x 1 = 1 n + 1 ∑ k = 0 n ( ( x 2 + y ) k +1 − ( x 1 + y ) k +1 ) y n − k k + 1 .</p><p>其中： ( x + y ) n + 1 − y n + 1 x = ( x + y − y ) ∑ k = 0 n ( x + y ) k y n − k x = ∑ k = 0 n ( x + y ) k y n − k .</p><p>即： ∑ k = 0 n ( n k ) ( x 2 k + 1 − x 1 k + 1 ) y n − k ( k + 1 ) 2 = 1 n + 1 ∑ k = 0 n ( ( x 2 + y ) n + 1 − ( x 1 + y ) n + 1 ) y n − k k + 1 .</p><p>例4证明 ∑ n = 0 ∞ 2 n ( 2 n + 1 ) ( 2 n n ) = π 2 [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>]。</p><p>证明由Gamma函数的性质 [<xref ref-type="bibr" rid="hanspub.43208-ref10">10</xref>] [<xref ref-type="bibr" rid="hanspub.43208-ref11">11</xref>] B ( a , b ) = Γ ( a ) Γ ( b ) Γ ( a + b ) ， B ( a , b ) = ∫ 0 1 x a − 1 ( 1 − x ) b − 1 d x 。</p><p>可得： ( 2 n n ) − 1 = ( 2 n + 1 ) ∫ 0 1 x n ( 1 − x ) n d x 以及 ( 2 n n ) = 1 ( 2 n + 1 ) B ( n , n ) 。</p><p>由上式可得：</p><p>∑ n = 0 ∞ 2 n ( 2 n + 1 ) ( 2 n n ) = ∑ n = 0 ∞ 2 n ( 2 n + 1 ) ( 2 n + 1 ) ∫ 0 1 x n ( 1 − x ) n d x = ∫ 0 1 ∑ n = 0 ∞ 2 n x n ( 1 − x ) n d x = ∫ 0 1 1 1 − 2 x ( 1 − x ) d x = ∫ 0 1 1 1 − 2 x + 2 x 2 d x = π 2 .</p></sec><sec id="s7_3"><title>3.3. 差分法</title><p>差分法的基本思想是通过验证左右两端相邻两项的差相等来证明恒等式，即要证明 A ( n ) = B ( n ) ，只需 A ( n + 1 ) − A ( n ) = B ( n + 1 ) − B ( n ) 和相同的初值即可。</p><p>例5证明 ∑ k = 1 n ( n k ) ( − 1 ) k k = − H n ( H n = ∑ k = 1 n 1 k ) [<xref ref-type="bibr" rid="hanspub.43208-ref14">14</xref>] [<xref ref-type="bibr" rid="hanspub.43208-ref15">15</xref>]。</p><p>证明设左端和式为 f ( n ) 可得：</p><p>f ( n + 1 ) − f ( n ) = ∑ k = 1 n + 1 ( n + 1 k ) ( − 1 ) k k − ∑ k = 1 n ( n k ) ( − 1 ) k k = ∑ k = 1 n + 1 ( n k − 1 ) ( − 1 ) k k = ∑ k = 0 n + 1 ( n k ) ( − 1 ) k + 1 k + 1 = ( − 1 ) k + 1 ∑ k = 0 n + 1 ( n + 1 k + 1 ) 1 n + 1 = ( − 1 ) k n + 1 ∑ k = 1 n + 1 ( n + 1 k ) = ( − 1 ) k n + 1 ( ∑ k = 0 n + 1 ( n + 1 k ) − ( n + 1 0 ) ) = 1 n + 1 ( ∑ k = 0 n + 1 ( n + 1 k ) ( − 1 ) k − ( n + 1 0 ) ) = 0 − 1 n + 1 = − 1 n + 1 .</p><p>再利用 f ( 0 ) = 0 可得</p><p>∑ k = 1 n ( n k ) ( − 1 ) k k = f ( n ) = ∑ k = 1 n ( f ( k ) − f ( k − 1 ) ) = ∑ k = 1 n ( − 1 k ) = − H n .</p><p>例6证明 ∑ k = 0 m ( n k ) ( − 1 ) k k + 1 = 1 n + 1 ( n m + 1 ) ( − 1 ) m + 1 n + 1 [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>]。</p><p>证明令 S ( m ) = 1 n + 1 ( n m + 1 ) ( − 1 ) m + 1 n + 1 ，只需证明 S ( m ) − S ( m − 1 ) = ( n m ) ( − 1 ) m m + 1 即可。</p><p>S ( m ) − S ( m − 1 ) = ( 1 n + 1 ( n m + 1 ) ( − 1 ) m + 1 n + 1 ) − ( 1 n + 1 ( n m ) ( − 1 ) m − 1 + 1 n + 1 ) = 1 n + 1 ( n m + 1 ) ( − 1 ) m + 1 n + 1 ( n m ) ( − 1 ) m = 1 n + 1 ( − 1 ) m ( ( n m + 1 ) + ( n m ) ) = 1 n + 1 ( − 1 ) m ( n + 1 m + 1 ) = 1 n + 1 ( n + 1 ) ! ( m + 1 ) ! ( n − m ) ! ( − 1 ) m = n ! ( m + 1 ) ! ( n − m ) ! ( − 1 ) m = 1 m + 1 n ! m ! ( n − m ) ! ( − 1 ) m = ( n m ) ( − 1 ) m m + 1 .</p><p>再利用 S ( 0 ) = 1 即可得证。</p></sec><sec id="s7_4"><title>3.4. 生成函数法</title><p>生成函数法的基本思想是将含有组合序列的求和项转化为其对应的生成函数，通过生成函数的操作</p><p>得到相应的函数关系式，进一步取系数返回到原和式即可。给定一个含有组合序列的和式 A ( n ) = ∑ k = 0 n a k ，</p><p>要证明 A ( n ) = B ( n ) 或求出 A ( n ) 的表达式(也称为闭形式)，具体步骤如下 [<xref ref-type="bibr" rid="hanspub.43208-ref5">5</xref>]：</p><p>1) 将新的求和项 A ( n ) x n 对变量 n 求和，记 S ( x ) = ∑ n = 0 ∞ A ( n ) x n ；</p><p>2) 通过交换求和次序并利用已知生成函数的解析式得到 S ( x ) 的解析表达式；</p><p>3) 要证明 A ( n ) = B ( n ) ，只要证明 和 B ( n ) 有相同的生成函数即可。</p><p>例7 证明 3 − F n + 3 + ∑ i = 1 n L i = ∑ i = 0 ⌊ n 2 ⌋ ( n − i i ) [<xref ref-type="bibr" rid="hanspub.43208-ref12">12</xref>]。</p><p>证明 由Lucas数列的性质 L 1 + L 2 + ⋯ + L n = L n + 2 − 3 和定理1可知该等式等价于 L n + 2 − F n + 3 = F n + 1 。</p><p>利用定理2，不难得到左端的生成函数为：</p><p>∑ n = 0 + ∞ ( L n + 2 − F n +3 ) x n = ∑ n = 0 + ∞ L n + 2 x n − ∑ n = 0 + ∞ F n +3 x n = x + 3 1 − x − x 2 − x + 2 1 − x − x 2 = 1 1 − x − x 2 .</p><p>同理，右端生成函数为 ∑ n = 0 + ∞ F n + 1 x n = 1 1 − x − x 2 。</p><p>可见两端生成函数相等，于是等式得证。</p><p>例8证明 ∑ k = 0 n ( n k ) F k = F 2 n [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>]。</p><p>证明利用定理2以及 ∑ n = 0 ∞ ( n k ) x n = x k ( 1 − x ) k + 1 可得：</p><p>对等式左端取其生成函数可得：</p><p>∑ n = 0 ∞ ∑ k = 0 n ( n k ) F k x n = ∑ k = 0 ∞ F k ∑ n = k ∞ ( n k ) x n = ∑ k = 0 ∞ F k x k ( 1 − x ) k + 1 = 1 1 − x ∑ k = 0 ∞ F k ( x 1 − x ) k = 1 1 − x x 1 − x 1 − x 1 − x − ( x 1 − x ) 2 = x 1 − 3 x + x 2</p><p>对等式右端利用生成函数和换元的思想，具体操作如下：</p><p>又由于 F ( x ) = ∑ n = 0 + ∞ F n x n = x 1 − x − x 2 ，可得： F ( − x ) = − x 1 + x − x 2</p><p>令 G ( x ) = F ( x ) + F ( − x ) 2 = x 2 ( 1 − x − x 2 ) ( 1 + x − x 2 ) ，则令 x = x ，</p><p>可得： G ( x ) = ∑ n = 0 ∞ F 2 n x n = x 1 − 3 x + x 2</p><p>可见两端生成函数相等，于是等式得证。</p></sec><sec id="s7_5"><title>3.5. 机器证明方法</title><p>机器证明法是近几十年才发展起来的证明恒等式的有力方法。目前，超几何恒等式证明的相关研究已经成熟，下面我们介绍最经典的两个超几何算法及WZ方法。</p><p>1) Gosper算法：</p><p>Gosper算法完全解决了超几何恒等式不定和问题。</p><p>对给定的超几何项 t n ，Gosper算法寻找满足 z n + 1 − z n = t n 的超几何项 z n 。一旦得到不定和 z n ，即可求</p><p>出和式 s n = ∑ k = 0 n − 1 t k 的闭形式 s n = z n + 1 − z 0 。注意 s n 有可能不是超几何项。</p><p>Gosper算法已集成在Maple系统中，通过调用with (SumTools [Hypergeometric])工具包以及Gosper(t(n), n)命令即可求出给定求和项的不定和。这里仅举一例。</p><p>例9证明 ∑ k = 0 m ( n k ) k ( − 1 ) k = ( − 1 ) m n ( n − 2 m − 1 ) [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>]。</p><p>证明令 t k = ( n k ) k ( − 1 ) k ，由Gosper算法可得：则 z k = n ( n − 2 k − 2 ) ( − 1 ) k − 1</p><p>即： ∑ k = 0 m t k = z m + 1 − z 0 = ( − 1 ) m n ( n − 2 m − 1 ) − 0 = ( − 1 ) m n ( n − 2 m − 1 ) 。得证。</p><p>2) Zeilberger算法</p><p>Zeilberger算法用来处理定和问题。给定一个双超几何项 F ( n , k ) ，(即关于n和k都是超几何的)。考</p><p>虑和式 S ( n ) = ∑ k F ( n , k ) 。Zeilberger算法寻找与求和变量k无关的一些多项式 a 0 ( n ) , a 1 ( n ) , ⋯ , a J ( n ) 及一</p><p>个有理函数 R ( n , k ) 使得</p><p>∑ j = 0 J a j ( n ) F ( n + j , k ) = G ( n , k + 1 ) − G ( n , k )</p><p>称该式为斜递推关系，其中 G ( n , k ) = R ( n , k ) F ( n , k ) . 对该式两端对所有整数 k 求和得到和式 S ( n ) 满足的一个递推关系式</p><p>∑ j = 0 J a j ( n ) S ( n + j ) = 0.</p><p>若要证明恒等式 S ( n ) = T ( n ) ，只需验证 T ( n ) 也满足该递推关系，且与 S ( n ) 具有相同的初值即可。</p><p>注意，若能直接求出该递推关系的闭公式，也可直接证明恒等式。</p><p>Zeilberger算法也已集成在Maple系统中，通过调用with (SumTools [Hypergeometric])工具包以及Zeilberger (f, n, k, N)命令即可得到斜递推关系。下面我们给出几个例子。</p><p>例10证明 ∑ k = 0 n ( n k ) ( k m ) = 2 n − m ( n m ) [<xref ref-type="bibr" rid="hanspub.43208-ref1">1</xref>]。</p><p>证明令 S ( n ) = ∑ k = 0 n ( n k ) ( k m ) ，用 F ( n , k ) 表示求和项，则由Zeilberger算法可以找到斜递推关系：</p><p>( ( n − m + 1 ) N − 2 n − 2 ) F ( n , k ) = G ( n , k + 1 ) − G ( n , k ) 上式等式两边对 k 求和，得到：</p><p>( − m + n + 1 ) S ( n + 1 ) − ( 2 n + 2 ) S ( n ) = 0 。于是有 S ( n + 1 ) S ( n ) = 2 ( n + 1 ) − m + n + 1 ，其中 S ( m ) = 1 。</p><p>由于当 k &lt; m 之前的项都为0，当 k ≥ m 时每一项才不为0，于是可得</p><p>S ( n + 1 ) S ( n ) S ( n ) S ( n − 1 ) ⋯ S ( m + 1 ) S ( m ) = 2 n − m + 1 ( n + 1 ) ! m ! ( − m + n + 1 ) ( − m + n ) ⋯ ( − m + m + 1 ) = 2 n − m + 1 ( n + 1 ) ! m ! ( − m + n + 1 ) ! = 2 n − m + 1 ( n + 1 ) ! ( − m + n + 1 ) ! m ! = 2 n − m + 1 ( n + 1 m )</p><p>可得 S ( n + 1 ) = 2 n − m + 1 ( n + 1 m ) ；即 S ( n ) = 2 n − m ( n m ) 。得证。</p><p>例11证明Gould’s 恒等式 ∑ k = 0 r r r − q k ⋅ ( r − q k k ) ⋅ ( p + q k n − k ) = ( p + r n ) [<xref ref-type="bibr" rid="hanspub.43208-ref13">13</xref>]。</p><p>证明令 S ( n ) = ∑ k = 0 r r r − q k ⋅ ( r − q k k ) ⋅ ( p + q k n − k ) ，用 F ( n , k ) 表示求和项，则由Zeilberger算法可以找到</p><p>斜递推关系： ( ( n + 1 ) N − p − r + n ) F ( n , k ) = G ( n , k + 1 ) − G ( n , k ) 。</p><p>上式等式两边对 k 求和，得到： ( n + 1 ) S ( n + 1 ) − ( p + r − n ) S ( n ) = 0 。</p><p>即： S ( n + 1 ) S ( n ) = p + r − n n + 1 ；其中： S ( 0 ) = 1 。</p><p>则： S ( n + 1 ) S ( n ) S ( n ) S ( n − 1 ) ⋯ S ( m + 1 ) S ( m ) = ( p + r ) n _ ( n + 1 ) ! = ( p + r n + 1 ) = S ( n + 1 ) S ( 0 ) 。</p><p>可得： S ( n + 1 ) = ( p + r n + 1 ) ；即： S ( n ) = ( p + r n ) 。得证。</p><p>3) WZ方法</p><p>WZ方法是基于Zeilberger算法一个证明超几何恒等式的有效工具。对超几何恒等式</p><p>∑ k t ( n , k ) = r h s ( n ) ，由于 r h s ( n ) 也是超几何的，可将其等价于 ∑ k F ( n , k ) = 1 ，其中 F ( n , k ) = t ( n , k ) r h s ( n ) 。在</p><p>绝大多数情况下，对新的求和项，Zeilberger算法可得到有理满足 R ( n , k ) 使得：</p><p>F ( n + 1 , k ) − F ( n , k ) = G ( n , k + 1 ) − G ( n , k ) ，其中 G ( n , k ) = R ( n , k ) F ( n , k ) 。对所有整数 k 求和，可得</p><p>∑ k F ( n + 1 , k ) = ∑ k F ( n , k ) ，即和式为一常数。再通过验证 ∑ k F ( 0 , k ) = 1 即可证明该恒等式。</p><p>例12证明 ∑ k ( − 1 ) k ( n k ) x k + x = 1 ( x + n n ) [<xref ref-type="bibr" rid="hanspub.43208-ref6">6</xref>]。</p><p>证明利用WZ方法，令 t ( n , k ) = ( − 1 ) k ( n k ) x k + x ， r h s = 1 ( x + n n ) 。</p><p>恒等式两边同除以等式右边得到新的恒等式： ∑ k F ( n , k ) = 1 ，</p><p>其中 F ( n , k ) = t ( n , k ) r h s ( n ) = ( − 1 ) k ( x + n ) ! k ! ( n − k ) ! ( x − 1 ) ! ( k + x ) 。</p><p>由Zeilberger 算法可得到有理函数 R ( n , k ) = k ( k + 1 ) ( n + 1 ) ( k − n − 1 ) 。</p><p>令 G ( n , k ) = R ( n , k ) F ( n , k ) ，则得到 F ( n + 1 , k ) − F ( n , k ) = G ( n , k + 1 ) − G ( n , k ) 。</p><p>对所有整数 k 求和，则可得到 ∑ k = 0 n F ( n + 1 , k ) = ∑ k = 0 n F ( n , k ) ；再验证 ∑ k = 0 n F ( 0 , k ) = 1 即可得证。</p><p>例13证明 ∑ k ( x + 1 2 k + 1 ) ( x − 2 k n − k ) 2 2 k + 1 = ( 2 x + 2 2 n + 1 ) [<xref ref-type="bibr" rid="hanspub.43208-ref6">6</xref>]。</p><p>证明利用WZ方法，令 t ( n , k ) = ( x + 1 2 k + 1 ) ( x − 2 k n − k ) 2 2 k + 1 ， r h s ( n ) = ( 2 x + 2 2 n + 1 ) 。</p><p>恒等式两边同时除以等式右边，得到新的恒等式： ∑ k F ( n , k ) = 1 。</p><p>其中 F ( n , k ) = t ( n , k ) r h s ( n ) = 2 2 k + 1 ( x + 1 ) ！ ( x − 2 k ) ! ( 2 n + 1 ) ! ( 2 x + 1 − 2 n ) ! ( 2 k + 1 ) ! ( x − 2 k ) ! ( n − k ) ! ( x − k − n ) ! ( 2 x + 2 ) ! 。</p><p>由Zeilberger算法可得有理函数 R ( n , k ) = k ( 2 k + 1 ) ( x − 2 n − 1 ) ( k − n − 1 ) ( 2 n − 2 x − 1 ) ( n − x ) 。</p><p>令 G ( n , k ) = R ( n , k ) F ( n , k ) ，则得到 F ( n + 1 , k ) − F ( n , k ) = G ( n , k + 1 ) − G ( n , k ) 。</p><p>对所有整数 k 求和，则可得到 ∑ k = 0 n F ( n + 1 , k ) = ∑ k = 0 n F ( n , k ) ；再验证 ∑ k = 0 n F ( 0 , k ) = 1 即可得证。</p></sec></sec><sec id="s8"><title>4. 结语</title><p>本文通过一些含有二项式系数的相关恒等式介绍了组合恒等式证明的常用五种方法：组合证明法、积分法、差分法、生成函数法和机器证明法。当然，这些方法的应用不仅限于二项式系数的相关恒等式。此外，近些年来，相关方法的推广和应用也得到了广泛关注 [<xref ref-type="bibr" rid="hanspub.43208-ref13">13</xref>] [<xref ref-type="bibr" rid="hanspub.43208-ref14">14</xref>] [<xref ref-type="bibr" rid="hanspub.43208-ref15">15</xref>]。在后续的研究中，将继续探讨这些方法在处理含有其他组合序列和特殊函数的恒等式中的应用。</p></sec><sec id="s9"><title>基金项目</title><p>国家自然科学基金项目(11501416)，国家自然科学基金项目(12071235)。</p></sec><sec id="s10"><title>文章引用</title><p>郑欢欢,靳海涛. 组合恒等式证明的几种方法Several Methods for Proving Combinatorial Identities[J]. 理论数学, 2021, 11(06): 1137-1145. https://doi.org/10.12677/PM.2021.116128</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.43208-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Spivey, M.Z. (2019) The Art of Proving Binomial Identities. CRC Press, Boca Raton.  
&lt;br&gt;https://doi.org/10.1201/9781351215824</mixed-citation></ref><ref id="hanspub.43208-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">许胤龙, 孙淑玲. 组合数学引论[M]. 合肥: 中国科学技术大学出版社, 2010.</mixed-citation></ref><ref id="hanspub.43208-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Riordan, J. (1968) Combinatorial Identities. John Wiley, New York.</mixed-citation></ref><ref id="hanspub.43208-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">吴琼扬. 浅谈微积分方法在组合恒等式证明中的应用[J]. 新课程(教育学术), 2011(4): 49-50.</mixed-citation></ref><ref id="hanspub.43208-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Wilf, H.S. (2006) Generating Functionology. A.K. Peters, Ltd., Natick. &lt;br&gt;https://doi.org/10.1201/b10576</mixed-citation></ref><ref id="hanspub.43208-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Petkovsěk, M., Wilf, H.S. and Zeilberger, D. (1996) A = B. A.K. Peters, Wellesley.  
&lt;br&gt;https://doi.org/10.1201/9781439864500</mixed-citation></ref><ref id="hanspub.43208-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Azarian, M.K. (2012) Fibonacci Identities as Binomial Sums. Mathematical Sciences, 7, 1871-1876.</mixed-citation></ref><ref id="hanspub.43208-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Azarian, M.K. (2012) Fibonacci Identities as Binomial Sums II. Mathe-matical Sciences, 7, 2053-2059.</mixed-citation></ref><ref id="hanspub.43208-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Azarian, M.K. (2012) Identities Involving Lucas or Fibonacci and Lucas Numbers as Binomial Sums. Mathematical Sciences, 7, 2221-2227.</mixed-citation></ref><ref id="hanspub.43208-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Lu, D.W., Song, L.X. and Ma, C.X. (2015) Some New Asymptotic Approximations of the Gamma Function Based on Nemes’ Formula, Ramanujan’s Formula and Burnside’s Formula. Applied Mathematics and Computation, 253, 1-7.  
&lt;br&gt;https://doi.org/10.1016/j.amc.2014.12.077</mixed-citation></ref><ref id="hanspub.43208-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Paule, P. and Schneider, C. (2003) Computer Proofs of a New Family of Harmonic Number Identities. Advances in Applied Mathematics, 31, 359-378. &lt;br&gt;https://doi.org/10.1016/S0196-8858(03)00016-2</mixed-citation></ref><ref id="hanspub.43208-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">杨存典, 李超, 刘端森. 广义高阶Fibonacci数和Lucas数的计算公式[J]. 纺织高校基础科学学报, 2007(1): 100-102.</mixed-citation></ref><ref id="hanspub.43208-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Fürst, C. (2011) Combinatorial Sums: Egorychev’s Method of Coefficients and Riordan Arrays. Master Thesis, Research Institute for Symbolic Computation, Johannes Kepler University, Linz.</mixed-citation></ref><ref id="hanspub.43208-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">侯庆虎. 组合数学中的代数方法[D]: [博士学位论文]. 天津: 南开大学, 2001.</mixed-citation></ref><ref id="hanspub.43208-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">孙慧. 特殊函数恒等式[D]: [博士学位论文]. 天津: 南开大学, 2009.</mixed-citation></ref></ref-list></back></article>