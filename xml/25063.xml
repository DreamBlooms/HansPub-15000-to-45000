<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2018.75069</article-id><article-id pub-id-type="publisher-id">AAM-25063</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20180500000_61663268.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  计算古典概型高阶原点矩的新方法
  A New Method for Calculating the High Order Origin Moments of Classical Probability Models
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>夏</surname><given-names>杰</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>吴</surname><given-names>文青</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>晓慧</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>志平</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>兰</surname><given-names>海洋</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>西南科技大学理学院，四川 绵阳</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>swust20171001@163.com(夏杰)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>16</day><month>05</month><year>2018</year></pub-date><volume>07</volume><issue>05</issue><fpage>584</fpage><lpage>592</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   考虑直接用定义计算古典概型高阶原点矩的复杂性，本文给出了2种计算古典概型高阶矩的方法。方法一中考虑(1 + n)m+1的二项展开式，应用数学归纳法，得出了古典概型高阶矩的递推表达式。方法二中考虑<inline-formula><inline-graphic xlink:href="Edit_7d2e3879-41fe-468a-8238-3c3e9487fd1c.png" xlink:type="simple"/></inline-formula>可表示成m + 1次多项式的形式，将问题转化为求解m元线性方程组，从而给出古典概型高阶矩的表达式。最后，以掷骰子随机实验和选取英文字母随机实验的高阶原点矩的求解为例具体给出了两种方法的计算过程。 Due to the mathematical complexity of calculating the high order origin moments of classical probabilistic models directly by definition, two methods for calculating the higher order moments are given in this paper. In the method one, considering the expansion of the expression (1 + n)m+1, and applying the mathematical induction method, we obtained the recursive expression of the higher order moments. In the method two, thanks to the <inline-formula><inline-graphic xlink:href="Edit_7d2e3879-41fe-468a-8238-3c3e9487fd1c.png" xlink:type="simple"/></inline-formula>can be represented by the repre-sentation of m + 1 polynomials, it can be further transformed into an m elements linear system. The expression of the classical model can be found by solving the system of linear equations. Finally, we use the dice test and the English alphabetic experiment as examples to show how to use the two methods. 
 
</p></abstract><kwd-group><kwd>古典概型，高阶原点矩，递推公式，线性方程组, Classical Probability Model</kwd><kwd> High Order Origin Moment</kwd><kwd> Recursion Formula</kwd><kwd> Linear System of Equations</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>计算古典概型高阶原点矩的新方法<sup> </sup></title><p>夏杰，吴文青，李晓慧，王志平，兰海洋</p><p>西南科技大学理学院，四川 绵阳</p><disp-formula id="hanspub.25063-formula17"><graphic xlink:href="//html.hanspub.org/file/11-2620659x5_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2018年4月30日；录用日期：2018年5月18日；发布日期：2018年5月25日</p><disp-formula id="hanspub.25063-formula18"><graphic xlink:href="//html.hanspub.org/file/11-2620659x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>考虑直接用定义计算古典概型高阶原点矩的复杂性，本文给出了2种计算古典概型高阶矩的方法。方法一中考虑(1 + n)<sup>m</sup><sup>+1</sup>的二项展开式，应用数学归纳法，得出了古典概型高阶矩的递推表达式。方法二中考虑 ∑ i = 1 n i m 可表示成m + 1次多项式的形式，将问题转化为求解m元线性方程组，从而给出古典概型高阶矩的表达式。最后，以掷骰子随机实验和选取英文字母随机实验的高阶原点矩的求解为例具体给出了两种方法的计算过程。</p><p>关键词 :古典概型，高阶原点矩，递推公式，线性方程组</p><disp-formula id="hanspub.25063-formula19"><graphic xlink:href="//html.hanspub.org/file/11-2620659x8_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/11-2620659x9_hanspub.png" /> <img src="//html.hanspub.org/file/11-2620659x10_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>古典概型也叫传统概率，其定义是由法国数学家拉普拉斯(Laplace)提出的 [<xref ref-type="bibr" rid="hanspub.25063-ref1">1</xref>] 。如果一个随机试验只有有限个样本点，且每个样本点发生的可能性均相等，则这个随机试验叫做拉普拉斯试验，这种条件下的概率模型就叫古典概型 [<xref ref-type="bibr" rid="hanspub.25063-ref2">2</xref>] 。在实际生活中有很多等概率事件的例子，例如：掷一枚质地均匀的硬币，认为出现正面或反面的可能性是相同的；掷一个质地均匀骰子的实验，出现的六个点数的概率是等可能的；又如对有限件外形和外观相同的产品进行抽样检验，抽到每件产品的概率是相同的。古典概型具有简单、直观、不需要做大量的重复试验的特点，其应用十分广泛，而数学期望，m阶原点矩是随机变量极其重要的特征数 [<xref ref-type="bibr" rid="hanspub.25063-ref3">3</xref>] 。因此，研究古典概型的m阶原点矩的计算是十分有意义的。</p><p>在概率论与统计中，对于连续型随机变量的m阶原点矩通过利用其对应的分布函数Laplace变换经过求导并在参数为零时即可求得。然而，对于离散型随机变量的m阶原点矩的计算就显得极其困难。在概率论与数理统计、随机过程教材中均没有给出求解离散随机变量高阶原点矩的计算公式或递推表达式。</p><p>对于离散随机变量高阶矩的计算现已有大量研究。魏孝章 [<xref ref-type="bibr" rid="hanspub.25063-ref4">4</xref>] 利用幂级数逐项积分求和法给出了几何分布的各阶原点矩的方法，从而得出几何分布的某些原点矩的计算结果。何梅等人 [<xref ref-type="bibr" rid="hanspub.25063-ref5">5</xref>] 研究了离散型随机变量的高阶矩，给出了几类离散型随机变量的高阶原点矩的统一递推公式，并给出了高阶原点矩的形式特征。于晶贤等人 [<xref ref-type="bibr" rid="hanspub.25063-ref6">6</xref>] 将数学中的第二类Stirling数和二项式定理应用到泊松分布高阶原点矩的计算中，得到了泊松分布高阶原点矩的计算公式与递推表达式。于晶贤 [<xref ref-type="bibr" rid="hanspub.25063-ref7">7</xref>] 将组合数学中的两个重要恒等式应用到离散随机变量高阶原点矩，并给出了二项分布、负二项分布、超几何分布的高阶原点矩的递推表达式。刘常彪等人 [<xref ref-type="bibr" rid="hanspub.25063-ref8">8</xref>] 对超几何分布的高阶原点矩、高阶中心矩及高阶半不变量进行了研究，利用组合数学与概率论的方法得出这3种高阶矩的直接表达式。从上述研究文献可知，学者主要利用组合数学与概率论的方法和第二类Stirling数和二项式定理给出了离散型随机变量的高阶矩。然而，对于古典概型的高阶原点矩，本文利用了2种新方法对它的高阶原点矩的计算问题进行了详细讨论。</p><p>本文给出了2种计算古典概型高阶矩的方法。一方面，考虑 ( 1 + n ) m + 1 的二项展开式，应用数学归纳</p><p>法，得出了古典概型高阶矩的递推表达式。另一方面，考虑 ∑ i = 1 n i m 可表示成 m + 1 次多项式，进一步转化</p><p>为m元线性方程组，对线性方程组进行求解即可求出古典概型高阶矩的表达式。最后，以掷骰子实验和选英文字母实验为特殊实例，给出了各自的前6阶矩的数值结果。</p></sec><sec id="s4"><title>2. 问题的提出</title><p>设某一随机事件有n个样本点，且每个样本点发生的可能性相等。若事件A有p个样本点，则事件A的概率为 p n 。现对n个样本点标号，分别为 1 , 2 , ⋯ , n ，记随机变量X为任取一个样本点上面的数字，则随机变量X的m阶原点矩分别为：</p><p> 随机变量X的一阶原点矩：</p><p>E [ X ] = p n &#215; 1 + p n &#215; 2 + p n &#215; 3 + ⋯ + p n &#215; n                     = p n ∑ i = 1 n i                   = p n &#215; n ( n + 1 ) 2 .</p><p> 随机变量X的二阶原点矩：</p><p>E [ X 2 ] = p n &#215; 1 2 + p n &#215; 2 2 + p n &#215; 3 2 + ⋯ + p n &#215; n 2                       = p n ∑ i = 1 n i 2                   = p n &#215; n ( n + 1 ) ( 2 n + 1 ) 6 .</p><p> 随机变量X的三阶原点矩：</p><p>E [ X 3 ] = p n &#215; 1 3 + p n &#215; 2 3 + p n &#215; 3 3 + ⋯ + p n &#215; n 3                       = p n ∑ i = 1 n i 3                   = p n &#215; ( n ( n + 1 ) 2 ) 2 .</p><p> 随机变量X的m阶原点矩：</p><p>E [ X m ] = p n &#215; 1 m + p n &#215; 2 m + p n &#215; 3 m + ⋯ + p n &#215; n m                         = p n ∑ i = 1 n i m .</p><p>可见，为了确切地给出 E [ X m ] 的表达式，关键问题是要计算 ∑ i = 1 n i m 的表达式。从上面的推导看出，</p><p>当m的取值比较小时，我们是可以很快计算出来的。但是，当m的取值逐渐增大时，求解 ∑ i = 1 n i m 就变得异常复杂，直接的求解显然是不大现实的。也正是因为这一原因，所以到目前为止，也鲜有文献报道离散随机变量高阶原点矩的求解。本文针对这一表达式，提出了两种计算其表达式的方法。下面具体给出求解 ∑ i = 1 n i m 的详细步骤。</p></sec><sec id="s5"><title>3. 表达式 ∑ i = 1 n i m 的计算</title><sec id="s5_1"><title>3.1. 方法1：数学归纳法</title><p>众所周知， ( 1 + n ) m + 1 可表示成如下形式：</p><p>( 1 + n ) m + 1 = ( m + 1 0 ) n m + 1 + ( m + 1 1 ) n m + ( m + 1 2 ) n m − 1 + ⋯ + ( m + 1 m + 1 ) n 0 (1)</p><p>进一步，式(1)移项后可得：</p><p>( 1 + n ) m + 1 − n m + 1 = ( m + 1 1 ) n m + ( m + 1 2 ) n m − 1 + ⋯ + ( m + 1 m + 1 ) n 0 (2)</p><p>对式(2)，分别取不同的n的值，得到下面的表达式，</p><p>{ ( 1 + n ) m + 1 − n m + 1 = ( m + 1 1 ) n m + ( m + 1 2 ) n m − 1 + ⋯ + ( m + 1 m + 1 ) n 0 , n m + 1 − ( n − 1 ) m + 1 = ( m + 1 1 ) ( n − 1 ) m + ( m + 1 2 ) ( n − 1 ) m − 1 + ⋯ + ( m + 1 m + 1 ) ( n − 1 ) 0 , ( n − 1 ) m + 1 − ( n − 2 ) m + 1 = ( m + 1 1 ) ( n − 2 ) m + ( m + 1 2 ) ( n − 2 ) m − 1 + ⋯ + ( m + 1 m + 1 ) ( n − 2 ) 0 ,                                                                                           ⋮ 2 m + 1 − 1 m + 1 = ( m + 1 1 ) 1 m + ( m + 1 2 ) 1 m − 1 + ⋯ + ( m + 1 m + 1 ) 1 0 . (3)</p><p>式(3)中，等号两边分别相加可得：</p><p>( 1 + n ) m + 1 − 1 = ( m + 1 1 ) ∑ i = 1 n i m + ( m + 1 2 ) ∑ i = 1 n i m − 1 + ⋯ + ( m + 1 m + 1 ) ∑ i = 1 n i 0 (4)</p><p>令式(4)中， A k = ∑ i = 1 n i k ,   k = 0 , 1 , 2 , ⋯ , m ，则式(4)可表示为：</p><p>( 1 + n ) m + 1 − 1 = ( m + 1 ) A m + ∑ k = 2 m + 1 ( m + 1 k ) A m + 1 − k                                   = ( m + 1 ) A m + ∑ k = 0 m − 1 ( m + 1 m + 1 − k ) A k                                 = ( m + 1 ) A m + ∑ k = 0 m − 1 ( m + 1 k ) A k (5)</p><p>综上，可得 A m 的通项公式为：</p><p>A m = ( 1 + n ) m + 1 − 1 − ∑ k = 0 m − 1 ( m + 1 k ) A k m + 1 , m = 1 , 2 , � (6)</p><p>此时，注意到</p><p>{ A 0 = n , A 1 = ∑ i = 1 n i = n ( n + 1 ) 2 , A 2 = ∑ i = 1 n i 2 = n ( n + 1 ) ( 2 n + 1 ) 6 , A 3 = ( n ( n + 1 ) 2 ) 2 . (7)</p><p>由 A m 的通项公式可知，有初值和递推表达式，则 A m 的值即可求解。</p></sec><sec id="s5_2"><title>3.2. 方法2：线性方程组</title><p>为了计算<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/11-2620659x37_hanspub.png" xlink:type="simple"/></inline-formula>，我们首先计算 m = 2 的情形。从图1中可看出， ∑ i = 1 n i 2 介于 ∫ 0 n x 2 d x 和 ∫ 0 n ( x +1 ) 2 d x 之间，即</p><p>∫ 0 n x 2 d x &lt; ∑ i = 1 n i 2 &lt; ∫ 0 n ( x 2 + 1 ) d x (8)</p><p>进一步，式(8)可化为</p><p>1 3 n 3 &lt; ∑ i = 1 n i 2 &lt; 1 3 ( n + 1 ) 3 (9)</p><p>如果 ∑ i = 1 n i 2 存在通项公式，可设 ∑ i = 1 n i 2 为三次多项式，即</p><p>∑ i = 1 n i 2 = a n 3 + b n 2 + d n + d (10)</p><p>图1. ∑ i = 1 n i 2 与 ∫ 0 n x 2 d x 和 ∫ 0 n ( x + 1 ) 2 d x 之间的关系</p><p>式(10)中， ∑ i = 1 1 i 2 = 1 , ∑ i = 1 2 i 2 = 5 , ∑ i = 1 3 i 2 = 14 , ∑ i = 1 4 i 2 = 30 ，则式(11)可进一步转化为四元一次方程组为</p><p>{ a + b + c + d = 1 8 a + 4 b + 2 c + d = 5 27 a + 9 b + 3 c + d = 14 64 a + 16 b + 4 c + d = 30 (11)</p><p>求解四元一次方程组，得到解为 a = 1 / 3 , b = 1 / 2 , c = 1 / 6 , d = 0 。于是，式(10)可表示为：</p><p>∑ i = 1 n i 2 = n 3 3 + n 2 2 + n 6 (12)</p><p>同理， ∑ i = 1 n i m 满足</p><p>1 m + 1 n m + 1 &lt; ∑ i = 1 n i m &lt; 1 m + 1 ( n + 1 ) m + 1 (13)</p><p>如果 ∑ i = 1 n i m 存在通项，则其应有表达式</p><p>∑ i = 1 n i m = ∑ j = 0 m + 1 a j n j (14)</p><p>则可以通过建立m元一次方程组</p><p>{ a 0 1 m + 1 + a 1 1 m + ⋯ + a m 1 + a m + 1 = ∑ i = 1 1 i m                 a 0 2 m + 1 + a 1 2 m + ⋯ + a m 2 + a m + 1 = ∑ i = 1 2 i m                 ⋮ a 0 ( m + 2 ) m + 1 + a 1 ( m + 2 ) m + ⋯ + a m ( m + 2 ) + a m + 1 = ∑ i = 1 m + 2 i m (15)</p><p>式(15)中只要给定一个确定的m就可求出 a j 。</p><p>a j = D i D ， j = 0 , 1 , ⋯ , m + 1. (16)</p><p>其中，</p><p>D j = ( 1 m + 1 1 m ⋯ ∑ i = 1 1 i m ⋯ 1 2 m + 1 2 m ∑ i = 1 2 i m 1 3 m + 1 3 m ∑ i = 1 3 i m 1 ⋮ ⋱ ⋮ ⋱ ⋮ ( m + 1 ) m + 1 ( m + 1 ) m … ∑ i = 1 m + 2 i m … 1 ) , D = ( 1 m + 1 1 m ⋯ 1 2 m + 1 2 m 1 3 m + 1 3 m 1 ⋮ ⋱ ⋮ ( m + 1 ) m + 1 ( m + 1 ) m ⋯ 1 )</p><p>由式(14)可知，只要求出 a j 就可求出 A m = ∑ i = 1 n i m = ∑ j = 0 m + 1 a j n j 。</p></sec></sec><sec id="s6"><title>4. 实例分析</title><p>下面给出两个古典概型高阶原点矩的计算表达式，以此验证我们提出的计算方法的正确性。</p><p>1) 掷骰子实验</p><p>掷一个质地均匀骰子的实验，出现1，2，3，4，5，6六个点数的概率是等可能的，为古典概型。记 X 为掷骰子实验出现的点数，其中 X = 1 , 2 , 3 , 4 , 5 , 6 ，则每次发生的概率为 P { X = n } = 1 6 。</p><p>事实上，它的前6阶原点矩可计算得到</p><p>E [ X ] = 21 6 , E [ X 2 ] = 91 6 , E [ X 3 ] = 441 6 , E [ X 4 ] = 2275 6 , E [ X 5 ] = 12201 6 , E [ X 6 ] = 67171 6 .</p><p>下面我们采用本文提出的方法来计算：</p><p>方法一：数学归纳法</p><p>当 n = 6 时， A 1 = 21 ， A 2 = 91 ， A 3 = 441 ，可根据方法一式(6)可计算 A 4 , A 5 , A 6 。</p><p>A 4 = 7 5 − 1 − ∑ k = 0 3 ( 5 k ) A k 5 = 2276</p><p>A 5 = 7 6 − 1 − ∑ k = 0 4 ( 6 k ) A k 6 = 12201</p><p>A 6 = 7 7 − 1 − ∑ k = 0 5 ( 7 k ) A k 7 = 67171</p><p>因此，骰子的实验的前6阶矩为：</p><p>E [ X ] = 1 6 &#215; A 1 = 21 6 , E [ X 2 ] = 1 6 &#215; A 2 = 91 6 , E [ X 3 ] = 1 6 &#215; A 3 = 441 6 , E [ X 4 ] = 1 6 &#215; A 4 = 2275 6 , E [ X 5 ] = 1 6 &#215; A 5 = 12201 6 , E [ X 6 ] = 1 6 &#215; A 6 = 67171 6 .</p><p>方法二：线性方程组</p><p>由式(14)~(16)可计算出 ∑ i = 1 n i m , m = 1 , 2 , 3 , ⋯ , 6 的通项公式，可得以下表达式：</p><p>A 1 = ∑ i = 1 n i = n 2 2 + n 2 ,</p><p>A 2 = ∑ i = 1 n i 2 = n 3 3 + n 2 2 + n 6 ,</p><p>A 3 = ∑ i = 1 n i 3 = n 4 4 + n 3 2 + n 2 4 ,</p><p>A 4 = ∑ i = 1 n i 4 = n 5 5 + n 4 2 + n 3 3 − n 30 ,</p><p>A 5 = ∑ i = 1 n i 5 = n 6 6 + n 5 2 + 5 n 4 12 − n 2 12 ,</p><p>A 6 = ∑ i = 1 n i 6 = n 7 7 + n 6 2 + n 5 2 − n 3 6 + n 42 .</p><p>当 n = 6 时， A 1 = 21 ， A 2 = 91 ， A 3 = 441 , A 4 = 2275 , A 5 = 12201 , A 6 = 67171. 因此，可计算 E [ X ] = 21 6 , E [ X 2 ] = 91 6 , E [ X 3 ] = 441 6 , E [ X 4 ] = 2275 6 , E [ X 5 ] = 12201 6 , E [ X 6 ] = 67171 6 .</p><p>2) 选英文字母实验</p><p>每次敲键盘，出现的 A , B , C , ⋯ Z 共26个字母的概率是等可能的，为古典概型。记 X 为敲键盘实验出现的字母，为了方便计算记 X = 1 , 2 , 3 , ⋯ , 26 ，则每次发生的概率为 P { X = n } = 1 26 。</p><p>事实上，它的前6阶原点矩可计算得到</p><p>E [ X ] = 27 2 , E [ X 2 ] = 477 2 , E [ X 3 ] = 9477 2 , E [ X 4 ] = 200817 2 , E [ X 5 ] = 2216039 2 , E [ X 6 ] = 50299889 2 .</p><p>方法一：数学归纳法</p><p>当 n = 26 时， A 1 = 351 , A 2 = 6201 , A 3 = 123201 ，可根据方法一式(6)可计算 A 4 , A 5 , A 6 。</p><p>A 4 = 27 5 − 1 − ∑ k = 0 3 ( 5 k ) A k 5 = 2610621</p><p>A 5 = 27 6 − 1 − ∑ k = 0 4 ( 6 k ) A k 6 = 57617001</p><p>A 6 = 27 7 − 1 − ∑ k = 0 5 ( 7 k ) A k 7 = 1307797101</p><p>进一步，可计算选英文字母实验的前6阶矩为：</p><p>E [ X ] = 1 26 &#215; A 1 = 27 2 , E [ X 2 ] = 1 26 &#215; A 2 = 477 2 , E [ X 3 ] = 1 26 &#215; A 3 = 9477 2 , E [ X 4 ] = 1 26 &#215; A 4 = 200817 2 , E [ X 5 ] = 1 26 &#215; A 5 = 2216039 2 , E [ X 6 ] = 1 26 &#215; A 6 = 50299889 2 .</p><p>方法二：线性方程组</p><p>当 n = 26 时，因此 A 1 = 351 ， A 2 = 6201 ， A 3 = 123201 ， A 4 = 2610621 ， A 5 = 57617001 ， A 6 = 1307797101 . ，可计算 E [ X ] = 27 2 , E [ X 2 ] = 477 2 , E [ X 3 ] = 9477 2 , E [ X 4 ] = 200817 2 , E [ X 5 ] = 2216039 2 , E [ X 6 ] = 50299889 2 .</p><p>从上面两个实例可看出，本文给出的2种计算古典概型高阶矩的计算数值与由定义计算出的古典概型高阶原点矩的数值相等，进一步说明了，本文提出的计算高阶矩的方法具有一定的有效性和实用性。</p></sec><sec id="s7"><title>5. 结论</title><p>本文给出了2种计算古典概型高阶矩的方法，得出计算古典概型高阶矩的递推表达式。以掷骰子实验和选英文字母实验为特殊实例，给出了给自的前6阶矩的计算数值。本文研究的工作为古典概型的随机变量高阶矩的计算给出了可行的计算公式，为计算机求解高阶矩带来了方便。</p></sec><sec id="s8"><title>文章引用</title><p>夏 杰,吴文青,李晓慧,王志平,兰海洋. 计算古典概型高阶原点矩的新方法 A New Method for Calculating the High Order Origin Moments of Classical Probability Models[J]. 应用数学进展, 2018, 07(05): 584-592. https://doi.org/10.12677/AAM.2018.75069</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.25063-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">李勇, 张淑梅. 古典概型知识结构解析[J]. 数学通报, 2008, 47(7): 4-5.</mixed-citation></ref><ref id="hanspub.25063-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">崔向照, 李春. 概率论与数理统计[M]. 北京: 科学出版社, 2016.</mixed-citation></ref><ref id="hanspub.25063-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">曹小玲. 浅谈概率论中“数学期望”概念的讲解[J]. 教育教学论坛, 2014, 5(5): 199-201.</mixed-citation></ref><ref id="hanspub.25063-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">魏孝章. 关于几何分布的高阶原点矩的探讨[J]. 西安文理学院学报(自然科学版), 2006, 9(1): 66-68.</mixed-citation></ref><ref id="hanspub.25063-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">何梅, 朱成莲. 常用离散型随机变量的高阶原点矩[J]. 大学数学, 2009, 25(2): 194-199.</mixed-citation></ref><ref id="hanspub.25063-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">于晶贤, 李金秋. 泊松分布高阶原点矩的两种计算方法[J]. 数学的实践与认识, 2010, 40(21): 221-224.</mixed-citation></ref><ref id="hanspub.25063-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">于晶贤. 一类离散型随机变量高阶原点矩的递推计算方法[J]. 科学技术与工程, 2010, 10(15): 3681-3683.</mixed-citation></ref><ref id="hanspub.25063-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">刘常彪, 王海龙. 关于超几何分布高阶矩的研究[J]. 内蒙古师大学报(自然汉文版), 2014, 43(1): 23-25.</mixed-citation></ref></ref-list></back></article>