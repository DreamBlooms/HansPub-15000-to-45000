<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2020.98144</article-id><article-id pub-id-type="publisher-id">AAM-37167</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20200800000_84247313.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  多项式近似因式分解的可信验证
  The Verification of Approximate Polynomial Factorization
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>严</surname><given-names>杰煜</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>喆</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>长春理工大学理学院，吉林 长春</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>04</day><month>08</month><year>2020</year></pub-date><volume>09</volume><issue>08</issue><fpage>1230</fpage><lpage>1238</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    众所周知，系数有扰动多项式的因式分解是不连续的。因此，传统的多项式因式分解对于数值计算来说是一个不适定问题。本文利用区间算法，研究多项式近似因式分解的可信计算。给定一个实多项式，本文利用已有算法计算给定多项式其因式分解流形结构，设计算法输出在该因式分解流形结构中一系数为区间的因式分解。算法保证，在该区间因式分解中存在一系数为实数的因式分解，其所对应的多项式为在确定的因式分解流形结构中与给定多项式残差最小的多项式。
    It is well-known for a polynomial with perturbed coefficients, its factorization is discontinuous. Therefore, the traditional polynomial factorization is an ill-posed problem for numerical computation. This paper is to study the trusted computing of polynomial approximate factorization on the basis of interval algorithm. Given a polynomial of real coefficients, this paper uses the existing algorithm to compute the structure of factorization manifold, and provides a verification algorithm to compute a factorization with interval coefficients in the computed factorization manifold structure. The algorithm is guaranteed that there exists a real factorization within this interval factorization such that the corresponding polynomial of the real factorization is the polynomial with the minimum residual in the computed decomposition manifold structure. 
  
 
</p></abstract><kwd-group><kwd>多元多项式，近似因式分解，可信验证, Multivariate Polynomial</kwd><kwd> Approximate Factorization</kwd><kwd> Verification</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>多项式近似因式分解的可信验证</title><p>严杰煜，李喆<sup>*</sup></p><p>长春理工大学理学院，吉林 长春</p><p>收稿日期：2020年7月26日；录用日期：2020年8月13日；发布日期：2020年8月20日</p><disp-formula id="hanspub.37167-formula13"><graphic xlink:href="//html.hanspub.org/file/14-2621253x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>众所周知，系数有扰动多项式的因式分解是不连续的。因此，传统的多项式因式分解对于数值计算来说是一个不适定问题。本文利用区间算法，研究多项式近似因式分解的可信计算。给定一个实多项式，本文利用已有算法计算给定多项式其因式分解流形结构，设计算法输出在该因式分解流形结构中一系数为区间的因式分解。算法保证，在该区间因式分解中存在一系数为实数的因式分解，其所对应的多项式为在确定的因式分解流形结构中与给定多项式残差最小的多项式。</p><p>关键词 :多元多项式，近似因式分解，可信验证</p><disp-formula id="hanspub.37167-formula14"><graphic xlink:href="//html.hanspub.org/file/14-2621253x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/14-2621253x8_hanspub.png" /> <img src="//html.hanspub.org/file/14-2621253x9_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>多项式因式分解是多项式基本运算的主要研究问题之一，也是Maple，Mathematica等计算机代数系统的主要功能之一。国内外很多学者对多项式因式分解问题进行了大量的研究。Lenstra和Lovasz [<xref ref-type="bibr" rid="hanspub.37167-ref1">1</xref>] 首先提出了关于一元多项式因式分解的时间算法。该算法使用Berlekamp算法并结合Hensel引理对有限域上的多项式进行因式分解。Kaltofen和Von zur Gathen [<xref ref-type="bibr" rid="hanspub.37167-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.37167-ref3">3</xref>] 给出了多元多项式因式分解的时间算法，并对该算法的时间复杂性进行了严格的证明。目前，精确的二元多项式因式分解时间复杂性最低的算法是由Lecerf [<xref ref-type="bibr" rid="hanspub.37167-ref4">4</xref>] 提出的。Gao [<xref ref-type="bibr" rid="hanspub.37167-ref5">5</xref>] 在Ruppert [<xref ref-type="bibr" rid="hanspub.37167-ref6">6</xref>] 针对多项式微分形式相关结论的启发下，提出了一种新的因式分解算法。该算法首先利用Hilbert不可约定理，将多项式由多元降为二元，并提出了二元多项式任意域上的因式分解方法。</p><p>众所周知，多项式其系数微小的摄动都有可能改变其因式分解的结构。因此，对于系数有扰动的多项式，其因式分解计算是不连续的。于是当一个多项式系数的精确度有限时，其因式分解计算就显得十分困难。随着对多项式因式分解研究的逐步深入，学者们将研究工作从符号计算扩展到数值计算。Sasaki [<xref ref-type="bibr" rid="hanspub.37167-ref7">7</xref>] 通过矩阵运算尽可能多的得到零和关系，提出了一种有效算法改进了多项式的近似因式分解算法。Gao、Kaltofen、May、Yang和Zhi [<xref ref-type="bibr" rid="hanspub.37167-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.37167-ref9">9</xref>] 基于Ruppert和Gao针对多元多项式微分形式的研究成果，利用奇异值分解，结构总体最小二乘以及高斯–牛顿算法来计算多元多项式近似因式分解。Corless、Galligo和Giesbrecht等人 [<xref ref-type="bibr" rid="hanspub.37167-ref10">10</xref>] [<xref ref-type="bibr" rid="hanspub.37167-ref11">11</xref>] [<xref ref-type="bibr" rid="hanspub.37167-ref12">12</xref>] 从几何角度研究了多项式因式分解问题。他们基于参数空间中的投影和随机环上的延拓法，从一个具有扰动的多项式中重建一个近似多项式及其不可约因子，通过建立因式分解的分层复解析流形及其管状邻域，设计了多项式因式分解的数值算法。Kahan [<xref ref-type="bibr" rid="hanspub.37167-ref13">13</xref>] 发现了对于不适定代数问题不连续解的流形上隐藏的连续性，解决了对数据微小变化敏感的多项式因式分解的计算问题。Wu和Zeng [<xref ref-type="bibr" rid="hanspub.37167-ref14">14</xref>] 提出了基于多项式空间几何和因式分解流形分层的数值分解概念，证明了多项式数值因式分解的存在性、唯一性、李普希茨连续性和收敛性，并提出了多项式数值因式分解算法。该算法消除了传统因式分解的病态性，将数值计算中的不适定因式分解问题完全正则化。</p><p>本文利用区间算法，在文献 [<xref ref-type="bibr" rid="hanspub.37167-ref14">14</xref>] 工作的基础上设计了在确定因式分解流形结构下，与给定多项式残差向量2-范数最小的多项式的可信计算方法。</p></sec><sec id="s4"><title>2. 预备部分</title><p>本文分别用 ℕ 、 ℝ 和 ℝ + 表示非负整数集合、实数集合和正实数集合。用 ≤ 来表示 ℕ n 上的乘积顺序，对于 α = ( α 1 , α 2 , ⋯ , α n ) T ， β = ( β 1 , β 2 , ⋯ , β n ) T ∈ ℕ n ， α ≤ β 当且仅当 α i ≤ β i ， i = 1 , 2 , ⋯ , n 。用 ≺ l e x 表示 ℕ n 上的字典序，若向量 β − α 的最左边的非零项是正的，记为 α ≺ l e x x β 。假设向量 x = ( x 1 , x 2 , ⋯ , x r ) T 的分</p><p>量为变量， M ( x ) 是一个 m &#215; n 维矩阵，该矩阵的每一个分量都是关于变量 x 1 , x 2 , ⋯ , x r 的函数， ∂ M ( x ) ∂ x k 表示分量为 ∂ M i , j ( x ) ∂ x k 的矩阵，其中 1 ≤ i ≤ n ， 1 ≤ j ≤ m ， 1 ≤ k ≤ r 。 I n 表示 n &#215; n 维单位矩阵， O m , n 表示 m &#215; n 维零矩阵。</p><p>令 ℝ [ x ] : = ℝ [ x 1 , x 2 , ⋯ , x r ] 是关于变量 x 1 , x 2 , ⋯ , x r 的r元多项式环。令 x α : = x 1 α 1 x 2 α 2 ⋯ x r α r 为 ℝ [ x ] 中的单项，其中 α = ( α 1 , α 2 , ⋯ , α r ) ∈ ℕ n 。多项式 f ∈ ℝ [ x ] 是单项式的有限线性组合，即f可以写成以下形式</p><p>f = ∑ β = ( β 1 , β 2 , ⋯ , β n ) T ∈ ℕ n c β x β ,     c β ∈ ℝ</p><p>令 deg x i ( f ) 表示多项式f关于变量 x i 的次数，则多项式f的次数定义为 deg ( f ) = ( deg x 1 ( f ) , deg x 2 ( f ) , ⋯ , deg x n ( f ) ) T 。令 [ f ] 表示 ∏ i = 1 n ( deg x i ( f ) + 1 ) 维向量，其分量是由多项式</p><p>f的系数按字典序降序排列而成的向量。文献 [<xref ref-type="bibr" rid="hanspub.37167-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.37167-ref9">9</xref>] [<xref ref-type="bibr" rid="hanspub.37167-ref15">15</xref>] 引入了多项式w关于次数 l = ( l 1 , l 2 , ⋯ , l n ) T 的卷积矩阵 C l ( w ) ，对于一个 deg ( w ) = l 的多项式w，矩阵 C l ( w ) 乘以 [ f ] 得到的向量为多项式w乘以多项式f所得的多项式其系数按照字典序排列而成的向量。</p><p>令 I ℝ 表示所有区间 { [ x _ , x &#175; ] : x _ , x &#175; ∈ ℝ , x _ ≤ x &#175; } 构成的集合。区间向量 X = ( X 1 , X 2 , ⋯ , X n ) T 是一个分量为区间的n维向量组，且满足条件</p><p>X = { ( x 1 , x 2 , ⋯ , x n ) ∈ ℝ n : x i ∈ X i , 1 ≤ i ≤ n } .</p><p>区间矩阵 A ∈ I ℝ m &#215; n 是具有区间项的矩阵，如果区间矩阵A中的任意实矩阵是满秩的，则称区间矩阵A满秩。如果属于区间矩阵 M ∈ I ℝ m &#215; n 的任意实矩阵M，对所有的 1 ≤ i ≤ n ， 1 ≤ j ≤ n 满足条件 M i , j = M j , i ，则称区间矩阵M是区间对称矩阵。如果区间对称矩阵M中的每一个对称矩阵都为正定矩阵，则称区间对称矩阵M为区间对称正定矩阵。对于一个区间对称矩阵M，INTLAB工具箱 [<xref ref-type="bibr" rid="hanspub.37167-ref16">16</xref>] 中的isspd函数可以验证M的正定性，即命令isspd (M)返回值为1，说明区间对称矩阵M为对称正定矩阵。</p><p>定理1 (见 [<xref ref-type="bibr" rid="hanspub.37167-ref17">17</xref>])：设 f : ℝ n → ℝ n ， f = ( f 1 , ⋯ , f n ) T ， f 1 , ⋯ , f n 是连续可微函数。对于 x ˜ ∈ ℝ n 和区间向量 X ∈ I ℝ n ，其中 0 ∈ X ，令 f ′ ( x ˜ + X ) 表示 f 在区间 x ˜ + X 处的区间雅可比矩阵。给定 R ∈ ℝ n &#215; n 和满足条件 f ′ ( x ˜ + X ) ⊆ M 的区间矩阵 M ∈ I ℝ m &#215; n ，若</p><p>− R f ( x ˜ ) + ( I n − R M ) X ⊆ int ( X ) ,</p><p>则存在唯一的 x ^ ∈ x ˜ + X ，使得 f ( x ^ ) = 0 ，其中 int ( X ) 表示 X 的内部。</p></sec><sec id="s5"><title>3. 多项式近似因式分解</title><p>假设 γ p 1 k 1 p 2 k 2 ⋯ p r k r 是多项式 f ∈ ℝ [ x ] 的近似因式分解，其中 γ ∈ ℝ ， k 1 ≤ k 2 ≤ ⋯ ≤ k r ， k i ∈ ℕ ， p 1 , p 2 , ⋯ , p r 是成对互质的无平方多项式，且对于任意的 1 ≤ i ≤ r ， deg ( p i ) = m i = ( m i , 1 , m i , 2 , ⋯ , m i , n ) T 。Wu和Zeng在文献 [<xref ref-type="bibr" rid="hanspub.37167-ref14">14</xref>] 中提出了基于多项式空间几何和分解流形分层的数值多项式分解的概念，并且定义多项式全体近似因式分解的子集</p><p>F m 1 k 1 m 2 k 2 ⋯ m r k r = { γ p 1 k 1 p 2 k 2 ⋯ p r k r : γ ∈ ℝ , deg p i ≤ m i , i = 1 , ⋯ , r ; p 1 , p 2 , ⋯ , p r 是 成 对 互 质 的 无 平 方 多 项 式 的 } . (1)</p><p>Wu和Zeng称子集 F m 1 k 1 m 2 k 2 ⋯ m r k r 中任意一个多项式的因式分解流形结构为 m 1 k 1 m 2 k 2 ⋯ m r k r ，并引入了以下向量</p><p>b i = ( b i , β | β ∈ ℕ n , β ≤ m i ) T ,     1 ≤ i ≤ r , (2)</p><p>其中向量 b i 的分量是按照关于 β 的字典序降序排列。然后，Wu和Zeng将求解因式分解流形结构 m 1 k 1 m 2 k 2 ⋯ m r k r 上的近似因式分解问题转换成计算下述超定方程组的最小二乘解</p><p>ϕ ( γ , [ p 1 ] , ⋯ , [ p r ] ) = ( [ γ p 1 k 1 ⋯ p r k r − f ] b 1 T [ p 1 ] − 1 ⋮ b r T [ p r ] − 1 ) = 0. (3)</p></sec><sec id="s6"><title>4. 主要结果</title><sec id="s6_1"><title>4.1. 数值部分</title><p>数值部分利用文献 [<xref ref-type="bibr" rid="hanspub.37167-ref8">8</xref>] 中的数值多项式因式分解算法来计算因式分解流形结构 m 1 k 1 m 2 k 2 ⋯ m r k r 。然后，求超定方程组(3)的最小二乘解，得到该因式分解流形结构上高精度的近似解，记作</p><p>f ≈ γ &#175; p &#175; 1 k 1 p &#175; 2 k 2 ⋯ p &#175; r k r .</p><p>我们引入扰动向量</p><p>e i = ( e i , β | β ∈ ℕ n , β ≤ m i ) T ,     1 ≤ i ≤ r , (4)</p><p>其中向量 e i 的分量关于 β 的字典序降序排列。定义扰动多项式 p &#175; i ( e i ) 为</p><p>p &#175; i ( e i ) = p &#175; i + ∑ β ∈ ℕ n , β ≤ m i e i , β x β ,     1 ≤ i ≤ r .</p><p>为了简化表达式，令 e = ( e 1 , e 2 , ⋯ , e r ) T ，定义非线性函数</p><p>F ( e ) = ‖ [ γ p &#175; 1 ( e 1 ) k 1 p &#175; 2 ( e 2 ) k 2 ⋯ p &#175; r ( e r ) k r − f ] ‖ 2 2 , (5)</p><p>定义</p><p>q &#175; i ( e ) = ( k i p &#175; i ( e i ) ) γ p &#175; 1 ( e 1 ) k 1 p &#175; 2 ( e 2 ) k 2 ⋯ p &#175; r ( e r ) k r ,     1 ≤ i ≤ r .</p><p>非线性函数 F ( e ) 的梯度为</p><p>F ′ ( e ) = { C m 1 T ( q &#175; 1 ( e ) ) [ γ p &#175; 1 ( e 1 ) k 1 p &#175; 2 ( e 2 ) k 2 ⋯ p &#175; r ( e r ) k r − f ] C m 2 T ( q &#175; 2 ( e ) ) [ γ p &#175; 1 ( e 1 ) k 1 p &#175; 2 ( e 2 ) k 2 ⋯ p &#175; r ( e r ) k r − f ]                                                                     ⋮ C m r T ( q &#175; r ( e ) ) [ γ p &#175; 1 ( e 1 ) k 1 p &#175; 2 ( e 2 ) k 2 ⋯ p &#175; r ( e r ) k r − f ] , (6)</p><p>其中 C m i ( q &#175; i ( e ) ) 是多项式 q &#175; i ( e ) 关于次数 m i = ( m i , 1 , m i , 2 , ⋯ , m i , n ) T 的卷积矩阵。关于变量 e i , β ，有 F ′ ( e ) 对 e i , β 的偏导数如下</p><p>∂ F ′ ( e ) ∂ e i , β = ( ∂ C m 1 T ( q &#175; 1 ( e ) ) ∂ e i , β [ γ p &#175; 1 ( e 1 ) k 1 p &#175; 2 ( e 2 ) k 2 ⋯ p &#175; r ( e r ) k r − f ] ∂ C m 2 T ( q &#175; 2 ( e ) ) ∂ e i , β [ γ p &#175; 1 ( e 1 ) k 1 p &#175; 2 ( e 2 ) k 2 ⋯ p &#175; r ( e r ) k r − f ] ⋮ ∂ C m r T ( q &#175; r ( e ) ) ∂ e i , β [ γ p &#175; 1 ( e 1 ) k 1 p &#175; 2 ( e 2 ) k 2 ⋯ p &#175; r ( e r ) k r − f ] )     + ( C m 1 T ( q 1 ( e ) ) C m 2 T ( q 2 ( e ) ) ⋮ C m r T ( q r ( e ) ) ) ∂ [ γ p &#175; 1 ( e 1 ) k 1 p &#175; 2 ( e 2 ) k 2 ⋯ p &#175; r ( e r ) k r − f ] ∂ e i , β . (7)</p><p>注1：数值部分的主要工作是计算下列优化问题的稳定点</p><p>min F ( e ) s .t . { b 1 T [ p &#175; 1 ( e 1 ) ] − 1 = 0 b 2 T [ p &#175; 2 ( e 2 ) ] − 1 = 0                       ⋮ b r T [ p &#175; r ( e r ) ] − 1 = 0 . (8)</p><p>&#168;</p><p>通过引入拉格朗日算子 λ = ( λ 1 , λ 2 , ⋯ , λ r ) T ，定义拉格朗日函数</p><p>G ( e , λ ) = F ( e ) + ∑ i = 1 r λ i ( b i T [ p &#175; i ( e i ) ] − 1 ) , (9)</p><p>则有</p><p>G ′ ( e , λ ) = [ F ′ ( e ) b 1 T [ p &#175; 1 ( e 1 ) ] − 1 b 2 T [ p &#175; 2 ( e 2 ) ] − 1 ⋮ b r T [ p &#175; r ( e r ) ] − 1 ] + [ λ 1 b 1 λ 2 b 2 ⋮ λ r b r 0 0 ⋮ 0 ] . (10)</p><p>由于 G ( e , λ ) 的Hession矩阵不包含变量 λ i ， 1 ≤ i ≤ r ，为了方便起见将 G ″ ( e , λ ) 写作 G ″ ( e ) ，显然，</p><p>G ″ ( e ) = [ b 1 F ″ ( e ) b 2 ⋱ b r b 1 T b 2 T ⋱ O r &#215; r b r T ] . (11)</p><p>注2：通过选择零向量作为初始值，数值部分采用数值牛顿迭代法</p><p>( e &#175; λ &#175; ) ← ( e &#175; λ &#175; ) − G ″ ( e &#175; ) − 1 G ′ ( e &#175; , λ &#175; ) (12)</p><p>计算非线性系统 G ′ ( e , λ ) = 0 的近似解 ( e &#175; , λ &#175; ) 。 &#168;</p></sec><sec id="s6_2"><title>4.2. 验证部分</title><p>验证部分分为两个阶段，第一阶段验证非线性系统 G ′ ( e , λ ) = 0 近似解的可信误差界，第二阶段验证优化问题(8)的稳定点是否为其局部最优解。</p><p>注 3：对于满足 e &#175; ∈ E ˜ 的区间向量 E ˜ ，使用区间运算和式(6) (7) (11)计算区间雅克比矩阵 G ″ ( E ˜ ) 。利用定理1和verifynlss函数计算区间向量 E ^ 和 Λ ^ ，其满足条件存在实向量 e ^ ∈ E ^ 和实向量 λ ^ ∈ Λ ^ ，使得 G ′ ( e ^ , λ ^ ) = 0 。 &#168;</p><p>对每个 1 ≤ i ≤ r ，令 s i 表示 e i 的维数，令 s = ∑ i = 1 r s i 。记 E = ( E 1 , E 2 , ⋯ , E r ) T ，其中 E i ∈ I ℝ s t 。向量 E i ， b i 和 e i 的最后一项分别用 E i , s ， b i , s 和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x148_hanspub.png" xlink:type="simple"/></inline-formula>表示，令<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x149_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x150_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x151_hanspub.png" xlink:type="simple"/></inline-formula>分别表示向量<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x152_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x153_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x154_hanspub.png" xlink:type="simple"/></inline-formula>删除最后一项所得的向量。</p><p>不失一般性，我们假设</p><disp-formula id="hanspub.37167-formula15"><graphic xlink:href="//html.hanspub.org/file/14-2621253x155_hanspub.png"  xlink:type="simple"/></disp-formula><p>对每一个<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x156_hanspub.png" xlink:type="simple"/></inline-formula>，存在一个关于变量<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x157_hanspub.png" xlink:type="simple"/></inline-formula>的线性函数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x158_hanspub.png" xlink:type="simple"/></inline-formula>，其满足条件</p><disp-formula id="hanspub.37167-formula16"><graphic xlink:href="//html.hanspub.org/file/14-2621253x159_hanspub.png"  xlink:type="simple"/></disp-formula><p>显然，</p><disp-formula id="hanspub.37167-formula17"><graphic xlink:href="//html.hanspub.org/file/14-2621253x160_hanspub.png"  xlink:type="simple"/></disp-formula><p>定义非线性函数</p><disp-formula id="hanspub.37167-formula18"><graphic xlink:href="//html.hanspub.org/file/14-2621253x161_hanspub.png"  xlink:type="simple"/></disp-formula><p>则有约束优化问题(8)可以转化为下面无约束优化问题</p><disp-formula id="hanspub.37167-formula19"><label>(13)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/14-2621253x162_hanspub.png"  xlink:type="simple"/></disp-formula><p>验证部分第二阶段使用isspd函数验证区间Hession矩阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x163_hanspub.png" xlink:type="simple"/></inline-formula>的正定性。当isspd函数返回值为1时，满足条件<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x164_hanspub.png" xlink:type="simple"/></inline-formula>的实向量<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x165_hanspub.png" xlink:type="simple"/></inline-formula>为问题(8)的局部最优解。</p></sec></sec><sec id="s7"><title>5. 主要算法</title><p>算法1</p><p>输入<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x166_hanspub.png" xlink:type="simple"/></inline-formula></p><p>输出<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x167_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x168_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x169_hanspub.png" xlink:type="simple"/></inline-formula>，或“Failure”。</p><p>步骤1 数值部分</p><p>步骤1.1 计算多项式f的因式分解流形结构<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x170_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>步骤1.2 计算系统(3)的近似解<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x171_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>步骤1.3 计算系统<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x172_hanspub.png" xlink:type="simple"/></inline-formula>的近似解<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x173_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步骤2 验证部分</p><p>步骤2.1 初始化<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x174_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x175_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x176_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x177_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>步骤2.2 当<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x178_hanspub.png" xlink:type="simple"/></inline-formula>进行以下操作：</p><p>令<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x179_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x180_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>计算<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x181_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>令<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x182_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>若<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x183_hanspub.png" xlink:type="simple"/></inline-formula>，则令</p><disp-formula id="hanspub.37167-formula20"><graphic xlink:href="//html.hanspub.org/file/14-2621253x184_hanspub.png"  xlink:type="simple"/></disp-formula><p>如果<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x185_hanspub.png" xlink:type="simple"/></inline-formula>，则返回“Failure”并停止。</p><p>步骤2.3 计算区间Hession阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x186_hanspub.png" xlink:type="simple"/></inline-formula>，若isspd<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x187_hanspub.png" xlink:type="simple"/></inline-formula>返回值为1，则输出<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x188_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x189_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x190_hanspub.png" xlink:type="simple"/></inline-formula>，否则，返回“Failure”。 &#168;</p><p>注4：在算法1中，给定实数x，则intval(x)输出区间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x191_hanspub.png" xlink:type="simple"/></inline-formula>。给定实数a，b，其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x192_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x193_hanspub.png" xlink:type="simple"/></inline-formula>输出实区间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x194_hanspub.png" xlink:type="simple"/></inline-formula>。给定<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x195_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x196_hanspub.png" xlink:type="simple"/></inline-formula>输出包含<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x197_hanspub.png" xlink:type="simple"/></inline-formula>和零向量的最小的区间向量。 &#168;</p><p>通过以上分析可以得到下述定理。</p><p>定理2：假设算法1成功输出因式分解流形结构<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x198_hanspub.png" xlink:type="simple"/></inline-formula>，系数向量<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x199_hanspub.png" xlink:type="simple"/></inline-formula>和摄动区间向量<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x200_hanspub.png" xlink:type="simple"/></inline-formula>，则存在一个实向量<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x201_hanspub.png" xlink:type="simple"/></inline-formula>，它是优化问题(8)的局部最优解。</p></sec><sec id="s8"><title>6. 算例</title><p>例1 考虑多项式<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x202_hanspub.png" xlink:type="simple"/></inline-formula>，其中多项式<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x203_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x204_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x205_hanspub.png" xlink:type="simple"/></inline-formula>。摄动多项式r与f的次数相同且r的系数是[−5, 5]上随机的一个数。应用算法1可得</p><disp-formula id="hanspub.37167-formula21"><graphic xlink:href="//html.hanspub.org/file/14-2621253x206_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.37167-formula22"><graphic xlink:href="//html.hanspub.org/file/14-2621253x207_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.37167-formula23"><graphic xlink:href="//html.hanspub.org/file/14-2621253x208_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.37167-formula24"><graphic xlink:href="//html.hanspub.org/file/14-2621253x209_hanspub.png"  xlink:type="simple"/></disp-formula><p>因此根据定理2，存在一个实向量<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x210_hanspub.png" xlink:type="simple"/></inline-formula>，它是优化问题(8)的局部最优解。</p><p>例2 [<xref ref-type="bibr" rid="hanspub.37167-ref14">14</xref>] 考虑多项式<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x211_hanspub.png" xlink:type="simple"/></inline-formula>，其中多项式<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x212_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x213_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x214_hanspub.png" xlink:type="simple"/></inline-formula>。应用算法1可得</p><disp-formula id="hanspub.37167-formula25"><graphic xlink:href="//html.hanspub.org/file/14-2621253x215_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.37167-formula26"><graphic xlink:href="//html.hanspub.org/file/14-2621253x216_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.37167-formula27"><graphic xlink:href="//html.hanspub.org/file/14-2621253x217_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.37167-formula28"><graphic xlink:href="//html.hanspub.org/file/14-2621253x218_hanspub.png"  xlink:type="simple"/></disp-formula><p>因此根据定理2，存在一个实向量<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x219_hanspub.png" xlink:type="simple"/></inline-formula>，它是优化问题(8)的局部最优解。</p><p>例3考虑单变量多项式<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x220_hanspub.png" xlink:type="simple"/></inline-formula>，其中多项式<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x221_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x222_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x223_hanspub.png" xlink:type="simple"/></inline-formula>。摄动多项式r与f的次数相同且r的系数是[−5, 5]上随机的一个数。应用算法1可得</p><disp-formula id="hanspub.37167-formula29"><graphic xlink:href="//html.hanspub.org/file/14-2621253x224_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.37167-formula30"><graphic xlink:href="//html.hanspub.org/file/14-2621253x225_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.37167-formula31"><graphic xlink:href="//html.hanspub.org/file/14-2621253x226_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.37167-formula32"><graphic xlink:href="//html.hanspub.org/file/14-2621253x227_hanspub.png"  xlink:type="simple"/></disp-formula><p>因此根据定理2，存在一个实向量<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-2621253x228_hanspub.png" xlink:type="simple"/></inline-formula>，它是优化问题(8)的局部最优解。</p></sec><sec id="s9"><title>基金项目</title><p>吉林省自然科学基金(批准号：11601039)。</p></sec><sec id="s10"><title>文章引用</title><p>严杰煜,李 喆. 多项式近似因式分解的可信验证The Verification of Approximate Polynomial Factorization[J]. 应用数学进展, 2020, 09(08): 1230-1238. https://doi.org/10.12677/AAM.2020.98144</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.37167-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Lenstra, A., Lenstra, H. and Lovasz, L. (1982) Factoring Polynomials with Rational Coefficients. Mathematische Annalen, 261, 515-534. &lt;br&gt;https://doi.org/10.1007/BF01457454</mixed-citation></ref><ref id="hanspub.37167-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Von zur Gathen, J. and Kaltofen, E. (1985) Factoring Sparse Multivariate Polynomials. Journal of Computer and System Sciences, 31, 265-287. &lt;br&gt;https://doi.org/10.1016/0022-0000(85)90044-3</mixed-citation></ref><ref id="hanspub.37167-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Kaltofen, E. (1985) Polynomial-Time Reductions from Multivariate to Bi- and Univariate Integral Polynomial Factorization. SIAM Journal on Computing, 14, 469-489. &lt;br&gt;https://doi.org/10.1137/0214035</mixed-citation></ref><ref id="hanspub.37167-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Lecerf, G. (2010) New Recombination Algorithms for Bivariate Polynomial Factorization Based on Hensel Lifting. Applicable Algebra in Engineering, Communication and Computing, 21, 151-176.  
&lt;br&gt;https://doi.org/10.1007/s00200-010-0121-5</mixed-citation></ref><ref id="hanspub.37167-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Gao, S. (2003) Factoring Multivariate Polynomials via Partial Differential Equations. Mathematics of Computation, 72, 801-822. &lt;br&gt;https://doi.org/10.1090/S0025-5718-02-01428-X</mixed-citation></ref><ref id="hanspub.37167-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Ruppert, W. (1999) Reducibility of Polynomials f(x, y) Modulo p. Journal of Number Theory, 77, 62-70.  
&lt;br&gt;https://doi.org/10.1006/jnth.1999.2381</mixed-citation></ref><ref id="hanspub.37167-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Sasaki, T. (2001) Approximate Multivariate Polynomial Factorization Based on Zero-Sum Relations. In: Proceedings of ISSAC 2001, ACM Press, New York, 284-291. &lt;br&gt;https://doi.org/10.1145/384101.384139</mixed-citation></ref><ref id="hanspub.37167-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Gao, S., Kaltofen, E., May, J., Yang, Z. and Zhi, L. (2004) Approximate Factorization of Multivariate Polynomials via Differential Equations. In: Proc. ISSAC’04, ACM Press, New York, 167-174.  
&lt;br&gt;https://doi.org/10.1145/1005285.1005311</mixed-citation></ref><ref id="hanspub.37167-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Kaltofen, E., May, J., Yang, Z. and Zhi, L. (2008) Approximate Factorization of Multivariate Polynomials Using Singular Value Decomposition. Journal of Symbolic Computation, 43, 359-376. &lt;br&gt;https://doi.org/10.1016/j.jsc.2007.11.005</mixed-citation></ref><ref id="hanspub.37167-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Corless, R., Giesbrecht, M., Van Hoeij, M., Kotsireas, I. and Watt, S. (2001) Towards Factoring Bivariate Approximate Polynomials. In: Proc. of ISSAC’01, ACM Press, New York, 85-92. &lt;br&gt;https://doi.org/10.1145/384101.384114</mixed-citation></ref><ref id="hanspub.37167-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Corless, R., Galligo, A., Kotsireas, I. and Watt, S. (2002) A Geometric-Numeric Algorithm for Absolute Factorization of Multivariate Polynomials. In: Proc. of ISSAC’02, ACM Press, New York, 37-45.  
&lt;br&gt;https://doi.org/10.1145/780506.780512</mixed-citation></ref><ref id="hanspub.37167-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Galligo, A. and Van Hoeij, M. (2007) Approximate Bivariate Factorization, a Geometric Viewpoint. In: Proceedings of SNC’07, ACM Press, New York, 1-10.</mixed-citation></ref><ref id="hanspub.37167-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Kahan, W. (1972) Conserving Confluence Curbs Ill-Condition. Technical Report, Computer Science Department, University of California, Berkeley.</mixed-citation></ref><ref id="hanspub.37167-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Wu, W.Y. and Zeng, Z.G. (2017) The Numerical Factorization of Polynomials. Foundations of Computational Mathematics, 17, 259-286. &lt;br&gt;https://doi.org/10.1007/s10208-015-9289-1</mixed-citation></ref><ref id="hanspub.37167-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Galligo, A. and Watt, S. (1997) A Numerical Absolute Primality Test for Bivariate Polynomials. In: Proceedings of ISSAC97, ACM Press, New York, 217-224. &lt;br&gt;https://doi.org/10.1145/258726.258788</mixed-citation></ref><ref id="hanspub.37167-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Rump, S.M. (1999) INTLAB-Interval Laboratory. Springer Netherlands, Berlin.  
&lt;br&gt;https://doi.org/10.1007/978-94-017-1247-7_7</mixed-citation></ref><ref id="hanspub.37167-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Rump, S.M. (1983) Solving Algebraic Problems with High Accuracy. In: Kulisch, W.L. and Miranker, W.L., Eds., A New Approach to Scientific Computation, Academic Press, San Diego, 51-120.  
&lt;br&gt;https://doi.org/10.1016/B978-0-12-428660-3.50010-0</mixed-citation></ref></ref-list></back></article>