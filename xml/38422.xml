<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">NST</journal-id><journal-title-group><journal-title>Nuclear Science and Technology</journal-title></journal-title-group><issn pub-type="epub">2332-7111</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/NST.2020.84026</article-id><article-id pub-id-type="publisher-id">NST-38422</article-id><article-categories><subj-group subj-group-type="heading"><subject>NST20200400000_38160111.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于BP神经网络的核临界安全数据实时计算方法
  Real-Time Calculation of Nuclear Critical Safety Data Based on BP Neural Network
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>端</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>韦</surname><given-names>子豪</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>航</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>济民</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>黄</surname><given-names>豌滢</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>中国原子能科学研究院，北京</addr-line></aff><aff id="aff2"><addr-line>核工业大学，北京</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>20</day><month>08</month><year>2020</year></pub-date><volume>08</volume><issue>04</issue><fpage>220</fpage><lpage>228</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    基于核燃料后处理工艺过程中的多体系统，建立高精度BP神经网络预测模型，可实现核临界安全参数keff的实时智能预测，辅助对工艺系统的运行状态及安全性能的进行快速评估。该方法利用MCNP模拟计算得到的多体系统的核临界安全原始数据集，通过机器学习(ML)的方法实现复杂体系的建模，能够克服多系统后处理工艺设备运行参数联动变化带来的实时定量评估困难。数值实验表明，预测系统的误差在1%以内，计算速度比MCNP模拟快2000倍以上，是ML等智能方法在核临界安全领域重要的探索，具有广阔的前景。
    Based on the multi-body system in the nuclear fuel reprocessing, a high-precision BP neural network prediction model is established. It can realize the real-time intelligent prediction of the nuclear critical safety parameter keff, and assist the rapid auxiliary evaluation of the operation status and safety performance of the process system. This method uses the original data set of nuclear criticality safety obtained by MCNP simulation, and realizes the modeling of complex system by machine learning (ML), which can overcome the difficulty of real-time quantitative evaluation caused by the linkage change of operation parameters of multi-system post-processing equipment. Numerical experiments show that the error of the prediction system is less than 1%, and the calculation speed is more than 2000 times faster than that of MCNP simulation. It is an important exploration of ML and other intelligent methods in the field of nuclear critical safety, and has broad prospects. 
  
 
</p></abstract><kwd-group><kwd>BP神经网络，线性插值，实时计算方法，核临界安全, BP Neural Network</kwd><kwd> Linear Interpolation</kwd><kwd> Real-Time Calculation Method</kwd><kwd> Nuclear Criticality Safety</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>基于核燃料后处理工艺过程中的多体系统，建立高精度BP神经网络预测模型，可实现核临界安全参数k<sub>eff</sub>的实时智能预测，辅助对工艺系统的运行状态及安全性能的进行快速评估。该方法利用MCNP模拟计算得到的多体系统的核临界安全原始数据集，通过机器学习(ML)的方法实现复杂体系的建模，能够克服多系统后处理工艺设备运行参数联动变化带来的实时定量评估困难。数值实验表明，预测系统的误差在1%以内，计算速度比MCNP模拟快2000倍以上，是ML等智能方法在核临界安全领域重要的探索，具有广阔的前景。</p></sec><sec id="s2"><title>关键词</title><p>BP神经网络，线性插值，实时计算方法，核临界安全</p></sec><sec id="s3"><title>Real-Time Calculation of Nuclear Critical Safety Data Based on BP Neural Network</title><p>Duan Wang<sup>1*</sup>, Zihao Wei<sup>2</sup>, Hang Li<sup>2#</sup>, Jimin Li<sup>1</sup>, Wanying Huang<sup>1</sup></p><p><sup>1</sup>Nuclear Industry University, Beijing</p><p><sup>2</sup>China Institute of Atomic Energy, Beijing</p><p><img src="//html.hanspub.org/file/9-3150182x5_hanspub.png" /></p><p>Received: Oct. 7<sup>th</sup>, 2020; accepted: Oct. 22<sup>nd</sup>, 2020; published: Oct. 29<sup>th</sup>, 2020</p><p><img src="//html.hanspub.org/file/9-3150182x6_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>Based on the multi-body system in the nuclear fuel reprocessing, a high-precision BP neural network prediction model is established. It can realize the real-time intelligent prediction of the nuclear critical safety parameter k<sub>eff</sub>, and assist the rapid auxiliary evaluation of the operation status and safety performance of the process system. This method uses the original data set of nuclear criticality safety obtained by MCNP simulation, and realizes the modeling of complex system by machine learning (ML), which can overcome the difficulty of real-time quantitative evaluation caused by the linkage change of operation parameters of multi-system post-processing equipment. Numerical experiments show that the error of the prediction system is less than 1%, and the calculation speed is more than 2000 times faster than that of MCNP simulation. It is an important exploration of ML and other intelligent methods in the field of nuclear critical safety, and has broad prospects.</p><p>Keywords:BP Neural Network, Linear Interpolation, Real-Time Calculation Method, Nuclear Criticality Safety</p><disp-formula id="hanspub.38422-formula88"><graphic xlink:href="//html.hanspub.org/file/9-3150182x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/9-3150182x8_hanspub.png" /> <img src="//html.hanspub.org/file/9-3150182x9_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>在后处理工艺过程中，单体设备常采用质量限制或几何限制等方法以确保核临界安全。当存在多个单体设备因实际需要组成多体时，因单体间中子扩散、慢化、反射等因素的影响，整个多体系统可能存在临界安全风险，因此，若能在多体系统运行时实时给出表征系统临界安全特性参数k<sub>eff</sub>值，则既可对工艺过程进行监督，又能对人员安全提供保障 [<xref ref-type="bibr" rid="hanspub.38422-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.38422-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.38422-ref3">3</xref>]。</p><p>在多体系统运行时，由于各系统间存在联系且运行时各参数动态变化，多体系统在考虑其临界安全问题时通常给出包络性计算结果，或给出若干关键危险状态点的中子有效增殖因数 [<xref ref-type="bibr" rid="hanspub.38422-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.38422-ref5">5</xref>]，针对系统运行时的实时临界安全状态无法定量评估，造成该问题的主要原因一方面在于系统参数的动态变化导致建立的系统模型不断改变，另一方面在于进行临界安全计算的软件(例如MCNP程序或MONK程序等)即使采用多核心并行计算方法，也无法同时兼顾计算结果准确性和计算的实时性 [<xref ref-type="bibr" rid="hanspub.38422-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.38422-ref7">7</xref>]。</p><p>为解决上述问题，通常对简单的多体系统采用数据拟合方法来粗略估计k<sub>eff</sub>值的变化，对于复杂的多体系统由于关键自变量参数繁多，使用常见的拟合方法难以给出自变量与k<sub>eff</sub>值之间明确的拟合公式，粗拟合后进行结果修正的方法也无法给出精确解。因此，基于已有的实验或计算数据，发展快速预测系统临界安全状态的数值计算技术，是获得实时k<sub>eff</sub>值的关键所在。利用BP神经网络进行拟合时，不需要再次建立几何模型，不需要拟合公式，只要通过训练得到合适的网络结构和参数，并且给出待分析多体系统的任意一组运行特性参数，即可实时得到相应的k<sub>eff</sub>预测值 [<xref ref-type="bibr" rid="hanspub.38422-ref8">8</xref>]。目前，采用神经网络算法对临界安全数据进行实时计算在国内属于首次探索，在国外文献中也还未见到该方面的应用，具有广阔的应用前景和价值。</p></sec><sec id="s6"><title>2. 物理模型与计算模型的建立</title><p>以后处理工艺中硝酸铀酰溶液系统为例，在同一工艺间中通常存在多个储液罐、络合罐等，各工艺罐中物料浓度、硝酸含量、硝酸铀酰溶液总质量等各不相同，其共同组成一个多体系统。因工艺参数、工艺流程的保密特性，现对该模型简化后如图1所示。</p><p>已知质量和成份的硝酸铀酰溶液储存于单体1中，随着工艺的进行，以设定效率E1和E2分别进入单体2和单体3中，在单体2中完成相应工艺后，以效率E3进入单体4中。在整个溶液系统运行时，单体1、2、3、4共同组成一个多体系统，各单体间存在中子交换和中子相互作用。</p><p>图1. 溶液系统模型图</p><p>因硝酸铀酰溶液供料参数的多变性，工艺动态变化的特性，单体1中硝酸铀酰溶液的质量和成份在一定范围内变化，工艺效率E1、E2、E3也随着工艺的进行发生变化，从而导致单体2、单体3和单体4中物料的成份及质量发生变化。若想得到任意时刻该多体系统有效中子增殖因数的准确值，除使用程序开展计算外别无它法。</p><p>建立基于神经网络的计算模型，不受物理模型复杂度的影响，可以快速计算任意时刻的k<sub>eff</sub>值：在预先给定的临界安全计算数据集的基础上，通过合理搭建和精细调参，确定神经网络模型；对于实时给出的任意一个临界安全状态，高精度、快速给出当前状态下对应的k<sub>eff</sub>值，对于判定系统临界安全裕量具有重要参考作用。</p></sec><sec id="s7"><title>3. BP神经网络原理</title><p>人工神经网络(简称神经网络)是基于生物学中神经网络的基本原理，以网络拓扑知识为理论基础，模拟人脑的神经系统对复杂信息的处理机制的一种数学模型 [<xref ref-type="bibr" rid="hanspub.38422-ref9">9</xref>] [<xref ref-type="bibr" rid="hanspub.38422-ref10">10</xref>]。神经网络通过网络的拓扑关系、权重、激励函数等网络参数的调节，实现非线性拟合功能，是确定性拟合的进阶，是不需要函数表达式的高级拟合技术。</p><p>典型的BP神经网络由输入层、输出层以及中间的隐含层构成，是一种误差反向传播网络。设输入层维度为n<sub>0</sub>，隐含层节点数为m，输出层节点数为n<sub>1</sub>，用l代表层数。第 l − 1 层第i个节点与下一层第j个节点的连接权值表示为 w j i ( l ) 。节点偏置表示为 b i ( l ) 。图2为n<sub>0</sub> = 3、n<sub>1</sub> = 2、m = 3、偏置为 1 &#215; b i ( l ) 的3层神经网络示意图。</p><p>图2. 神经网络结构、参数示意图</p><p>设有1个输入维度为N、输出维度为q、隐含层节点数为m的3层BP神经网络。对于输入层，输入等于输出。用 P h ( k ) 表示第k层的第h个节点的输入， O h ( k ) 表示相应的输出。 b ( 2 ) 、 b ( 3 ) 表示偏置， f ( ⋅ ) 代表激活函数。</p><p>对于隐含层的第j个节点有：</p><p>P j ( 2 ) = ∑ i = 1 N w i j ( 2 ) O i ( 1 ) + b j ( 2 ) (1)</p><p>O j ( 2 ) = f ( P j ( 2 ) ) (2)</p><p>对于输出层的第j个节点有：</p><p>P j ( 3 ) = ∑ i = 1 m w i j ( 3 ) O i ( 2 ) + b j ( 3 ) (3)</p><p>O j ( 3 ) = f ( P j ( 3 ) ) (4)</p><p>然后定义1个损失函数E：</p><p>E = ∑ i = 1 q ( d i − O i ( 3 ) ) 2 (5)</p><p>式中， d i 为输出层第i个节点期望输出。</p><p>BP神经网络的学习过程就是以降低损失函数E为目标，不断调整输入输出层的权值w，令期望输出和实际输出靠近的迭代过程。这是一个优化问题，通常采用梯度下降算法来优化权值。梯度下降算法用公式如下：</p><p>ω ( n + 1 ) = ω ( n ) − ε ⋅ ∂ E ∂ w (6)</p><p>上式中：n为迭代次数； ε 为学习率， ε 的取值对算法的收敛性和收敛速度有较大的影响。</p><p>根据“万能逼近定理”，只要给予网络足够数量的隐藏单元，BP神经网络能够以任意精度逼近任意复杂度的连续函数 [<xref ref-type="bibr" rid="hanspub.38422-ref11">11</xref>] [<xref ref-type="bibr" rid="hanspub.38422-ref12">12</xref>] [<xref ref-type="bibr" rid="hanspub.38422-ref13">13</xref>]。</p></sec><sec id="s8"><title>4. k<sub>eff</sub>参数预测</title><sec id="s8_1"><title>4.1. 原始数据获取</title><p>在一定条件下，通过分析目标系统(如硝酸铀酰溶液系统)的动态过程，得到影响系统k<sub>eff</sub>值(简称k值，下同)的关键特征X，它们存在 k = g ( X , t ) 关系，其中向量X为其他与时间无关的条件，如质量(Quality)、成份(Ingredient)、效率Ei( i , i = 1 , 2 , 3 , ⋯ )等，t为时间参数。</p><p>根据实际经验，某系统除了8个时间节点外，k值数据随时间呈线性变化规律，对于不在该时间点上的k可以通过线性插值得到。该系统的k值在这8个节点上只与5个关键参数 X = X ( Quality , Ingerdient , E 1 , E 2 , E 3 ) 有关。因此在固定时间点上，可简化关系为 k = g ( X ) 。在5个关键参数允许范围内均匀取样本点，利用MCNP程序分别计算8个时间节点(0分钟、1分钟、2分钟、5分钟、10分钟、50分钟、100分钟、150分钟)上的有效增殖系数k<sub>eff</sub>。</p><p>基于蒙特卡罗计算的原始数据，由于模型复杂、精度要求高，每个时间点分别生成2660组数据，计算时间在数十分钟到数小时。获得原始样本数据集T：</p><p>T = { ( X i , y i ) } m , X ∈ ℝ n (7)</p><p>其中，X<sub>i</sub> 表示输入向量，包含质量(Quality)、成份(Ingredient)、效率1 (Effect1)、效率2 (Effect2)、效率3 (Effect3)等5个维度的数据，y<sub>i</sub>为对应的k值，称(X<sub>i</sub>, y<sub>i</sub>)为一个样本，m代表数据集的样本总量，这里m = 2660，n代表了输入向量的维度，这里n = 5。</p></sec><sec id="s8_2"><title>4.2. 数据预处理</title><p>(一) 数据标准化</p><p>使用min-max标准化方法对包括输出在内的每一特征进行数据进行归一化：</p><p>x ′ = x − x min x max − x min (8)</p><p>使得同一特征的数据处在(0, 1)之间，图3展示了归一化后的数据集。由于输出进行了归一化，真实输出的计算公式：</p><p>x = x ′ ( x max − x min ) + x min (9)</p><p>由上式可知，计算真实输出需要获得样本的最小值、最大值与最小值的差。</p><p>图3. 归一化后的数据集</p><p>(二) 划分数据集：测试集与训练集</p><p>8个时刻各对应一个数据集，对每个数据集随机打乱顺序，然后按照3:7比例分割为测试集和训练集。利用训练集中的数据对神经网络进行训练，利用测试集中的数据来检验经过训练后神经网络的预测能力(精度)。</p></sec><sec id="s8_3"><title>4.3. BP网络的构建</title><p>基于样本数据，需通过不断的调节BP神经网络中包括隐藏层数量、隐藏层节点数量、激活函数、学习率、迭代次数等诸多参数，最终确定合适的网络结构。图4为BP人工神经网络拓扑结构图，该网络仅含一层隐藏层，输入层含5个节点，输出层为1个节点，隐藏层为128个节点。表1为神经网络的一些超参数设置，它们需要反复调试来确定，连同网络结构一起实现了网络的拟合性能。</p><p>8个节点对应的神经网络在结构上是一致的，但是样本数据集不同，最终得到的模型权值不同，性能也不同。</p><p>图4. BP神经网络拓扑图</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Other parameters of BP neural networ</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >隐藏层激活函数</th><th align="center" valign="middle" >输出层激活函数</th><th align="center" valign="middle" >优化函数</th><th align="center" valign="middle" >学习率</th><th align="center" valign="middle" >损失函数</th><th align="center" valign="middle" >批次大小</th><th align="center" valign="middle" >迭代次数</th></tr></thead><tr><td align="center" valign="middle" >Relu</td><td align="center" valign="middle" >Relu</td><td align="center" valign="middle" >Adam</td><td align="center" valign="middle" >0.001</td><td align="center" valign="middle" >MSE</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >310</td></tr></tbody></table></table-wrap><p>表1. BP神经网络的其他参数</p></sec><sec id="s8_4"><title>4.4. 神经网络训练结果分析</title><p>图5是8个时刻k值的神经网络模型训练过程中损失函数、平均相对误差随迭代次数的变化曲线。</p><p>图5. 神经网络训练中损失函数、误差函数的变化曲线</p><p>每个时间节点包括2个图，左图是损失函数随迭代次数的变化曲线，损失函数(loss)从迭代开始就急剧下降，直到100多代之后趋于平缓，缓慢下降直至300多代。实线为训练集上的损失值，虚线为测试集上的损失值，图中两者变化趋势基本相同，几乎重合在一起。右图是平均相对误差随迭代次数的变化曲线，实线为训练集上的误差，虚线为测试集上的误差，8个时刻的曲线略有不同，但是趋势相同。</p><p>表2统计了8个时刻模型的训练收敛时测试集的均方误差、平均误差和最大误差。8个模型的均方误差均在3 &#215; 10<sup>−5</sup>以内，平均误差在1%左右，最大误差不超过4%。无论是从数据拟合程度角度还是从工程实践角度，均满足要求。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Training results of 8 node-dat</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >网络(以节点时间标记)</th><th align="center" valign="middle" >均方误差</th><th align="center" valign="middle" >平均相对误差/%</th><th align="center" valign="middle" >最大误差/%</th></tr></thead><tr><td align="center" valign="middle" >0</td><td align="center" valign="middle" >2.97e-5</td><td align="center" valign="middle" >0.95</td><td align="center" valign="middle" >3.62</td></tr><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >3.30e-5</td><td align="center" valign="middle" >1.10</td><td align="center" valign="middle" >3.17</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >2.67e-5</td><td align="center" valign="middle" >1.00</td><td align="center" valign="middle" >2.77</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >2.52e-5</td><td align="center" valign="middle" >0.93</td><td align="center" valign="middle" >2.93</td></tr><tr><td align="center" valign="middle" >10</td><td align="center" valign="middle" >1.34e-5</td><td align="center" valign="middle" >0.69</td><td align="center" valign="middle" >2.10</td></tr><tr><td align="center" valign="middle" >50</td><td align="center" valign="middle" >8.33e-6</td><td align="center" valign="middle" >0.55</td><td align="center" valign="middle" >1.72</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >1.03e-5</td><td align="center" valign="middle" >0.62</td><td align="center" valign="middle" >1.69</td></tr><tr><td align="center" valign="middle" >150</td><td align="center" valign="middle" >8.72e-6</td><td align="center" valign="middle" >0.57</td><td align="center" valign="middle" >1.60</td></tr></tbody></table></table-wrap><p>表2. 8个节点数据的训练结果</p></sec></sec><sec id="s9"><title>5. k值随时间变化曲线的拟合</title><sec id="s9_1"><title>5.1. 不在8个时间点上的k<sub>eff</sub>参数预测</title><p>一旦给定质量(Quality)、成份(Ingredient)、效率1 (Effect1)、效率2 (Effect2)、效率3 (Effect3)这5个参量的值，根据已训练的BP神经网络模型，即可预测0 mins、1 mins、2 mins、5 mins、10 mins、50 mins、100 mins、150 mins等8个时刻点上k的值。对于处于这些时刻之间的时刻t，k值数据(k<sub>t</sub>)随时间呈线性变化，可利用其左右两个相邻时间节点上的值进行线性插值得到 [<xref ref-type="bibr" rid="hanspub.38422-ref14">14</xref>]，如式(10)：</p><p>k t = k i + 1 − k i + 1 − k i t i + 1 − t i ( t i + 1 − t ) , t i &lt; t &lt; t i + 1 (10)</p><p>其中， k i + 1 、 k i 为 t i + 1 、 t i 时刻的k<sub>eff</sub>值。</p><p>给定一组已知参数数据，转化为输入数据 X = ( 0.5 , 0.0 , 0.5 , 0.33333 , 1.0 ) (已归一化)，对应质量(Quality)、成份(Ingredient)、效率1 (Effect1)、效率2 (Effect2)、效率3 (Effect3) 5个参量的值。其蒙特卡罗模拟计算出8个时刻的k值如表3第2行(模拟结果)所示，作为真实值。利用8个训练好的神经网络预测出的结果，如表3中第3行(预测结果)所示，作为预测值。表3最后1行给出了每个时间节点中真实k值(模拟结果)与预测值(预测结果)之间的相对误差，该值在0到0.77%之间，预测结果精度很高，从图6 (“-o-”为真实值对应的曲线，“--x--”为拟合曲线)中可以看出两条曲线几乎完全重叠在一起。</p><p>图6. k值曲线的拟合</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Calculation result</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >时间</th><th align="center" valign="middle" >0</th><th align="center" valign="middle" >1</th><th align="center" valign="middle" >2</th><th align="center" valign="middle" >5</th><th align="center" valign="middle" >10</th><th align="center" valign="middle" >50</th><th align="center" valign="middle" >100</th><th align="center" valign="middle" >150</th></tr></thead><tr><td align="center" valign="middle" >模拟结果</td><td align="center" valign="middle" >0.7766</td><td align="center" valign="middle" >0.7536</td><td align="center" valign="middle" >0.7292</td><td align="center" valign="middle" >0.7009</td><td align="center" valign="middle" >0.6800</td><td align="center" valign="middle" >0.6542</td><td align="center" valign="middle" >0.6321</td><td align="center" valign="middle" >0.5965</td></tr><tr><td align="center" valign="middle" >预测结果</td><td align="center" valign="middle" >0.7706</td><td align="center" valign="middle" >0.7536</td><td align="center" valign="middle" >0.7281</td><td align="center" valign="middle" >0.7017</td><td align="center" valign="middle" >0.6803</td><td align="center" valign="middle" >0.6546</td><td align="center" valign="middle" >0.6327</td><td align="center" valign="middle" >0.5963</td></tr><tr><td align="center" valign="middle" >相对误差/%</td><td align="center" valign="middle" >0.77</td><td align="center" valign="middle" >0.0</td><td align="center" valign="middle" >0.15</td><td align="center" valign="middle" >0.11</td><td align="center" valign="middle" >0.04</td><td align="center" valign="middle" >0.06</td><td align="center" valign="middle" >0.09</td><td align="center" valign="middle" >0.03</td></tr></tbody></table></table-wrap><p>表3. 计算结果</p><p>值得指出的是，计算一个示例，蒙特卡罗模拟单机计算需要大约1小时时间才能获得结果，而基于上述网络的预测模型，只需要0.5~1.5秒，仅前者的4/10<sup>4</sup>左右，其计算速度发生本质的变化。对于复杂模型，蒙卡模拟的计算时间还会增加，而基于神经网络的预测模型则几乎不会变化。</p></sec><sec id="s9_2"><title>5.2. 误差评估</title><p>显然，节点外t时刻k值的误差与t<sub>i</sub><sub>+1</sub>、t<sub>i</sub>时刻的误差有直接关系，式(11)计算出其预测误差的上界：</p><p>e t = | k ′ t − k t | = 1 t i + 1 − t i | e i + 1 ( t − t i ) − e i ( t i + 1 − t ) | ≤ max ( e i + 1 , e i ) (11)</p><p>式(11)说明，只需保证节点上足够小的误差，整个拟合曲线的误差也会足够小。根据表2可知，在整个拟合曲线的任意一个时刻，BP神经网络预测的k值平均误差在1.1%以内。</p></sec></sec><sec id="s10"><title>6. 结论</title><p>利用多体系统的核安全临界的数据集或者其MCNP模拟数据集，通过数据预处理、搭建网络拓扑结构、调参、训练和测试等一系列过程，构建精度较高的BP神经网络模型，可以实现核临界安全k<sub>eff</sub>参数的实时智能预测。在一定条件下，神经网络预测模型对任意给定系统的质量、成分、效率1、效率2、效率3和时间等参数，不需要求解函数关系、推导物理模型，就可以快速准确预测出k<sub>eff</sub>参数的值，从而以该数据为基础对系统运行状态及安全性能进行实时评估。该方法不需要过多的专业知识，且可以毫无困难的推广至系统运行其他关键参数的实时预测，是非常具有前景的方法。</p></sec><sec id="s11"><title>文章引用</title><p>王 端,韦子豪,李 航,李济民,黄豌滢. 基于BP神经网络的核临界安全数据实时计算方法Real-Time Calculation of Nuclear Critical Safety Data Based on BP Neural Network[J]. 核科学与技术, 2020, 08(04): 220-228. https://doi.org/10.12677/NST.2020.84026</p></sec><sec id="s12"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.38422-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">中华人民共和国质量监督管检验检疫总局. GB15146.1-2008反应堆外易裂变材料的核临界安全第1部分: 核临界安全行政管理规定[S]. 北京: 中国国家标准化管理委员会, 2008.</mixed-citation></ref><ref id="hanspub.38422-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">中华人民共和国质量监督管检验检疫总局. GB15146.2-2008反应堆外易裂变材料的核临界安全第2部分: 易裂变材料操作、加工、处理的基本技术准则与次临界限值[S]. 北京: 中国国家标准化管理委员会, 2008.</mixed-citation></ref><ref id="hanspub.38422-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">中华人民共和国质量监督管检验检疫总局. GB15146.3-2008反应堆外易裂变材料的核临界安全第3部分: 易裂变材料贮存的核临界安全要求[S]. 北京: 中国国家标准化管理委员会, 2008.</mixed-citation></ref><ref id="hanspub.38422-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">廖映华, 云虹, 王春. 乏燃料后处理技术研究现状[J]. 四川化工, 2012(4): 18-21.</mixed-citation></ref><ref id="hanspub.38422-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">刘颖瑜, 骆志文, 刘振华. 乏燃料后处理溶解过程核临界安全初步分析[J]. 原子能科学技术, 2013, 47(8): 1375.</mixed-citation></ref><ref id="hanspub.38422-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">阮克强, 等. 核临界安全[M]. 北京: 原子能出版社, 2005.</mixed-citation></ref><ref id="hanspub.38422-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">日本原子能研究所. 核临界安全手册[M]. 李喆, 译. 北京: 原子能出版社, 2003.</mixed-citation></ref><ref id="hanspub.38422-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">盛仲飙, 同晓荣. BP神经网络在曲线拟合中的应用[J]. 科学技术与工程, 2011, 11(28): 6998-7000.</mixed-citation></ref><ref id="hanspub.38422-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Kohonen, T. (1988) An Introduction to Neural Computing. Neural Networks, 1, 3-16.  
&lt;br&gt;https://doi.org/10.1016/0893-6080(88)90020-2</mixed-citation></ref><ref id="hanspub.38422-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">王端, 华大平. 核科学中的运筹学[M]. 哈尔滨: 哈尔滨工程大学出版社, 2017.</mixed-citation></ref><ref id="hanspub.38422-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">周志华. 机器学习[M]. 北京: 清华大学出版社, 2016.</mixed-citation></ref><ref id="hanspub.38422-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Hornik, K. (1991) Approximation Capabilities of Multilayer Feedforward Networks. Neural Networks, 4, 251-257.  
&lt;br&gt;https://doi.org/10.1016/0893-6080(91)90009-T</mixed-citation></ref><ref id="hanspub.38422-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Yang, S., Ting, T.O., Man, K.L., et al. (2013) Investigation of Neural Networks for Function Approximation. First International Conference on Information Technology and Quantitative Management, 17, 586-594.  
&lt;br&gt;https://doi.org/10.1016/j.procs.2013.05.076</mixed-citation></ref><ref id="hanspub.38422-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">李庆扬, 王能超, 易大义. 数值分析[M]. 第5版. 北京: 清华大学出版社, 2008.</mixed-citation></ref></ref-list></back></article>