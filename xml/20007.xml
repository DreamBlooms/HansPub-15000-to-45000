<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2017.62020</article-id><article-id pub-id-type="publisher-id">AAM-20007</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20170200000_63961507.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  算子分裂有限元方法求解二维Burgers方程
  The Operator Splitting Finite Element Method for Two-Dimensional Burgers Equation
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>魏</surname><given-names>云云</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>史</surname><given-names>峰</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>引娣</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>西安交通大学数学与统计学院，陕西 西安</addr-line></aff><aff id="aff1"><addr-line>广东理工学院基础部，广东 肇庆；长安大学理学院，陕西 西安</addr-line></aff><aff id="aff4"><addr-line>长安大学理学院，陕西 西安；西安交通大学数学与统计学院，陕西 西安</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>939533015@qq.com(魏云)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>21</day><month>03</month><year>2017</year></pub-date><volume>06</volume><issue>02</issue><fpage>174</fpage><lpage>182</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  本文提出了一种求解Burgers方程新的算子分裂有限元方法。该算法采用算子分裂法将Burgers方程分解成纯对流部分和扩散部分：对流方程时间离散采取中心差分格式，空间的离散采用标准的Galerkin有限元法；扩散子方程的时间离散采取向后差分格式，空间的离散仍采用标准的Galerkin有限元法。该方法特点是对流部分特殊的显式处理，对其使用多步法技术从根本上扩大稳定性区域，而且多步格式在选择适当步数的条件下可以呈现出无条件稳定。通过数值实验验证了该算法单步和多步格式的稳定性和收敛性，并对其进行了误差估计。
   This paper proposes a new operator splitting finite element method for two-dimensional Burgers equation. The new method is used to decompose the Burgers equation into pure convection and diffusion part: the time discretization of the convection equation solved by the central difference scheme, and the space discretization by the standard Galerkin finite element method; the time discretization of the diffusion equation solved by the backward difference scheme, and the space discretization still using the standard Galerkin finite element method. The characteristic of this method is that the convection part is specially processed, using multi-step technology to expand the stability of the region and selecting the appropriate number of steps, the multi-step scheme can present unconditionally stable. The stability and convergence of the algorithm are verified by numerical experiments.
 
</p></abstract><kwd-group><kwd>算子分裂法，Burgers方程，有限元法，多步法, Operator Splitting Method</kwd><kwd> Burgers Equation</kwd><kwd> Finite Elements</kwd><kwd> Multistep Scheme</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>算子分裂有限元方法求解二维Burgers方程<sup> </sup></title><p>魏云云<sup>1,2</sup>，史 峰<sup>3</sup>，张引娣<sup>2,3</sup></p><p><sup>1</sup>广东理工学院基础部，广东 肇庆</p><p><sup>2</sup>长安大学理学院，陕西 西安</p><p><sup>3</sup>西安交通大学数学与统计学院，陕西 西安</p><p>收稿日期：2017年3月8日；录用日期：2017年3月25日；发布日期：2017年3月28日</p><disp-formula id="hanspub.20007-formula164"><graphic xlink:href="http://html.hanspub.org/file/9-2620371x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文提出了一种求解Burgers方程新的算子分裂有限元方法。该算法采用算子分裂法将Burgers方程分解成纯对流部分和扩散部分：对流方程时间离散采取中心差分格式，空间的离散采用标准的Galerkin有限元法；扩散子方程的时间离散采取向后差分格式，空间的离散仍采用标准的Galerkin有限元法。该方法特点是对流部分特殊的显式处理，对其使用多步法技术从根本上扩大稳定性区域，而且多步格式在选择适当步数的条件下可以呈现出无条件稳定。通过数值实验验证了该算法单步和多步格式的稳定性和收敛性，并对其进行了误差估计。</p><p>关键词 :算子分裂法，Burgers方程，有限元法，多步法</p><disp-formula id="hanspub.20007-formula165"><graphic xlink:href="http://html.hanspub.org/file/9-2620371x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2017 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="http://image.hanspub.org:8080\Html/htmlimages\1-2890033x\e70a10f1-7c93-45ea-9603-062237856e4b.png" /><img src="http://image.hanspub.org:8080\Html\htmlimages\1-2890033x\e898c85e-ffc4-45c9-b817-14224a4d6960.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>Burgers方程是流体力学中一个非常重要和基本的非线性偏微分方程，广泛的应用于空气、动力学、湍流、热传导、交通流、半导体迷你以及地下水污染等领域；同时Burgers方程可以作为流体动力学中Navier-Stokes方程的简化模型方程，又可以作为浅水波等问题的数学模型。因此讨论这类方程的数值解法，具有重要的理论和现实意义。</p><p>求解Burgers方程的数值方法主要有有限差分法、有限体积法、有限元法 [<xref ref-type="bibr" rid="hanspub.20007-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.20007-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.20007-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.20007-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.20007-ref5">5</xref>] 。其中，有限元法由于适合处理复杂几何形状和边界条件而成为计算力学中的优选方法，目前已经发展了多种有限元数值计算方法。标准的Galerkin有限元法实质上采用的是中心差分格式，随着对流项越来越强，呈现强的非线性特性，从而引起数值解的振荡失真。Petrov-Galerkin法(P-G法) [<xref ref-type="bibr" rid="hanspub.20007-ref6">6</xref>] 通过将权函数取为基函数的某种修正形式使计算格式具有人工耗散能力，提高了解的精度，随后发展了多种迎风方法，如流线迎风Petrov-Galerkin法等。上述各方法都包含一个对原Galerkin法的耗散修正项，产生了一个包括二阶空间导数的附加项。Taylor-Galerkin [<xref ref-type="bibr" rid="hanspub.20007-ref7">7</xref>] 有限元法(T-G法)时间方向上的Taylor展开先于空间上的Galerkin离散，相比P-G法不需要使用特殊的权函数，也无需确定人工耗散自由参数来达到高精度。基于特征线的分裂算法(CBS法) [<xref ref-type="bibr" rid="hanspub.20007-ref8">8</xref>] 是结合分裂算法与特征线Galerkin法的一种比较新的算法，在流体和固体动力学问题中得到了广泛的研究。</p><p>算子分裂法 [<xref ref-type="bibr" rid="hanspub.20007-ref9">9</xref>] [<xref ref-type="bibr" rid="hanspub.20007-ref10">10</xref>] [<xref ref-type="bibr" rid="hanspub.20007-ref11">11</xref>] 是Yanenko在1971年提出的经典分裂法，该算法具有格式灵活、稳定性好等特点。曹志先 [<xref ref-type="bibr" rid="hanspub.20007-ref12">12</xref>] 等用算子分裂法求解了Burgers方程，用显式差分格式处理扩散算子，用特征线法处理纯对流算子，并分析了该算法的稳定性条件，还对一、二维Burgers方程进行数值解，所得结果与分析解或已有数值解吻合。</p><p>本文在文献 [<xref ref-type="bibr" rid="hanspub.20007-ref13">13</xref>] 的基础上，采用基于算子分裂的有限元方法求解二维非定常粘性的Burgers方程，在每个时间层上应用算子分裂技术将Burgers方程分裂成纯对流子方程和扩散子方程，这样可以避免两种不同性质的物理过程在一起求解时计算的困难。对流方程时间离散采取中心差分格式，空间的离散采用标准的Galerkin有限元法，将其结果作为求解扩散子方程的初始值。扩散子方程的时间离散采取向后差分格式，空间的离散仍采用标准的Galerkin有限元法。该方法的另一个创新之处在于对流部分特殊的显式处理，使得在一个步长的扩散修正过程中，对流部分以局部较小的时间步长执行有限次数，这样可以从根本上提高计算格式的稳定性。数值模拟验证了该算法单步和多步格式的稳定性和收敛性。</p></sec><sec id="s4"><title>2. 计算方法</title><p>本文主要涉及的是二维粘性Burgers方程：</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x9_hanspub.png" xlink:type="simple"/></inline-formula>in <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x10_hanspub.png" xlink:type="simple"/></inline-formula></p><p>具有的边界条件和初始条件分别为：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x11_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x12_hanspub.png" xlink:type="simple"/></inline-formula> in<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x13_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p>这里的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x14_hanspub.png" xlink:type="simple"/></inline-formula>表示粘性系数。</p><p>在这部分我们将推导出一种新的分裂法求解二维粘性的Burgers方程。首先介绍一些符号：剖分时间区间<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x15_hanspub.png" xlink:type="simple"/></inline-formula>：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x16_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x17_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x18_hanspub.png" xlink:type="simple"/></inline-formula>；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x19_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x20_hanspub.png" xlink:type="simple"/></inline-formula>分别代表近似解<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x21_hanspub.png" xlink:type="simple"/></inline-formula>在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x22_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x23_hanspub.png" xlink:type="simple"/></inline-formula>处的值，但是当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x24_hanspub.png" xlink:type="simple"/></inline-formula>给定时，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x25_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x26_hanspub.png" xlink:type="simple"/></inline-formula>将表示精确解在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x27_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x28_hanspub.png" xlink:type="simple"/></inline-formula>处的值；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x29_hanspub.png" xlink:type="simple"/></inline-formula>类似于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x30_hanspub.png" xlink:type="simple"/></inline-formula>。</p><sec id="s4_1"><title>2.1. 单步格式</title><p>首先采用标准算子分裂技术将对流扩散方程分裂成一个纯对流子方程和一个扩散子方程，在时间推进方面分别用中心差分格式和向后的欧拉格式近似这两个方程，得到：</p><disp-formula id="hanspub.20007-formula166"><label>, (1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/9-2620371x31_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x32_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x33_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x34_hanspub.png" xlink:type="simple"/></inline-formula>； (2)</p><p>我们使用有限元方法分别求解方程(1)(2)的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x35_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x36_hanspub.png" xlink:type="simple"/></inline-formula>，因此需要两个方程的变分形式。直接可以得到方程(2)的变分形式即：找到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x37_hanspub.png" xlink:type="simple"/></inline-formula>使得在边界<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x38_hanspub.png" xlink:type="simple"/></inline-formula>有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x39_hanspub.png" xlink:type="simple"/></inline-formula>，并且求解</p><disp-formula id="hanspub.20007-formula167"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/9-2620371x40_hanspub.png"  xlink:type="simple"/></disp-formula><p>方程(1)的求解比较复杂，因为该格式是隐式还涉及了一个线性化对流方程的解的问题。求解的主要思想还是找到一个显式的格式去计算这个线性化的对流方程。在此我们应用泰勒展开式去计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x41_hanspub.png" xlink:type="simple"/></inline-formula>即：</p><disp-formula id="hanspub.20007-formula168"><graphic xlink:href="http://html.hanspub.org/file/9-2620371x42_hanspub.png"  xlink:type="simple"/></disp-formula><p>再使用对流子方程：</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x43_hanspub.png" xlink:type="simple"/></inline-formula>,</p><p>可以得到：</p><disp-formula id="hanspub.20007-formula169"><graphic xlink:href="http://html.hanspub.org/file/9-2620371x44_hanspub.png"  xlink:type="simple"/></disp-formula><p>利用上述的关系式，方程(1)可以改写为：</p><disp-formula id="hanspub.20007-formula170"><label>(4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/9-2620371x45_hanspub.png"  xlink:type="simple"/></disp-formula><p>注意到方程(1)是一个纯对流方程，仅需要设置来流方向<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x46_hanspub.png" xlink:type="simple"/></inline-formula>的边界条件。</p><p>给方程(4)两边乘以一个测试函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x47_hanspub.png" xlink:type="simple"/></inline-formula>，并且在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x48_hanspub.png" xlink:type="simple"/></inline-formula>上积分，使用分部积分可以得到：</p><disp-formula id="hanspub.20007-formula171"><graphic xlink:href="http://html.hanspub.org/file/9-2620371x49_hanspub.png"  xlink:type="simple"/></disp-formula><p>现在我们利用一些有限元方法转向空间的离散。假设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x50_hanspub.png" xlink:type="simple"/></inline-formula>是近似Sobolev空间<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x51_hanspub.png" xlink:type="simple"/></inline-formula>有限元空间，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x52_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x53_hanspub.png" xlink:type="simple"/></inline-formula>到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x54_hanspub.png" xlink:type="simple"/></inline-formula>的算子插值。基于变分形式(3) (5)，下面提出求解二维粘性Burgers方程的单步算法。</p><p>单步算法：</p><p>1) 计算初始值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x55_hanspub.png" xlink:type="simple"/></inline-formula>，对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x56_hanspub.png" xlink:type="simple"/></inline-formula></p><p>2) 找到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x57_hanspub.png" xlink:type="simple"/></inline-formula>使得在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x58_hanspub.png" xlink:type="simple"/></inline-formula>满足<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x59_hanspub.png" xlink:type="simple"/></inline-formula>，并且求解</p><disp-formula id="hanspub.20007-formula172"><graphic xlink:href="http://html.hanspub.org/file/9-2620371x60_hanspub.png"  xlink:type="simple"/></disp-formula><p>3) 找到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x61_hanspub.png" xlink:type="simple"/></inline-formula>使得在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x62_hanspub.png" xlink:type="simple"/></inline-formula>满足<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x63_hanspub.png" xlink:type="simple"/></inline-formula>，并且求解</p><disp-formula id="hanspub.20007-formula173"><graphic xlink:href="http://html.hanspub.org/file/9-2620371x64_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s4_2"><title>2.2. 多步算法</title><p>由于单步格式显示的求解二维粘性Burgers方程的单步算法，其稳定性不够好，为了提高算法的稳定性，我们可以采用在每一步对扩散方程的修正过程中，多次的执行对流步，以至于在对流部分可以使用更小的时间步长。为此我们将步骤2的结果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x65_hanspub.png" xlink:type="simple"/></inline-formula>写成如下的形式：</p><disp-formula id="hanspub.20007-formula174"><label>(6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/9-2620371x66_hanspub.png"  xlink:type="simple"/></disp-formula><p>为了得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x67_hanspub.png" xlink:type="simple"/></inline-formula>，多步格式以较小的时间步长<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x68_hanspub.png" xlink:type="simple"/></inline-formula>运行对流步<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x69_hanspub.png" xlink:type="simple"/></inline-formula>次，即我们要计算：</p><disp-formula id="hanspub.20007-formula175"><label>(7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/9-2620371x70_hanspub.png"  xlink:type="simple"/></disp-formula><p>我们分别称<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x71_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x72_hanspub.png" xlink:type="simple"/></inline-formula>为局部时间步长和全局时间步长。利用多步迭代(7)代替步骤2，可以得到下面的多步格式。</p><p>多步算法：</p><p>1) 计算初始值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x73_hanspub.png" xlink:type="simple"/></inline-formula>，对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x74_hanspub.png" xlink:type="simple"/></inline-formula></p><p>2) 设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x75_hanspub.png" xlink:type="simple"/></inline-formula>，并计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x76_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x77_hanspub.png" xlink:type="simple"/></inline-formula>，使得在边界<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x78_hanspub.png" xlink:type="simple"/></inline-formula>有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x79_hanspub.png" xlink:type="simple"/></inline-formula>，对所有的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x80_hanspub.png" xlink:type="simple"/></inline-formula>求解下面的方程：</p><disp-formula id="hanspub.20007-formula176"><graphic xlink:href="http://html.hanspub.org/file/9-2620371x81_hanspub.png"  xlink:type="simple"/></disp-formula><p>3) 找到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x82_hanspub.png" xlink:type="simple"/></inline-formula>使得在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x83_hanspub.png" xlink:type="simple"/></inline-formula>满足<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x84_hanspub.png" xlink:type="simple"/></inline-formula>，并且求解</p><disp-formula id="hanspub.20007-formula177"><graphic xlink:href="http://html.hanspub.org/file/9-2620371x85_hanspub.png"  xlink:type="simple"/></disp-formula></sec></sec><sec id="s5"><title>3. 数值算例</title><p>例1 方程系数和区域如下所示：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x86_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x87_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x88_hanspub.png" xlink:type="simple"/></inline-formula>，边界条件<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x89_hanspub.png" xlink:type="simple"/></inline-formula>，精确解为：</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x90_hanspub.png" xlink:type="simple"/></inline-formula>.</p><p>现在我们应用上述的算法求解算例1，确定其在时间和空间方面的收敛精度。空间步长为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x91_hanspub.png" xlink:type="simple"/></inline-formula>的均匀网格，表1显示了在时间方面的收敛精度。表2给出了在固定的时间步长<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x92_hanspub.png" xlink:type="simple"/></inline-formula>，单步算法在空间方面的收敛精度。从表中我们可以清晰的看到单步算法在时间方面是一阶收敛精度，而在空间有二阶的收敛精度。在此说明，本节所示的所有误差是L<sup>2</sup>范数在终端时刻<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x93_hanspub.png" xlink:type="simple"/></inline-formula>的误差，除非另有说明。</p><p>从表1中可以看到，当取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x94_hanspub.png" xlink:type="simple"/></inline-formula>时，这对保持包含在对流步的显示时间推进的稳定性是很大的时间步长，但只运用单步算法我们就得到收敛的计算结果，其结果如图1所示。同理，在表2中确定了该算例在空间方面的收敛精度，在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x95_hanspub.png" xlink:type="simple"/></inline-formula>取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x96_hanspub.png" xlink:type="simple"/></inline-formula>时网格的剖分是很粗的，但是运用上述的单步算法计算结果是收敛的，如图2所示。上述表中的计算的收敛结果说明了单步算法的可行性和实用性。</p><p>例2 方程参数如下所示：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x97_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x98_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x99_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x100_hanspub.png" xlink:type="simple"/></inline-formula>，边界条件<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x101_hanspub.png" xlink:type="simple"/></inline-formula>，精确解有如下的形式：</p><disp-formula id="hanspub.20007-formula178"><graphic xlink:href="http://html.hanspub.org/file/9-2620371x102_hanspub.png"  xlink:type="simple"/></disp-formula><p>为了确定在空间方面单步格式的实际收敛阶，我们选择了很小的时间步长，观察当空间步长减半的情况下误差的变化。表3显示了当时间步长固定，数值算例在不同网格大小的L<sup>2</sup>的误差，可以清楚的看到单步格式在空间是二阶收敛精度。</p><p>现在我们取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x103_hanspub.png" xlink:type="simple"/></inline-formula>的均匀网格，在如下的时间步长序列运行单步格式，寻找数值格式的稳定区域。数值结果如表4所示，可以观察到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x104_hanspub.png" xlink:type="simple"/></inline-formula>时单步算法是不收敛的，而且虽然<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x105_hanspub.png" xlink:type="simple"/></inline-formula>时算法收敛，但计算结果有很大的振荡。因此要得到满意的计算结果，必须采用合适的较小的时间步长。限制这样时间步长是自然的，因为这是我们使用的显示时间推进的稳定性条件所要求的。在下面的部分，可以看到多步格式可以从根本上提高稳定性条件。</p><p>从上面可以看到，单步格式可以得到期望的收敛性，而且当它收敛时可以保持精确的收敛精度。然</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Error estimation and convergence order of single method wit</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x108_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x109_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" >order</th></tr></thead><tr><td align="center" valign="middle" >0.1</td><td align="center" valign="middle" >0.318725</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >0.1/2</td><td align="center" valign="middle" >0.147547</td><td align="center" valign="middle" >1.1112</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>2 </sup></td><td align="center" valign="middle" >0.070784</td><td align="center" valign="middle" >1.0597</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>3 </sup></td><td align="center" valign="middle" >0.034646</td><td align="center" valign="middle" >1.0308</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>4 </sup></td><td align="center" valign="middle" >0.017137</td><td align="center" valign="middle" >1.0156</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>5</sup></td><td align="center" valign="middle" >0.0085221</td><td align="center" valign="middle" >1.0078</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>6 </sup></td><td align="center" valign="middle" >0.00424952</td><td align="center" valign="middle" >1.0039</td></tr></tbody></table></table-wrap><p>表1. 取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x107_hanspub.png" xlink:type="simple"/></inline-formula>，单步法计算的误差估计及其收敛阶</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Error estimation and convergence order of single method wit</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x112_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x113_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" >order</th></tr></thead><tr><td align="center" valign="middle" >1/4</td><td align="center" valign="middle" >0.041588</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >1/8</td><td align="center" valign="middle" >0.00897586</td><td align="center" valign="middle" >2.2120</td></tr><tr><td align="center" valign="middle" >1/16</td><td align="center" valign="middle" >0.00203951</td><td align="center" valign="middle" >2.1378</td></tr><tr><td align="center" valign="middle" >1/32</td><td align="center" valign="middle" >0.000483367</td><td align="center" valign="middle" >2.0770</td></tr><tr><td align="center" valign="middle" >1/64</td><td align="center" valign="middle" >0.000123786</td><td align="center" valign="middle" >1.9652</td></tr></tbody></table></table-wrap><p>表2. 取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x111_hanspub.png" xlink:type="simple"/></inline-formula>，单步法计算的误差估计及其收敛阶</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Error estimation and convergence order of single method wit</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x116_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x117_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" >order</th></tr></thead><tr><td align="center" valign="middle" >1/4</td><td align="center" valign="middle" >0.362638</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >1/8</td><td align="center" valign="middle" >0.0817792</td><td align="center" valign="middle" >2.1487</td></tr><tr><td align="center" valign="middle" >1/16</td><td align="center" valign="middle" >0.0196814</td><td align="center" valign="middle" >2.0549</td></tr><tr><td align="center" valign="middle" >1/32</td><td align="center" valign="middle" >0.00493634</td><td align="center" valign="middle" >1.9953</td></tr><tr><td align="center" valign="middle" >1/64</td><td align="center" valign="middle" >0.00123852</td><td align="center" valign="middle" >1.9948</td></tr><tr><td align="center" valign="middle" >1/128</td><td align="center" valign="middle" >0.000312747</td><td align="center" valign="middle" >1.9855</td></tr></tbody></table></table-wrap><p>表3. 取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x115_hanspub.png" xlink:type="simple"/></inline-formula>，单步法计算的误差估计及其收敛阶</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Error estimation and convergence order of single method wit</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x120_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x121_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" >order</th></tr></thead><tr><td align="center" valign="middle" >0.1</td><td align="center" valign="middle" >1.11024e+35</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >0.1/2</td><td align="center" valign="middle" >0.121862</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>2 </sup></td><td align="center" valign="middle" >0.0455624</td><td align="center" valign="middle" >1.4193</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>3 </sup></td><td align="center" valign="middle" >0.0223644</td><td align="center" valign="middle" >1.0267</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>4 </sup></td><td align="center" valign="middle" >0.0111191</td><td align="center" valign="middle" >1.0081</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>5 </sup></td><td align="center" valign="middle" >0.00556048</td><td align="center" valign="middle" >0.9998</td></tr></tbody></table></table-wrap><p>表4. 取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x119_hanspub.png" xlink:type="simple"/></inline-formula>，单步法计算的误差估计及其收敛阶</p><p>图1.<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x125_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x126_hanspub.png" xlink:type="simple"/></inline-formula></p><p>图2.<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x130_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x131_hanspub.png" xlink:type="simple"/></inline-formula></p><p>而，这个格式要求合适的较小的时间步长，限制了其在实际应用。多步格式的提出是为了提高单步格式的稳定性，下面是多步格式提高算法稳定性的测试。</p><p>在下面的数值实验中，对确定的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x132_hanspub.png" xlink:type="simple"/></inline-formula>，取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x133_hanspub.png" xlink:type="simple"/></inline-formula>为多步数，运行多步格式直到观察算法收敛并记录相关的多步数。表5显示了计算的数值结果，从表中可以看到，当我们取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x134_hanspub.png" xlink:type="simple"/></inline-formula>时，这对保持对流步的显示时间推进的稳定性是很大的时间步长，但是在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x135_hanspub.png" xlink:type="simple"/></inline-formula>我们仍然得到多步格式的计算结果是收敛的。计算结果已表明对于给定的单步格式可<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x136_hanspub.png" xlink:type="simple"/></inline-formula>能不收敛，但当取多步数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x137_hanspub.png" xlink:type="simple"/></inline-formula>合适的大，多步格式计算的结果总是收敛的。因此我们可以总结到，如果给定一个合适的大的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x138_hanspub.png" xlink:type="simple"/></inline-formula>，多步格式可以被认为是无条件稳定的格式。</p><p>我们也计算了在固定的步数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x139_hanspub.png" xlink:type="simple"/></inline-formula>和空间步长<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x140_hanspub.png" xlink:type="simple"/></inline-formula>下，多步格式的收敛精度，计算结果如表6所示。将表6结果与利用单步格式计算的表4对比，可以清晰的观察到数值算例收敛的时间序列，多步法的计算结果明显优于单步格式的结果，图3所示了取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x141_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x142_hanspub.png" xlink:type="simple"/></inline-formula>的条件下，单步和多步算法数值结果的比较。</p><table-wrap id="table5" ><label><xref ref-type="table" rid="table5">Table 5</xref></label><caption><title> Numerical results of multistep method wit</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x145_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x146_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x147_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" >order</th></tr></thead><tr><td align="center" valign="middle" >0.1/2<sup>5</sup></td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0.00557061</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>4</sup></td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >0.0111357</td><td align="center" valign="middle" >0.9993</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>3</sup></td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >0.022311</td><td align="center" valign="middle" >1.0026</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>2</sup></td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >0.044746</td><td align="center" valign="middle" >1.0040</td></tr><tr><td align="center" valign="middle" >0.1/2</td><td align="center" valign="middle" >32</td><td align="center" valign="middle" >0.0897277</td><td align="center" valign="middle" >1.0038</td></tr><tr><td align="center" valign="middle" >0.1</td><td align="center" valign="middle" >64</td><td align="center" valign="middle" >0.179769</td><td align="center" valign="middle" >1.0025</td></tr><tr><td align="center" valign="middle" >0.2</td><td align="center" valign="middle" >128</td><td align="center" valign="middle" >0.361168</td><td align="center" valign="middle" >1.0065</td></tr></tbody></table></table-wrap><p>表5. 取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x144_hanspub.png" xlink:type="simple"/></inline-formula>，多步法的计算的数值结果</p><table-wrap id="table6" ><label><xref ref-type="table" rid="table6">Table 6</xref></label><caption><title> Numerical results of multistep method with an</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x152_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x153_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" >order</th></tr></thead><tr><td align="center" valign="middle" >0.1</td><td align="center" valign="middle" >0.179769</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >0.1/2</td><td align="center" valign="middle" >0.0897229</td><td align="center" valign="middle" >1.0026</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>2 </sup></td><td align="center" valign="middle" >0.0447486</td><td align="center" valign="middle" >1.0036</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>3 </sup></td><td align="center" valign="middle" >0.0223207</td><td align="center" valign="middle" >1.0035</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>4 </sup></td><td align="center" valign="middle" >0.0111494</td><td align="center" valign="middle" >1.0014</td></tr><tr><td align="center" valign="middle" >0.1/2<sup>5 </sup></td><td align="center" valign="middle" >0.00558507</td><td align="center" valign="middle" >0.9973</td></tr></tbody></table></table-wrap><p>表6. 取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x150_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x151_hanspub.png" xlink:type="simple"/></inline-formula>，多步法的计算结果</p><p>图3. 取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x160_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x161_hanspub.png" xlink:type="simple"/></inline-formula>，左边<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x162_hanspub.png" xlink:type="simple"/></inline-formula>右边<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620371x163_hanspub.png" xlink:type="simple"/></inline-formula></p></sec><sec id="s6"><title>4. 结论</title><p>本文探讨了一种新的算子分裂算法求解二维粘性Burgers方程。在每一步迭代过程中，先后求解一个纯对流和一个纯扩散的问题。提出了对流问题时间推进的显示格式，但时间推进的显示化可能会引起对时间步长严格的限制，因此提出了在较小的时间步长下显示的多步格式以至于这个方法的结果表现的像无条件稳定的方法。扩散问题在每一步迭代过程中总是自伴的和强制的，以便使用许多存在的最优预条件的迭代求解器可以有效的解决它。通过数值算例呈现了新格式单步和多步方法求解的稳定性、收敛性，以及已经验证了其最优的收敛阶。</p></sec><sec id="s7"><title>文章引用</title><p>魏云云,史峰,张引娣. 算子分裂有限元方法求解二维Burgers方程 The Operator Splitting Finite Element Method for Two-Dimensional Burgers Equation[J]. 应用数学进展, 2017, 06(02): 174-182. http://dx.doi.org/10.12677/AAM.2017.62020</p></sec><sec id="s8"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.20007-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">章本照, 印建安, 张宏基. 流体力学数值方法[M]. 北京: 机械工业出版社, 2003.</mixed-citation></ref><ref id="hanspub.20007-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">李荣华, 刘播. 偏微分方程数值解法[M]. 北京: 高等教育出版社, 2009.</mixed-citation></ref><ref id="hanspub.20007-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Quarteroni, A. and Valli, A. (1997) Numerical Approximation of Partial Differential Equations. Springer-Verlag, Berlin, 1997.</mixed-citation></ref><ref id="hanspub.20007-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Donea, J. and Huerta, A. (2003) Finite Element Methods for Flow Problems. Wiley, New York.  
&lt;br&gt;https://doi.org/10.1002/0470013826</mixed-citation></ref><ref id="hanspub.20007-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Liao, W.Y. (2010) A Fourth Order Finite-Difference Method for Solving the System of Two-Dimensional Burgers’ Equation. International Journal for Numerical Methods in Fluids, 64, 565-590. &lt;br&gt;https://doi.org/10.1002/fld.2163</mixed-citation></ref><ref id="hanspub.20007-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Brooks, A.N. and Hughes, T.J.R. (1982) Streamline Upwind/Petrov-Galerkin Formulations for Convection Dominated Flows with Particular Emphasis on the Incompressible Navier-Stokes Equations. Computer Methods in Applied Mechanics and Engineering, 32, 199-259. &lt;br&gt;https://doi.org/10.1016/0045-7825(82)90071-8</mixed-citation></ref><ref id="hanspub.20007-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Donea, J.A. (1984) Taylor-Galerkin Method for Convective Transport Problems. International Journal for Numerical Methods in Engineering, 20, 101-119. &lt;br&gt;https://doi.org/10.1002/nme.1620200108</mixed-citation></ref><ref id="hanspub.20007-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Nithiarasu, P., Zienkiewicz, O.C. and Codina, R. (2006) The Characteristic-Based Split (CBS) Scheme—A Unified Approach to Fluid Dynamics. International Journal for Numerical Methods in Engineering, 66, 1514-1546.  
&lt;br&gt;https://doi.org/10.1002/nme.1698</mixed-citation></ref><ref id="hanspub.20007-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Khan, L.A. and Liu, L.F. (1989) Numerical Analysis of Operator-Splitting Algorithms for the Two-Dimensional Advection-Diffusion Equation. Computer &amp; Fluids, 9, 235-244.</mixed-citation></ref><ref id="hanspub.20007-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Karlsen, K.H. and Risbro, N.H. (1997) An Operator Splitting Method for Nonlinear Convection-Diffusion Equations. Numerische Mathematik, 77, 365-382. &lt;br&gt;https://doi.org/10.1007/s002110050291</mixed-citation></ref><ref id="hanspub.20007-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Cui, M. (2001) Operator-Splitting Galerkin Method for One Kind of Oin Reaction Model for the Pollution in Groundwater. Applied Mathematics—A Journal of Chinese Universities, Series B, 16, 297-303.  
&lt;br&gt;https://doi.org/10.1007/s11766-001-0069-0</mixed-citation></ref><ref id="hanspub.20007-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">曹志先, 魏良琰. 用算子分裂法解Burgers方程[J]. 武汉水利水电学院学报, 1991, 24 (2): 193-201.</mixed-citation></ref><ref id="hanspub.20007-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Shi, F., Liang, G., Zhao, Y. and Zou. J. (2014) New Splitting Methods for Convection-Dominated Diffusion Problems and Navier-Stokes Equations. Communications in Computational Physics, 16, 1239-1262.  
&lt;br&gt;https://doi.org/10.4208/cicp.031013.030614a</mixed-citation></ref></ref-list></back></article>