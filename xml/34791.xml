<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2020.103057</article-id><article-id pub-id-type="publisher-id">CSA-34791</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20200300000_36159752.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于分布式表示的单步推理
  Single-Step Inference Based on Distributed Representation
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>万</surname><given-names>倩妮</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>徐</surname><given-names>建良</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>中国海洋大学信息科学与工程学院，山东 青岛</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>28</day><month>02</month><year>2020</year></pub-date><volume>10</volume><issue>03</issue><fpage>553</fpage><lpage>563</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   目前，现有知识图谱大多存在信息缺失的问题，作为知识图谱关键技术之一的关系推理可以完成对数据关系的深入分析和挖掘，是知识图谱领域的研究热点。本文主要介绍了几种常用的基于分布式表示的单步推理算法，概述了算法的训练过程和评价指标，为今后该领域的研究提供参考借鉴。 At present, most of the existing knowledge graphs have the problem of lack of information. As one of the key technologies of knowledge graph, relational inference can complete the indepth analysis and mining of data relations, which is a hot issue in the field of knowledge graph. This paper mainly introduces several common single step inference algorithms based on distributed representation, and describes the main process and evaluation index of the algorithm in order to provide reference for future research. 
  
 
</p></abstract><kwd-group><kwd>分布式表示，单步推理，关系推理, Distributed Representation</kwd><kwd> Single Step Inference</kwd><kwd> Relation Inference</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于分布式表示的单步推理<sup> </sup></title><p>万倩妮，徐建良</p><p>中国海洋大学信息科学与工程学院，山东 青岛</p><p>收稿日期：2020年3月5日；录用日期：2020年3月20日；发布日期：2020年3月27日</p><disp-formula id="hanspub.34791-formula14"><graphic xlink:href="//html.hanspub.org/file/18-1541709x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>目前，现有知识图谱大多存在信息缺失的问题，作为知识图谱关键技术之一的关系推理可以完成对数据关系的深入分析和挖掘，是知识图谱领域的研究热点。本文主要介绍了几种常用的基于分布式表示的单步推理算法，概述了算法的训练过程和评价指标，为今后该领域的研究提供参考借鉴。</p><p>关键词 :分布式表示，单步推理，关系推理</p><disp-formula id="hanspub.34791-formula15"><graphic xlink:href="//html.hanspub.org/file/18-1541709x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/18-1541709x7_hanspub.png" /> <img src="//html.hanspub.org/file/18-1541709x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>单步推理是通过知识图谱的知识要素(事实元组)来进行学习推理的，其特点是没有考虑路径特征且是直接关系。依据不同的推理方式，单步推理分成基于规则的单步推理、基于分布式表示的单步推理和基于神经网络的单步推理。基于分布式的知识表示分为基于翻译、张量/矩阵分解和空间分布等多种方法 [<xref ref-type="bibr" rid="hanspub.34791-ref1">1</xref>]。</p></sec><sec id="s4"><title>2. 分布式表示</title><p>基于分布式的知识表示是指将三元组中的实体和关系分别转换成稠密低维的实值向量。分布式的知识表示包括实体向量和关系向量两种向量，其中实体向量既可以表示头实体也可以表示尾实体。知识图谱中的两个实体和其之间的关系用<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x9_hanspub.png" xlink:type="simple"/></inline-formula>形式的三元组表示，黑斜体的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x10_hanspub.png" xlink:type="simple"/></inline-formula>分别表示头实体向量、尾实体向量和关系向量。</p></sec><sec id="s5"><title>3. 常见的基于分布式表示的单步推理算法</title><p>基于分布式表示的单步推理是指在分布式知识表示的基础上进行的直接推理过程。其中，最典型的是基于翻译的表示推理。该方法的思想来源于word2vec实验结果的启发。Mikolov等人提出了word2vec词表示学习模型和工具包 [<xref ref-type="bibr" rid="hanspub.34791-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.34791-ref3">3</xref>]，在其基础上发现了训练好的词向量之间存在平移不变的现象，并且通过类比推理实验发现，这种平移不变的现象普遍存在于词汇的语义关系之中 [<xref ref-type="bibr" rid="hanspub.34791-ref4">4</xref>]。</p><p>(1) TransE模型</p><p>受到该现象的启发，Bordes等人在2013年的NIPS大会上提出了第一个基于翻译的表示模型TransE [<xref ref-type="bibr" rid="hanspub.34791-ref5">5</xref>]。TransE模型的主要思想是：如果三元组<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x11_hanspub.png" xlink:type="simple"/></inline-formula>成立，则头实体向量h与关系向量r的和与尾实体向量t接近(即<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x12_hanspub.png" xlink:type="simple"/></inline-formula>)。否则远离。由上述基本假设得到势能函数：</p><disp-formula id="hanspub.34791-formula16"><graphic xlink:href="//html.hanspub.org/file/18-1541709x13_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x14_hanspub.png" xlink:type="simple"/></inline-formula>表示<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x15_hanspub.png" xlink:type="simple"/></inline-formula>范数，n的取值为1或者2。TransE通过定义最大间隔的方法，定义了损失函数：</p><disp-formula id="hanspub.34791-formula17"><graphic xlink:href="//html.hanspub.org/file/18-1541709x16_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x17_hanspub.png" xlink:type="simple"/></inline-formula>表示<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x18_hanspub.png" xlink:type="simple"/></inline-formula>；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x19_hanspub.png" xlink:type="simple"/></inline-formula>表示正负样本之间的间距，是一个常数；负样本集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x20_hanspub.png" xlink:type="simple"/></inline-formula>表示为：</p><disp-formula id="hanspub.34791-formula18"><graphic xlink:href="//html.hanspub.org/file/18-1541709x21_hanspub.png"  xlink:type="simple"/></disp-formula><p>与以往模型相比，TransE模型的参数较少，计算复杂度低，性能有显著提升。但是TransE模型存在一些不足：对于不同的关系，所有实体的向量表示都相同；在解决知识图谱中一对一关系的数据时效果明显，而在处理复杂关系(一对多、多对一、多对多)时会遇到一定的困难。由此，掀起了基于分布式知识表示的研究热潮。</p><p>(2) TransH模型</p><p>针对TransE模型处理复杂关系的弊端，2014年Wang 等人提出了TransH模型 [<xref ref-type="bibr" rid="hanspub.34791-ref6">6</xref>]，引入了关系超平面，将关系解释为超平面上的翻译操作。TransH模型的主要思想是：给定一个三元组<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x22_hanspub.png" xlink:type="simple"/></inline-formula>，对于每一个关系向量r，都能确定一个与其对应的超平面，然后将该三元组中的头实体向量h与尾实体向量t投影到该超平面上，将头实体向量在超平面上的投影记为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x23_hanspub.png" xlink:type="simple"/></inline-formula>，将尾实体向量在超平面上的投影记为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x24_hanspub.png" xlink:type="simple"/></inline-formula>，可以得到：</p><disp-formula id="hanspub.34791-formula19"><graphic xlink:href="//html.hanspub.org/file/18-1541709x25_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x26_hanspub.png" xlink:type="simple"/></inline-formula>表示关系r所确定超平面的法向量，为了简化计算过程，使<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x27_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>如果三元组成立，则<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x28_hanspub.png" xlink:type="simple"/></inline-formula>。基于该假设进行建模，得到TransH的势能函数：</p><disp-formula id="hanspub.34791-formula20"><graphic xlink:href="//html.hanspub.org/file/18-1541709x29_hanspub.png"  xlink:type="simple"/></disp-formula><p>(3) TransR和CTransR模型</p><p>TransE和TransH模型都将实体和关系放到同一个语义空间中，从而限制了模型的表达能力。针对这一问题，Lin等人则提出了TransR模型 [<xref ref-type="bibr" rid="hanspub.34791-ref7">7</xref>]，在独立的实体空间和关系空间中分别建立实体向量和关系向量。首先将实体从实体空间投影到对应的关系空间，然后在投影实体之间进行关系的翻译。TransR模型的主要思想是：给定一个三元组<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x30_hanspub.png" xlink:type="simple"/></inline-formula>，将头实体和尾实体向量投影到该关系空间得到：</p><disp-formula id="hanspub.34791-formula21"><graphic xlink:href="//html.hanspub.org/file/18-1541709x31_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x32_hanspub.png" xlink:type="simple"/></inline-formula>是实体空间到关系对应空间的投影矩阵；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x33_hanspub.png" xlink:type="simple"/></inline-formula>是实体空间；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x34_hanspub.png" xlink:type="simple"/></inline-formula>是关系空间。TransR的势能函数为：</p><disp-formula id="hanspub.34791-formula22"><graphic xlink:href="//html.hanspub.org/file/18-1541709x35_hanspub.png"  xlink:type="simple"/></disp-formula><p>TransE、TransH和TransR模型为每个关系学习一个唯一的向量，由于这些关系通常是不同的，可能不足以表示该关系下的所有实体对。为了更好地表示关系，CTransR [<xref ref-type="bibr" rid="hanspub.34791-ref7">7</xref>] 模型采用分段线性回归方法拓展了TransR模型。CTransR模型的主要思想是：对于一个特定的关系r，训练数据中的所有实体对(h, t)被聚集成多个分组，并且每个分组中的实体对都期望显示相似的关系r。所有的实体对(h, t)都用它们的向量偏移量<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x36_hanspub.png" xlink:type="simple"/></inline-formula>表示以进行聚类，并为每一个分组或者子关系r<sub>c</sub>分别学习向量表示。将头实体和尾实体向量投影到该关系空间得到：</p><disp-formula id="hanspub.34791-formula23"><graphic xlink:href="//html.hanspub.org/file/18-1541709x37_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x38_hanspub.png" xlink:type="simple"/></inline-formula>是实体空间到关系对应空间的投影矩阵。CTransR的势能函数为：</p><disp-formula id="hanspub.34791-formula24"><graphic xlink:href="//html.hanspub.org/file/18-1541709x39_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x40_hanspub.png" xlink:type="simple"/></inline-formula>是为了保证<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x41_hanspub.png" xlink:type="simple"/></inline-formula>距离<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x42_hanspub.png" xlink:type="simple"/></inline-formula>不会太远；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x43_hanspub.png" xlink:type="simple"/></inline-formula>是控制约束效果的参数。</p><p>(4) TransD模型</p><p>TransD模型用两个向量来表示实体和关系，一个用于表示实体的含义，另一个用于动态构造映射矩阵 [<xref ref-type="bibr" rid="hanspub.34791-ref8">8</xref>]。与TransR/CTransR相比，TransD模型不仅考虑了关系的多样性，而且考虑了实体的多样性。TransD参数少，不需要矩阵向量乘法运算。TransD模型的主要思想是：对于给定的三元组<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x44_hanspub.png" xlink:type="simple"/></inline-formula>，它的向量分别为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x45_hanspub.png" xlink:type="simple"/></inline-formula>，下标p表示投影向量，定义两个投影矩阵将实体从实体空间映射到关系空间：</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x46_hanspub.png" xlink:type="simple"/></inline-formula>,</p><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x47_hanspub.png" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x48_hanspub.png" xlink:type="simple"/></inline-formula>,<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x49_hanspub.png" xlink:type="simple"/></inline-formula>。因此，映射矩阵是由实体和关系共同决定的，这种操作使得两个投影向量能够很好地相互作用，因为它们的每个元素都能满足来自另一个向量的每个元素。当我们初始化每个映射矩阵时，我们将<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x50_hanspub.png" xlink:type="simple"/></inline-formula>添加到<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x51_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x52_hanspub.png" xlink:type="simple"/></inline-formula>中。利用映射矩阵，我们将投影向量定义如下：</p><disp-formula id="hanspub.34791-formula25"><graphic xlink:href="//html.hanspub.org/file/18-1541709x53_hanspub.png"  xlink:type="simple"/></disp-formula><p>综上所述，得到其势能函数为：</p><disp-formula id="hanspub.34791-formula26"><graphic xlink:href="//html.hanspub.org/file/18-1541709x54_hanspub.png"  xlink:type="simple"/></disp-formula><p>(5) TransM模型</p><p>与上述模型相比，TransM模型更关注每个训练三元组对优化目标的不同贡献(即各种关系映射属性) [<xref ref-type="bibr" rid="hanspub.34791-ref9">9</xref>]。TransM模型定义了与关系相关的权重，将训练的每个三元组与权重相关联。对于给定的三元组<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x55_hanspub.png" xlink:type="simple"/></inline-formula>，TransM的势能函数为：</p><disp-formula id="hanspub.34791-formula27"><graphic xlink:href="//html.hanspub.org/file/18-1541709x56_hanspub.png"  xlink:type="simple"/></disp-formula><p>(6) TranSparse模型</p><p>上述的模型都没有考虑到知识图谱翻译的异质性和不平衡性，因此Guoliang Ji等人提出来TranSparse模型 [<xref ref-type="bibr" rid="hanspub.34791-ref10">10</xref>]，使用自适应稀疏矩阵来建模不同类型的关系。在TranSparse模型中，翻译矩阵被自适应稀疏矩阵所代替，其稀疏度由关系连接的实体(或实体对)的个数决定，且关系的两边共享相同的翻译矩阵。TranSparse模型包括TranSparse (share)和TranSparse (separate)两种模型。</p><p>TranSparse (share)模型的主要思想是：为每个关系r设置一个稀疏矩阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x57_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x58_hanspub.png" xlink:type="simple"/></inline-formula>的稀疏度<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x59_hanspub.png" xlink:type="simple"/></inline-formula>定义为：</p><disp-formula id="hanspub.34791-formula28"><graphic xlink:href="//html.hanspub.org/file/18-1541709x60_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x61_hanspub.png" xlink:type="simple"/></inline-formula>表示关系r连接的实体对的数量；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x62_hanspub.png" xlink:type="simple"/></inline-formula>表示连接实体对的最大数量(即<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x63_hanspub.png" xlink:type="simple"/></inline-formula>的最大值)；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x64_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>头实体和尾实体共享一个稀疏矩阵，头实体和尾实体的投影向量可以定义为：</p><disp-formula id="hanspub.34791-formula29"><graphic xlink:href="//html.hanspub.org/file/18-1541709x65_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x66_hanspub.png" xlink:type="simple"/></inline-formula>；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x67_hanspub.png" xlink:type="simple"/></inline-formula>；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x68_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>TranSparse (separate)模型中，为每个关系设置两个单独的稀疏矩阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x69_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x70_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x71_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x72_hanspub.png" xlink:type="simple"/></inline-formula>的稀疏度定义为：</p><disp-formula id="hanspub.34791-formula30"><graphic xlink:href="//html.hanspub.org/file/18-1541709x73_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：下标r是关系的索引；h，t是指矩阵用于哪个实体(头实体或尾实体)；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x74_hanspub.png" xlink:type="simple"/></inline-formula>表示关系r在位置l处连接的实体数；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x75_hanspub.png" xlink:type="simple"/></inline-formula>表示它们的最大数量(关系<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x76_hanspub.png" xlink:type="simple"/></inline-formula>在位置<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x77_hanspub.png" xlink:type="simple"/></inline-formula>连接的最多实体)；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x78_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>头实体和尾实体的投影向量可以定义为：</p><disp-formula id="hanspub.34791-formula31"><graphic xlink:href="//html.hanspub.org/file/18-1541709x79_hanspub.png"  xlink:type="simple"/></disp-formula><p>TranSparse(share)和TranSparse(separate)模型的势能函数为：</p><disp-formula id="hanspub.34791-formula32"><graphic xlink:href="//html.hanspub.org/file/18-1541709x80_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x81_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>(7) TEKE模型</p><p>Zhigang Wang等人提出了TEKE模型 [<xref ref-type="bibr" rid="hanspub.34791-ref11">11</xref>]，引入了丰富的文本上下文信息。每个关系对于不同的头实体和尾实体拥有不同的表示，以便更好地处理复杂关系。TEKE模型包含四个关键部分：实体注释、文本上下文翻译、实体/关系表示建模和训练。</p><p>在实体注释中，对于给定的文本语料库<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x82_hanspub.png" xlink:type="simple"/></inline-formula>，使用实体链接工具自动的标记实体，然后得到实体注释文本集<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x83_hanspub.png" xlink:type="simple"/></inline-formula>。其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x84_hanspub.png" xlink:type="simple"/></inline-formula>的长度<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x85_hanspub.png" xlink:type="simple"/></inline-formula>小于<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x86_hanspub.png" xlink:type="simple"/></inline-formula>的长度m，这是因为多个相邻的词可以标记为一个实体。</p><p>在文本上下文嵌入中，为了将知识和文本信息联系在一起，构建了一个基于实体注释文本集<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x87_hanspub.png" xlink:type="simple"/></inline-formula>的共现网络<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x88_hanspub.png" xlink:type="simple"/></inline-formula>。<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x89_hanspub.png" xlink:type="simple"/></inline-formula>表示知识图谱中的节点/实体，对应一个单词或者实体。<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x90_hanspub.png" xlink:type="simple"/></inline-formula>表示<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x91_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x92_hanspub.png" xlink:type="simple"/></inline-formula>的共现频率。构建的共现网络<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x93_hanspub.png" xlink:type="simple"/></inline-formula>能够利用丰富的文本信息将实体和词连接起来用于表示学习。将给定节点/实体<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x94_hanspub.png" xlink:type="simple"/></inline-formula>的上下文作为它的邻居，定义为：</p><disp-formula id="hanspub.34791-formula33"><graphic xlink:href="//html.hanspub.org/file/18-1541709x95_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x96_hanspub.png" xlink:type="simple"/></inline-formula>是一个界值。</p><p>由于两个实体的共同邻居可以表示它们之间的关系，因此将关系的文本上下文为两个实体的共同邻居，定义为：</p><disp-formula id="hanspub.34791-formula34"><graphic xlink:href="//html.hanspub.org/file/18-1541709x97_hanspub.png"  xlink:type="simple"/></disp-formula><p>可以得到<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x98_hanspub.png" xlink:type="simple"/></inline-formula>中的每个实体x的表示<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x99_hanspub.png" xlink:type="simple"/></inline-formula>，基于实体向量表示，定义了<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x100_hanspub.png" xlink:type="simple"/></inline-formula>的实体文本上下文翻译作为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x101_hanspub.png" xlink:type="simple"/></inline-formula>中实体向量的加权平均值：</p><disp-formula id="hanspub.34791-formula35"><graphic xlink:href="//html.hanspub.org/file/18-1541709x102_hanspub.png"  xlink:type="simple"/></disp-formula><p>同样地，定义了<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x103_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x104_hanspub.png" xlink:type="simple"/></inline-formula>的关系文本上下文翻译作为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x105_hanspub.png" xlink:type="simple"/></inline-formula>中关系向量的加权平均值：</p><disp-formula id="hanspub.34791-formula36"><graphic xlink:href="//html.hanspub.org/file/18-1541709x106_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：每个共同邻居的权重<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x107_hanspub.png" xlink:type="simple"/></inline-formula>；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x108_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>在文本上下文翻译中，定义了头实体和尾实体的实体文本翻译的线性变换：</p><disp-formula id="hanspub.34791-formula37"><graphic xlink:href="//html.hanspub.org/file/18-1541709x109_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：A是一个<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x110_hanspub.png" xlink:type="simple"/></inline-formula>的矩阵，可视为上下文的权重；h和t分别为头实体向量和尾实体向量。</p><p>同样地，定义了关系的关系文本翻译的线性变换：</p><disp-formula id="hanspub.34791-formula38"><graphic xlink:href="//html.hanspub.org/file/18-1541709x111_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：B是一个<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x112_hanspub.png" xlink:type="simple"/></inline-formula>的权重矩阵；r为关系向量。</p><p>综上，其势能函数定义为：</p><disp-formula id="hanspub.34791-formula39"><graphic xlink:href="//html.hanspub.org/file/18-1541709x113_hanspub.png"  xlink:type="simple"/></disp-formula><p>(8) TransA模型</p><p>Yantao Jia等人提出了TransA模型 [<xref ref-type="bibr" rid="hanspub.34791-ref12">12</xref>]，可以根据知识图谱的结构自适应地找到最佳损失函数，并且不需要事先封闭的候选集。TransA模型的主要思想是：给定一个三元组<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x114_hanspub.png" xlink:type="simple"/></inline-formula>，势能函数定义为：</p><disp-formula id="hanspub.34791-formula40"><graphic xlink:href="//html.hanspub.org/file/18-1541709x115_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x116_hanspub.png" xlink:type="simple"/></inline-formula>；d表示向量空间的维数。</p><p>TransA模型的重点在于自适应地找到最佳损失函数。由于关系集合和实体集合是两个不相交的集合，因此定义了最佳间距<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x117_hanspub.png" xlink:type="simple"/></inline-formula>：</p><disp-formula id="hanspub.34791-formula41"><graphic xlink:href="//html.hanspub.org/file/18-1541709x118_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x119_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>由上述公式可知，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x120_hanspub.png" xlink:type="simple"/></inline-formula>分为实体间距和关系间距两部分，并利用线性插值进行组合。实体最优间距<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x121_hanspub.png" xlink:type="simple"/></inline-formula>应保证内层圆包含更多的正例，外层圆的外部应尽可能是负例。<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x122_hanspub.png" xlink:type="simple"/></inline-formula>的定义为：给定的一个实体h，对于所有的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x123_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x124_hanspub.png" xlink:type="simple"/></inline-formula>，则：</p><disp-formula id="hanspub.34791-formula42"><graphic xlink:href="//html.hanspub.org/file/18-1541709x125_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.34791-formula43"><graphic xlink:href="//html.hanspub.org/file/18-1541709x126_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x127_hanspub.png" xlink:type="simple"/></inline-formula>；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x128_hanspub.png" xlink:type="simple"/></inline-formula>；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x129_hanspub.png" xlink:type="simple"/></inline-formula>是正确三元组的集合；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x130_hanspub.png" xlink:type="simple"/></inline-formula>是实体<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x131_hanspub.png" xlink:type="simple"/></inline-formula>的关系数量；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x132_hanspub.png" xlink:type="simple"/></inline-formula>表示与h相关联的关系集合。</p><p>实体最优间距<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x133_hanspub.png" xlink:type="simple"/></inline-formula>定义为：对于给定一个实体h和与该实体相关联的一个关系r，如果存在<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x134_hanspub.png" xlink:type="simple"/></inline-formula>，满足<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x135_hanspub.png" xlink:type="simple"/></inline-formula>，则：</p><disp-formula id="hanspub.34791-formula44"><graphic xlink:href="//html.hanspub.org/file/18-1541709x136_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x137_hanspub.png" xlink:type="simple"/></inline-formula>，表示与h相关联的除关系r之外的关系集合。</p><p>由此，损失函数定义为：</p><disp-formula id="hanspub.34791-formula45"><graphic xlink:href="//html.hanspub.org/file/18-1541709x138_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x139_hanspub.png" xlink:type="simple"/></inline-formula>是正例；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x140_hanspub.png" xlink:type="simple"/></inline-formula>是负例；</p><p>(9) TKRL模型</p><p>鉴于大部分知识表示学习方法忽略了实体中丰富的层次类型信息，Ruobing Xie等人认为不同类型的实体应该具有不同的表示，由此提出了TKRL模型 [<xref ref-type="bibr" rid="hanspub.34791-ref13">13</xref>]。TKRL模型为每个类型的实体设置由层次结构构造的特定类型投影矩阵M，然后在特定类型的投影下表示h和t。TKRL模型的势能函数定义为：</p><disp-formula id="hanspub.34791-formula46"><graphic xlink:href="//html.hanspub.org/file/18-1541709x141_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x142_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x143_hanspub.png" xlink:type="simple"/></inline-formula>是h和t不同的投影矩阵。</p><p>为了将层次类型信息编码到表示学习中，提出了一种通用的类型编码器来构造每个实体的投影矩阵。其次，提出了两种先进的编码器对层次结构中的内部连接和关系特定类型信息中的先验知识加以利用。其中，实体e的投影矩阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x144_hanspub.png" xlink:type="simple"/></inline-formula>是所有类型矩阵的加权和。通用类型编码的投影矩阵定义为：</p><disp-formula id="hanspub.34791-formula47"><graphic xlink:href="//html.hanspub.org/file/18-1541709x145_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：n表示实体e的类型数；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x146_hanspub.png" xlink:type="simple"/></inline-formula>是实体所属的第i个类型；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x147_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x148_hanspub.png" xlink:type="simple"/></inline-formula>的投影矩阵；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x149_hanspub.png" xlink:type="simple"/></inline-formula>表示<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x150_hanspub.png" xlink:type="simple"/></inline-formula>的相应权重。</p><p>对于通用类型的编码而言，实体e的所有投影矩阵在不同情况下都是相同的。但是，实体应该有不同的表示，以强调在不同场景中更重要的属性。为了解决这一问题，头实体的投影矩阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x151_hanspub.png" xlink:type="simple"/></inline-formula>定义为：</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x152_hanspub.png" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x153_hanspub.png" xlink:type="simple"/></inline-formula></p><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x154_hanspub.png" xlink:type="simple"/></inline-formula>表示由关系特定类型信息给出的关系r中头实体的类型集；同一个实体作为尾实体的投影矩阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x155_hanspub.png" xlink:type="simple"/></inline-formula>与作为头实体时的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x156_hanspub.png" xlink:type="simple"/></inline-formula>相同；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x157_hanspub.png" xlink:type="simple"/></inline-formula>表示类型c的投影矩阵。</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x158_hanspub.png" xlink:type="simple"/></inline-formula>能够有以下两种方式编码：</p><p>a) RHE (Recursive Hierarchy Encoder)</p><disp-formula id="hanspub.34791-formula48"><graphic xlink:href="//html.hanspub.org/file/18-1541709x159_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：m是类型c在层次结构中的层数；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x160_hanspub.png" xlink:type="simple"/></inline-formula>表示第i个子类型<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x161_hanspub.png" xlink:type="simple"/></inline-formula>的投影矩阵。</p><p>b) WHE (Weighted Hierarchy Encoder)</p><disp-formula id="hanspub.34791-formula49"><graphic xlink:href="//html.hanspub.org/file/18-1541709x162_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：m是层次结构中的层数；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x163_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x164_hanspub.png" xlink:type="simple"/></inline-formula>的投影矩阵；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x165_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x166_hanspub.png" xlink:type="simple"/></inline-formula>的相应权重。</p><p>在<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x167_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x168_hanspub.png" xlink:type="simple"/></inline-formula>之间定义一个按比例下降的加权策略：</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x169_hanspub.png" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x170_hanspub.png" xlink:type="simple"/></inline-formula></p><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x171_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>与其它模型不同，TKRL模型的损失函数定义为：</p><disp-formula id="hanspub.34791-formula50"><graphic xlink:href="//html.hanspub.org/file/18-1541709x172_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：</p><disp-formula id="hanspub.34791-formula51"><graphic xlink:href="//html.hanspub.org/file/18-1541709x173_hanspub.png"  xlink:type="simple"/></disp-formula><p>(10) TAE模型</p><p>由于现有的大多数方法都会忽略时间信息，而只能从时间未知的事实三元组中学习。Tingsong Jiang等人提出了TAE模型 [<xref ref-type="bibr" rid="hanspub.34791-ref14">14</xref>]，使用事实之间的时间顺序信息进行关系推理。TAE模型使用<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x174_hanspub.png" xlink:type="simple"/></inline-formula>的四元组形式，表示实体<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x175_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x176_hanspub.png" xlink:type="simple"/></inline-formula>在关系间隔<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x177_hanspub.png" xlink:type="simple"/></inline-formula>具有关系r的事实(<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x178_hanspub.png" xlink:type="simple"/></inline-formula>)。对于一些事实，没有结束日期，可以表示为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x179_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>为了捕获关系的时间顺序，TAE模型定义了一个时间演化矩阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x180_hanspub.png" xlink:type="simple"/></inline-formula>来建模关系的演变。其中，n是关系向量的维度；T是模型学习数据的参数。TAE模型的主要思想是：给定一个<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x181_hanspub.png" xlink:type="simple"/></inline-formula>，可以找一个与时间相关的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x182_hanspub.png" xlink:type="simple"/></inline-formula>，两个四元组共享同一个头实体和时序关系对<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x183_hanspub.png" xlink:type="simple"/></inline-formula>。如果<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x184_hanspub.png" xlink:type="simple"/></inline-formula>，定义一个正确的时序关系对<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x185_hanspub.png" xlink:type="simple"/></inline-formula>和对应的错误的时序关系对<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x186_hanspub.png" xlink:type="simple"/></inline-formula>。因此，时间势能函数定义为：</p><disp-formula id="hanspub.34791-formula52"><graphic xlink:href="//html.hanspub.org/file/18-1541709x187_hanspub.png"  xlink:type="simple"/></disp-formula><p>注意：T是非对称的。</p><p>对于给定的三元组<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x188_hanspub.png" xlink:type="simple"/></inline-formula>，其势能函数定义为：</p><disp-formula id="hanspub.34791-formula53"><graphic xlink:href="//html.hanspub.org/file/18-1541709x189_hanspub.png"  xlink:type="simple"/></disp-formula><p>优化目标是优化联合势能函数，损失函数定义为：</p><disp-formula id="hanspub.34791-formula54"><graphic xlink:href="//html.hanspub.org/file/18-1541709x190_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x191_hanspub.png" xlink:type="simple"/></inline-formula>，表示正例；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x192_hanspub.png" xlink:type="simple"/></inline-formula>，表示负例；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x193_hanspub.png" xlink:type="simple"/></inline-formula>表示为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x194_hanspub.png" xlink:type="simple"/></inline-formula>的正确的时序关系对的集合，其定义为：</p><disp-formula id="hanspub.34791-formula55"><graphic xlink:href="//html.hanspub.org/file/18-1541709x195_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x196_hanspub.png" xlink:type="simple"/></inline-formula>是对<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x197_hanspub.png" xlink:type="simple"/></inline-formula>中每一个关系对求逆得到的。</p><p>(11) puTransE模型</p><p>Yi Tay等人提出了puTransE模型，通过语义和结构感知选择机制生成多个表示空间 [<xref ref-type="bibr" rid="hanspub.34791-ref15">15</xref>]，每个表示空间在计数和多样性上都要满足事实三元组约束。对于每一个表示空间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x198_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x199_hanspub.png" xlink:type="simple"/></inline-formula>是表示空间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x200_hanspub.png" xlink:type="simple"/></inline-formula>中的三元组约束(<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x201_hanspub.png" xlink:type="simple"/></inline-formula>通常比三元组的总数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x202_hanspub.png" xlink:type="simple"/></inline-formula>小)，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x203_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x204_hanspub.png" xlink:type="simple"/></inline-formula>分别是表示空间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x205_hanspub.png" xlink:type="simple"/></inline-formula>中实体集合和关系集合。</p><p>puTransE模型重点在于三元组选择机制，该机制包括主要包括语义感知的三元组选择、结构感知的三元组选择、语义和结构的平衡以及生成随机配置四个方面。</p><p>语义感知三元组的选择：随机选取一个关系r (<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x206_hanspub.png" xlink:type="simple"/></inline-formula>)，生成所有包含关系r的所有实体集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x207_hanspub.png" xlink:type="simple"/></inline-formula>，r被视为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x208_hanspub.png" xlink:type="simple"/></inline-formula>的语义焦点。</p><p>结构感知三元组的选择：采用双向随机游走(RW)模型。</p><p>语义和结构的平衡：由于<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x209_hanspub.png" xlink:type="simple"/></inline-formula>的情况可能发生，因此，设置参数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x210_hanspub.png" xlink:type="simple"/></inline-formula>来调节语义和结构的平衡。</p><p>生成随机配置：为每一个表示空间随机分配不同的参数。对于每一个<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x211_hanspub.png" xlink:type="simple"/></inline-formula>，随机生成margin、学习率、<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x212_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x213_hanspub.png" xlink:type="simple"/></inline-formula>和迭代批次。</p><p>puTransE模型的全局势能函数定义为：</p><disp-formula id="hanspub.34791-formula56"><graphic xlink:href="//html.hanspub.org/file/18-1541709x214_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x215_hanspub.png" xlink:type="simple"/></inline-formula>是包含所有实体和关系的表示向量空间的集合；</p><p>损失函数定义为：</p><disp-formula id="hanspub.34791-formula57"><graphic xlink:href="//html.hanspub.org/file/18-1541709x216_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x217_hanspub.png" xlink:type="simple"/></inline-formula>是存在于平行向量空间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x218_hanspub.png" xlink:type="simple"/></inline-formula>的三元组；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x219_hanspub.png" xlink:type="simple"/></inline-formula>是不存在于平行向量空间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x220_hanspub.png" xlink:type="simple"/></inline-formula>的三元组。<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x221_hanspub.png" xlink:type="simple"/></inline-formula>是三元组在其向量空间的局部势能函数。</p></sec><sec id="s6"><title>4. 算法的训练过程</title><p>算法的重点都在于训练的过程，即采用向量表示的方法对三元组进行优化的过程，因此接下来主要介绍基于分布式的单步推理算法的训练过程。训练流程图如图1所示：</p><p>1) 首先要初始化算法中使用的参数，一般包括学习率、向量维度和损失函数中的间距参数等。</p><p>2) 初始化参数完成后，读取训练集，以便进行负例的构造。为了使正例与负例之间形成明显的对照关系，因此在构造负例时，可采用均匀采样法或伯努利采样法等随机替换正例中的头实体或尾实体或者关系。对于不同的推理算法，由于替换的对象可能存在差异，例如：有些算法只随机替换头实体或尾实体，而有些算法需随机替换头实体或尾实体或者关系，会导致采样方法存在差异。</p><p>3) 构造完负例后，根据不同算法的势能函数，采用<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x222_hanspub.png" xlink:type="simple"/></inline-formula>范数计算正例与负例的势能函数。</p><p>4) 训练过程采用梯度下降算法加速训练过程，利用正例和负例的势能函数值情况判断是否需要对两组元组进行优化。优化时要尽量减小正例的势能值，并尽量增大负例的势能值，从而达到最小化损失函数的目的。</p><p>图1. 训练流程图</p><p>梯度下降法是一个最优化算法，常用于机器学习和人工智能当中用来递归性地逼近最小偏差模型 [<xref ref-type="bibr" rid="hanspub.34791-ref16">16</xref>]。梯度下降算法包括批量梯度下降(Batch gradient descent)、随机梯度下降(Stochastic Gradient Descent)和小批量梯度下降(Mini-batch gradient descent)三种 [<xref ref-type="bibr" rid="hanspub.34791-ref17">17</xref>]。批量随机梯度下降是指每次迭代使用所有样本进行梯度的更新，但当样本数据规模很大时，由于每次迭代需要计算所有的样本，因此极大地降低了模型的训练速度；随机梯度下降每次迭代只使用一个样本对参数进行更新，虽然可以加快模型的优化速度，但是由于单个样本无法代表样本整体，降低了结果的准确性；而小批量随机梯度下降综合了上述两种算法，每次迭代使用“batch_size”个样本对参数进行更新，不仅可以加快模型的优化速度，而且可以提高收敛结果的准确性。可以根据算法模型和数据集选择最合适的梯度下降算法。</p></sec><sec id="s7"><title>5. 算法的评价标准</title><p>在算法评价指标方面，采用前k命中率(Hits@k)和正确实体的平均排名数(Mean Rank)两种指标分别进行实体预测和关系预测，以衡量算法的综合能力。</p><p>实体预测评价过程如下：假设知识图谱中有n个实体</p><p>(1) 将测试集中一个正确的三元组a的头实体或者尾实体，依次替换为实体集合中的所有实体，即会产生n个三元组。</p><p>(2) 分别计算n个三元组的势能函数值，这样可以得到n个势能函数值，分别对应上述n个三元组。</p><p>(3) 对上述n个势能函数值进行升序排序，记录三元组a的势能函数值排序后的序号k。</p><p>(4) 如果前<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x224_hanspub.png" xlink:type="simple"/></inline-formula>个势能函数值对应的三元组中有m个三元组是正确的，那么三元组a的序号改为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/18-1541709x225_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>(5) 对所有的正确的三元组重复上述过程。</p><p>上述过程结束后，计算出排序后所有正确三元组序号的平均值，得到的值称为Mean Rank，计算出排序后正确三元组的序号小于k的比例，得到的值称为Hits@k。</p><p>同理，关系预测只是将测试集中正确三元组的关系，依次替换为关系集合中的所有关系，再依次执行上述过程。</p><p>在算法的评测过程中，可以根据实际需求，选择评价指标对算法进行评估。不难发现，Mean Rank越小，证明该算法预测结果的准确性越高，Hits@k越大，证明该算法的预测结果越好。</p></sec><sec id="s8"><title>6. 总结</title><p>基于分布式表示的关系推理技术能够很好地把握数据的内在特征，算法高效，易于操作，解决了数据稀疏等问题。但是，该类算法依赖于纯粹的数学驱动，对实体之间的关系预测难以提供合理的解释。目前，基于分布式表示的关系推理技术已经被广泛应用于机器翻译和智能问答等领域，并且在金融反欺诈和数据异常分析等领域具有良好的应用前景。在大数据时代迅猛发展的今天，丰富和拓展知识图谱是时代发展的必然趋势。如何对推理模型进行优化处理，考虑知识图谱中更深层次的结构和语义信息，提高推理算法的速度和准确率，是未来该领域的主要研究方向。</p></sec><sec id="s9"><title>文章引用</title><p>万倩妮,徐建良. 基于分布式表示的单步推理Single-Step Inference Based on Distributed Representation[J]. 计算机科学与应用, 2020, 10(03): 553-563. https://doi.org/10.12677/CSA.2020.103057</p></sec><sec id="s10"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.34791-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">官赛萍, 靳小龙, 贾岩涛, 王元卓, 程学旗. 面向知识图谱的知识推理研究进展[J]. 软件学报, 2018, 29(10): 2966-2994.</mixed-citation></ref><ref id="hanspub.34791-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Mikolov, T., Sutskever, I., Chen, K., et al. (2013) Distributed Representations of Words and Phrases and Their Compositionality. In: Proceedings of NIPS, MIT Press, Cambridge, MA, 3111-3119.</mixed-citation></ref><ref id="hanspub.34791-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Mikolov, T., Chen, K., Corrado, G., et al. (2013) Efficient Estimation of Word Representations in Vector Space. Proceedings of ICLR, arXiv: 1301.3781.</mixed-citation></ref><ref id="hanspub.34791-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">刘知远, 孙茂松, 林衍凯, 谢若冰. 知识表示学习研究进展[J]. 计算机研究与发展, 2016, 53(2): 247-261.</mixed-citation></ref><ref id="hanspub.34791-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Bordes, A., Usunier, N., Garcia-Duran, A., Weston, J. and Yakhnenko, O. (2013) Trans-lating Embeddings for Modeling Multi-Relational Data. In: Proceedings of the Advances in Neural Information Pro-cessing System, Curran Associates Inc., Red Hook, NY, 2787-2795</mixed-citation></ref><ref id="hanspub.34791-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Wang, Z., Zhang, J., Feng, J., et al. (2014) Knowledge Graph Embedding by Translating on Hyperplanes. In: Proceedings of AAAI, AAAI, Menlo Park, CA, 1112-1119.</mixed-citation></ref><ref id="hanspub.34791-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Lin, Y.K., et al. (2015) Learning Entity and Relation Embeddings for Knowledge Graph Completion. In: Proceedings of AAAI, AAAI, Menlo Park, CA, 2181-2187.</mixed-citation></ref><ref id="hanspub.34791-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Ji, G., He, S., Xu, L., et al. (2015) Knowledge Graph Embedding via Dynamic Mapping Matrix. In: Proceedings of ACL, Stroudsburg, PA, 687-696. &lt;br&gt;https://doi.org/10.3115/v1/P15-1067</mixed-citation></ref><ref id="hanspub.34791-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Fan, M., Zhou, Q., Chang, E. and Zheng, T.F. (2014) Transition-Based Knowledge Graph Embedding with Relational Mapping Properties. In: Proceedings of the 28th Pacific Asia Conference on Language, Information and Computation, ACL, Stroudsburg, 328-337.</mixed-citation></ref><ref id="hanspub.34791-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Ji, G., Liu, K., He, S. and Zhao, J. (2016) Knowledge Graph Completion with Adaptive Sparse Transfer Matrix. In: Proceedings of the 30th AAAI Con-ference on Artificial Intelligence, AAAI, Menlo Park, CA, 985-991.</mixed-citation></ref><ref id="hanspub.34791-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Wang, Z. and Li, J. (2016) Text-Enhanced Representation Learning for Knowledge Graph. In: Proceedings of the 25th International Joint Conference on Artificial Intelligence, AAAI, Menlo Park, CA, 1293-1299.</mixed-citation></ref><ref id="hanspub.34791-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Jia, Y., Wang, Y., Lin, H., Jin, X. and Cheng, X. (2016) Locally Adaptive Translation for Knowledge Graph Embedding. In: Proceedings of the 30th AAAI Conference on Artificial Intelligence, AAAI, Menlo Park, CA, 992-998.</mixed-citation></ref><ref id="hanspub.34791-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Xie, R., Liu, Z. and Sun, M. (2016) Representation Learning of Knowledge Graphs with Hierarchical Types. In: Proceedings of the 25th International Joint Conference on Artificial Intelligence, AAAI, Menlo Park, CA, 2965-2971.</mixed-citation></ref><ref id="hanspub.34791-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Jiang, T., Liu, T., Ge, T., Sha, L., Chang, B., Li, S. and Sui, Z. (2016) Towards Time-Aware Knowledge Graph Completion. In: Proceedings of the 26th International Conference on Computational Linguistics, ACL, Stroudsburg, 1715-1724.</mixed-citation></ref><ref id="hanspub.34791-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Tay, Y., Luu, A.T. and Hui, S.C. (2017) Non-Parametric Estimation of Multiple Embeddings for Link Prediction on Dynamic Knowledge Graphs. In: Proceedings of the 31st AAAI Conference on Artificial Intelligence, AAAI, Menlo Park, CA, 1243-1249.</mixed-citation></ref><ref id="hanspub.34791-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">人工智能-梯度下降法(1). &lt;br&gt;https://cloud.tencent.com/developer/news/238176, 2018.</mixed-citation></ref><ref id="hanspub.34791-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Ruder, S. (2016) An Overview of Gradient Descent Optimization Algorithms.</mixed-citation></ref></ref-list></back></article>