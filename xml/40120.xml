<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2021.101039</article-id><article-id pub-id-type="publisher-id">AAM-40120</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20210100000_64967041.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于GrO
  <sup style=" margin-left:-10px;">&#168;</sup>bner基方法的乘法器等价性验证
  Equivalence Verification of Multipliers Based on GrO
  <sup style=" margin-left:-10px;">&#168;</sup>bner Basis Method
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>璇思</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>刘</surname><given-names>佳姝</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>江</surname><given-names>建国</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>辽宁师范大学数学学院，辽宁 大连</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>11</day><month>01</month><year>2021</year></pub-date><volume>10</volume><issue>01</issue><fpage>343</fpage><lpage>350</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    乘法器的等价性验证目前仍是大规模算术集成电路设计领域内的一大难题。本文利用逻辑门与多项式之间的对应关系，构建了乘法器的代数模型，将乘法器等价性验证问题转化成理想成员判定问题，然后再用计算机代数系统中的Gr&#246;bner基方法进行求解。提出了一种对乘法器结构进行切片后再采用增量式验证的新方法。在Linux平台上的计算机代数系统Mathematica上所做的实验结果也表明了该方法的有效性。
    The equivalence verification of multipliers is still a difficult problem in the field of LSI design. In this paper, the algebraic model of multipliers is constructed by using the corresponding relationship between logic gates and polynomials. The problem of equivalence verification of multipliers is transformed into the problem of determining ideal members. Then, the problem is solved by the Gr&#246;bner basis method in computer algebra system. This paper presents a new method of incremental verification after slicing the multiplier structure. The experimental results on Mathematica, a computer algebra system on Linux platform, also show the effectiveness of the method. 
  
 
</p></abstract><kwd-group><kwd>GrO<sup style=" margin-left:-10px;">&#168;</sup>bner基，等价性验证，整数乘法器，增量式验证，切片, GrO<sup style=" margin-left:-10px;">&#168;</sup>bner Basis</kwd><kwd> Equivalence Verification</kwd><kwd> Integer Multiplier</kwd><kwd> Incremental Validation</kwd><kwd> Slicing</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>乘法器的等价性验证目前仍是大规模算术集成电路设计领域内的一大难题。本文利用逻辑门与多项式之间的对应关系，构建了乘法器的代数模型，将乘法器等价性验证问题转化成理想成员判定问题，然后再用计算机代数系统中的Gr&#246;bner基方法进行求解。提出了一种对乘法器结构进行切片后再采用增量式验证的新方法。在Linux平台上的计算机代数系统Mathematica上所做的实验结果也表明了该方法的有效性。</p></sec><sec id="s2"><title>关键词</title><p>Gr&#246;bner基，等价性验证，整数乘法器，增量式验证，切片</p></sec><sec id="s3"><title>Equivalence Verification of Multipliers Based on Gr&#246;bner Basis Method</title><p>Xuansi Zhang, Jiashu Liu, Jianguo Jiang<sup>*</sup></p><p>School of Mathematics, Liaoning Normal University, Dalian Liaoning</p><p><img src="//html.hanspub.org/file/39-2621454x4_hanspub.png" /></p><p>Received: Dec. 25<sup>th</sup>, 2020; accepted: Jan. 19<sup>th</sup>, 2021; published: Jan. 28<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/39-2621454x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>The equivalence verification of multipliers is still a difficult problem in the field of LSI design. In this paper, the algebraic model of multipliers is constructed by using the corresponding relationship between logic gates and polynomials. The problem of equivalence verification of multipliers is transformed into the problem of determining ideal members. Then, the problem is solved by the Gr&#246;bner basis method in computer algebra system. This paper presents a new method of incremental</p><p>verification after slicing the multiplier structure. The experimental results on Mathematica, a computer algebra system on Linux platform, also show the effectiveness of the method.</p><p>Keywords:Gr&#246;bner Basis, Equivalence Verification, Integer Multiplier, Incremental Validation, Slicing</p><disp-formula id="hanspub.40120-formula49"><graphic xlink:href="//html.hanspub.org/file/39-2621454x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/39-2621454x8_hanspub.png" /> <img src="//html.hanspub.org/file/39-2621454x9_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>随着科学技术的发展，集成电路的结构日益复杂，步入SoC时代，在门级抽象层次上已经达到数以百万和千万门系统的设计和验证 [<xref ref-type="bibr" rid="hanspub.40120-ref1">1</xref>]。为了保证设计的错误能及时发现，杜绝因重新设计和流片浪费开发成本和设计周期，就需要对电路进行正确性的验证。传统的模拟验证因其不完备性，已经不能适用于现时的较高抽象层次上的集成电路的验证，为了避免“20世纪60年代的软件危机”和“著名的奔腾FDIV错误”此类情况发生，促使人们去研究更完善的验证方法 [<xref ref-type="bibr" rid="hanspub.40120-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref4">4</xref>]。</p><p>等价性验证是目前在实际的芯片设计中应用最广泛的形式化验证技术，如Synopsys公司的Formality，Mentor Graphics公司的FormalProTM，Cadence公司的Affirma等，并且能处理较大规模的设计 [<xref ref-type="bibr" rid="hanspub.40120-ref5">5</xref>]。等价性验证一般采用图表示法和代数表示方法 [<xref ref-type="bibr" rid="hanspub.40120-ref6">6</xref>]。图表示法主要使用二叉判定图(BDD)，Brand利用BDD将电路建模为miter，计算所有可达状态这就是典型的基于有限状态机遍历算法 [<xref ref-type="bibr" rid="hanspub.40120-ref7">7</xref>]。尽管最近十多年里，由于BDD方法的研究进展使得基于有限状态机遍历算法有了很大进步，但BDD需要大量储存和操作空间的问题仍无法避免，而且用布尔函数表示的状态集会成指数增长，存在状态空间爆炸问题。并且在抽象层较高的等价性验证中，受图形表示能力和图形构造上的制约，BDD无法胜任验证任务。相比而言，基于代数方法的等价性验证则更适合高层次验证。</p><p>代数学是数学的一个基本分支，它所处理和研究的数学对象是抽象的代数符号与概念，如整数、有理数、多项式、环、理想等 [<xref ref-type="bibr" rid="hanspub.40120-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref9">9</xref>]。其中多项式由于其描述电路时抽象建模能力强，表示具有规范性、无歧义性，使其成为理想的电路建模工具。Buchberger在1915年提出了多项式环上的Gr&#246;bner基，因其良序性方面的优势适用于计算机代数领域 [<xref ref-type="bibr" rid="hanspub.40120-ref10">10</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref11">11</xref>]。本文运用Gr&#246;bner基与乘法器电路结合的思想，在Galois域上采用迭代算法验证整数乘法器电路 [<xref ref-type="bibr" rid="hanspub.40120-ref11">11</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref12">12</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref13">13</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref14">14</xref>]。通过实验对比不同方法所需运行时间，易见各方法对乘法器等价性验证的效率影响。</p></sec><sec id="s6"><title>2. Gr&#246;bner基理论</title><p>对于环R中给定的理想I，其Gr&#246;bner基一般并不唯一。这些Gr&#246;bner基与项序的选择密切相关，下面给出相关定义 [<xref ref-type="bibr" rid="hanspub.40120-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref9">9</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref10">10</xref>]。</p><p>定义2.1 设 为任意一个域，变量序列 x 1 , ⋯ , x n 记为X，将含有n个变量的多项式环记为 k [ X ] 或 k [ x 1 , ⋯ , x n ] 。</p><p>多项式环中最重要的结构为理想，理想为多项式环中的一种子集，其中的元素对加法和乘法封闭。</p><p>定义2.2 多项式集合I 是环 k [ X ] 的子集，如果满足</p><p>(1) 0 ∈ I ，</p><p>(2) 如果 f , g ∈ I ，则 f + g ∈ I ，</p><p>(3) 如果 f ∈ I , h ∈ K [ X ] ，则 h f ∈ I ，</p><p>上述条件，则称I为多项式理想。</p><p>对于Gr&#246;bner基来说，多项式环 k [ x 1 , ⋯ , x n ] 中单项式序的概念是一个基本概念，他可以定义出任意多项式的首项，从而保证多项式除法操作下余式唯一。</p><p>定义2.3 设 α = ( α 1 , ⋯ , α n ) , β = ( β 1 , ⋯ , β n ) ∈ Z ≥ 0 n ，集合Τ上的关系 ≺ 称为一个单项式序，如果 ≺ 满足下面条件：</p><p>(1) ≺ 为Τ上的一个全序；</p><p>(2) x α ≺ x β , x γ ∈ T ，那么， x α + γ ≺ x β + γ ；</p><p>(3) ≺ 为Τ上的良序，即Τ上每一个非空子集有极小元。</p><p>其中 T = { X α = x 1 α 1 x 2 α 2 ⋯ x n α n | α = ( α 1 , α 2 , ⋯ , α n ) ∈ Z ≥ 0 n } 是所有单项的集合。</p><p>单项式序常见的有三种，字典序，分次字典序，分次逆字典序。</p><p>定义2.4 设 α = ( α 1 , ⋯ , α n ) , β = ( β 1 , ⋯ , β n ) ∈ Z ≥ 0 n ，如果 α − β ∈ Z n 的最左边非空元素为正数，则称单项式 x α ≺ l e x x β 为字典序排序。</p><p>定义2.5 非零多项式 f ∈ k [ x 1 , ⋯ , x n ] 在给定的单项式序下，可唯一表示为 f = c 1 x α 1 + ⋯ + c n x α n</p><p>则称 L C ( f ) = c 1 为多项式f的首项系数， M u l i d e g r e e ( f ) = α 1 为多项式f的次数， L M ( f ) = x α 1 为多项式f的首单项式， L t ( f ) = L C ( f ) L M ( f ) = c 1 x α 1 为多项式f的首项。</p><p>定义2.6 在多项式环 k [ x 1 , ⋯ , x n ] 上给定一个单项式序，非零理想I的有限子集 G = { g 1 , ⋯ , g t } ，如果满足</p><p>〈 L T ( g 1 ) , ⋯ , L T ( g t ) 〉 = 〈 L T ( I ) 〉</p><p>称G为理想I的Gr&#246;bner基。</p><p>结合多元多项式除法，Gr&#246;bner基理论为理想成员问题提供了一个判定过程：给定一个多项式 q ∈ k [ X ] 和理想 I = 〈 G 〉 = 〈 g 0 , ⋯ , g m 〉 ⊆ k [ X ] 。通过计算余数是否等于零，则可判定q是否为I中的元素。</p></sec><sec id="s7"><title>3. 代数模型</title><p>Buchberger算法利用S-多项式去求多项式的Gr&#246;bner基，该算法的时间和空间复杂度是指数级的，在实际应用中是不可行的。因此本文直接将电路建模为Gr&#246;bner基多项式。</p><p>考虑一个具有l个布尔输入 a 0 , ⋯ , a l − 1 和m个输出 s 0 , ⋯ , s m − 1 的电路C。它的每个内部门由一个门变量 g 0 , ⋯ , g j 表示。接下来在相同的布尔输入 a 0 , ⋯ , a l − 1 下，设电路C'有m个不同的输出 s ′ 0 , ⋯ , s ′ m − 1 。与电路C中每个门(输出)类似，在电路C'中由门变量 g ′ 0 , ⋯ , g ′ k 表示。</p><p>门电路的逻辑门用多项式和信号作为布尔变量建模。其布尔变量之间的多项式关系是</p><p>u = &#172; v ⇔ − u + 1 − v = 0 u = v ∧ w ⇔ − u + v w = 0 u = v ∨ w ⇔ − u + v + w − v w = 0 u = v ⊕ w ⇔ − u + v + w − 2 v w = 0 (1)</p><p>每个逻辑门都是以门输入变量来描述门输出变量的方式来建模的。</p><p>每个多项式的一般形式是：</p><p>p i = 首 项 ( x i ) + 尾 部 ( p i )</p><p>其中首项 x i 是门的输出变量，尾部 p i 是由门的输入变量组成的术语。根据这个多项式形式，模型的所有首项都是相对素的。电路是在布尔值范围内操作，因此，对于变量u，可得到关系式 u ( u − 1 ) = 0 。满足等式左侧的多项式编码形式称为域多项式F。</p><p>定义3.1 设 G ∈ k [ X ] 是满足(1)的对应多项式的电路C每个门的集合，并且多项式 a i ( a i − 1 ) 和 b i ( b i − 1 ) 称为输入域多项式， 0 ≤ i &lt; n 。则 G ∈ k [ X ] 中生成的理想用 J ( C ) 表示。</p><p>定义3.2设C是一个电路。一个多项式 p ∈ k [ X ] 被称为电路C的多项式电路约束(PCC)，如果把 ( a 0 , ⋯ , a n − 1 , b 0 , ⋯ , b n − 1 ) ∈ { 0 , 1 } 2 n 和结果值 g 0 , ⋯ , g k , s 0 , ⋯ , s 2 n − 1 带入多形式p得0。</p><p>定义3.3 电路C被称为乘法器，如果满足 ∑ i = 0 2 n − 1 2 i s i − ( ∑ i = 0 n − 1 2 i a i ) ( ∑ i = 0 n − 1 2 i b i ) 是PCC。</p><p>本文针对于简单部分积生成的乘法器，其中部分积是指由两个电路输入通过与门产生的输出。为了从Gr&#246;bner基中消除带有部分积的这些多项式，把定义3.3中乘法器的规范改为推论3.1中规定的规范。</p><p>推论3.1 电路C是乘法器，如果满足 ∑ i = 0 2 n − 1 2 i s i − ∑ i , j = 0 n − 1 p i , j ∈ J ( C ) ，其中 p i , j = a i b i 。</p><p>通过展开定义3.3中的和式，并在推论3.1中用 a i b i 替代 p i , j ，很容易地验证推论3.1的正确性。</p><p>乘法器的结构包括多个全加器及半加器，下面就以简单的全加器为例，给出理想成员问题判定过程：</p><p>例1：实现图1所示功能 s i + 2 c i = a i + b i + c i − 1 的全加器电路。</p><p>图1. 全加器电路</p><p>根据(1)，得图1的代数模型是</p><p>g 1 : = − c i − x 4 x 3 + x 4 x 3 ,   g 2 : = − s i − 2 x 1 c i − 1 + x 1 + c i − 1</p><p>g 3 : = − x 4 + x 2 c i − 1 ,     g 4 : = − x 3 + a i b i ,</p><p>g 5 : = − x 2 − a i b i + a i + b i ,     g 6 : = − x 1 − 2 a i b i + a i + b i</p><p>其中规范多项式为 p s p e c = − 2 c i − s i + c i − 1 + b i + a i ，将多项式变量按电路的逆拓扑顺序 a i ≺ b i ≺ c i − 1 ≺ x 1 ≺ x 2 ≺ x 3 ≺ x 4 ≺ s i ≺ c i 排序，在此序下，用规范多项式 p s p e c 归约代数模型 g i ：</p><p>p s p e c → g 1 − s i + 2 x 4 x 3 − 2 x 4 − 2 x 3 + c i − 1 + b i + a i</p><p>→ g 2 2 x 4 x 3 − 2 x 4 − 2 x 3 + 2 x 1 c i − 1 − x 1 + b i + a i</p><p>→ g 3 2 x 3 x 2 c i − 1 − 2 x 3 − 2 x 2 c i − 1 + 2 x 1 c i − 1 − x 1 + b i + a i</p><p>→ g 4 2 x 2 c i − 1 b i a i − 2 x 2 c i − 1 + 2 x 1 c i − 1 − x 1 − 2 b i a i + b i + a i</p><p>→ g 5 2 x 1 c i − 1 − x 1 + 4 c i − 1 b i a i − 2 c i − 1 a i − 2 c i − 1 b i − 2 b i a i + b i + a i</p><p>→ g 6 0</p><p>通过计算得余数为0，因此提取的代数模型为Gr&#246;bner基。为了更好的加快验证效率，下节将介绍Gr&#246;bner基的约化。</p></sec><sec id="s8"><title>4. 加法器重写</title><p>通常情况，关于生成的Gr&#246;bner基归约规范，会导致中间约化结果中单项式的数量急剧增加，而影响验证效率 [<xref ref-type="bibr" rid="hanspub.40120-ref9">9</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref15">15</xref>]。因此我们利用加法器重写，以便更有效约化Gr&#246;bner基 [<xref ref-type="bibr" rid="hanspub.40120-ref12">12</xref>]。</p><p>首先在乘法器的门级表示中识别全加器和半加法器，并将它们视为独立电路。然后应用变量消去，即用相应的加法器规范来代替全加器和半加法器内部门的所有多项式。这会使表示整个乘法器的Gr&#246;bner基更小、更紧凑，从而加快了归约过程。</p><p>定义4.1 一个电路C被称为全加器，如果满足 − 2 c − s + a + b + i 是PCC；相应地，一个电路 被称为半加器，如果满足 − 2 c − s + a + b 是PCC。其中 c , s 表示输出， a , b , i 表示输入。</p><p>例2 给出简单全加器电路 相应的规范多项式：</p><p>H = { − c + g 1 + g 2 − g 1 g 2 , − s + g 0 + i − 2 g 0 i , − g 2 + a b , − g 1 + g 0 i , − g 0 + a + b − 2 a b }</p><p>那么H是 J ( A ) = 〈 H 〉 关于序 a &lt; b &lt; i &lt; g 0 &lt; g 1 &lt; g 2 &lt; s &lt; c 的Gr&#246;bner基。</p><p>为了消除内部变量 g 0 , g 1 , g 2 ，直接将输出 s , c 表示为加法器输入 a , b , i 的多项式。下面就给出相关定义和定理，其中R表示环 k [ a , b , i , s , c , g 0 , g 1 , g 2 ] 和 R e l i m 表示环 k [ a , b , i , s , c ] [<xref ref-type="bibr" rid="hanspub.40120-ref9">9</xref>]。</p><p>定义4.2 给定 J ⊂ R ，消去理想 J e l i m 是 R e l i m 的理想，定义 J e l i m = J ∩ R e l i m [<xref ref-type="bibr" rid="hanspub.40120-ref9">9</xref>]。</p><p>定理4.1 设 J ⊂ R 为理想， H ′ 是J关于序 a &lt; b &lt; i &lt; s &lt; c &lt; g 0 &lt; g 1 &lt; g 2 的Gr&#246;bner基。那么集合 H e l i m = H ′ ∩ R e l i m 是消去理想 J e l i m 的Gr&#246;bner基 [<xref ref-type="bibr" rid="hanspub.40120-ref9">9</xref>]。</p><p>例1 (续) 为了消除变量 g 0 , g 1 , g 2 ，从H中删除涉及这些变量的多项式是不可行的。因此我们根据定理4.1中给定的序，去计算第二个Gr&#246;bner基 H ′ 。再从 H ′ 中删除涉及 g 0 , g 1 , g 2 的多项式，得</p><p>H e l i m = { − 2 c − s + a + b + i , − s + a + b + i − 2 a b − 2 a i − 2 b i + 4 a b i } .</p><p>由定理4.1， H e l i m 是 J e l i m ( A ) 的Gr&#246;bner基，则Gr&#246;bner 基就通过加法器重写得以化简。值得一提的是，对于本文研究的能完全分为全加器和半加法器的乘法器，可以约化首项是全加器或半加法器的和输出多项式，如 H e l i m 中多项式 − 2 c − s + a + b + i 就可以被首项是 − s 的多项式约化。将其从Gr&#246;bner基中消除会带来进一步的改进，但Gr&#246;bner基消除该方法有失完备性。</p></sec><sec id="s9"><title>5. 增量式等价性验证</title><p>本节引入了一种基于电路列式切片的增量验证将乘法器电路的整体Gr&#246;bner基划分为2n个更小的切片Gr&#246;bner基。将问题分解为更小的2n个子问题，逐个解决 [<xref ref-type="bibr" rid="hanspub.40120-ref15">15</xref>] [<xref ref-type="bibr" rid="hanspub.40120-ref16">16</xref>]。</p><p>定义5.1 设C和C'是两个电路，如果 s i − s ′ i 是一个PCC ( i = 0 , 1 , ⋯ , m − 1 )，那么电路C和C'是等价的，记为 C ≡ C ′ 。</p><p>引理5.1 C ≡ C ′ 当且仅当 ∑ i = 0 m − 1 2 i ( s i − s ′ i ) ∈ J ( C ∪ C ′ ) 。</p><p>引理5.2 设C和C'是 两个电路，G和 G ′ 是理想 J ( C ) 和 J ( C ′ ) 关于序 ≺ , ≺ ′ 的Gr&#246;bner基。设 ≺ ∪ ​ 是一个反向拓扑序，使得 ≺ , ≺ ′ 属于 ≺ ∪ ​ 中。那么 G ∪ G ′ 是理想 J ( C ∪ C ′ ) 关于 ≺ ∪ ​ 的Gr&#246;bner基。</p><p>本文中的增量式等价性验证技术，使用切片和切片Gr&#246;bner基的定义 [<xref ref-type="bibr" rid="hanspub.40120-ref15">15</xref>]。对电路进行切片，进而进行增量式的等价性验证，由于电路 C ∪ C ′ 的和的规范可能是未知的，或者无法在Z上以规范和抽象形式表示，不能使用对给定规范执行理想成员的资格测试。因此将 C ∪ C ′ 和表示为多项式集，并将它们的Gr&#246;bner基组合成一个模型 G ∪ ​ = G ∪ G ′ 。然后将问题转化为测试 G 1 和 G 2 关于 G ∪ ​ 中变量之间的成员关系。</p><p>定义5.2 设是C和C'上述的两个电路</p><p>1) 对于每对输出位s和s'，我们确定其输入锥，即与门，其依赖于：</p><p>I i = { 门   g | g   在 输 出   s   或   s ′   的 输 入 锥 }</p><p>2) 切片 S i 定义为连续锥 I i 的差：</p><p>S 0 : = I 0</p><p>S i + 1 : = I i + 1 ∖ ∪ j = 0 i S j</p><p>若 G i 是切片 S i 中电路C和C'的门 的多项式集，则易证 G i 是切片 S i 的Gr&#246;bner基。</p><p>定义5.3 设C和C'是上述两个电路，在其变量上m个 Δ 0 , ⋯ , Δ m 的多项式序列称为切片多项式序列，如果</p><p>− Δ i + 2 Δ i + 1 + ( s i − s ′ i ) ∈ J ( C ∪ C ′ ) ， ( 0 ≤ i ≤ m )</p><p>那么多项式 E i = − Δ i + 2 Δ i + 1 + ( s i − s ′ i ) 就称为 Δ 0 , ⋯ , Δ m 序列的切片关系。</p><p>定理5.4 设C和C'是上述两个电路， Δ 0 , ⋯ , Δ m 是定义4.3中定义的切片多项式序列。那么根据引理5.1，C和C'是等价的( C ≡ C ′ )当且仅当 2 m Δ m − Δ 0 ∈ J ( C ∪ C ′ ) 。</p><p>证明：</p><p>根据定义5.3，得 J ( C ∪ C ′ )</p><p>∑ i = 0 m − 1 2 i ( s i − s ′ i ) = ∑ i = 0 m − 1 2 i ( 2 Δ i + 1 − Δ i ) = 2 m Δ m − Δ 0</p><p>设边界 2 m Δ m = 0</p><p>Δ m − 1 = [ 2 Δ m + ( s m − s ′ m ) ] % G m − 1</p><p>Δ m − 2 = [ 2 Δ m − 1 + ( s m − 1 − s ′ m − 1 ) ] % G m − 2</p><p>⋮</p><p>Δ 0 = 0</p><p>这确保了所有的 E i 都在 J ( C ∪ C ′ ) 中。 J ( C ∪ C ′ ) 包含所有的域多项式F，因此将它们添加到 G ∪ G ′ 中。最后，计算是否 Δ 0 = 0 。下面给出算法：</p><p>根据定理5.4，我们能推导出增量等价性验证算法。先固定边界 2 m Δ m = 0 ，并通过计算切片Gr&#246;bner基的 2 Δ i + 1 + s i − s ′ i 模的余数递归地导出 Δ i ， E i ∈ J ( C ∪ C ′ ) 。通过计算最后 Δ 0 的结果。如果 Δ 0 = 0 ，则乘法器电路C和C'是等价的。</p></sec><sec id="s10"><title>6. 实验</title><p>本文对两类整数乘法器进行等价性验证，分别是btor乘法器和sp-ar-rc乘法器。这两个乘法器都是根据推论3.2中的部分积作为两个输入位，然后由全加器和半加法器进行累加，如图2所示。</p><p>图2. 具有 p i j = a i b j 的 n = 4 的btor乘法器(左)和sp-ar-rc (右)乘法器的结构</p><p>图2是 n = 4 的4位两输入的实验验证的两类乘法器的结构。在btor乘法器中，全加法器和半加法器以网格状结构累积(图2左侧)；而在sp-ar-rc乘法器中，全加法器和半加法器是对角累积的(图2右侧)。我们使用工具aigmultopoloy [<xref ref-type="bibr" rid="hanspub.40120-ref15">15</xref>]，该工具以电路的AIG表示作为输入，并返回一个包含计算指令的文件。由于Mathematica输入语言更灵活，支持更多变量，被用作计算机代数系统，因而本文将这些指令传递给Mathematica。</p><p>实验使用了一台带有Ubuntu18.04虚拟机的笔记本电脑，配备Intel i5-8250 1.60 GHz CPU和4 GB主内存。运行时间限制设置为1200秒，主内存使用限制为4 GB。实验中的时间均以秒为单位列出。我们测量从aigmultopoloy开始到Mathematica 完成的时间，包括该aigmultopoloy工具生成Mathematica文件所需的时间和计算机代数系统的启动时间。在实验数据中用TO表示达到时间限制、MO表示达到内存限制、EE表示状态错误。</p><p>如表1所示，无论是Lingeling还是ABC在n大于8位时，都超出实验设定的运行时间，而增量方法能验证达32位的这两类乘法器的等价性 [<xref ref-type="bibr" rid="hanspub.40120-ref16">16</xref>]。在此基础上添加加法器重写(第六列)，不仅能计算高达128位的等价性，同时8~32位乘法器的等价性验证也有着明显的加快。表中最后一列，不仅采用增量验证方法，还利用第四节中提到的Gr&#246;bner基消去，实验数据显示，与第六列相比对各位数乘法器的验证时间均略具优势。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Equivalence checkin</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >乘法器</th><th align="center" valign="middle" >n</th><th align="center" valign="middle" >Lingeling</th><th align="center" valign="middle" >ABC</th><th align="center" valign="middle" >增量方法</th><th align="center" valign="middle" >+加法器重写</th><th align="center" valign="middle" >+Gr&#246;bner基消去</th></tr></thead><tr><td align="center" valign="middle" >btor vs. sp-ar-rc</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >13</td><td align="center" valign="middle" >18</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >btor vs. sp-ar-rc</td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >TO</td><td align="center" valign="middle" >TO</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >btor vs. sp-ar-rc</td><td align="center" valign="middle" >32</td><td align="center" valign="middle" >TO</td><td align="center" valign="middle" >TO</td><td align="center" valign="middle" >82</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >3</td></tr><tr><td align="center" valign="middle" >btor vs. sp-ar-rc</td><td align="center" valign="middle" >64</td><td align="center" valign="middle" >TO</td><td align="center" valign="middle" >TO</td><td align="center" valign="middle" >TO</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >17</td></tr><tr><td align="center" valign="middle" >btor vs. sp-ar-rc</td><td align="center" valign="middle" >128</td><td align="center" valign="middle" >TO</td><td align="center" valign="middle" >TO</td><td align="center" valign="middle" >TO</td><td align="center" valign="middle" >188</td><td align="center" valign="middle" >175</td></tr></tbody></table></table-wrap><p>表1. 等价性验证</p></sec><sec id="s11"><title>7. 结论</title><p>本文基于Gr&#246;bner基着眼于结构相似的乘法器，采用了增量式的等价性验证算法。在这个基础上，添加加法器重写和Gr&#246;bner基消去的算法相关实现，并已于Linux系统中成功编译。实验对比不同方法进行等价性验证的运行时间，由实验数据易见，增量等价性验证能提高验证效率，并在此基础上进一步进行优化，其验证时间略具优势。未来如何将这些技术扩展到浮点运算，甚至更具挑战性的乘法器结构和其他算术电路还有待进一步研究。</p></sec><sec id="s12"><title>文章引用</title><p>张璇思,刘佳姝,江建国. 基于GrO<sup>&#168;</sup>bner基方法的乘法器等价性验证Equivalence Verification of Multipliers Based on GrO<sup>&#168;</sup>bner Basis Method[J]. 应用数学进展, 2021, 10(01): 343-350. https://doi.org/10.12677/AAM.2021.101039</p></sec><sec id="s13"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.40120-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">包日辉. SoC设计平台中若干IP模块的设计[D]:[硕士学位论文]. 杭州: 杭州电子科技大学, 2019.</mixed-citation></ref><ref id="hanspub.40120-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Clarke, E.M., Grumberg, O. and Peled, D. (1999) Model Checking. The MIT Press, Cambridge.</mixed-citation></ref><ref id="hanspub.40120-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">韩俊刚, 杜敏慧. 数字硬件的形式化验证[M]. 北京: 北京大学出版社, 2001.</mixed-citation></ref><ref id="hanspub.40120-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">静思. 让科学之声以更强的力度震撼神州大地一从“奔腾芯片”的错误引发的联想[J]. 电子展望与决策, 1995(3): 23.</mixed-citation></ref><ref id="hanspub.40120-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Pruss, T., Kalla, P. and Enescu, F. (2014) Equivalence Verification of Large Galois Field Arithmetic Circuits Using Word- Level Abstraction via Gröbner Bases. Proceedings of the 51st Annual Design Automation Conference, San Francisco, June 2014. 1-6. &lt;br&gt;https://doi.org/10.1145/2593069.2593134</mixed-citation></ref><ref id="hanspub.40120-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Fan, Q.R., Pan, F. and Duan, X.D. (2011) Using Logic Synthesis and Circuit Reasoning for Equivalence Checking. Advanced Materials Research, 201-203, 836-840. &lt;br&gt;https://doi.org/10.4028/www.scientific.net/AMR.201-203.836</mixed-citation></ref><ref id="hanspub.40120-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Vedhus, H. (2020) Deep Bayesian Neural Networks for Damage Quantification in Miter Gates of Navigation Locks. Structural Health Monitoring, 19, 1391-1420. &lt;br&gt;https://doi.org/10.1177/1475921719882086</mixed-citation></ref><ref id="hanspub.40120-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">周宁. 代数化符号模拟验证的应用研究[D]: [博士学位论文]. 北京: 北京交通大学, 2015.</mixed-citation></ref><ref id="hanspub.40120-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Cox, D., Little, J. and O’Shea, D. (1997) Ideals, Varieties, and Algorithms. Springer-Verlag, New York. 
&lt;br&gt;https://doi.org/10.1007/978-1-4757-2693-0</mixed-citation></ref><ref id="hanspub.40120-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Huang, G.L. and Zhou, M. (2015) On The Termination of Algorithm for Computing Relative Gröbner Bases. ACM Communications in Computer Algebra, 49, 28. &lt;br&gt;https://doi.org/10.1145/2768577.2768632</mixed-citation></ref><ref id="hanspub.40120-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">李春红. 基于乘法器的振幅调制实验特性研究[J]. 2020, 33(2): 33-37.</mixed-citation></ref><ref id="hanspub.40120-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Sayed-Ahmed, A., Große, D., Kühne, U. Soeken, M. and Drechsler, R. (2016) Formal Verification of Integer Multipliers by Combining Gröbner Bases with Logic Reduction. 2016 Design, Automation &amp; Test in Europe Conference &amp; Exhibition, Dresden, 14-18 March 2016, 1048-1053. &lt;br&gt;https://doi.org/10.3850/9783981537079_0248</mixed-citation></ref><ref id="hanspub.40120-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Chen, J. and Chen, Y. (2001) Equivalence Checking of Integer Multipliers. Proceedings of the 2001 Asia and South Pacific Design Automation Conference, Yokohama, 169-174. &lt;br&gt;https://doi.org/10.1145/370155.370315</mixed-citation></ref><ref id="hanspub.40120-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Lv, J., Kalla, P. and Enescu, F. (2013) Efficient Gröbner Basis Reductions for Formal Verification of Galois Field Arithmetic Circuits. IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems, 32, 1409-1420. 
&lt;br&gt;https://doi.org/10.1109/TCAD.2013.2259540</mixed-citation></ref><ref id="hanspub.40120-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Ritirc, D., Biere, A. and Kauers, M. (2017) Column-Wise Verification of Multipliers Using Computer Algebra. 2017 Formal Methods in Computer Aided Design, Vienna, 2-6 October 2017, 23-30.  
&lt;br&gt;https://doi.org/10.23919/FMCAD.2017.8102237</mixed-citation></ref><ref id="hanspub.40120-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Ritirc, D., Biere, A. and Kauers, M. (2018) Improving and Extending the Algebraic Approach for Verifying Gate-Level Multipliers. 2018 Design, Automation &amp; Test in Europe Conference &amp; Exhibition, Dresden, 19-23 March 2018, 1556-1561.  
&lt;br&gt;https://doi.org/10.23919/DATE.2018.8342263</mixed-citation></ref></ref-list></back></article>