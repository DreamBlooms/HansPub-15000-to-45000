<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2020.106114</article-id><article-id pub-id-type="publisher-id">CSA-35948</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20200600000_50224866.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于Motif的社交网络用户影响力排序方法研究
  Research on Social Network User Impact Ranking Method Based on Motif
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>曲</surname><given-names>贤菲</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>田</surname><given-names>朝霞</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>旭</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>大连海事大学信息科学技术学院，辽宁 大连</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>04</day><month>06</month><year>2020</year></pub-date><volume>10</volume><issue>06</issue><fpage>1098</fpage><lpage>1112</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   LeaderRank已被广泛地用于衡量社交网络中用户的影响力或重要性的排序算法，但传统的LeaderRank仅利用基于边的关系，而忽略由少量节点组成的子图捕获的高阶关系。在本文中，我们提出一种基于Motif的LeaderRank (MLR)算法，将Motif的高阶关系合并到LeaderRank算法中，提高社交网络用户影响力的排序效果。我们在Twitter数据集上进行实验，结果不仅表明MLR算法的可行性，并且还显著提高了在社交网络用户影响力排序的准确性。除了与基线算法比较之外，还对MLR算法的参数进行分析，表明在社交网络中对用户影响力排序时，MLR算法比LeaderRank要更好。 LeaderRank has been widely used in ranking algorithms to measure the influence or importance of users in social networks, but traditional LeaderRank only uses edge-based relationships and ignores high-order relationships captured by a subgraph composed of a small number of nodes. In this paper, we propose a Motif-based LeaderRank (MLR) algorithm, which incorporates the higher-order relationships of Motif into the LeaderRank algorithm to improve the ranking effect of social network user influence. We perform experiments on the Twitter dataset, and the results not only show the feasibility of the MLR algorithm, but also significantly improve the accuracy of the ranking of user influence in social networks. In addition to comparing with the baseline algorithm, the parameters of the MLR algorithm are also analyzed, which shows that the MLR algorithm is better than LeaderRank when ranking user influence in social networks. 
  
 
</p></abstract><kwd-group><kwd>LeaderRank算法，社交网络，高阶关系，排序方法, LeaderRank Algorithm</kwd><kwd> Social Network</kwd><kwd> Higher-Order Relationship</kwd><kwd> Ranking Method</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于Motif的社交网络用户影响力排序方法研究<sup> </sup></title><p>曲贤菲，田朝霞，陈旭</p><p>大连海事大学信息科学技术学院，辽宁 大连</p><p>收稿日期：2020年5月15日；录用日期：2020年5月28日；发布日期：2020年6月4日</p><disp-formula id="hanspub.35948-formula17"><graphic xlink:href="//html.hanspub.org/file/3-1541780x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>LeaderRank已被广泛地用于衡量社交网络中用户的影响力或重要性的排序算法，但传统的LeaderRank仅利用基于边的关系，而忽略由少量节点组成的子图捕获的高阶关系。在本文中，我们提出一种基于Motif的LeaderRank (MLR)算法，将Motif的高阶关系合并到LeaderRank算法中，提高社交网络用户影响力的排序效果。我们在Twitter数据集上进行实验，结果不仅表明MLR算法的可行性，并且还显著提高了在社交网络用户影响力排序的准确性。除了与基线算法比较之外，还对MLR算法的参数进行分析，表明在社交网络中对用户影响力排序时，MLR算法比LeaderRank要更好。</p><p>关键词 :LeaderRank算法，社交网络，高阶关系，排序方法</p><disp-formula id="hanspub.35948-formula18"><graphic xlink:href="//html.hanspub.org/file/3-1541780x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/3-1541780x7_hanspub.png" /> <img src="//html.hanspub.org/file/3-1541780x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>近年来，网络在人们生活中的地位越加凸显，在线社交网络已成为大多数人日常交流和互动的平台。社交网络中的用户影响力排序是意见领袖挖掘 [<xref ref-type="bibr" rid="hanspub.35948-ref1">1</xref>]、影响力分析 [<xref ref-type="bibr" rid="hanspub.35948-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.35948-ref3">3</xref>]、社会信任度 [<xref ref-type="bibr" rid="hanspub.35948-ref4">4</xref>] 的普遍问题。PageRank [<xref ref-type="bibr" rid="hanspub.35948-ref5">5</xref>] 算法被视为在社交网络中对用户影响力排序的通用算法，可将其用来衡量意见领袖挖掘以及影响力分析和社会信任度分析的一种措施。但该算法在应对悬挂节点(出度为0的节点)、不连通子图或出现环形有向图时会出现排序结果不唯一的现象，并且该算法用到的阻尼系数d对每个用户都是统一的，这点用在不同的用户身上存在着缺陷。Lv等 [<xref ref-type="bibr" rid="hanspub.35948-ref6">6</xref>] 针对相关的情况，提出了一种LeaderRank算法，其是在网络中添加一个背景节点，并且将该背景节点与网络中的其他节点双向连接，得到一个G (N + 1, M + 2N)的新的强连通网络，如图1所示，对网络的噪音有很好的容忍性，相比PageRank算法收敛更快、准确性更高。</p><p>但是LeaderRank在社交网络分析中有一些限制，在网络中，可能存在一些重要的结构，这些结构可能会对节点的影响力或可信度产生影响。如图1所示，在LeaderRank算法中边e<sub>12</sub>、边e<sub>13</sub>和边e<sub>14</sub>的权重设为相同的值，但是我们可以看到，相比节点4，节点1更信任节点2和节点3，是因为节点2和节点3存在相互关系，节点1、节点2和节点3构成三角形结构，因此将边e<sub>12</sub>、边e<sub>13</sub>和边e<sub>14</sub>的权重设为相同的值是不合理的。因此在社交网络中考虑涉及多个节点的高阶结构是非常重要的。</p><p>在本文中，我们提出了一种基于Motif的LeaderRank (Motif-based LeaderRank, MLR)算法，我们捕获网络中Motif的高阶关系，并将该高阶关系合并到LeaderRank算法中，用于社交网络用户影响力排序。文献 [<xref ref-type="bibr" rid="hanspub.35948-ref7">7</xref>] 提到，由于在社交网络方面，许多工作着重于分析三重闭合作为社交网络的重要结构特征以及分析三元配置作为各种社交网络理论的基础，因此，在本文中，我们主要考虑社交网络的三角关系，在本文中我们主要考虑基于社交网络三角关系的3-节点简单Motif。图2显示了一些典型的基于社交网络三角关系的3-节点简单Motif，其中M<sub>6</sub>表示图1中节点1、节点2和节点3的3-节点简单Motif。我们在美国社交网络及微博客服务数据集Twitter上进行实验，来提取有影响力用户，我们使用基线算法度中心性方法IND，原始LeaderRank算法和加权LeaderRank算法，结果表明我们提出的MLR算法明显优于基线算法度中心性方法IND，原始LeaderRank算法和加权LeaderRank算法。在这项工作中，我们采用线性关系来对基于社交网络三角关系的3-节点简单Motif的高阶关系和基于边的直接关系进行组合，通过对参数的调节，表明了基于社交网络三角关系的3-节点简单Motif的高阶关系和基于边的直接关系在计算节点的权威性方面是相互补充的。</p><p>图1. LeaderRank算法示意图。该算法在原网络中引入一个背景节点</p><p>图2. 有向无权图中的基于社交网络三角关系的3-节点简单Motif</p></sec><sec id="s4"><title>2. 相关研究</title><p>在本节中，我们介绍在复杂网络上使用LeaderRank和Motif进行计算的相关工作。</p><sec id="s4_1"><title>2.1. LeaderRank算法</title><p>首次引入LeaderRank来对网络上的网页进行排序是Lv等 [<xref ref-type="bibr" rid="hanspub.35948-ref6">6</xref>]，该算法主要是参考PageRank算法的基本思想，并在PageRank算法的基础上来进行不断的改进，并且在N个节点里面加上背景节点这样就获取了N + 1的网络G (N + 1, M + 2N)。除了进行网页排名之外，LeaderRank还用于许多其他领域，例如引文网络分析和意见领袖挖掘。在引文网络方面，邓启平等 [<xref ref-type="bibr" rid="hanspub.35948-ref8">8</xref>] 充分考虑到了引用、合作这样不同的选项，分析哪些人更有影响力，并且按照合作数量还有被引的情况进行分析，并对作者开展相应的排序活动。在意见领袖方面，徐郡明等 [<xref ref-type="bibr" rid="hanspub.35948-ref9">9</xref>] 则是充分想到使用者彼此有比较大的想法区别，都会按照自身的感情进行分析问题，就以此进行研究，并对LeaderRank算法进行了完善，添上了情感这一项，经过相应的完善，该算法具有了比较强的抗干扰水平，并且更加精准。此外，Zhang等 [<xref ref-type="bibr" rid="hanspub.35948-ref10">10</xref>] 则充分分析了多种不一样的算法，并且据此开展研究，将节点聚类，获取其中边的具体权值。Bakshy等 [<xref ref-type="bibr" rid="hanspub.35948-ref11">11</xref>] 在具体的验证过程中对其中的一些Twitter数值进行比较，了解用户的影响力的用途。顾亦然等 [<xref ref-type="bibr" rid="hanspub.35948-ref12">12</xref>] 则充分依照到LeaderRank算法，通过相似度分析彼此的用途，这样就能让具体的效果更好，并且通过相应的模型，让算法精准度更好。与我们的工作相比，所有先前的研究仅是在LeaderRank算法中仅仅考虑了边关系，而忽略了多个节点之间的高阶关系。</p></sec><sec id="s4_2"><title>2.2. 复杂网络中Motif的识别问题</title><p>网络是一个由多个节点组成的集合，节点之间有一定的连接，而不同于规则网络和随机网络的一些网络被称为复杂网络。复杂网络具有许多统计特征，其中最重要的是小世界效应 [<xref ref-type="bibr" rid="hanspub.35948-ref13">13</xref>] [<xref ref-type="bibr" rid="hanspub.35948-ref14">14</xref>] 和无标度特性 [<xref ref-type="bibr" rid="hanspub.35948-ref15">15</xref>] [<xref ref-type="bibr" rid="hanspub.35948-ref16">16</xref>]。随着复杂网络研究的进一步深入，网络中Motif的识别问题越来越受到关注，Milo等 [<xref ref-type="bibr" rid="hanspub.35948-ref17">17</xref>] 人首次对在复杂网络中识别网络Motif的问题进行系统的阐述，激发人们对网络Motif识别技术研究的极大兴趣，在社交网络 [<xref ref-type="bibr" rid="hanspub.35948-ref18">18</xref>] [<xref ref-type="bibr" rid="hanspub.35948-ref19">19</xref>]，学术网络 [<xref ref-type="bibr" rid="hanspub.35948-ref20">20</xref>]，生物学 [<xref ref-type="bibr" rid="hanspub.35948-ref21">21</xref>] 等方面应用广泛。此外，之前的大部分工作都集中在如何对子图计数，在文献 [<xref ref-type="bibr" rid="hanspub.35948-ref22">22</xref>] 中，提出一种快速高效的并行算法对3-节点Motif和4-节点Motif进行计算。在文献 [<xref ref-type="bibr" rid="hanspub.35948-ref23">23</xref>] 中，提出一种采样算法对4-节点Motif进行计算。在文献 [<xref ref-type="bibr" rid="hanspub.35948-ref24">24</xref>] 中提出了一种向左向右摇摆的蹒跚随机游走算法，该算法通过使用随机协议对步行走访的节点附近的子图进行采样来实现其计算效率。Motif也被应用在图聚类或社区检测 [<xref ref-type="bibr" rid="hanspub.35948-ref25">25</xref>] 方面。在文献 [<xref ref-type="bibr" rid="hanspub.35948-ref20">20</xref>] 中，Wang等人提出通过衡量节点在网络中的参与程度来衡量其重要性。与这些先前的研究相比，我们结合了Motif来探索基于社交网络三角关系的3-节点简单Motif，然后将该高阶关系与基于边的直接关系进行结合通过LeaderRank来对社交网络用户影响力进行排序。</p></sec></sec><sec id="s5"><title>3. 基于Motif的LeaderRank算法</title><sec id="s5_1"><title>3.1. 问题描述</title><p>社交网络中的社区由网络中一定数量的节点组成，令社交网络 G = ( V ′ , E ′ , W ′ ) ，其中 V ′ = { v ′ i | i = 1 , 2 , ⋯ , f } 是节点集合， E ′ = { e ′ i j | i , j = 1 , ⋯ , f } 是边的集合， e ′ i j 表示从 v ′ i 到 v ′ j 的一条边。W'是邻接矩阵， W ′ i j 代表 e ′ i j 的权重。G是由 { G 1 , G 2 , ⋯ , G r } 多个社区构成，如图3所示，利用社区发现算法划分社区，对某一社区进行社交网络用户影响力排序。令社区 G 1 = ( V , E , W ) ，其中 V = { v i | i = 1 , 2 , ⋯ , n , n + 1 } 是节点集合， E = { e i j | i , j = 1 , ⋯ , n , n + 1 } 是边的集合，e<sub>ij</sub>表示从v<sub>i</sub>到v<sub>j</sub>的一条边。W是邻接矩阵，W<sub>ij</sub>代表e<sub>ij</sub>的权重。除背景节点外的有向无权图，如果e<sub>ij</sub>存在则 W i j = 1 否则 W i j = 0 。然后归一化邻接矩阵得到转移概率矩阵P，其中 P i , j = W i , j / ∑ i W i , j 。图上的LeaderRank可以定义如下。</p><p>x = P T ⋅ x (1)</p><p>其中 x ∈ R N + 1 ，并且x<sub>i</sub>表示当迭代达到稳定时的MLR值。达到稳定之后，将背景节点的MLR值平分给N个节点，最终的MLR值计算为</p><p>MLR i = x i + x n + 1 N (2)</p><p>公式(2)中， i = 1 , 2 , ⋯ , n ，N表示网络中除背景节点以外的所有节点的个数。</p><p>在一个社区G<sub>1</sub>，我们可以将该定义概括如下。如果存在从节点v<sub>i</sub>到v<sub>j</sub>的一条边e<sub>ij</sub>，则我们用W<sub>ij</sub>表示v<sub>i</sub>对v<sub>j</sub>的认可强度或v<sub>j</sub>对v<sub>i</sub>施加的影响强度。这个权重可以基于交互频率，用户帖子的内容相似度等来计算，但是，以上所有权重仍然是两个用户之间的一阶关系的计算。如图1所示，对于用户1，W<sub>13</sub>应该大于W<sub>14</sub>，因为节点1和节点3参与了可信度评估中的三角关系。因此，理想的是，权重还可以包含关于这种高阶关系的信息。</p><p>图3. 不包含属性的网络</p></sec><sec id="s5_2"><title>3.2. Motif定义</title><p>定义1：网络Motif。一个Motif由元组(B, A)表示，其中 A ⊂ { 1 , 2 , ⋯ , k } ，B表示k &#215; k二进制矩阵。</p><p>在文献 [<xref ref-type="bibr" rid="hanspub.35948-ref25">25</xref>] 中给出锚节点代表我们感兴趣的节点。通常情况下，锚节点是所有k个节点，在这种情况下，我们称它为简单锚定，否则，我们称它为锚定Motif。在本文中，我们关注3-节点简单Motif，图4给出了一个3-节点简单Motif示例，说明Motif的定义。</p><p>图4. 一个3-节点简单Motif示例</p><p>定义2：Motif集合。带有邻接矩阵W的有向无权图的Motif集合用 F ( B , A ) 表示，定义为</p><p>F ( B , A ) = { ( s e t ( v ) , s e t ( δ A ( v ) ) ) | v ∈ V k , v 1 , ⋯ , v k , d i s t i n c t , W v = B } (3)</p><p>其中δA是一个选择函数，为由A索引的k个元组的子集，而set(.)是一个将有序元组转换为无序元组的运算符 s e t ( ( v 1 , v 2 , ⋯ , v k ) ) = { v 1 , v 2 , ⋯ , v k } 。v是表示k个节点的有序向量，W<sub>v</sub>是有序向量v的k个节点在子图上引起的k &#215; k个邻接矩阵。</p><p>我们用 F ( B , A ) 表示图5的示例如下。</p><p>F ( B , A ) = { ( { 1 , 2 , 3 } , { 1 , 2 } ) , ( { 1 , 2 , 5 } , { 1 , 2 } ) } (4)</p></sec><sec id="s5_3"><title>3.3. 基于Motif的邻接矩阵</title><p>当给定一个Motif集合F，我们使用F中两个节点的共现来捕获3-节点简单Motif的高阶关系，基于Motif的邻接矩阵或共现矩阵的定义如下：</p><p>( W M ) i j = ∑ ( v , δ A ( v ) ) ∈ F l ( { i , j } ⊂ δ A ( v ) ) (5)</p><p>其中 i ≠ j ，l (s)是真值指标函数，即如果语句s为真，则l (s) = 1，否则为0。请注意，对于3-节点简单Motif，要求i和j是set(v)的成员。</p><p>基于Motif的邻接矩阵表示在给定Motif上的两个节点出现的频率。(W<sub>M</sub>)<sub>ij</sub>越大，表示在Motif上i和j之间的关系越明显。如图5所示，该图是由图二中的M<sub>1</sub>和M<sub>6</sub>的3-节点简单Motif构成，当我们以M<sub>6</sub>的3-节点简单Motif来计算邻接矩阵时，构成M<sub>6</sub>的3-节点简单Motif的边权值W<sub>Mij</sub> = 1，其他W<sub>Mij</sub> = 0。注意，边e<sub>12</sub>既属于节点1、节点2和节点5构成的M<sub>6</sub>的3-节点简单Motif又属于节点1、节点2和节点3构成的M<sub>6</sub>的3-节点简单Motif，因此边e<sub>12</sub>的权值为W<sub>M</sub><sub>12</sub> = 2。</p><p>令W为G的邻接矩阵，U和B分别为G的单向链接和双向链接的邻接矩阵。这里，我们集中讨论W中的元素为1或0的非加权图。例如，在图5中，e<sub>23</sub>是双向边，而e<sub>13</sub>是单向边。那么我们有 B = W Θ W T 和 U = W − B ，其中 Θ 表示逐项乘积。注意，B是一个二进制矩阵，表示有向图中两个节点之间存在双向边。</p><p>图5. 基于M<sub>6</sub>的邻接矩阵示例</p><p>我们使用一个示例来说明M<sub>6</sub>的计算过程。如图4所示，三个用户v<sub>i</sub>，v<sub>k</sub>，v<sub>j</sub>有六种不同的情况{(3,1,2), (2,1,3), (1,2,3), (3,2,1), (1,3,2), (2,3,1)}，e<sub>23</sub>是双向边，而e<sub>12</sub>和e<sub>13</sub>是单向边。为了计算M<sub>6</sub>参与下的v<sub>i</sub>和v<sub>j</sub>的频率，我们需要将在六种情况下的所有频率相加，在(1,2,3)中，v<sub>i</sub>为节点1，v<sub>j</sub>为节点3，频率由 ( U ⋅ B ) Θ U 所得，其中 U ⋅ B 计算的是不包括边e<sub>13</sub>的路径1-2-3， Θ U 表示用边e<sub>13</sub>补充图。因此M<sub>6</sub>邻接矩阵的计算为</p><p>W M 6 = ( U ⋅ B ) Θ U + ( B ⋅ U T ) Θ U T + ( U T ⋅ U ) Θ B (6)</p></sec><sec id="s5_4"><title>3.4. 基于M<sub>6</sub>邻接矩阵的案例</title><p>1) 社区发现算法</p><p>这里使用文献 [<xref ref-type="bibr" rid="hanspub.35948-ref26">26</xref>] 中所提到的基于随机游走方法来计算节点属性相似性、节点影响力，评估节点对社区重要程度，使节点向社区核心靠拢来划分社区。</p><p>第一步：子空间构造。发现子属性空间，构建属性增强图。</p><p>将属性转化为网络中的虚拟节点来构造属性增强图，在网络G中，节点与其对应的虚拟节点间建立一条双向边，如图6所示：</p><p>图6. 虚拟节点</p><p>构造属性信息矩阵 Y = ( y i j ) f &#215; f 来描述虚拟节点对原节点关系的影响，构造增量邻接矩阵 W A t t r = ( w i j A t t r ) f &#215; f 来描述加入虚拟节点后新的网络拓扑结构。通过属性影响度Affect(A<sub>i</sub>)来反映将属性信息转化为拓扑结构信息后，原节点间的联系受到多大的影响，计算公式为</p><p>A f f e c t ( A i ) = ∑ i ∑ j ( W A t t r 2 ) i j − ∑ i ∑ j ( W ′ 2 ) i j R β A (7)</p><p>其中A<sub>i</sub>为属性；βA为矩阵缩放因子，作用为更加明显的区分属性的结构影响度。</p><p>第二步：社区划分。计算转移概率，计算核心系数，确定聚类方向，创建初始社区及边缘修剪。</p><p>构造节点影响力strength来描述任意节点的邻接节点对该节点产生的影响，strength<sub>ij</sub>的计算公式为</p><p>s t r e n g t h i j = s i j o u t + s i j i n + s i j A t t r (8)</p><p>其中 s i j o u t 为节点 v ′ i 指向节点 v ′ j 的出链产生的影响力， s i j i n 为节点 v ′ j 指向节点 v ′ i 的入链产生的影响力， s i j A t t r 为属性关系产生的影响力。</p><p>s i j o u t = { 0 , w ′ i j = 0 1 + e 1 − β o u t ∑ h w i h , w ′ i j = 1 (9)</p><p>s i j i n = { 0 , w ′ j i = 0 e / 2 1 − β i n ∑ h w h i , w ′ j i = 1 (10)</p><p>s i j A t t r = { 0 , y i j = 0 1 − 1.1 1 − β A t t r ∑ h w i h 2 / ( 1 + log D ′ ) , y i j = 1 (11)</p><p>其中βout、βin和βAttr分别表示出链系数、入链系数和属性系数，用于控制函数的收敛速度，D'为子属性空间包含的属性数目。</p><p>利用影响力矩阵，得到转移概率矩阵 P ′ ， P ′ = ( p ′ i j ) f &#215; f 。</p><p>P ′ i j = s i j ∑ k s i h (12)</p><p>引入节点核心系数 C r = ( c r 1 , c r 2 , ⋯ , c r f ) T 。节点的转移概率和节点的核心系数共同作用于节点的聚类方向 D r = ( d r 1 , d r 2 , ⋯ , d r f ) T 。取其中系数最大的作为聚类方向，得到初始社区，进行边缘修剪工作，输出社区序列。</p><p>2) 基于Motif的邻接矩阵</p><p>我们构建社区G<sub>1</sub>(16,17)的网络拓扑结构，如图7所示。</p><p>图7. 社区G<sub>1</sub> (16,17)子图结构示意图</p><p>我们对图7识别3-节点简单Motif M<sub>6</sub>，首先我们构建一阶矩阵W，如图8所示。</p><p>图8. 社区G<sub>1</sub> (16,17)一阶矩阵W</p><p>之后依据算法1得出基于M<sub>6</sub>的邻接矩阵。</p><p>算法1：基于M<sub>6</sub>的邻接矩阵算法</p><disp-formula id="hanspub.35948-formula19"><graphic xlink:href="//html.hanspub.org/file/3-1541780x70_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.35948-formula20"><graphic xlink:href="//html.hanspub.org/file/3-1541780x71_hanspub.png"  xlink:type="simple"/></disp-formula><p>由算法1可得如图9所示的基于 W M 6 的邻接矩阵。</p><p>图9. 社区G<sub>1</sub> (16,17)基于M<sub>6</sub>邻接阶矩阵 W M 6 <sub> </sub></p><p>由图7的案例，基于边的关系所得的邻接矩阵为W，仅考虑两个节点i和j，若存在e<sub>ij</sub>即节点i指向节点j，则 W i j = 1 ，否则 W i j = 0 。但由图7可观察到节点11与节点13所连成的边e<sub>1113</sub>的权重要明显大于其他边的权重，节点11与节点15所形成的e<sub>1115</sub>边权重也明显大于其他边的权重，主要原因为节点11与节点13所连成的边e<sub>1113</sub>既属于由节点11、节点13和节点15所围成的三角关系，也属于由节点11、节点12和节点13所围成的三角关系，因此，我们引入基于Motif的高阶关系来计算基于Motif的邻接矩阵，来对节点11与节点13所连成的边e<sub>1113</sub>的权重和节点11与节点15所形成的e<sub>1115</sub>边权重重新赋值，提高社交网络用户影响力排序的准确性。</p></sec><sec id="s5_5"><title>3.5. 线性合并后的LeaderRank</title><p>在计算出基于Motif的邻接矩阵之后，我们将它们合并到用于对用户影响力排序的排序模型中。由于基于Motif的邻接矩阵中的非零元素将不超过原来基于边的邻接矩阵中的非零元素，因此我们将基于社交网络三角关系的3-节点简单Motif的高阶关系与基于边的关系结合，替代原来的基于边的关系。这样，基于Motif的边可以视为对使用LeaderRank进行计算的补充。我们使用线性组合来融合基于边和基于Motif的邻接矩阵。具体来说，对于给定的Motif M<sub>k</sub>，我们生成如下的新矩阵。</p><p>H M k = α ⋅ W + ( 1 − α ) ⋅ W M k (13)</p><p>其中 α ∈ [ 0 , 1 ] 平衡了原来的基于边的关系和由Motif提供的3-节点简单Motif的高阶关系，</p><p>( P M k ) i j = ( H M k ) i j / ∑ i ( H M k ) i j (14)</p><p>之后我们可以利用公式(14)计算转移概率矩阵 P M k 并将其代入公式(1)中的转移概率矩阵P，计算迭代稳定时的MLR值，迭代稳定后利用公式(2)得到节点的最终MLR值。</p><p>算法2：基于Motif的LeaderRank (MLR)算法。</p><disp-formula id="hanspub.35948-formula21"><graphic xlink:href="//html.hanspub.org/file/3-1541780x82_hanspub.png"  xlink:type="simple"/></disp-formula></sec></sec><sec id="s6"><title>4. 实验</title><sec id="s6_1"><title>4.1. 实验数据集</title><p>我们选用美国社交网络及微博客服务数据集Twitter，依据关注关系，选取2000个节点，57,544条组成，在构建社交网络时，当用户v<sub>i</sub>信任用户v<sub>j</sub>时，将添加边e<sub>ij</sub>，网络数据是从 http://law.di.unimi.it/webdata/twitter-2010/上面下载的。</p></sec><sec id="s6_2"><title>4.2. 实验环境</title><p>我们的实验环境为在Windows10操作系统上进行操作，使用python 2.7.16，numpy 1.11.2，Networkx 1.11的开发环境进行实验。</p></sec><sec id="s6_3"><title>4.3. 评价指标</title><p>为了评估所提出MLR算法的可行性与准确性，我们比较了按不同算法排序的前K个用户的质量。具体来说，我们提取具有最大LeaderRank值的K个用户，然后计算归一化折损累积增益(NDCG)，这个指标通常用来衡量和评价搜索结果算法。</p><p>NDCG计算公式表示为</p><p>NDCG @ N = DCG @ N IDCG @ N (15)</p><p>其中</p><p>DCG @ N = ∑ i = 1 N 2 r e l i − 1 log 2 ( i + 1 ) (16)</p><p>IDCG @ N = ∑ i = 1 | R E L | 2 r e l i − 1 log 2 ( i + 1 ) (17)</p><p>其中rel<sub>i</sub>代表给定查询的文档相关性得分，|REL|表示文档按照相关性从大到小排序，取前N个文档组成的集合， log 2 ( i + 1 ) 表示如果将较高的相关项放在较低的位置，则使用 log 2 ( i + 1 ) 来惩罚该算法，IDCG@N指的是理想情况下，根据相关性得分对结果进行排序。</p><p>基线算法。在对社交网络进行社区划分时，节点的转移概率和节点的核心系数共同作用于节点聚类方向，主要是考虑节点的度中心性，因此选用基线算法度中心方法IND，它根据度中心性来选择有影响力的节点，BLR方法是原始的LeaderRank算法。WLR方法是在加权网络中运行LeaderRank，其中从i到j的边的权重设置为i引用j或i信任j的频率。</p><p>对于MLR，我们分别处理M<sub>1</sub>~M<sub>7</sub>这七种情况下的3-节点简单Motif，然后分别显示每个3-节点简单Motif的结果。为了进行准确性比较，我们展示了在不同α值中可以获得的每个Motif的最佳结果，并展示参数α如何影响MLR的准确性。</p></sec><sec id="s6_4"><title>4.4. 实验结果分析</title><p>1) 可行性与准确性分析</p><p>对Twitter数据集分别使用基线算法IND、BLR、WLR和我们的MLR算法计算top10、top50和top200的NDCG值，如表1所示。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> NDCG for top10, top50, top200 users from Twitte</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  colspan="4"  >Twitter</th></tr></thead><tr><td align="center" valign="middle" >top</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >50</td><td align="center" valign="middle" >200</td></tr><tr><td align="center" valign="middle" >IND</td><td align="center" valign="middle" >0.9637</td><td align="center" valign="middle" >0.9515</td><td align="center" valign="middle" >0.9334</td></tr><tr><td align="center" valign="middle" >BLR</td><td align="center" valign="middle" >0.9677</td><td align="center" valign="middle" >0.9434</td><td align="center" valign="middle" >0.9256</td></tr><tr><td align="center" valign="middle" >WLR</td><td align="center" valign="middle" >0.9677</td><td align="center" valign="middle" >0.9434</td><td align="center" valign="middle" >0.9256</td></tr><tr><td align="center" valign="middle" >MLR</td><td align="center" valign="middle" >0.9875</td><td align="center" valign="middle" >0.9649</td><td align="center" valign="middle" >0.9479</td></tr></tbody></table></table-wrap><p>表1. Twitter数据集top10、top50、top200的NDCG值</p><p>总体结果如表1所示。我们显示了使用不同算法得出的top10，top50，top200排序结果的NDCG值。从表1中，我们可以看到，通过我们提出的MLR算法，具有不同K值的三个数据集它的NDCG值都显示出很高的准确性，展现了将3-节点简单Motif的高阶关系合并到LeaderRank算法中的可行性。</p><p>由表1可以得出3个观察结果。第一，在Twitter数据集上，我们可以看到，K越大，NDCG值越小，这意味着更多的用户获得理想排序列表的难度更大。第二，我们可以看到在Twitter上的BLR和WLR在K = 10时NDCG大于0.96，K = 50时NDCG大于0.94，K = 200时，NDCG大于0.92，而我们提出的MLR可以将NDCG在K = 10时从0.9637提升到0.9875，在K = 50时从0.9434提升到0.9649，在K = 200时0.9256提升到0.9479。第三，我们发现BLR和WLR的NDCG值相似，这意味着使用频率作为权重并不会带来太多额外的好处。</p><p>从表可知，将基于社交网络三角关系的3-节点简单Motif的高阶关系与基于边的直接关系线性组合到LeaderRank可以提高社交网络用户影响力排序的准确性。</p><p>2) α值分析</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> NDCG values of M1~M7 in Twitter dataset top10, top50, top20</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  colspan="4"  >Twitter</th></tr></thead><tr><td align="center" valign="middle" >TopK</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >TopK</td><td align="center" valign="middle" >10</td></tr><tr><td align="center" valign="middle" >M<sub>1</sub></td><td align="center" valign="middle" >0.9742</td><td align="center" valign="middle" >0.9565</td><td align="center" valign="middle" >0.9360</td></tr><tr><td align="center" valign="middle" >M<sub>2</sub></td><td align="center" valign="middle" >0.9767</td><td align="center" valign="middle" >0.9484</td><td align="center" valign="middle" >0.9371</td></tr><tr><td align="center" valign="middle" >M<sub>3</sub></td><td align="center" valign="middle" >0.9826</td><td align="center" valign="middle" >0.9595</td><td align="center" valign="middle" >0.9479</td></tr><tr><td align="center" valign="middle" >M<sub>4</sub></td><td align="center" valign="middle" >0.9772</td><td align="center" valign="middle" >0.9475</td><td align="center" valign="middle" >0.9259</td></tr><tr><td align="center" valign="middle" >M<sub>5</sub></td><td align="center" valign="middle" >0.9781</td><td align="center" valign="middle" >0.9627</td><td align="center" valign="middle" >0.9452</td></tr><tr><td align="center" valign="middle" >M<sub>6</sub></td><td align="center" valign="middle" >0.9875</td><td align="center" valign="middle" >0.9599</td><td align="center" valign="middle" >0.9378</td></tr><tr><td align="center" valign="middle" >M<sub>7</sub></td><td align="center" valign="middle" >0.9758</td><td align="center" valign="middle" >0.9649</td><td align="center" valign="middle" >0.9424</td></tr></tbody></table></table-wrap><p>表2. M<sub>1</sub>~M<sub>7</sub>在Twitter数据集top10、top50、top200的NDCG值</p><p>在公式(8)中，我们用参数α来控制基于边的直接关系和基于社交网络三角关系的3-节点简单Motif的高阶关系之间的平衡。当α = 0时，它仅使用高阶关系进行计算。当α = 1时，这意味着我们仅将基于边的直接关系进行计算。在本节中，我们将说明此参数如何影响NDCG的准确性。</p><p>为简单起见，我们分别从表2中取K = 10，K = 50和K = 200NDCG值最大时所指向的3-节点简单Motif，即K = 10时使用M<sub>6</sub>进行实验，K = 50时使用M<sub>7</sub>进行实验和K = 200时使用M<sub>3</sub>进行实验我们可以看到，在大多数情况下，趋势是一致的，并且在[0, 1]中的某个值上可以获得最佳准确度。这意味着通过融合基于边的直接关系和基于社交网络三角关系的3-节点简单Motif的高阶关系，NDCG准确性会更高。Twitter上M<sub>7</sub>的K = 200排序结果和M<sub>3</sub>上的K = 50和K = 200排序结果的最佳准确性是在α = 0时实现的，即仅使用基于社交网络三角关系的3-节点简单Motif的高阶关系。这再次表明，基于社交网络三角关系的3-节点简单Motif的高阶关系可以为社交网络用户影响力排序提供有用的信息。</p><p>由图10所示的M<sub>6</sub>、M<sub>7</sub>和M<sub>3</sub>在K = 50和K = 200排序结果曲线趋势相似，而top10则更加多样化，这可能是因为社交网络中的前十名用户非常突出，并且行为可能与其他用户不同。在与BLR和WLR进行对比，可以计算得到Twitter上M<sub>6</sub>在top10方面效果提高了2%，在top50方面效果提高了1.7%，top200方面效果提高了1.3%；Twitter上M<sub>7</sub>在top10方面效果提高了0.8%，在top50方面效果提高了2.2%，top200方面效果提高了1.8%；Twitter上M<sub>3</sub>在top10方面效果提高了1.5%，在top50方面效果提高了1.7%，top200方面效果提高了2.4%。由此表明，将基于社交网络三角关系的3-节点简单Motif的高阶关系与基于边的直接关系线性组合到LeaderRank可以提高社交网络用户影响力排序的准确性。</p><p>图10. 在Twitter数据集上α参数分析。(a) 在Twitter上运行M<sub>6</sub>的α参数分析；(b) 在Twitter上运行M<sub>7</sub>的α参数分析；(c) 在Twitter上运行M<sub>3</sub>的α参数分析</p><p>3) 案例分析</p><p>为了显示MLR算法的准确性，我们从社区序列里提取另一个社区，提取前10个用户并计算其NDCG值的平均值。结果如表3所示，在基于M<sub>1</sub>~M<sub>7</sub>的网络Motif上运行MLR算法，所得到的前10名用户的NDCG值的平均值。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> The average of the NDCG values of the top 10 user</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  colspan="2"  >Twitter</th></tr></thead><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >Average</td></tr><tr><td align="center" valign="middle" >BLR</td><td align="center" valign="middle" >0.9412</td></tr><tr><td align="center" valign="middle" >M<sub>1</sub></td><td align="center" valign="middle" >0.9632</td></tr><tr><td align="center" valign="middle" >M<sub>2</sub></td><td align="center" valign="middle" >0.9558</td></tr><tr><td align="center" valign="middle" >M<sub>3</sub></td><td align="center" valign="middle" >0.9768</td></tr><tr><td align="center" valign="middle" >M<sub>4</sub></td><td align="center" valign="middle" >0.9582</td></tr><tr><td align="center" valign="middle" >M<sub>5</sub></td><td align="center" valign="middle" >0.9647</td></tr><tr><td align="center" valign="middle" >M<sub>6</sub></td><td align="center" valign="middle" >0.9783</td></tr><tr><td align="center" valign="middle" >M<sub>7</sub></td><td align="center" valign="middle" >0.9604</td></tr></tbody></table></table-wrap><p>表3. 前10名用户NDCG值的平均值</p><p>从表3中可以看出，在Twitter上，MLR的NDCG值的平均得分大于BLR的NDCG值的平均得分，这意味着MLR可以将最相关的结果排在前面，可以选择更有影响力的作者或可信赖的用户。这展现了基于社交网络三角关系的3-节点简单Motif的高阶关系合并到LeaderRank算法中的准确性。因此，它表明MLR可以更合理对有影响力的用户进行排序，再次显示了在社交网络用户影响力排序时将基于社交网络三角关系的3-节点简单Motif的高阶关系合并到LeaderRank算法中的优势。</p></sec></sec><sec id="s7"><title>5. 结束语</title><p>在本文中，我们提出MLR算法，将基于社交网络三角关系的3-节点简单Motif的高阶关系与基于边的关系相结合代入到LeaderRank中进行计算。使用基于Motif的邻接矩阵来重新权衡社交网络中边的链接。然后，将基于社交网络三角关系的3-节点简单Motif的高阶关系和基于边的关系组合在一起来执行LeaderRank。我们在Twitter数据集上进行实验，通过归一化折损累积增益(NDCG)，表明基于社交网络三角关系的3-节点简单Motif的高阶关系和基于边的关系组合在一起的LeaderRank算法不仅在社交网络用户影响力排序上的可行性，而且可以显著提高社交网络用户影响力排序的准确性。</p></sec><sec id="s8"><title>文章引用</title><p>曲贤菲,田朝霞,陈 旭. 基于Motif的社交网络用户影响力排序方法研究Research on Social Network User Impact Ranking Method Based on Motif[J]. 计算机科学与应用, 2020, 10(06): 1098-1112. https://doi.org/10.12677/CSA.2020.106114</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.35948-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Song, X., Chi, Y., Hino, K., et al. (2007) Identifying Opinion Leaders in the Blogosphere. Proceedings of the 16th ACM Conference on Information and Knowledge Management, CIKM 2007, Lisbon, 6-10 November 2007, 971-974.  
&lt;br&gt;https://doi.org/10.1145/1321440.1321588</mixed-citation></ref><ref id="hanspub.35948-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Tang, J., Sun, J., Wang, C., et al. (2009) Social Influence Analysis in Large-Scale Networks. Proceedings of the 15th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, Paris, 28 June-1 July 2009, 807-816. &lt;br&gt;https://doi.org/10.1145/1557019.1557108</mixed-citation></ref><ref id="hanspub.35948-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Xiang, B., Liu, Q., Chen, E., et al. (2013) PageRank with Priors: An Influence Propagation Perspective. Proceedings of the 23rd International Joint Conference on Artificial Intelligence, AAAI Press, Palo Alto, 2740-2746.</mixed-citation></ref><ref id="hanspub.35948-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Wang, Y., Wang, X., Tang, J., et al. (2015) Modeling Status Theory in Trust Prediction. AAAI, 1875-1881.</mixed-citation></ref><ref id="hanspub.35948-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Page, L., Brin, S., Motwani, R. and Winograd, T. (1999) The Pagerank Citation Ranking: Bringing Order to the Web. Proceedings of the 7th Interna-tional World Wide Web Conference, Brisbane, 1998, 161-172.</mixed-citation></ref><ref id="hanspub.35948-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Lü, L.Y., Zhang, Y.-C., Yeung, C.H. and Zhou, T. (2011) Leaders in Social Networks, the Delicious Case. PLoS ONE, 6, e21202. &lt;br&gt;https://doi.org/10.1371/journal.pone.0021202</mixed-citation></ref><ref id="hanspub.35948-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Jiang, X., Sun, X. and Zhuge, H. (2013) Graph-Based Algo-rithms for Ranking Researchers: Not All Swans Are White! Scientometrics, 96, 743-759. &lt;br&gt;https://doi.org/10.1007/s11192-012-0943-y</mixed-citation></ref><ref id="hanspub.35948-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">邓启平, 王小梅. 利用LeaderRank识别有影响力的作者[J]. 现代图书情报技术, 2015, 31(9): 60-67.</mixed-citation></ref><ref id="hanspub.35948-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">徐郡明, 朱福喜, 刘世超, 等. 改进LeaderRank算法的意见领袖挖掘[J]. 计算机工程与应用, 2015(1): 110-114.</mixed-citation></ref><ref id="hanspub.35948-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, Z.H., Jiang, G.P., Song, Y.R., et al. (2017) An Improved Weighted LeaderRank Algorithm for Identifying Influential Spreaders in Complex Networks. An Improved Weighted LeaderRank Algorithm for Identifying Influential Spreaders in Complex Networks. IEEE International Conference on Computational Science and Engineering (CSE) and IEEE International Conference on Embedded and Ubiquitous Com-puting (EUC), Guangzhou, 21-24 July 2017.  
&lt;br&gt;https://doi.org/10.1109/CSE-EUC.2017.146</mixed-citation></ref><ref id="hanspub.35948-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Bakshy, E., Hofman, J.M., Mason, W.A., et al. (2015) Every-one’s an Influencer: Quantifying Influence on Twitter. Proceedings of the 4th ACM International Conference on Web Search and Data Mining, Hong Kong, 9-12 February 2011.</mixed-citation></ref><ref id="hanspub.35948-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">顾亦然, 朱梓嫣. 基于LeaderRank和节点相似度的复杂网络重要节点排序算法[J]. 电子科技大学学报, 2017, 46(2): 441-448.</mixed-citation></ref><ref id="hanspub.35948-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Watts, D.J. and Strogatz, S.H. (1998) Collective Dynamics of Small World Networks. Nature, 393, 440-442.  
&lt;br&gt;https://doi.org/10.1038/30918</mixed-citation></ref><ref id="hanspub.35948-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Sen, P., Dasgupta, S., Chatterjee, A., et al. (2003) Small-World Properties of the Indian Railway Network. Physical Review E, 67, 036106. &lt;br&gt;https://doi.org/10.1103/PhysRevE.67.036106</mixed-citation></ref><ref id="hanspub.35948-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Barabási, A.-L. and Albert, R. (1999) Emergence of Scaling in Random Networks. Science, 286, 509-512.  
&lt;br&gt;https://doi.org/10.1126/science.286.5439.509</mixed-citation></ref><ref id="hanspub.35948-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Barabási, A.-L., Albert, R. and Jeong, H. (2000) Scale-Free Characteristics of Random Networks: The Topology of the World-Wide Web. Physica A, 281, 69-77. &lt;br&gt;https://doi.org/10.1016/S0378-4371(00)00018-2</mixed-citation></ref><ref id="hanspub.35948-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Milo, R., Shen-Orr, S., Itzkovitz, S., et al. (2002) Network Motifs: Simple Building Blocks of Complex Networks. Science, 298, 824-827. &lt;br&gt;https://doi.org/10.1126/science.298.5594.824</mixed-citation></ref><ref id="hanspub.35948-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">Ugander, J., Backstrom, L. and Kleinberg, J.M. (2013) Sub-graph Frequencies: Mapping the Empirical and Extremal Geography of Large Graph Collections. Proceedings of the 22nd international conference on World Wide Web, Rio de Janeiro, May 2013, 1307-1318. &lt;br&gt;https://doi.org/10.1145/2488388.2488502</mixed-citation></ref><ref id="hanspub.35948-ref19"><label>19</label><mixed-citation publication-type="other" xlink:type="simple">Rotabi, R., Kamath, K., Kleinberg, J., et al. (2017) Detecting Strong Ties Using Network Motifs. Proceedings of the 26th International Conference on World Wide Web, Perth, 3-7 April 2017, 983-992. 
&lt;br&gt;https://doi.org/10.1145/3041021.3055139</mixed-citation></ref><ref id="hanspub.35948-ref20"><label>20</label><mixed-citation publication-type="other" xlink:type="simple">Wang, P., Lü, J.H. and Yu, X. (2014) Identification of Important Nodes in Directed Biological Networks: A Network Motif Approach. PLoS ONE, 9, e106132. &lt;br&gt;https://doi.org/10.1371/journal.pone.0106132</mixed-citation></ref><ref id="hanspub.35948-ref21"><label>21</label><mixed-citation publication-type="other" xlink:type="simple">Nataša, P. (2007) Biological Network Comparison Using Graphlet Degree Distribution. Bioinformatics, 23, e177-e183.</mixed-citation></ref><ref id="hanspub.35948-ref22"><label>22</label><mixed-citation publication-type="other" xlink:type="simple">Ahmed, N.K., Neville, J., Rossi, R.A., et al. (2015) Efficient Graphlet Counting for Large Networks. 2015 IEEE International Conference on Data Mining (ICDM). 2015 IEEE International Conference on Data Mining, Atlantic City, 14-17 November 2015. &lt;br&gt;https://doi.org/10.1109/ICDM.2015.141</mixed-citation></ref><ref id="hanspub.35948-ref23"><label>23</label><mixed-citation publication-type="other" xlink:type="simple">Jha, M., Seshadhri, C. and Pinar, A. (2014) Path Sampling: A Fast and Provable Method for Estimating 4-Vertex Subgraph Counts. Proceedings of the 24th International Conference on World Wide Web, Florence, 18-22 May 2015, 495-505. &lt;br&gt;https://doi.org/10.1145/2736277.2741101</mixed-citation></ref><ref id="hanspub.35948-ref24"><label>24</label><mixed-citation publication-type="other" xlink:type="simple">Han, G. and Sethu, H. (2016) Waddling Random Walk: Fast and Accurate Mining of Motif Statistics in Large Graphs. 2016 IEEE 16th International Conference on Data Mining (ICDM), Barcelona, 12-15 December 2016.  
&lt;br&gt;https://doi.org/10.1109/ICDM.2016.0029</mixed-citation></ref><ref id="hanspub.35948-ref25"><label>25</label><mixed-citation publication-type="other" xlink:type="simple">Benson, A.R., Gleich, D.F. and Leskovec, J. (2016) Higher-Order Organization of Complex Networks. Science, 353, 163-166. &lt;br&gt;https://doi.org/10.1126/science.aad9029</mixed-citation></ref><ref id="hanspub.35948-ref26"><label>26</label><mixed-citation publication-type="other" xlink:type="simple">许平华, 胡文斌, 邱振宇, 等. 节点不对称转移概率的网络社区发现算法[J]. 软件学报, 2019, 30(12): 3829-3845.</mixed-citation></ref></ref-list></back></article>