<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">OJCS</journal-id><journal-title-group><journal-title>Open Journal of Circuits and Systems</journal-title></journal-title-group><issn pub-type="epub">2327-0853</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/OJCS.2018.73010</article-id><article-id pub-id-type="publisher-id">OJCS-26670</article-id><article-categories><subj-group subj-group-type="heading"><subject>OJCS20180300000_65244788.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject><subject> 工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于改进先验信噪比的新型单声道语音增强算法
  A New Single Channel Speech Enhancement Algorithm Based on Improved A-Priori SNR
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>晨</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>高</surname><given-names>颖</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>顺</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>韩</surname><given-names>蕊蕊</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>硕</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>烟台大学，光电信息科学技术学院，山东 烟台</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>27</day><month>08</month><year>2018</year></pub-date><volume>07</volume><issue>03</issue><fpage>75</fpage><lpage>83</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对多数语音增强算法中存在的“音乐噪声残留”问题，提出一种新型先验信噪比估计算法。由于先验信噪比的估计准确度决定语音增强系统的整体性能，而融合耦合因子(CC, Convex-Combination)算法是应用最广的先验信噪比估计算法。虽然其实时性强且失真小，但其抑制音乐噪声能力欠缺。为解决这一缺陷，本文将改进先验信噪比估计中的最大似然估计部分，通过融入平滑参数将后验信噪比递归平滑，代替最大似然估计中的后验信噪比。经仿真实验结果证明，所提出的算法相对于CC算法具有更好的音乐噪声抑制能力。 Aiming at the problem of “music noise residue” existing in most speech enhancement algorithms, a new a-priori SNR estimation algorithm is proposed. Since the accuracy of the a-priori SNR estimation determines the overall performance of the speech enhancement system, the Con-vex-Combination (CC) algorithm is the most widely used a-priori SNR estimation algorithm. Although its real-time performance and distortion are small, its ability to suppress music noise is lacking. In order to solve this defect, this paper will improve the part of the maximum likelihood estimation in a-priori SNR estimation, and recursively smooth the a-posteriori signal-to-noise ratio by incorporating smoothing parameters, instead of the a-posteriori signal-to-noise ratio in the maximum likelihood estimation. The simulation results show that the proposed algorithm has better music noise suppression ability than CC algorithm. 
  
 
</p></abstract><kwd-group><kwd>语音增强，先验信噪比，融合耦合因子，最大似然估计, Speech Enhancement</kwd><kwd> A-Priori Signal-to-Noise Ratio</kwd><kwd> Fusion Coupling Factor</kwd><kwd> Maximum Likelihood Estimation</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于改进先验信噪比的新型 单声道语音增强算法<sup> </sup></title><p>陈晨，高颖，张顺，韩蕊蕊，张硕</p><p>烟台大学，光电信息科学技术学院，山东 烟台</p><p><img src="//html.hanspub.org/file/2-2780128x1_hanspub.png" /></p><p>收稿日期：2018年8月11日；录用日期：2018年8月24日；发布日期：2018年8月31日</p><disp-formula id="hanspub.26670-formula11"><graphic xlink:href="//html.hanspub.org/file/2-2780128x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>针对多数语音增强算法中存在的“音乐噪声残留”问题，提出一种新型先验信噪比估计算法。由于先验信噪比的估计准确度决定语音增强系统的整体性能，而融合耦合因子(CC, Convex-Combination)算法是应用最广的先验信噪比估计算法。虽然其实时性强且失真小，但其抑制音乐噪声能力欠缺。为解决这一缺陷，本文将改进先验信噪比估计中的最大似然估计部分，通过融入平滑参数将后验信噪比递归平滑，代替最大似然估计中的后验信噪比。经仿真实验结果证明，所提出的算法相对于CC算法具有更好的音乐噪声抑制能力。</p><p>关键词 :语音增强，先验信噪比，融合耦合因子，最大似然估计</p><disp-formula id="hanspub.26670-formula12"><graphic xlink:href="//html.hanspub.org/file/2-2780128x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/2-2780128x7_hanspub.png" /> <img src="//html.hanspub.org/file/2-2780128x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>语音交流是人与人，人与机器之间沟通最方便快捷的媒介之一。但是移动通信过程中总是无法避免地出现由非交流者带来的外界噪音，如各种交通工具产生的交通噪声，工厂设备产生的工厂噪声，电子热噪声，环境噪声等等。正是由于这些形形色色的噪声干扰，使得接收端语音识别系统受到损伤，准确性大大降低，严重影响了语音通信系统的质量和可理解性。因此，在语音处理领域抑制噪声干扰的语音增强技术应运而生，不断受到学者的高度重视 [<xref ref-type="bibr" rid="hanspub.26670-ref1">1</xref>] 。同时，在研究过程的深入渗透下，语音增强算法应用领域广阔延伸，如：移动电话，助听器设备，军事窃听技术，语音编码与合成技术等 [<xref ref-type="bibr" rid="hanspub.26670-ref2">2</xref>] 。</p><p>在过去的五十年历史中，为了更好地适应科学领域发展，大量的短时频域语音增强算法已经逐渐衍生出来并得到了广泛应用。其中较为著名的算法有：谱减算法 [<xref ref-type="bibr" rid="hanspub.26670-ref3">3</xref>] 、短时谱估计算法 [<xref ref-type="bibr" rid="hanspub.26670-ref4">4</xref>] 、子空间算法 [<xref ref-type="bibr" rid="hanspub.26670-ref5">5</xref>] 等。由于噪声信号的随机性和非平稳特性，很多算法在真实环境下的运行效果会受到阻碍，因此单声道语音增强算法面临着亟待攻克的问题。众多算法中，经研究发现几乎所有的语音增强算法都与增益因子息息相关，而增益因子又是先验信噪比和后验信噪比的二元函数 [<xref ref-type="bibr" rid="hanspub.26670-ref6">6</xref>] ，由于后验信噪比在算法中是已知参数，因而一个准确的先验信噪比估计在增强结果中扮演着关键性的角色。应用性较广的先验信噪比估计算法有直接判决(DD，Decision-Directed)算法 [<xref ref-type="bibr" rid="hanspub.26670-ref4">4</xref>] ，两步噪声消除(TSNR，Two-Step Noise Reduction)算法 [<xref ref-type="bibr" rid="hanspub.26670-ref7">7</xref>] 、改进的直接判决(MDD，Modified Decision Directed)算法 [<xref ref-type="bibr" rid="hanspub.26670-ref8">8</xref>] ，融合耦合因子(CC，Convex-Combination)算法 [<xref ref-type="bibr" rid="hanspub.26670-ref9">9</xref>] 等。</p><p>DD算法由于计算简洁且容易实现，是迄今最为普及的先验信噪比估计算法。由于该算法中纯净语音谱与噪声谱相互正交的不合理假设，以及采用最大似然估计算法估计当前帧先验信噪比过程中在跟踪后验信噪比时引起一帧的时延，使得该算法音乐噪声较大。针对此缺点，后续有人提出一系列改进算法。其中运行效果较理想的是融合耦合因子算法。该算法在DD算法的基础上引入两个不同平滑参数取值的先验信噪比估计，融入一个耦合参数进行调和，在实际和估计的先验信噪比中建立代价函数求出耦合参数真实值，最终得到新的先验信噪比估计值。该算法有效避免了时延问题，能够实时跟踪信噪比的快速变化，同时失真程度大大降低。但是由于该算法在DD算法估计中采用最大似然法对后验信噪比估计，以此代替当前帧的先验信噪比估计。这使得在无语音活动区产生较大波动，输出的语音信号残留孤立峰值居多，继而产生“音乐噪声”。为了解决上述问题，本文将融合耦合因子算法进行改进，用递归平滑的方式计算后验信噪比，代替传统的瞬时后验信噪比并带入最大似然估计中，有效减少了信号的波动，同时音乐噪声抑制能力有所提升。</p><p>本文首先介绍了语音增强算法的基本理论，并对经典的融合耦合因子的先验信噪比估计算法进行了理论分析；其次，提出改进算法并做出理论和公式推导；最后，用Matlab进行实验仿真，分析实验结果验证理论部分，并作出总结。</p></sec><sec id="s4"><title>2. 语音增强算法的基本理论</title><p>在语音信号的短时平稳特性下假设原始纯净语音信号与噪声信号是不相关的，则有 [<xref ref-type="bibr" rid="hanspub.26670-ref10">10</xref>] ：</p><p>y ( t ) = x ( t ) + d ( t ) (1)</p><p>其中， y ( t ) 代表带噪语音信号，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/2-2780128x11_hanspub.png" xlink:type="simple"/></inline-formula>与 d ( t ) 分别表示纯净语音信号和噪声。</p><p>对等式两侧分别进行STFT变换，将其转换到频域中：</p><p>Y m , k = X m , k + D m , k (2)</p><p>其中， Y m , k ， X m , k ， D m , k 分别表示为带噪语音谱、纯净语音谱和噪声谱。m和k表示为帧数和频率。</p><p>任何语音增强算法均可以表示为增益因子与带噪语音谱的乘积，即为：</p><p>X ^ m , k = G m , k ⋅ Y m , k (3)</p><p>由于不同算法拥有不同形式的增益因子，而只有维纳滤波算法增益因子不受其他参数影响，仅与先验信噪比有关，为了方便且不失一般性，一般采用维纳滤波算法表示的增益因子 [<xref ref-type="bibr" rid="hanspub.26670-ref11">11</xref>] ：</p><p>G m , k = ξ m , k 1 + ξ m , k (4)</p><p>最终结合带噪语音相位对纯净语音谱进行ISTFT变换可以得到估计的纯净语音信号。</p><p>先验信噪比估计通常采用DD算法，其定义为：</p><p>ξ ^ m , k D D = λ ξ ^ m − 1 , k + ( 1 − λ ) ⋅ ξ ^ m , k M L (6)</p><p>其中 λ 表示平滑参数，取值范围在0到1之间。 ξ ^ m − 1 , k 表示前一帧先验信噪比估计值， ξ ^ m , k M L 表示最大似然估计下的当前帧先验信噪比，表示为 ξ ^ m , k M L = max { η m , k − 1 , 0 } ， η m , k 为后验信噪比。</p><p>由上式可见，该估计值分为两部分：前部分是上一帧的先验信噪比估计值，后部分是当前帧先验信噪比的估计值，平滑参数在两部分中起到调节作用。当取值趋于1时，估计值由上一帧的估计结果决定，会出现帧延迟现象，并带来较为严重的语音失真。取值趋向0时，估计值则主要由最大似然方法的估值决定，此时在静音区波动剧烈，进一步引发音乐噪声。</p><p>由此可见，传统DD算法计算简单，能够很好地滤除背景噪音。但由于采用ML算法在追踪后验信噪比时产生一帧的延时，带来恼人的音乐噪声，导致估计效果准确性降低。为此，有学者提出一种融合耦合因子的先验信噪比估计算法，即将平滑参数取大值和小值的优点结合，融入一个耦合参数来达到实时性跟踪。</p><p>平滑因子取值分别为a和b (a &gt; b)的两个DD算法估计的先验信噪比分别为：</p><p>ξ ^ m , k 1 = a ξ ^ m − 1 , k + ( 1 − a ) ξ ^ m , k M L (7)</p><p>ξ ^ m , k 2 = b ξ ^ m − 1 , k + ( 1 − b ) ξ ^ m , k M L (8)</p><p>其中 ξ ^ m , k 1 近似于DD算法对前一帧先验信噪比的估计值， ξ ^ m , k 2 的取值近似于最大似然方法估计的当前帧先验信噪比估计值。在两个先验信噪比中加入一个取值范围在[0,1]之间的耦合因子，控制该算法的估计值取值情况，则CC算法定义如下：</p><p>ξ ^ m , k C C = μ ξ ^ m , k 1 + ( 1 − μ ) ξ ^ m , k 2 = ( μ a − μ b + b ) ξ ^ m − 1 , k + ( 1 − μ a + μ b − b ) ξ ^ m , k M L (9)</p><p>为得到自适应耦合参数，在实际先验信噪比与先验信噪比估计值之间的最小均方误差准则下建立一个代价函数：</p><p>J = E { ( ξ ^ m , k C C − ξ m , k ) 2 } (10)</p><p>通过对代价函数求偏导数并运用最大似然估计方法得到的当前帧的先验信噪比估计代替先验信噪比真实值，得到该耦合参数 [<xref ref-type="bibr" rid="hanspub.26670-ref12">12</xref>] ：</p><p>μ = ( 1 − b ) ( ξ ^ m , k M L + 1 ) 2 − b ( ξ ^ m - 1 , k − ξ ^ m , k M L ) 2 ( a − b ) [ ( ξ ^ m - 1 , k − ξ ^ m , k M L ) 2 + ( ξ ^ m , k M L + 1 ) 2 ] (11)</p><p>将耦合因子带入定义式(9)，可得到CC算法的先验信噪比估计，进一步求出增益因子，与带噪语音谱相乘后再进行IDFT变换即可得到增强后的时域语音信号。该算法通过自适应地结合两个具有不同平滑参数取值的DD算法，有效减少了失真，具有实时跟踪性能。但由于最大似然估计算法对当前帧先验信噪比估计，静音区波动较大，易产生音乐噪声。</p></sec><sec id="s5"><title>3. 改进先验信噪比的新型算法</title><p>为解决上述缺点，可以在算法中使用平滑处理的后验信噪比来代替ML算法估计的后验信噪比。由于最大似然估计取决于后验信噪比的值，为了减少快速波动，将后验信噪比估计值进行递归平滑，即为：</p><p>γ ^ m , k = β ⋅ γ ^ m − 1 , k + ( 1 − β ) ⋅ min [ γ m , k , 20 ] (12)</p><p>其中，β代表经验平滑常数，取值为0.6， γ ^ m − 1 , k 表示前一帧的后验信噪比估计值， γ m , k 表示瞬时后验信噪比，即为带噪语音功率谱与噪声谱估计的比值求得，最小值函数是为了限制后验信噪比估计值的上限，最大不能超过13 dB (=10lg(20))，同时避免信号的过度衰减 [<xref ref-type="bibr" rid="hanspub.26670-ref13">13</xref>] 。过去的实验研究发现，后验信噪比的平滑处理了改进了带噪语音功率谱在均方误差意义下的估计 [<xref ref-type="bibr" rid="hanspub.26670-ref13">13</xref>] 。</p><p>将平滑处理后的后验信噪比估计值带入ML算法后再代替公式(7)和(8)中的 ξ ^ m , k M L ，即：</p><p>ξ ^ m , k 1 = a ξ ^ m − 1 , k + ( 1 − a ) γ ^ M L m , k (13)</p><p>ξ ^ m , k 2 = b ξ ^ m − 1 , k + ( 1 − b ) γ ^ M L m , k (14)</p><p>其中 γ ^ m , k M L = max { γ ^ m , k − 1 , 0 } 为最大似然估计方法得到的当前帧先验信噪比估计值。</p></sec><sec id="s6"><title>4. 仿真结果比较</title><p>为了进一步证明改进算法相对于传统算法的优越性，通过Matlab实验仿真得到语谱图和客观评价标准数据进行对比。纯净语音来自于语音库中选取的6段语音(其中3段男声；3段为女声)，5种噪声(White, Pink, Buccaneer2, F16, M109)来自于Noisex-92噪声库，输入信噪比分别为0 dB，5 dB，10 dB，15 dB。实验中采用汉明窗进行加窗分帧处理，采样频率8kHz，帧长为256，重叠率50%，λ取0.98，a和b分别为0.99和0.60。</p><p>图1中(a)至(e)分别为纯净语音信号，带噪语音信号，DD算法，CC算法以及改进算法下增强的语音信号的语谱图对比，其中背景噪声为M109噪声，信噪比水平为10 dB。</p><p>针对以上仿真语谱图不难看出：三个算法都能有效消除背景噪声，但是DD算法在消除背景噪声的</p><p>图1. M109噪声下不同算法的语音信号语谱图(SNR = 10 dB)</p><p>基础上语音失真更为严重，尤其是在信噪比水平较低的环境下失真更显著。CC算法语音失真情况虽然较之DD算法有所提升，但是最终效果不如改进算法理想。同时，三种算法都对原始语音造成不同程度的损伤，相较来说，改进算法与原始纯净语音语谱图更加接近，即改进算法对纯净语音损伤程度最小。即改进算法的去噪能力更彻底，因此验证了理论部分的分析。</p><p>为了客观定量比较分析三种算法的性能，对三种算法增强后语音的质量、失真程度和可懂度等各种标准进行测试，常用的评价标准有分段信噪比(SegSNR) [<xref ref-type="bibr" rid="hanspub.26670-ref14">14</xref>] ，短时客观可懂度(STOI) [<xref ref-type="bibr" rid="hanspub.26670-ref15">15</xref>] 和对数谱距离(LSD) [<xref ref-type="bibr" rid="hanspub.26670-ref16">16</xref>] 等。分段信噪比大小表征算法滤除噪声的能力，数值越大说明算法残余音乐噪声越少。STOI是与人的听力特性最契合的评价标准，数值越大表明增强语音质量越好。LSD表明增强语音和原始纯净语音的接近程度，数值越小说明失真程度越小，即增强效果越好。表1~表3即为三个算法在四种信噪比水平和五种背景噪声下的客观评价数值情况。</p><p>通过三个表可得，在不同背景噪声环境和输入信噪比条件下，改进算法的SegSNR和STOI数据最高，CC算法次之，DD算法的数值最低。说明改进算法可以更大限制地抑制背景噪声，提高增强后语音的信噪比水平，增强后的语音可懂度更高。在LSD输出数据上，改进算法比其他两个算法数据值更小，说明改进算法增强后的语音与原始语音更接近，同时和语谱图的结果相吻合。综上所述，改进算法比CC算</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> The SegSNR data comparison table of the four algorithm</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  rowspan="2"  >噪声类型</th><th align="center" valign="middle"  rowspan="2"  >输入信噪比</th><th align="center" valign="middle"  colspan="3"  >分段信噪比(SegSNR)</th></tr></thead><tr><td align="center" valign="middle" >DD算法</td><td align="center" valign="middle" >CC算法</td><td align="center" valign="middle" >改进算法</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >White</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >4.3907</td><td align="center" valign="middle" >5.8005</td><td align="center" valign="middle" >7.1560</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >5.8434</td><td align="center" valign="middle" >6.6359</td><td align="center" valign="middle" >7.8063</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >7.0984</td><td align="center" valign="middle" >7.7320</td><td align="center" valign="middle" >8.6589</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >9.1980</td><td align="center" valign="middle" >10.811</td><td align="center" valign="middle" >11.2345</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >Pink</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >5.1565</td><td align="center" valign="middle" >5.2808</td><td align="center" valign="middle" >6.6384</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >6.1975</td><td align="center" valign="middle" >6.2242</td><td align="center" valign="middle" >7.4263</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >7.5781</td><td align="center" valign="middle" >7.6449</td><td align="center" valign="middle" >8.6095</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >10.2558</td><td align="center" valign="middle" >10.7721</td><td align="center" valign="middle" >11.338</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >Buccaneer2</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >4.1343</td><td align="center" valign="middle" >4.9211</td><td align="center" valign="middle" >6.1662</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >5.2256</td><td align="center" valign="middle" >5.7149</td><td align="center" valign="middle" >6.8133</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >6.8214</td><td align="center" valign="middle" >7.7139</td><td align="center" valign="middle" >8.5504</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >8.7949</td><td align="center" valign="middle" >10.4505</td><td align="center" valign="middle" >10.8979</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >F16</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >5.2623</td><td align="center" valign="middle" >5.3991</td><td align="center" valign="middle" >6.7674</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >6.4201</td><td align="center" valign="middle" >6.5044</td><td align="center" valign="middle" >7.7754</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >7.8656</td><td align="center" valign="middle" >7.9391</td><td align="center" valign="middle" >9.0580</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >10.5363</td><td align="center" valign="middle" >10.9798</td><td align="center" valign="middle" >11.6437</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >M109</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >6.2730</td><td align="center" valign="middle" >6.8603</td><td align="center" valign="middle" >8.6496</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >7.4082</td><td align="center" valign="middle" >7.9176</td><td align="center" valign="middle" >9.3838</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >8.9422</td><td align="center" valign="middle" >9.4135</td><td align="center" valign="middle" >10.6136</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >11.4692</td><td align="center" valign="middle" >12.5741</td><td align="center" valign="middle" >13.3508</td></tr></tbody></table></table-wrap><p>表1. 四种算法的SegSNR数据对比表</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> The STOI data comparison table of the four algorithm</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  rowspan="2"  >噪声类型</th><th align="center" valign="middle"  rowspan="2"  >输入信噪比</th><th align="center" valign="middle"  colspan="3"  >短时客观可懂度(STOI)</th></tr></thead><tr><td align="center" valign="middle" >DD算法</td><td align="center" valign="middle" >CC算法</td><td align="center" valign="middle" >改进算法</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >White</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >72.2350</td><td align="center" valign="middle" >75.9131</td><td align="center" valign="middle" >77.5240</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >79.8583</td><td align="center" valign="middle" >81.7923</td><td align="center" valign="middle" >82.8082</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >85.4420</td><td align="center" valign="middle" >85.7764</td><td align="center" valign="middle" >86.5817</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >89.7984</td><td align="center" valign="middle" >89.6146</td><td align="center" valign="middle" >90.4553</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >Pink</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >73.0863</td><td align="center" valign="middle" >76.5339</td><td align="center" valign="middle" >77.2854</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >79.3534</td><td align="center" valign="middle" >82.4027</td><td align="center" valign="middle" >83.0000</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >85.9826</td><td align="center" valign="middle" >87.1785</td><td align="center" valign="middle" >87.8651</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >90.3885</td><td align="center" valign="middle" >90.4289</td><td align="center" valign="middle" >91.0242</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >Buccaneer2</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >70.8405</td><td align="center" valign="middle" >75.0766</td><td align="center" valign="middle" >75.7672</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >76.9853</td><td align="center" valign="middle" >80.9993</td><td align="center" valign="middle" >81.5867</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >83.5680</td><td align="center" valign="middle" >85.1948</td><td align="center" valign="middle" >85.3056</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >88.4355</td><td align="center" valign="middle" >88.8371</td><td align="center" valign="middle" >88.8654</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >F16</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >76.2078</td><td align="center" valign="middle" >79.5544</td><td align="center" valign="middle" >80.7624</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >82.5660</td><td align="center" valign="middle" >85.0770</td><td align="center" valign="middle" >86.1478</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >88.1948</td><td align="center" valign="middle" >89.2560</td><td align="center" valign="middle" >90.5462</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >91.7398</td><td align="center" valign="middle" >92.1378</td><td align="center" valign="middle" >93.2722</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >M109</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >76.2916</td><td align="center" valign="middle" >79.1938</td><td align="center" valign="middle" >79.9584</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >82.0582</td><td align="center" valign="middle" >84.7726</td><td align="center" valign="middle" >85.9888</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >87.9739</td><td align="center" valign="middle" >88.0564</td><td align="center" valign="middle" >89.5696</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >90.3163</td><td align="center" valign="middle" >90.3722</td><td align="center" valign="middle" >91.5371</td></tr></tbody></table></table-wrap><p>表2. 四种算法的STOI数据对比表</p><table-wrap-group id="3"><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> The LSD data comparison table of the four algorithm</title></caption><table-wrap id="3_1"><table><tbody><thead><tr><th align="center" valign="middle"  rowspan="2"  >噪声类型</th><th align="center" valign="middle"  rowspan="2"  >输入信噪比</th><th align="center" valign="middle" ></th><th align="center" valign="middle" >对数谱距离(LSD)</th><th align="center" valign="middle" ></th></tr></thead><tr><td align="center" valign="middle" >DD算法</td><td align="center" valign="middle" >CC算法</td><td align="center" valign="middle" >改进算法</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >White</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >6.1261</td><td align="center" valign="middle" >5.7423</td><td align="center" valign="middle" >5.0706</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >5.5611</td><td align="center" valign="middle" >5.3879</td><td align="center" valign="middle" >4.8288</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >5.4087</td><td align="center" valign="middle" >5.1224</td><td align="center" valign="middle" >4.6612</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >5.0679</td><td align="center" valign="middle" >4.3266</td><td align="center" valign="middle" >4.0306</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >Pink</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >5.2437</td><td align="center" valign="middle" >5.1120</td><td align="center" valign="middle" >4.4945</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >4.9327</td><td align="center" valign="middle" >4.9294</td><td align="center" valign="middle" >4.3898</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >4.8238</td><td align="center" valign="middle" >4.4972</td><td align="center" valign="middle" >4.0886</td></tr></tbody></table></table-wrap><table-wrap id="3_2"><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >15 dB</th><th align="center" valign="middle" >4.4760</th><th align="center" valign="middle" >3.7501</th><th align="center" valign="middle" >3.5135</th></tr></thead><tr><td align="center" valign="middle"  rowspan="4"  >Buccaneer2</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >5.9493</td><td align="center" valign="middle" >5.4718</td><td align="center" valign="middle" >4.8267</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >5.6324</td><td align="center" valign="middle" >5.2619</td><td align="center" valign="middle" >4.6566</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >5.3918</td><td align="center" valign="middle" >4.6995</td><td align="center" valign="middle" >4.2640</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >5.0920</td><td align="center" valign="middle" >4.0812</td><td align="center" valign="middle" >3.8244</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >F16</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >4.9231</td><td align="center" valign="middle" >4.8705</td><td align="center" valign="middle" >4.3207</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >4.7659</td><td align="center" valign="middle" >4.6650</td><td align="center" valign="middle" >4.2287</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >4.6171</td><td align="center" valign="middle" >4.3696</td><td align="center" valign="middle" >4.0078</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >4.2148</td><td align="center" valign="middle" >3.6763</td><td align="center" valign="middle" >3.4605</td></tr><tr><td align="center" valign="middle"  rowspan="4"  >M109</td><td align="center" valign="middle" >0 dB</td><td align="center" valign="middle" >4.3395</td><td align="center" valign="middle" >3.4064</td><td align="center" valign="middle" >3.1264</td></tr><tr><td align="center" valign="middle" >5 dB</td><td align="center" valign="middle" >4.1441</td><td align="center" valign="middle" >3.4095</td><td align="center" valign="middle" >3.1283</td></tr><tr><td align="center" valign="middle" >10 dB</td><td align="center" valign="middle" >4.1441</td><td align="center" valign="middle" >3.0336</td><td align="center" valign="middle" >2.8718</td></tr><tr><td align="center" valign="middle" >15 dB</td><td align="center" valign="middle" >3.6170</td><td align="center" valign="middle" >2.5228</td><td align="center" valign="middle" >2.4159</td></tr></tbody></table></table-wrap></table-wrap-group><p>表3. 四种算法的LSD数据对比表</p><p>法的增强效果更具有优越性，进一步证实了理论部分。</p></sec><sec id="s7"><title>5. 结论</title><p>由于各种杂乱噪声的干扰，涌现出越来越多单声道语音算法，高精度的先验信噪比估计值对语音增强系统的性能好坏起到关键性作用。由于传统的先验信噪比估计算法在跟踪后验信噪比过程中采用极大似然估计方法会出现一帧的延时，并产生音乐噪声。为了切实解决这种弊端，本文通过递归平滑的方式对后验信噪比进行估计，得到新的增强算法。最后实验仿真结果证明了改进算法有更实时的跟踪信噪比变化的性能以及更好的增强效果。</p></sec><sec id="s8"><title>文章引用</title><p>陈晨,高颖,张顺,韩蕊蕊,张硕. 基于改进先验信噪比的新型单声道语音增强算法 A New Single Channel Speech Enhancement Algorithm Based on Improved A-Priori SNR[J]. 电路与系统, 2018, 07(03): 75-83. https://doi.org/10.12677/OJCS.2018.73010</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.26670-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">刘伟, 陈晨, 高颖. 一种融合相位信息先验信噪比估计算法的研究[J]. 电声技术, 2017, 41(11/12): 84-87.</mixed-citation></ref><ref id="hanspub.26670-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Cho, J.W. and Park, H.M. (2016) Independent Vector Analysis Followed by HMM-Based Feature Enhancement for Robust Speech Recognition. Signal Process, 120, 200-208. &lt;br&gt;https://doi.org/10.1016/j.sigpro.2015.09.002</mixed-citation></ref><ref id="hanspub.26670-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Boll, S.F. (1979) Suppression of Acoustic Noise in Speech Using Spectral Subtraction. IEEE Transactions on Acoustics, Speech, and Signal Processing, 27, 113-120. &lt;br&gt;https://doi.org/10.1109/TASSP.1979.1163209</mixed-citation></ref><ref id="hanspub.26670-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Ephraim, Y. and Malah, D. (1984) Speech Enhancement Using a Minimum Mean-Square Error Short-Time Spectral Amplitude Estimator. IEEE Transaction on Acoustic Speech Signal Process, 32, 1109-1121.  
&lt;br&gt;https://doi.org/10.1109/TASSP.1984.1164453</mixed-citation></ref><ref id="hanspub.26670-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Ephraim, Y. and Harry, L.V.T. (1995) A Signal Subspace Approach for Speech Enhancement. IEEE Transactions on Speech and Audio Processing, 3, 251-266. &lt;br&gt;https://doi.org/10.1109/89.397090</mixed-citation></ref><ref id="hanspub.26670-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">孙海东. 基于新型先验信噪比估计的语音增强算法研究[D]: [硕士学位论文]. 烟台: 烟台大学, 2015.</mixed-citation></ref><ref id="hanspub.26670-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Plapous, C. and Marro, C. (2006) Improved Signal-to-Noise Ratio Estimation for Speech Enhancement. IEEE Transactions on Audio, Speech, and Language Processing, 14, 2098-2108. &lt;br&gt;https://doi.org/10.1109/TASL.2006.872621</mixed-citation></ref><ref id="hanspub.26670-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Yong, P.C., Nordholm, S. and Dam, H.H. (2013) Optimization and Evaluation of Sigmoid Function with A Priori SNR Estimate for Real-Time Speech Enhancement. Speech Communications, 55, 358-376.  
&lt;br&gt;https://doi.org/10.1016/j.specom.2012.09.004</mixed-citation></ref><ref id="hanspub.26670-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Shen, S., Ou, S., Wei, J., et al. (2017) A Priori SNR Estimator Based on a Convex Combination of Two DD Approaches for Speech Enhancement. 2016 IEEE International Conference on Signal and Image Processing, Beijing, 13-15 August 2016, 750-754.</mixed-citation></ref><ref id="hanspub.26670-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Hasan, T. and Hasan, Md.K. (2010) MMSE Estimator for Speech Enhance-ment Considering the Constructive and Destructive Interference of Noise. IEI Signal Processing, 4, 1-4. &lt;br&gt;https://doi.org/10.1049/iet-spr.2008.0114</mixed-citation></ref><ref id="hanspub.26670-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">陈国明. 语音增强技术研究[D]: [博士学位论文]. 南京: 东南大学, 2007.</mixed-citation></ref><ref id="hanspub.26670-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">沈锁金. 语音增强技术中的先验信噪比估计算法研究[D]: [硕士学位论文]. 烟台: 烟台大学, 2017.</mixed-citation></ref><ref id="hanspub.26670-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Lu, Y. and Loizou, P.C. (2008) A Geometric Approach to Spectral Subtraction. Speech Communication, 50, 453.  
&lt;br&gt;https://doi.org/10.1016/j.specom.2008.01.003</mixed-citation></ref><ref id="hanspub.26670-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Sun, H., Ou, S., Liu, R., et al. (2015) A Variable Momentum Factor Algo-rithm for a Priori SNR Estimation in Speech Enhancement. 2014 7th International Congress on Image and Signal Processing, Dalian, 14-16 October 2014, 888-892.</mixed-citation></ref><ref id="hanspub.26670-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Taal, C.H., Hendriks, R.C., Heusdens, R., et al. (2011) An Algorithm for Intelligibility Prediction of Time-Frequency Weighted Noisy Speech. IEEE Transactions on Audio Speech &amp; Language Processing, 19, 2125-2136.  
&lt;br&gt;https://doi.org/10.1109/TASL.2011.2114881</mixed-citation></ref><ref id="hanspub.26670-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Pei, C.Y., Nordholm, S. and Hai, H.D. (2013) Optimization and Evaluation of Sigmoid Function with A Priori SNR Estimate for Real-Time Speech Enhancement. Speech Communication, 55, 358-376.  
&lt;br&gt;https://doi.org/10.1016/j.specom.2012.09.004</mixed-citation></ref></ref-list></back></article>