<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">DSC</journal-id><journal-title-group><journal-title>Dynamical Systems and Control</journal-title></journal-title-group><issn pub-type="epub">2325-677X</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/DSC.2018.71002</article-id><article-id pub-id-type="publisher-id">DSC-23181</article-id><article-categories><subj-group subj-group-type="heading"><subject>DSC20180100000_14998948.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于SVM的状态反馈故障诊断技术 
  State Feedback Fault Diagnosis Technology Based on SVM
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>房</surname><given-names>志铭</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>福忠</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>姚</surname><given-names>波</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>沈阳师范大学数学与系统科学学院，辽宁 沈阳</addr-line></aff><aff id="aff3"><addr-line>沈阳工程学院基础教学部，辽宁 沈阳</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>05</day><month>12</month><year>2017</year></pub-date><volume>07</volume><issue>01</issue><fpage>11</fpage><lpage>26</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    本文利用SVM对系统极点进行分类，区分出状态反馈系统无故障和发生故障时分别产生的极点。并利用网格搜寻法寻找最优参数，对极点分类方法进行建模。为了实现对系统极点变化的实时监测，本文给出了一种通过系统状态估算系统极点的新方法。在给出故障诊断模型的基础上，同时对相应的故障设计可靠控制器。最后通过算例验证极点估算方法的正确性和故障诊断的准确性以及可靠控制器的有效性。
    In this paper, SVM is used to classify the poles of the system, and the poles generated by the state feedback system without faults and faults are distinguished. And the grid search method is used to find the optimal parameters, and the pole classification method is modeled. In order to realize the real-time monitoring of system pole change, a new method to estimate the system poles by system status is presented. On the basis of the fault diagnosis model, a reliable controller is designed for the corresponding faults. Finally, an example is given to verify the correctness of the pole estimation method, the accuracy of the fault diagnosis and the effectiveness of the reliable controller. 
  
 
</p></abstract><kwd-group><kwd>模板，极点估算方法，极点分类模型，SVM，故障诊断，状态反馈, Pole Estimation Method</kwd><kwd> Pole Classification Model</kwd><kwd> SVM</kwd><kwd> Fault Diagnosis</kwd><kwd> State Feedback</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于SVM的状态反馈故障诊断技术 <sup> </sup></title><p>房志铭<sup>1</sup>，王福忠<sup>2</sup>，姚波<sup>1</sup></p><p><sup>1</sup>沈阳师范大学数学与系统科学学院，辽宁 沈阳</p><p><sup>2</sup>沈阳工程学院基础教学部，辽宁 沈阳</p><p>收稿日期：2017年12月2日；录用日期：2017年12月20日；发布日期：2017年12月27日</p><disp-formula id="hanspub.23181-formula14"><graphic xlink:href="//html.hanspub.org/file/2-2740140x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文利用SVM对系统极点进行分类，区分出状态反馈系统无故障和发生故障时分别产生的极点。并利用网格搜寻法寻找最优参数，对极点分类方法进行建模。为了实现对系统极点变化的实时监测，本文给出了一种通过系统状态估算系统极点的新方法。在给出故障诊断模型的基础上，同时对相应的故障设计可靠控制器。最后通过算例验证极点估算方法的正确性和故障诊断的准确性以及可靠控制器的有效性。</p><p>关键词 :模板，极点估算方法，极点分类模型，SVM，故障诊断，状态反馈</p><disp-formula id="hanspub.23181-formula15"><graphic xlink:href="//html.hanspub.org/file/2-2740140x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/2-2740140x7_hanspub.png" /> <img src="//html.hanspub.org/file/2-2740140x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>SVM是近年来兴起的一种基于统计学习理论的机器学习算法，以结构风险最小化为原则来训练和建立模型，其算法本质上是一个凸二次优化问题，能够保证找到的极值解就是全局最优解 [<xref ref-type="bibr" rid="hanspub.23181-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.23181-ref2">2</xref>] 。SVM善于解决小样本、非线性和高维数问题，具有结构简单、泛化能力优秀等特点。有些学者将统计学习理论应用到系统辨识和故障诊断领域 [<xref ref-type="bibr" rid="hanspub.23181-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.23181-ref4">4</xref>] ，其中对于支持向量机应用的研究也有了一定的发展 [<xref ref-type="bibr" rid="hanspub.23181-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.23181-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.23181-ref7">7</xref>] 。一些学者将支持向量机应用到了故障分类中，文献 [<xref ref-type="bibr" rid="hanspub.23181-ref8">8</xref>] 和文献 [<xref ref-type="bibr" rid="hanspub.23181-ref9">9</xref>] 分别给出了一种基于最小二乘支持向量机的故障分类方案。文献 [<xref ref-type="bibr" rid="hanspub.23181-ref10">10</xref>] 和 [<xref ref-type="bibr" rid="hanspub.23181-ref11">11</xref>] 将SVM应用到了模糊控制中，并且文献 [<xref ref-type="bibr" rid="hanspub.23181-ref11">11</xref>] 对SVM的算法进行了改进，首次提出用一个新的回归来解决最小二乘支持向量机中的问题，使其学习速度得到了提升。<sup> </sup></p><p>对于传统的可靠控制问题，国内一些学者已经做得比较完备 [<xref ref-type="bibr" rid="hanspub.23181-ref12">12</xref>] [<xref ref-type="bibr" rid="hanspub.23181-ref13">13</xref>] 。在本文的故障仿真中可以看到，对应部件不同的通道发生故障时，相应的闭环系统极点的变化区域是不同的。本文在此基础上，提出通过SVM对不同故障的极点进行分类，以实现对闭环系统故障的诊断。单通道故障控制器相对于多通道故障控制以及任意单一通道故障控制有着能耗小，保守性低的优势，在实际生产中应用性更强。本文针对这一情况，设计单一通道的故障控制器，针对不同的单一通道故障切换相应的控制器。而在此之前，首先要解决状态估计的问题，对此国内外学者已经做了大量的研究 [<xref ref-type="bibr" rid="hanspub.23181-ref14">14</xref>] [<xref ref-type="bibr" rid="hanspub.23181-ref15">15</xref>] [<xref ref-type="bibr" rid="hanspub.23181-ref16">16</xref>] [<xref ref-type="bibr" rid="hanspub.23181-ref17">17</xref>] 。</p><p>本文对于故障诊断和分类给出以下方法。首先给出了极点观测器的设计方法，通过对系统实时监测到的状态，实时估计系统极点的变化趋势。其次，通过系统极点的变化趋势，利用SVM对系统极点进行分类，根据不同通道发生故障，系统极点变化区域不同这一特性，实现对故障的实时诊断。最后，根据故障系统诊断的不同类型的故障，对系统实施相应故障的可靠控制。</p></sec><sec id="s4"><title>2. 基于LIB-SVM的控制系统中极点配置问题的故障诊断方法</title><p>基于LIB-SVM的状态反馈系统故障诊断的系统原理示如图1。</p><p>通过本文提出的方法，可以很好的判断出系统执行器或者传感器出故障的通道，从而切换相应的单通道控制器，使得系统继续保持稳态，达到可靠控制的目的，有效的降低了传统多通道控制器带来的技术难题，并且有效的降低了控制系统的能耗和保守性。</p><p>故障诊断系统部件如图2所示，首先通过状态观测器采集到系统的状态信息，下一步将状态信息传入极点观测器，估算出此时的极点位置。最后再由极点分类器根据极点的位置，判断是否有故障，若极点全部在所要配置的区域内，则暂不对其进行控制；若至少有一个极点跳出所配置的区域，则对其进行故障诊断判断出现故障的通道，之后切换相应的单通道故障控制器，使得系统极点重新配置到所要求区域。</p><p>图1. 基于LIB-SVM的状态反馈系统故障诊断的系统原理</p><p>图2. 故障诊断系统结构图</p><sec id="s4_1"><title>2.1. 状态观测器设计</title><p>引理1 [<xref ref-type="bibr" rid="hanspub.23181-ref18">18</xref>] ：给定n维线性定常系统</p><p>{ x ˙ = A x + B u y = C x (1)</p><p>式中，x为n维状态向量，u为p维输入向量，y为q维输出向量，矩阵A，B，C为具有相应维数的实常量矩阵。若此系统是状态完全能观测的，则状态向量 x ( t ) 可有输入u和输出y的相应信息构造出来。</p><p>状态向量x的重构问题实质上就是根据可直接测量的u和y以及矩阵A，B，C来确定或者产生 x ( t ) 的估计值 x ^ ( t ) 。将输入 u ( t ) 和输出 y ( t ) 都利用起来设计状态观测器，如图3。</p><p>因为</p><p>y ^ ( t ) − y ( t ) = C [ x ^ ( t ) − x ( t ) ] (2)</p><p>所以图3中的状态观测器的动态方程可写成</p><p>x ^ ˙ = ( A − E C ) x ^ + B u + E (3)</p><p>由式(3)所表述的动态系统（即状态观测器）所得到的 x ^ ( t ) 是与 x ( t ) 的维数相同的，故称它为全维观测器。全维观测器是有两个输入 u ( t ) 和输出 y ( t ) ，一个输入为状态的估计值 x ^ ( t ) 的动态系统。</p></sec><sec id="s4_2"><title>2.2. 极点观测器设计</title><sec id="s4_2_1"><title>2.2.1. 问题描述</title><p>设给定自治系统：</p><p>x ˙ = A x ( t ) ,     x ( t ) = [ x 1 ( t ) ⋯ x n ( t ) ] T ,     x ˙ ( t ) = [ x ˙ 1 ( t ) ⋯ x ˙ n ( t ) ] T (4)</p><p>图3. 全维状态观测器结构图</p><p>在已知系统状态可测，通过系统的状态估算系统n阶矩阵A，其中， x ( t ) ∈ R n 为状态， Δ t 为采样时间间隔，采样初始时间为 t 0 ，采集n + 1个状态值，如下：</p><p>x ′ 0 = x ( t 0 ) ,   x ′ 1 = x ( t 0 + Δ t ) ,   x ′ 2 = x ( t 0 + 2 Δ t ) , ⋯ , x ′ n = x ( t 0 + n Δ t )</p></sec><sec id="s4_2_2"><title>2.2.2主要结果</title><p>设 x = x ( t ) ，则 d x ( t ) = x ˙ ( t ) d t ，可以得到近似计算公式</p><p>Δ x = x ˙ ( t ) Δ t (5)</p><p>其中 Δ t 越小近似程度越高，通过n + 1个状态值，确定n个状态改变量，设</p><p>Δ x i = x ˙ ( t 0 + i Δ t ) − x ˙ ( t 0 + ( i − 1 ) Δ t ) (6)</p><p>也就是，</p><p>Δ x 1 = x 1 − x 0 = x ( t 0 + Δ t ) − x (t0)</p><p>Δ x 2 = x 2 − x 1 = x ( t 0 + 2 Δ t ) − x ( t 0 + Δ t )</p><p>⋯</p><p>Δ x n = x n − x n − 1 = x ( t 0 + n Δ t ) − x ( t 0 + ( n − 1 ) Δ t )</p><p>根据(5)和(6)式，可以得到</p><p>Δ x i = x ˙ ( t 0 + ( i − 1 ) Δ t ) Δ t</p><p>根据(6)和上式可得，其中 i = 1 , 2 , ⋯ , n</p><p>Δ x i = A x ( t 0 + ( i − 1 ) Δ t ) Δ t (7)</p><p>以(7)作为矩阵的第 列，可有如下</p><p>[ Δ x 1 Δ x 2 ⋯ Δ x n ] = A [ x ( t 0 ) x ( t 0 + Δ t ) ⋯ x ( t 0 + n Δ t ) ] Δ t</p><p>设n阶矩阵</p><p>Δ X = [ Δ x 1 Δ x 2 ⋯ Δ x n ]</p><p>X = [ x ( t 0 ) x ( t 0 + Δ t ) ⋯ x ( t 0 + n Δ t ) ] Δ t</p><p>若 X 可逆，则得到系统矩阵的估算矩阵 Δ X ≈ A X ，</p><p>A ≈ Δ X X − 1 (8)</p><p>通过系统仿真发现，t的初值对系统矩阵A无影响， Δ t 取值越小，估算出来的A越准确。</p></sec></sec><sec id="s4_3"><title>2.3. 极点分类器设计</title><sec id="s4_3_1"><title>2.3.1. 极点分类器预测模型设计</title><p>LIBSVM是中国台湾大学林智仁教授等开发设计的软件对SVM所涉及的参数调节相对比较少，并且提供了很多的默认参数，利用这些默认参数可以解决很多问题。支持向量C-SVC基本原理如下：</p><p>给定训练向量集 x i ∈ R n ,   i = 1 , ⋯ , l ，其中 l 为样本数，将其分成两类 y ∈ R l ， y i ∈ { 1 , − 1 } ，来对下式进行计算：</p><p>min w , b , ξ 1 2 w T w + C ∑ i = 1 l     ξ i</p><p>s .t .     y i ( w T ∅ ( x i ) + b ) ≥ 1 − ξ i</p><p>ξ i ≥ 0 ,   i = 1 , ⋯ , l</p><p>上述问题的对偶问题是：</p><p>min α 1 2 α T Q α + e T α</p><p>s .t .     y T α = 0</p><p>0 ≤ α i ≤ C ,   i = 1 , ⋯ , l</p><p>其中e为任意向量， C &gt; 0 ，Q为 l &#215; l 的半正定矩阵， Q i j ≡ y i y j K ( x i , x j ) ， K ( x i , x j ) ≡ ∅ ( x i ) T ∅ ( x j ) 为核函数。这里的训练集向量 x i 被函数 ∅ 映射到高维空间中。</p><p>其决策函数为：</p><p>sgn ( ∑ i = 1 l     y i α i K ( x i , x ) + b )</p><p>本文中基于支持向量机方法的极点分类预测仿真实验是利用Libsvm软件包，在matlab中实现的。在进行预测仿真时，首先要采集n个不同通道出现故障时的极点位置数据，把这些数据分成n类。然后对所有数据进行标准化处理，对于每个通道的故障数据，选取其中的一半作为训练集进行建模，另一半数据作为预测的测试集。具体的建模过程如图4所示。</p><p>极点数据分类步骤：</p><p>1) 收集数据：收集故障部件n条通道分别出现故障时的极点数据，对数据进行标准化处理；</p><p>2) 划分训练集与测试集：分别选取n条通道故障时极点数据的一半作为训练集，另一半作为测试集；</p><p>3) 将Accuracy作为评价标准，首先建立粗糙预测模型；</p><p>4) 参数寻优：采用网格搜寻法，选取最佳的参数c和g，建立模型；</p><p>5) 提取模型：提取使Accuracy达到最高的参数c和g，作为预测模型的最终参数建立极点分类模型。</p><p>其中参数c表示C-SVC的损失函数，参数g表示核函数中的gamma函数设置(本文中采用的是RBF核函数)。</p><p>图4. 建模流程</p></sec><sec id="s4_3_2"><title>2.3.2. 极点分类处理</title><p>定义1：对复平面中的区域D，如果存在一个对称矩阵 L ∈ R m &#215; m 和矩阵 M ∈ R m &#215; m ，使得</p><p>D = { s ∈ C : L + s M + s &#175; M T &lt; 0 }</p><p>则称D是一个线性矩阵不等式区域(简记为LMI区域)。矩阵值函数</p><p>f D ( z ) = L + s M + s &#175; M T</p><p>称为LMI区域D的特征函数。</p><p>定义2：对复平面中给定的LMI区域D和矩阵 A ∈ R n &#215; n ，如果矩阵A的所有特征值都位于区域D中，即 σ ( A ) ⊂ D ，则称矩阵A是D-稳定的。</p><p>基于以上两个定义，设极点观测器观测到的极点集为 λ = λ 1 , λ 2 , ⋯ , λ n   ( n = 1 , 2 , ⋯ , n ) ，若 ∀ λ i ∉ D ，说明所配置的极点跳出了配置区域D，那么我们认为系统出现故障。此时，对观测到的极点进行故障分类，然后切换相应的单通道控制器。若极点仍在所配置区域D内，即使有出现故障的趋势，我们依然认为其稳定，暂不切换控制器，这样使得系统具有一定的鲁棒性。</p></sec></sec><sec id="s4_4"><title>2.4. 单通道控制器的设计</title>问题描述<p>考虑线性定常系统：</p><p>{ x ˙ ( t ) = A x ( t ) + B u ( t ) y ( t ) = C x ( t ) (9)</p><p>其中， x ( t ) ∈ R n 是状态标量， u ( t ) ∈ R m 是控制变量， y ( t ) ∈ R p 是输出变量，A，B是适维矩阵，C是适维行满秩矩阵。</p><p>执行器连续增益故障矩阵模型描述为：</p><p>u f ( t ) = F a u ( t ) (10)</p><p>其中， u ( t ) ∈ R p 为系统的控制输入变量， u f ( t ) ∈ R 为考虑执行器故障系统的输入变量。</p><p>引理2：给定的LMI区域 D = { s ∈ C : L + s M + s &#175; M T &lt; 0 } ，则实对称矩阵 A ∈ R n &#215; n 是D稳定的充分必要条件是存在一个对称正定实矩阵 X ∈ R n &#215; n 使得</p><p>M D ( A , X ) &lt; 0</p><p>其中：</p><p>M D ( A , X ) = L ⊗ X + M ⊗ ( A X ) + M T ⊗ ( A X ) T</p><p>引理3：根据引理1矩阵 A 的所有特征值均在半径为r，中心在 ( − q , 0 ) 的圆盘中的充分必要条件是存在对称正定矩阵 X ，使得</p><p>[ − r X A X + q X X A T + q X − r X ] &lt; 0</p><p>引理4：在考虑执行器故障时对单故障进行处理(凸组合法)，设 φ a i 1 = diag ( 1 , ⋯ , 1 , f &#175; a i , 1 , ⋯ , 1 ) ，</p><p>φ a i 2 = diag ( 1 , ⋯ , 1 , f &#175; a i , 1 , ⋯ , 1 ) ,   i = 1 , 2 , ⋯ , p</p><p>设集合 Λ a = { F a i | F a i = diag ( 1 , ⋯ , 1 , f &#175; a i , 1 , ⋯ , 1 ) , f &#175; a i ≤ f a i ≤ f &#175; a i , i = 1 , 2 , ⋯ , p }</p><p>这样由(11)描述的执行器故障矩阵 F a ∈ Λ a 。存在正整数 i ，使得 F a = F a i 。显然 F a i 是在 φ a i 1 和 φ a i 2 为顶点构成的凸集合中。因此，总可以找到 α a i j ≥ 0 , j = 1 , 2 满足 ∑ j = 1 2 α s i j = 1</p><p>使得 F a i = ∑ j = 1 2 α a i j φ a i j</p></sec></sec><sec id="s5"><title>3. 主要结果</title><sec id="s5_1"><title>3.1. 线性系统圆形区域极点配置状态反馈控制器设计</title><p>对系统(9)引入状态反馈控制器：</p><p>u ( t ) = K x ( t ) (11)</p><p>由此构成闭环系统：</p><p>x ˙ ( t ) = ( A + B K ) x ( t ) (12)</p><p>定理1：对于系统(9)，存在状态反馈控制器(11)使得闭环系统(12)的极点配置在半径为r，中心在 ( − q , 0 ) 的圆盘中的充分必要条件是存在对称正定矩阵X和矩阵Y使得：</p><p>[ − r X ( A + q I ) X + B Y X ( A + q I ) T + Y T B T − r X ] &lt; 0</p><p>存在可行解 X = X T &gt; 0 和 Y ，其中 Y = K X ， K 为状态反馈增益矩阵。</p><p>证明：根据引理1和引理3可知矩阵A的所有特征值均在半径为r，中心在 ( − q , 0 ) 的圆盘中的充分必要条件是存在对称正定矩阵X，使得</p><p>[ − r X A X + q X X A T + q X − r X ] &lt; 0 (13)</p><p>将(13)中的矩阵 A 替换成 A + B K ，得到</p><p>[ − r X ( A + B K ) X + q X X ( A + B K ) T + q X − r X ] &lt; 0 (14)</p><p>又由 Y = K X 得到 K = Y X − 1 ，带入(14)有</p><p>[ − r X ( A + B Y X − 1 ) X + q X X ( A + B Y X − 1 ) T + q X − r X ] &lt; 0</p><p>整理有</p><p>[ − r X ( A + q I ) X + B Y X ( A + q I ) T + Y T B T − r X ] &lt; 0</p><p>定理得证。</p></sec><sec id="s5_2"><title>3.2. 线性系统执行器故障圆形区域极点配置状态反馈控制器设计</title><p>当系统发生执行器故障，由(10)可知系统可以描述为：</p><p>{ x ˙ ( t ) = A x ( t ) + B F a u ( t ) y ( t ) = C x ( t )</p><p>对系统(9)引入状态反馈控制器；</p><p>u f ( t ) = F a K x ( t )</p><p>由此构成闭环系统：</p><p>x ˙ ( t ) = ( A + B F a K ) x ( t ) (15)</p><p>定理2：对于系统(15)，考虑执行器故障 u f = F a u ，对于系统存在状态反馈可靠控制器的充分必要条件为，对于正定矩阵 X &gt; 0 和矩阵 Y ，下列线性矩阵不等式组</p><p>[ − r X ( A X + B φ a i Y ) + q X ( X A T + Y T φ a i B T ) + q X − r X ] &lt; 0</p><p>存在可行解，若LMIs存在可行解 ( X , Y ) ，则系统的极点配置到半径为r，中心在 ( − q , 0 ) 的圆盘区域中，相应的状态反馈可靠控制器增益矩阵为 K = Y X − 1 。</p><p>证明：根据引理1和引理3可知矩阵 的所有特征值均在半径为r，中心在 ( − q , 0 ) 的圆盘中的充分必要条件是存在对称正定矩阵 X ，使得</p><p>[ − r X A X + q X X A T + q X − r X ] &lt; 0 (16)</p><p>将(16)中的 替换成 A + B F a K 得到</p><p>[ − r X ( A + B F a K ) X + q X X ( A + B F a K ) T + q X − r X ] &lt; 0 (17)</p><p>又由 Y = K X 得到 K = Y X − 1 ，带入(17)有</p><p>[ − r X ( A X + B F a Y ) + q X ( X A T + Y T F a B T ) + q X − r X ] &lt; 0 (18)</p><p>又由引理4代入执行器故障得到</p><p>[ − r X ( A X + B φ a i Y ) + q X ( X A T + Y T φ a i B T ) + q X − r X ] &lt; 0</p><p>定理得证。</p></sec></sec><sec id="s6"><title>4. 系统仿真</title><p>考虑如下系统：</p><p>[ x ˙ 1 x ˙ 2 x ˙ 3 ] = [ 5 1 0 0 2 0 1 1 − 2 ] [ x 1 x 2 x 3 ] + [ 1 0 1 − 1 0 − 1 ] u</p><p>y = [ 1 1 0 1 0 1 ] [ x 1 x 2 x 3 ]</p><p>希望的闭环系统极点配置在半径为2，中心在 ( − 2 , 0 ) 的圆盘区域内</p><p>设计状态反馈控制器为</p><p>[ x ˙ 1 x ˙ 2 x ˙ 3 ] = [ − 2.0320 0.0135 − 0.0233 − 1.4920 − 1.0034 0.0058 − 4.5399 3.0169 − 2.0291 ] [ x 1 x 2 x 3 ]</p><p>[ u 1 u 2 ] = [ − 7.0320 − 0.9865 − 0.0233 − 5.5399 2.0169 − 0.0291 ] [ x 1 x 2 x 3 ]</p><p>此时闭环系统渐进稳定，极点均配置在所要求的圆盘区域内。</p><p>针对此系统收集2条执行器通道分别出现故障时的极点数据，如图5和图6。</p><p>建立极点分类器模型的过程中，通过网格搜寻法找到最佳的c和g，建立极点分类模型。寻参如图7和图8。</p><p>通过图像可以看出，Accuracy的最佳准平是94.0299%，达到了非常理想的分类水准。</p><p>针对2个通道的故障分别切换到相应的单通道控制器，收集极点数据如图9和图10。</p><p>下面通过数例验证三个有效性：</p><p>第一：极点观测器的有效性。即通过闭环系统状态的信息，估计闭环系统的极点。</p><p>第二：极点分类器的有效性。验证极点分类器的分类结果和模拟的故障类型和位置一致。</p><p>第三：单通道可靠控制器的有效性。根据故障诊断信息，由相应的可靠控制器构成的闭环系统的极点保持在所配置的区域内。</p><p>仿真实验，如下：</p><p>第一步：考虑执行器故障 F = diag ( f 1 , f 2 ) ，其 f 1 = 0.3 ,   f 2 = 1 。此时极点跳出所配置的条形区域，极点位置如图11。</p><p>图5. 通道1出现故障时极点位置图</p><p>图6. 通道2出现故障时极点位置图</p><p>图7. 参数选择3D视图</p><p>图8. 参数选择等高线视图</p><p>图9. 针对通道1出现故障的极点配置图</p><p>图10. 针对通道2出现故障的极点配置图</p><p>图11. 故障极点位置图</p><p>此时，这三个极点的位置数据为 λ = { − 2.1103 , − 0.8626 , 3.5213 } ，而应用极点观测器的算法采集到的极点数据为 λ ′ = { − 2.0882 , − 0.8589 , 3.5840 } 。我们可以看到应用本文中的极点观测器采集到的极点数据与真实数据极为相近。</p><p>下面采用本文中极点观测器的设计方法来求观测到的极点集，具体算法如下：</p><p>取采样时间为 t 1 = 0.1 ， t 2 = 0.11 ， t 3 = 0.12 ， t 4 = 0.13 ；</p><p>计算公式为：</p><p>x ( t ) = e A t x ( 0 )</p><p>此时 x ( 0 ) = [ 1 1 1 ] ′</p><p>x ′ 1 = [ 1.4299 1.3774 0.6426 ] ′</p><p>x ′ 2 = [ 1.4818 1.4231 0.6061 ] ′</p><p>x ′ 3 = [ 1.5355 1.4705 0.5693 ] ′</p><p>x ′ 4 = [ 1.5912 1.5195 0.5323 ] ′</p><p>根据式子(6)有</p><p>Δ x = [ x 2 − x 1 x 3 − x 2 x 4 − x 3 ]</p><p>X = [ x 1 x 2 x 3 ] ∗ Δ t</p><p>X 可逆，根据式子(8) A = Δ x ∗ X − 1 ，求出：</p><p>此时极点集</p><p>λ ′ = { − 2.0882 , − 0.8589 , 3.5840 } ；</p><p>综上，极点观测器的有效性得到了验证。</p><p>可以看出极点观测器所观测到的极点非常准确，并且相对误差随着 Δ t 的缩小而缩小。</p><p>第二步：判断 λ 中有一个极点跳出所配置的区域，下面将对极点数据进行分类，然后切换相应的单通道故障控制器。应用本文中的极点分类器建立的极点数据分类模型，模型的参数c = 32，g = 0.5，对这三个极点进行分类，将其预设为第二类故障极点，可以看到预测的故障类型和实际故障类型100%吻合，分类结果如图12。</p><p>通过图12，我们可以看到收集到的三个极点，可以准确的分类，此时可以看出发生故障的通道为通道1，与我们所模拟的故障一致，直接验证了极点分类器的有效性。</p><p>第三步：对产生故障的极点加上本文所设计的单一通道故障控制器进行极点配置</p><p>此时针对通道2的故障，即执行器故障 F = diag ( f 1 , f 2 ) ，其 f 1 = 0.3 ,   f 2 = 1 ，对其进行极点配置，结果如图13。</p><p>通过图13可以看到，极点均配置在了所要求的区域内，验证了单通道可靠控制器的有效性。</p></sec><sec id="s7"><title>5. 结论</title><p>综上所述，本文提出的极点观测器，基于LIB-SVM的极点分类器和单通道故障控制器均有效，仿真结果表明，该方法效果良好，能够对系统的极点做出非常准确的观测，分类，以及控制，即极点配置。</p><p>图12. 极点分类与预测情况</p><p>图13. 极点配置图</p><p>并且相对于其他方法本文提出的故障诊断及控制方法具有一定的鲁棒性且故障诊断的精度较高，在闭环系统出现故障但不影响系统正常运行，也就是极点位置发生偏移，但均在所配置区域D的情况下，此时可以发出预警，但不切换相应的控制器。只有在极点跳出区域D时，切换相应的控制器。这样可以有效的节约能耗和降低保守性。仿真结果完美地证明了本文结论的有效性。</p></sec><sec id="s8"><title>文章引用</title><p>房志铭,王福忠,姚 波. 基于SVM的状态反馈故障诊断技术 State Feedback Fault Diagnosis Technology Based on SVM[J]. 动力系统与控制, 2018, 07(01): 11-26. http://dx.doi.org/10.12677/DSC.2018.71002</p></sec><sec id="s9"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.23181-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Vapnik, V.N. (1998) Statistical Learning Theory. John Wiley, New York.</mixed-citation></ref><ref id="hanspub.23181-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Vapnik, V.N. (1995) The Nature of Statistical Learning Theory. Springer-Verlag, New York.  
https://doi.org/10.1007/978-1-4757-2440-0</mixed-citation></ref><ref id="hanspub.23181-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Yen, C.-W., Young, C.-N. and Nagurka, M.L. (2005) A Training Sample Sequence Planning Method for Pattern Recognition Problems. Automatica, 41, 575-581. https://doi.org/10.1016/j.automatica.2004.10.012</mixed-citation></ref><ref id="hanspub.23181-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">杨娟, 陆阳, 黄镇谨. 基于二进神经网络0/1分布系统可靠性分析[J]. 自动化学报, 2014, 40(7): 1472-1480.</mixed-citation></ref><ref id="hanspub.23181-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Ong, C.J., Sui, D. and Gilbert, E.G. (2006) Enlarging the Terminal Region of Nonlinear Model Predictive Control Using the Support Vector Machine Method. Automatica, 42, 1011-1016. https://doi.org/10.1016/j.automatica.2006.02.023</mixed-citation></ref><ref id="hanspub.23181-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Laurain, V., Tóth, R., Piga, D. and Zheng, W.X. (2015) An Instrumental Least Squares Support Vector Machine for Nonlinear System Identification. Automatica, 54, 340-347. https://doi.org/10.1016/j.automatica.2015.02.017</mixed-citation></ref><ref id="hanspub.23181-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Ong, C.J., Keerthi, S.S., Gilbert, E.G. and Zhang, Z.H. (2004) Stability Regions for Constrained Nonlinear Systems and Their Functional Characterization via Support-Vector-Machine Learning. Automatica, 40, 1955-1964.  
https://doi.org/10.1016/j.automatica.2004.06.005</mixed-citation></ref><ref id="hanspub.23181-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Dubey, H.C., Tiwari, A.K., Nandita and Kishor, N. (2012) A Novel Fault Classification Scheme Based on Least Square SVM. 2012 Students Conference on Engineering and Systems (SCES), IEEE, 1-5.</mixed-citation></ref><ref id="hanspub.23181-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Dash, P.K., Samantaray, S.R. and Panda, G. (2007) Fault Classification and Section Identification of an Advanced Series-Compensated Transmission Line Using Support Vector Machine. IEEE Transac-tions on Power Delivery, 22, 67-73.</mixed-citation></ref><ref id="hanspub.23181-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Chiang, J.-H. and Hao, P.-Y. (2004) Support Vector Learning Mechanism for Fuzzy Rule-Based Modeling: A New Approach. IEEE Transactions on Fuzzy Systems, 12, 1-12. https://doi.org/10.1109/TFUZZ.2003.817839</mixed-citation></ref><ref id="hanspub.23181-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Zhao, W.Q., Zhang, J.J. and Li, K. (2015) An Efficient LS-SVM-Based Method for Fuzzy System Construction. IEEE Transactions on Fuzzy Systems, 23, 627-643. https://doi.org/10.1109/TFUZZ.2014.2321594</mixed-citation></ref><ref id="hanspub.23181-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">姚波, 王福中. 基于LMI可靠跟踪控制器设计[J]. 自动化学报, 2001(5): 615-619.</mixed-citation></ref><ref id="hanspub.23181-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">王福中, 姚波. 基控制于LMI双故障动态输出反馈完整性[J]. 控制理论与应用, 2006(5): 976-980.</mixed-citation></ref><ref id="hanspub.23181-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Basher, H.A. (2013) An LMI Approach for Observer Based Model Reference Control. 1-5.</mixed-citation></ref><ref id="hanspub.23181-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Juloski, A.L., Heemels, W.P.M.H., Boers, Y., et al. (2003) Two Approaches to State Estimation for a Class of Piecewise Affine Systems. Proceedings of the IEEE Conference on Decision and Control, 1, 143-148.</mixed-citation></ref><ref id="hanspub.23181-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">郭胜辉, 朱芳来. 基于区间观测器的执行器故障检测[J]. 控制与决策, 2016, 31(6): 1118-1122.</mixed-citation></ref><ref id="hanspub.23181-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">朱芳来, 岑峰, 董学平. 一种基于全维和降维观测器的故障检测和重构方法[J]. 控制与决策, 2011, 26(2): 258-262.</mixed-citation></ref><ref id="hanspub.23181-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">张嗣瀛, 高立群. 现代控制理论[M]. 北京: 清华大学出版社, 2006: 219-220.</mixed-citation></ref></ref-list></back></article>