<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2018.710152</article-id><article-id pub-id-type="publisher-id">AAM-27254</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20181000000_53741671.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  一类多值控制网络最优决策的半张量积求解法研究
  Research on Semi-Tensor Product Solution Method for Optimal Decision of a Class of Multi-Valued Control Networks
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>符</surname><given-names>繁强</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>韦</surname><given-names>维</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>周</surname><given-names>荧</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>钱</surname><given-names>柳</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>贵州民族大学，数据科学与信息工程学院，贵州 贵阳</addr-line></aff><aff id="aff3"><addr-line>贵州大学，数学与统计学院，贵州 贵阳</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>22</day><month>10</month><year>2018</year></pub-date><volume>07</volume><issue>10</issue><fpage>1308</fpage><lpage>1316</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  有限动态博弈过程在部分玩家的策略给定情形下，可以转化为多值逻辑控制网络的最优控制问题。本文研究这一类单输入输出的有限动态博弈问题，论文利用矩阵半张量积的方法，推导出多值逻辑动态系统的代数表达式和收益目标泛函的半张量积的表达形式，并证明此收益最大化问题新的表达方式与原问题的等价性；进而，给出了求解半张量积系统最优控制问题的动态规划法和算法；最后，应用此算法求解一个实例。
   The finite dynamic game process can be transformed into the optimal control problem of multi-valued logic control networks given the strategy of some players. In this paper, we study the finite dynamic game problem of single input and output. The paper uses the method of matrix half tensor product to derive the algebraic expression of multi-valued logic dynamic system and the expression of the semi-tensor product of the income objective functional, and proves the equivalence between the new expression of this income maximization problem and the problem. Furthermore, the dynamic programming method and algorithm for solving the optimal control problem of semi-tensor product system are given. Finally, an algorithm is used to solve an example.
 
</p></abstract><kwd-group><kwd>矩阵半张量积，多值逻辑控制网络，最优控制，离散型动态规划方法, Semi-Tensor Product</kwd><kwd> Multi-Valued Logic Control Network</kwd><kwd> Optimal Control</kwd><kwd> Discrete Dynamic Programming</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>一类多值控制网络最优决策的半张量积求解法研究<sup> </sup></title><p>符繁强<sup>1</sup>，韦 维<sup>1</sup>，周 荧<sup>2</sup>，钱柳<sup>1</sup></p><p><sup>1</sup>贵州民族大学，数据科学与信息工程学院，贵州 贵阳</p><p><sup>2</sup>贵州大学，数学与统计学院，贵州 贵阳</p><p><img src="//html.hanspub.org/file/12-2620754x1_hanspub.png" /></p><p>收稿日期：2018年10月1日；录用日期：2018年10月17日；发布日期：2018年10月24日</p><disp-formula id="hanspub.27254-formula20"><graphic xlink:href="//html.hanspub.org/file/12-2620754x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>有限动态博弈过程在部分玩家的策略给定情形下，可以转化为多值逻辑控制网络的最优控制问题。本文研究这一类单输入输出的有限动态博弈问题，论文利用矩阵半张量积的方法，推导出多值逻辑动态系统的代数表达式和收益目标泛函的半张量积的表达形式，并证明此收益最大化问题新的表达方式与原问题的等价性；进而，给出了求解半张量积系统最优控制问题的动态规划法和算法；最后，应用此算法求解一个实例。</p><p>关键词 :矩阵半张量积，多值逻辑控制网络，最优控制，离散型动态规划方法</p><disp-formula id="hanspub.27254-formula21"><graphic xlink:href="//html.hanspub.org/file/12-2620754x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/12-2620754x7_hanspub.png" /> <img src="//html.hanspub.org/file/12-2620754x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>布尔网络是描述人工智能系统、神经网络系统、基因调控网络等的一种简单可行工具 [<xref ref-type="bibr" rid="hanspub.27254-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.27254-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.27254-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.27254-ref4">4</xref>] ，在1969年，Kauffman首次提出用布尔网络来描述、模拟基因网络 [<xref ref-type="bibr" rid="hanspub.27254-ref5">5</xref>] ，但是由于布尔网络在描述一些实际问题时难免会有一定的局限性，例如：温度高低，天气阴晴，人的年龄老少等，因此，这时，多值逻辑网络和混合值逻辑网络应运而生。在一定程度上，多值逻辑网络是布尔网络的自然推广。同时逻辑网络在博弈论中也有应用。在一个网络演化博弈中，当局中人的对策是多个或者不同多个时，我们可以用多值逻辑网络来建模，详细结果参见 [<xref ref-type="bibr" rid="hanspub.27254-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.27254-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.27254-ref8">8</xref>] 。2011年程代展及其团队提出了矩阵半张量积的概念，将传统的普通矩阵乘法推广到一般的矩阵上，即，不再需要前一个矩阵的列数与后一个矩阵的行数相等，然而它却保持着矩阵的普通乘积的基本性质。这种工具有效地将逻辑表达融入到基本的数学运算框架中，在专著 [<xref ref-type="bibr" rid="hanspub.27254-ref9">9</xref>] [<xref ref-type="bibr" rid="hanspub.27254-ref10">10</xref>] [<xref ref-type="bibr" rid="hanspub.27254-ref11">11</xref>] 中详细介绍了矩阵的半张量积的定义与性质，并讨论了其在非线性系统、布尔网络、模糊逻辑等领域中的应用。</p><p>多值逻辑网络比布尔网络的应用更为广泛，所以在研究多值逻辑网络时同样可应用矩阵的半张量积。如文献 [<xref ref-type="bibr" rid="hanspub.27254-ref12">12</xref>] 讨论了如何从演化动态博弈导出多值逻辑系统的优化控制问题，并在多值逻辑系统下讨论平均收益和带贴因子的总收益两种性能指标下的最优控制的基本结论和算法，同时从逻辑动态系统的最优控制中导出演化博弈的纳什均衡。文献 [<xref ref-type="bibr" rid="hanspub.27254-ref13">13</xref>] 在博弈理论框架下对无穷时域上逻辑控制网络的最优控制问题进行求解。讨论逻辑控制网络的代数形式下对周期的计算。文献 [<xref ref-type="bibr" rid="hanspub.27254-ref14">14</xref>] 研究了人与机器之间重复无穷的囚徒困境模型，从逻辑控制网络的代数形式出发，讨论逻辑控制网络的拓扑结构，最后将这一结果推广到带有记忆的博弈中。文献 [<xref ref-type="bibr" rid="hanspub.27254-ref15">15</xref>] 研究了兼具逻辑表达式和代数表达式的布尔网络的最优控制问题。经查阅相关文献，对有限博弈的最优收益问题研究比较少，因其系统是逻辑形式描述，而目标泛函须用代数式表达，将逻辑表达式和代数表达式在统一的框架下处理有一定的难度。本文利用矩阵半张量积的方法研究了多值逻辑网络的最优收益问题，将多值逻辑动态表达式转化为对应的半张量形式，在此基础上给出目标泛函的半张量形式，得到等价的半张量形式的最优控制问题，进而利用动态规划法求解半张量系统的最优控制问题，再根据等价公式得到系统的最优解。最后给出一个算例。</p></sec><sec id="s4"><title>2. 准备知识</title><p>在这一节里，我们将本文的符号，涉及到的半张量积的定义和性质总结归纳如下。</p><sec id="s4_1"><title>2.1. 符号的说明</title><p>为叙述方便，做以下的符号说明：</p><p>l M m &#215; n : m &#215; n 维实矩阵集合；</p><p>l D k = { 0 , 1 k − 1 , ⋯ , k − 2 k − 1 , 1 } ；</p><p>注：在博弈中也用</p><p>D k = { 1 , 2 , ⋯ , k }</p><p>这时，将 i ~ i − 1 k − 1 , i = 1 , 2 , ⋯ , k ，即可</p><p>l δ n k 为单位阵 I n 的第k列；</p><p>l C o l i ( A ) ：为矩阵A的第i列，矩阵A的列集合记作 C o l ( A ) ；</p><p>l Δ k = { δ k i | i = 1 , 2 , ⋯ , k } ；这里 δ k i = C o l i ( I k ) ；</p><p>l 一个矩阵 L ∈ L n &#215; m 称为逻辑矩阵，如果它的列满足 C o l ( L ) ⊂ Δ n ；</p><p>l 矩阵 L = [ δ n i 1 , δ n i 2 , ⋯ , δ n i m ] ∈ L n &#215; m ，记为v。</p></sec><sec id="s4_2"><title>2.2. 矩阵的半张量积的定义及性质</title><p>定义2.2.1 [<xref ref-type="bibr" rid="hanspub.27254-ref9">9</xref>] ：设 A ∈ M m &#215; n 和 B ∈ M p &#215; q 。记n与p的最小公倍数为</p><p>a = l c m { n , p }</p><p>定义A与B的半张量积为</p><p>A   ⋉   B : = ( A ⊗ I t / n ) ( B ⊗ I t / p ) ,</p><p>这里 ⊗ 是矩阵的Kronecker积(亦称张量积)。</p><p>注：当 n = p 时，矩阵 A , B 满足等维条件，定义化为普通矩阵乘法，因此，半张量积是普通乘法的推广。本文所说的半张量积均为左半张量积。</p><p>命题2.2.1 [<xref ref-type="bibr" rid="hanspub.27254-ref9">9</xref>] ：若 F , G , H ∈ M m &#215; n ，则矩阵半张量积满足</p><p>1) 结合律</p><p>( F ⋉ G ) ⋉ H = F ⋉ ( G ⋉ H ) .</p><p>2) 分配律</p><p>{ F ⋉ ( a G &#177; b H ) = a F ⋉ G &#177; b F ⋉ H , ( a F &#177; b G ) ⋉ H = a F ⋉ H &#177; b G ⋉ H ,                             a , b ∈ R</p><p>命题2.2.2 [<xref ref-type="bibr" rid="hanspub.27254-ref9">9</xref>] ：设 A ∈ M m &#215; n 和 B ∈ M p &#215; q ，关于半张量积的置换，有：</p><p>( A ⋉ B ) T = B T ⋉ A T .</p><p>为了进一步实现交换运算，为此定义换位矩阵。</p><p>定义2.2.2 [<xref ref-type="bibr" rid="hanspub.27254-ref9">9</xref>] ：换位矩阵 W [ m , n ] 是一个 m n &#215; m n 矩阵，定义如下：它的行和列都是由双指标 ( i , j ) 标注，列是按照索引 I d ( i , j ; m , n ) 排列，行是由双指标 ( I , J ) 标注按照索引 I d ( J , I ; n , m ) 排列，并且位于 [ ( I , J ) , ( i , j ) ] 上的元素的值为</p><p>w ( I , J ) , ( i , j ) = δ ( i , j ) ( I , J ) = { 1 ,                     I = i 且 J = j ; 0 ,                   其 他 .</p><p>当 n = m 时，我们简记 W [ n ] : = W [ n , n ] 。</p><p>命题2.2.3 [<xref ref-type="bibr" rid="hanspub.27254-ref9">9</xref>] ：设 x ∈ Δ k 。则</p><p>x 2 = R k p x .</p><p>其中 R k p : = d i a g ( δ k 1 , δ k 2 , ⋯ , δ k k ) = δ k 2 [ 1 , k + 2 , 2 k + 3 , ⋯ , k 2 ] 称为k维降价矩阵。</p><p>利用降价矩阵与换位矩阵，我们可以降低计算逻辑函数的结构矩阵的计算量。</p><p>通过换位矩阵，引入半张量积的重要性质——伪交换性。</p><p>命题2.2.4 [<xref ref-type="bibr" rid="hanspub.27254-ref9">9</xref>] ：给定矩阵 A ∈ M m &#215; n ，</p><p>设 Y ∈ R t 为行向量，则</p><p>A ⋉ Y = Y ⋉ ( I t ⊗ A ) .</p><p>设 X ∈ R t 为列向量，则</p><p>X ⋉ A = ( I t ⊗ A ) ⋉ X .</p><p>设两个行向量 X ∈ R n ， Y ∈ R m ，则</p><p>X ⋉ Y ⋉ W [ n , m ] = Y ⋉ X .</p><p>设两个列向量 X ∈ R n ， Y ∈ R m ，则</p><p>W [ n , m ] ⋉ X ⋉ Y = Y ⋉ X .</p></sec><sec id="s4_3"><title>2.3. 博弈的定义</title><p>本文只关心有限博弈。</p><p>定义2.3.1 [<xref ref-type="bibr" rid="hanspub.27254-ref16">16</xref>] ：一个(有限)正规博弈，有三个部分组成： G = ( N , S , C ) ，其中</p><p>1) N = { 1 , 2 , ⋯ , n } 表示这里有n玩家(局中人)；</p><p>2) S = ∏ i = 1 n S i 称为局势，其中</p><p>S i = { S 1 i , ⋯ , S k i } ,             i = 1 , ⋯ , n</p><p>是第i个玩家的策略集，它表示第i个玩家有 k i 个策略可供选择，局势是所有玩家策略的笛卡尔积。</p><p>3) C = ( c 1 , ⋯ , c n ) ，其中 c i : S → R 是第i个玩家的收益函数为方便计，策略集通常记 S i = { 1 , ⋯ , k i }   ,     i = 1 , ⋯ , n .</p><p>这里“有限”博弈指：</p><p>a) 玩家数 n &lt; ∞ ，</p><p>b) 策略数 | S i | &lt; ∞ , i = 1 , ⋯ , n .</p></sec></sec><sec id="s5"><title>3. 多值逻辑网络最大收益问题</title><p>本文我们考虑单输入输出有限博弈(参与者与行动集有限)的动态过程，并假定部分玩家被视为“机器”，其策略固定已知，另一部分玩家作为“人”，他的策略选择的准则是使其收益最大化。本文讨论所有玩家的策略都只有1步记忆的情形。</p><p>根据如上假设，此类博弈问题可以转化为下面的多值逻辑控制网络的优化问题。</p><p>控制系统为：</p><p>x ( k + 1 ) = f ( x ( k ) , u ( k ) ) ,           k = 1 , 2 , ⋯ (1)</p><p>其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x70_hanspub.png" xlink:type="simple"/></inline-formula>为状态表示k时刻“机器”采取的行动；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x71_hanspub.png" xlink:type="simple"/></inline-formula>为控制输入表示k时刻“人”采取的行动，“机器”的策略f为从<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x72_hanspub.png" xlink:type="simple"/></inline-formula>到<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x73_hanspub.png" xlink:type="simple"/></inline-formula>的多值逻辑函数，即：</p><disp-formula id="hanspub.27254-formula22"><graphic xlink:href="//html.hanspub.org/file/12-2620754x74_hanspub.png"  xlink:type="simple"/></disp-formula><p>容许控制集为：</p><disp-formula id="hanspub.27254-formula23"><graphic xlink:href="//html.hanspub.org/file/12-2620754x75_hanspub.png"  xlink:type="simple"/></disp-formula><p>最优控制问题(P)：假设初始时刻<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x76_hanspub.png" xlink:type="simple"/></inline-formula>、初端<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x77_hanspub.png" xlink:type="simple"/></inline-formula>和终端时刻<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x78_hanspub.png" xlink:type="simple"/></inline-formula>已定，终端满足约束</p><disp-formula id="hanspub.27254-formula24"><graphic xlink:href="//html.hanspub.org/file/12-2620754x79_hanspub.png"  xlink:type="simple"/></disp-formula><p>机器策略<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x80_hanspub.png" xlink:type="simple"/></inline-formula>按(1)更新的情况下，寻找人的最佳策略<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x81_hanspub.png" xlink:type="simple"/></inline-formula>，使得系统状态从给定的初始状<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x82_hanspub.png" xlink:type="simple"/></inline-formula>到N时刻达到给定的终端状态<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x83_hanspub.png" xlink:type="simple"/></inline-formula>，并使得目标泛函最大化</p><disp-formula id="hanspub.27254-formula25"><label>(2)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/12-2620754x84_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中c为每一步的收益函数，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x85_hanspub.png" xlink:type="simple"/></inline-formula>为折扣因子。</p><p>针对这种多值逻辑控制的最优控制问题不但包含状态系统的逻辑运算，而且又包含了性能指标的代数运算，如果仅仅只有单一的逻辑系统或一般最优控制方法是很难解决的，为解决此类问题。我们引入矩阵半张量工具将逻辑动态网络转化为对应的代数状态方程。</p></sec><sec id="s6"><title>4. 多值控制网络最大收益问题的半张量方法及其问题的求解</title><sec id="s6_1"><title>4.1. 多值控制网络最大收益问题的半张量表示</title><p>定理4.1.1 [<xref ref-type="bibr" rid="hanspub.27254-ref9">9</xref>] ：给定一个n元多值逻辑函数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x86_hanspub.png" xlink:type="simple"/></inline-formula>，则存在一个唯一的逻辑矩阵<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x87_hanspub.png" xlink:type="simple"/></inline-formula>，使得f在半张量形式下可表示为</p><disp-formula id="hanspub.27254-formula26"><label>(3)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/12-2620754x88_hanspub.png"  xlink:type="simple"/></disp-formula><p>这里，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x89_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x90_hanspub.png" xlink:type="simple"/></inline-formula>称为f的结构矩阵。称上式为多值逻辑函数f的代数形式。</p><p>根据定理以及矩阵半张量积的性质，问题(P)可以等价表示为如下问题：</p><p>状态方程</p><disp-formula id="hanspub.27254-formula27"><graphic xlink:href="//html.hanspub.org/file/12-2620754x91_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x92_hanspub.png" xlink:type="simple"/></inline-formula></p><p>初始状态<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x93_hanspub.png" xlink:type="simple"/></inline-formula>，终端<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x94_hanspub.png" xlink:type="simple"/></inline-formula>容许控制集<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x95_hanspub.png" xlink:type="simple"/></inline-formula></p><p>收益函数所对应的半张量形式为：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x96_hanspub.png" xlink:type="simple"/></inline-formula></p><p>目标泛函为</p><disp-formula id="hanspub.27254-formula28"><label>(4)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/12-2620754x97_hanspub.png"  xlink:type="simple"/></disp-formula><p>(P为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x98_hanspub.png" xlink:type="simple"/></inline-formula>对应的收益矩阵，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x99_hanspub.png" xlink:type="simple"/></inline-formula>；即：“人”相对于“机器”的收益值)。</p><p>最优控制问题<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x100_hanspub.png" xlink:type="simple"/></inline-formula>：寻找<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x101_hanspub.png" xlink:type="simple"/></inline-formula></p><disp-formula id="hanspub.27254-formula29"><graphic xlink:href="//html.hanspub.org/file/12-2620754x102_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s6_2"><title>4.2. 最优控制问题的求解</title><p>变分法、庞特里亚金最大值原理、动态规划法是求解最优控制问题经典的三种方法，本文采用动态规划法求解离散系统的最优控制问题。针对半张量积表示的最优控制问题(<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x103_hanspub.png" xlink:type="simple"/></inline-formula>)，有如下定理：</p><p>定理4.2.1：若<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x104_hanspub.png" xlink:type="simple"/></inline-formula>是最优策略，则对于任意<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x105_hanspub.png" xlink:type="simple"/></inline-formula>。它的子策略<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x106_hanspub.png" xlink:type="simple"/></inline-formula>对于<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x107_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x108_hanspub.png" xlink:type="simple"/></inline-formula>确定的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x109_hanspub.png" xlink:type="simple"/></inline-formula>为起点的第k到N后部子过程而言，也是最优策略。</p><p>证明：以max为例证明此定理，反证法：</p><p>假设子策略<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x110_hanspub.png" xlink:type="simple"/></inline-formula>对于<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x111_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x112_hanspub.png" xlink:type="simple"/></inline-formula>确定的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x113_hanspub.png" xlink:type="simple"/></inline-formula>为起点的第k到N后部子过程而言，不是最优策略。则必定存在<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x114_hanspub.png" xlink:type="simple"/></inline-formula>和策略<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x115_hanspub.png" xlink:type="simple"/></inline-formula>，使得</p><disp-formula id="hanspub.27254-formula30"><graphic xlink:href="//html.hanspub.org/file/12-2620754x116_hanspub.png"  xlink:type="simple"/></disp-formula><p>令<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x117_hanspub.png" xlink:type="simple"/></inline-formula>，则</p><disp-formula id="hanspub.27254-formula31"><graphic xlink:href="//html.hanspub.org/file/12-2620754x118_hanspub.png"  xlink:type="simple"/></disp-formula><p>这与<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x119_hanspub.png" xlink:type="simple"/></inline-formula>是最优策略矛盾。证毕。</p><p>下面我们将定理4.2.1的思想，转化为可计算的递归算法。对于任意给定的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x120_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x121_hanspub.png" xlink:type="simple"/></inline-formula>，考虑如下的受控系统</p><disp-formula id="hanspub.27254-formula32"><label>(5)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/12-2620754x122_hanspub.png"  xlink:type="simple"/></disp-formula><p>设其性能指标为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x123_hanspub.png" xlink:type="simple"/></inline-formula></p><p>则最优控制问题<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x124_hanspub.png" xlink:type="simple"/></inline-formula>为：对于给定<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x125_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x126_hanspub.png" xlink:type="simple"/></inline-formula>对于系统(5)找到策略<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x127_hanspub.png" xlink:type="simple"/></inline-formula>，使得<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x128_hanspub.png" xlink:type="simple"/></inline-formula>，并<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x129_hanspub.png" xlink:type="simple"/></inline-formula></p><p>当<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x130_hanspub.png" xlink:type="simple"/></inline-formula>且<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x131_hanspub.png" xlink:type="simple"/></inline-formula>时，问题<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x132_hanspub.png" xlink:type="simple"/></inline-formula>即为我们需求的最优控制问题<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x133_hanspub.png" xlink:type="simple"/></inline-formula>，定义如下值函数：</p><disp-formula id="hanspub.27254-formula33"><label>(6)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/12-2620754x134_hanspub.png"  xlink:type="simple"/></disp-formula><p>则有如下定理：</p><p>定理4.2.2：对<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x136_hanspub.png" xlink:type="simple"/></inline-formula>，有</p><p><img src="//html.hanspub.org/file/12-2620754x137_hanspub.png" /><img src="//html.hanspub.org/file/12-2620754x138_hanspub.png" /></p><p>证明：由值函数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x139_hanspub.png" xlink:type="simple"/></inline-formula>的定义可知：</p><disp-formula id="hanspub.27254-formula34"><graphic xlink:href="//html.hanspub.org/file/12-2620754x140_hanspub.png"  xlink:type="simple"/></disp-formula><p>两端关于序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x141_hanspub.png" xlink:type="simple"/></inline-formula>取最大泛函</p><disp-formula id="hanspub.27254-formula35"><graphic xlink:href="//html.hanspub.org/file/12-2620754x142_hanspub.png"  xlink:type="simple"/></disp-formula><p>对任何序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x143_hanspub.png" xlink:type="simple"/></inline-formula>，有</p><disp-formula id="hanspub.27254-formula36"><graphic xlink:href="//html.hanspub.org/file/12-2620754x144_hanspub.png"  xlink:type="simple"/></disp-formula><p>证毕。</p></sec><sec id="s6_3"><title>4.3. 动态规划算法</title><p>根据定理4.2.2，我们容易得到如下算法。</p><p>逆推算法4.3.1：</p><p>Step 1：利用终端条件<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x145_hanspub.png" xlink:type="simple"/></inline-formula>开始由后向前逆推基本方程，计算出最优收益函数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x146_hanspub.png" xlink:type="simple"/></inline-formula>，最后通过计算<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x147_hanspub.png" xlink:type="simple"/></inline-formula>从而得到最优决策序列</p><disp-formula id="hanspub.27254-formula37"><graphic xlink:href="//html.hanspub.org/file/12-2620754x148_hanspub.png"  xlink:type="simple"/></disp-formula><p>Step 2：根据状态方程<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x149_hanspub.png" xlink:type="simple"/></inline-formula>和初始条件<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x150_hanspub.png" xlink:type="simple"/></inline-formula>，从<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x151_hanspub.png" xlink:type="simple"/></inline-formula>开始由前向后确定<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x152_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>应用此算法通过反复的迭代和回代从而得到</p><p>最优轨线<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x153_hanspub.png" xlink:type="simple"/></inline-formula></p><p>最优策略<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x154_hanspub.png" xlink:type="simple"/></inline-formula></p></sec><sec id="s6_4"><title>4.4. 应用实例</title><p>考虑有限的人机博弈，双方均有三个可选择的策略<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x155_hanspub.png" xlink:type="simple"/></inline-formula>。支付双矩阵见表1。</p><p>这里机器采取的策略为：在本次博弈中如果赢或平，下次不改变策略，如果本次博弈输，则下次采用对手的策略。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Payoff Bi-Matri</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >机 人</th><th align="center" valign="middle" >1</th><th align="center" valign="middle" >2</th><th align="center" valign="middle" >3</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >3，3</td><td align="center" valign="middle" >0，4</td><td align="center" valign="middle" >9，2</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >4，0</td><td align="center" valign="middle" >4，4</td><td align="center" valign="middle" >5，3</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >2，9</td><td align="center" valign="middle" >3，5</td><td align="center" valign="middle" >6，6</td></tr></tbody></table></table-wrap><p>表1. 支付双矩阵</p><p>给定初始状态<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x156_hanspub.png" xlink:type="simple"/></inline-formula>，终端状态<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x157_hanspub.png" xlink:type="simple"/></inline-formula>；性能指标为</p><disp-formula id="hanspub.27254-formula38"><graphic xlink:href="//html.hanspub.org/file/12-2620754x158_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x159_hanspub.png" xlink:type="simple"/></inline-formula>为逻辑变量表示机器的策略，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x160_hanspub.png" xlink:type="simple"/></inline-formula>为控制变量表示人的策略，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x161_hanspub.png" xlink:type="simple"/></inline-formula>为人的收益函数，求使性能指标最大的控制序列。</p><p>解：令<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x162_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x163_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x164_hanspub.png" xlink:type="simple"/></inline-formula>，则上述博弈可以写成</p><disp-formula id="hanspub.27254-formula39"><graphic xlink:href="//html.hanspub.org/file/12-2620754x165_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中</p><disp-formula id="hanspub.27254-formula40"><graphic xlink:href="//html.hanspub.org/file/12-2620754x166_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x167_hanspub.png" xlink:type="simple"/></inline-formula>为状态变量，表示机器t时刻的策略。<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x168_hanspub.png" xlink:type="simple"/></inline-formula></p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x169_hanspub.png" xlink:type="simple"/></inline-formula>为状态变量，表示人t时刻的策略。<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x170_hanspub.png" xlink:type="simple"/></inline-formula></p><p>初始条件<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x171_hanspub.png" xlink:type="simple"/></inline-formula>，终端<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x172_hanspub.png" xlink:type="simple"/></inline-formula>性能指标</p><disp-formula id="hanspub.27254-formula41"><graphic xlink:href="//html.hanspub.org/file/12-2620754x173_hanspub.png"  xlink:type="simple"/></disp-formula><p>求使性能指标最大的控制序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x174_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>应用动态规划法求解</p><disp-formula id="hanspub.27254-formula42"><graphic xlink:href="//html.hanspub.org/file/12-2620754x175_hanspub.png"  xlink:type="simple"/></disp-formula><p>有，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x176_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>当<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x177_hanspub.png" xlink:type="simple"/></inline-formula>时，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x178_hanspub.png" xlink:type="simple"/></inline-formula>取最大值为，其值为：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x179_hanspub.png" xlink:type="simple"/></inline-formula></p><disp-formula id="hanspub.27254-formula43"><graphic xlink:href="//html.hanspub.org/file/12-2620754x180_hanspub.png"  xlink:type="simple"/></disp-formula><p>有，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x181_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>则当取<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x182_hanspub.png" xlink:type="simple"/></inline-formula>时，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x183_hanspub.png" xlink:type="simple"/></inline-formula>取得最大值，其值为：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x184_hanspub.png" xlink:type="simple"/></inline-formula></p><disp-formula id="hanspub.27254-formula44"><graphic xlink:href="//html.hanspub.org/file/12-2620754x185_hanspub.png"  xlink:type="simple"/></disp-formula><p>有，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x186_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>则当取<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x187_hanspub.png" xlink:type="simple"/></inline-formula>时，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x188_hanspub.png" xlink:type="simple"/></inline-formula>取得最大值，其值为：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x189_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>因此所求的最优控制序列为：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x190_hanspub.png" xlink:type="simple"/></inline-formula>，最优轨线为：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x191_hanspub.png" xlink:type="simple"/></inline-formula>，性能指标为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x192_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>将向量转化为标量则最优控制序列为：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x193_hanspub.png" xlink:type="simple"/></inline-formula>，最优轨线为：</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x194_hanspub.png" xlink:type="simple"/></inline-formula>，性能指标<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x195_hanspub.png" xlink:type="simple"/></inline-formula>为：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x196_hanspub.png" xlink:type="simple"/></inline-formula>。则人的最大收益为：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-2620754x197_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>注4.4.1：本文只研究了单输入输出的决策最优控制问题，本文所应用的定理和算法对于多输入多输系统的决策最优控制问题仍然适用。</p></sec></sec><sec id="s7"><title>5. 总结</title><p>本文研究了有限动态博弈过程中多值逻辑控制网络的收益优化问题，利用矩阵半张量积的方法将逻辑系统转化为对应的代数系统，并给出了半张量形式下目标泛函的表达式。在引入值函数的情况下对其最优性原理进行了证明并给出了算法，同时举例说明算法的有效性。</p></sec><sec id="s8"><title>基金项目</title><p>国家自然科学基金(No. 11761021)，贵州民族大学科研基金资助项目(No. 2017ZD017)。</p></sec><sec id="s9"><title>文章引用</title><p>符繁强,韦维,周荧,钱柳. 一类多值控制网络最优决策的半张量积求解法研究 Research on Semi-Tensor Product Solution Method for Optimal Decision of a Class of Multi-Valued Control Networks[J]. 应用数学进展, 2018, 07(10): 1308-1316. https://doi.org/10.12677/AAM.2018.710152</p></sec><sec id="s10"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.27254-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Kauffman, S.A. (1992) The Origins of Order: Self-Organization and Selection in Evolution. Journal of Evolutionary Biology, 13, 133-144.</mixed-citation></ref><ref id="hanspub.27254-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Kurten, K.E. (1999) Correspondence between Neural Threshold Networks and Kauffman Boolean Cellular Automata. Journal of Physics A General Physics, 21, L615.</mixed-citation></ref><ref id="hanspub.27254-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Davidson, E.H., Rast, J.P., Oliveri, P., et al. (2002) A Genomic Regulatory Network for Development. Science, 295, 1669. &lt;br&gt;https://doi.org/10.1126/science.1069883</mixed-citation></ref><ref id="hanspub.27254-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Harris, S.E., Sawhill, B.K., Wuensche, A., et al. (2002) A Model of Transcriptional Regulatory Networks Based on Biases in the Observed Regulation Rules. Complexity, 7, 23-40. &lt;br&gt;https://doi.org/10.1002/cplx.10022</mixed-citation></ref><ref id="hanspub.27254-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Kauffman, S.A. (1969) Metabolic Stability and Epigenesis in Randomly Constructed Genetic Nets. Journal of Theoretical Biology, 22, 437-467. &lt;br&gt;https://doi.org/10.1016/0022-5193(69)90015-0</mixed-citation></ref><ref id="hanspub.27254-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Smith, J.M. and Price, G.R. (1973) The Logic of Animal Conflict. Nature, 246, 15-18.  
&lt;br&gt;https://doi.org/10.1038/246015a0</mixed-citation></ref><ref id="hanspub.27254-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Smith, J.M. (1982) Evolution and the Theory of Games. Evolution and the Theory of Games. Cambridge University Press, Cambridge, 41-45. &lt;br&gt;https://doi.org/10.1017/CBO9780511806292</mixed-citation></ref><ref id="hanspub.27254-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Nowak, M.A. and May, R.M. (1992) Evolutionary Games and Spatial Chaos. Nature, 359, 826-829.  
&lt;br&gt;https://doi.org/10.1038/359826a0</mixed-citation></ref><ref id="hanspub.27254-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">程代展, 齐洪胜. 矩阵的半张量积理论与应用[M]. 北京: 科学出版社, 2007.</mixed-citation></ref><ref id="hanspub.27254-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Cheng, D., Qi, H. and Zhao, Y. (2012) An Introduction to Semi-Tensor Product of Matrices and Its Applications. World Scientific, Singapore. &lt;br&gt;https://doi.org/10.1142/8323</mixed-citation></ref><ref id="hanspub.27254-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Cheng, D., Qi, H. and Li, Z. (2010) Analysis and Control of Boolean Networks. In: Communications &amp; Control Engineering, Vol. 13, Springer, Berlin.</mixed-citation></ref><ref id="hanspub.27254-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">程代展, 赵寅, 徐听听. 演化博弈与逻辑动态系统的优化控制[J]. 系统科学与数学, 2012, 32(10): 1226-1238.</mixed-citation></ref><ref id="hanspub.27254-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Zhao, Y., Li, Z. and Cheng, D. (2011) Optimal Control of Logical Control Networks. IEEE Transactions on Automatic Control, 56, 1766-1776. &lt;br&gt;https://doi.org/10.1109/TAC.2010.2092290</mixed-citation></ref><ref id="hanspub.27254-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Mu, Y. and Guo, L. (2009) Optimization and Identification in a Non-Equilibrium Dynamic Game. Proceedings of the 48th IEEE Conference on Decision and Control (CDC) held jointly with 2009 28th Chinese Control Conference, Shanghai, 15-18 December 2009, 5750-5755. &lt;br&gt;https://doi.org/10.1109/CDC.2009.5400029</mixed-citation></ref><ref id="hanspub.27254-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">钱柳, 韦维, 符繁强, 周荧. 布尔控制网络最小能耗问题的半张量方法[J]. 应用数学进展, 2018, 7(1): 95-103.</mixed-citation></ref><ref id="hanspub.27254-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">程代展, 夏元清, 马宏宾, 等. 矩阵代数、控制与博弈[M]. 北京: 北京理工大学出版社, 2016.</mixed-citation></ref></ref-list></back></article>