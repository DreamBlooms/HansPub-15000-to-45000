<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2020.104081</article-id><article-id pub-id-type="publisher-id">CSA-35271</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20200400000_59583828.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  动态可重构性测控系统软件模块化设计
  Modular Design for Dynamic Reconfigurable Measurement and Control System Software
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>徐</surname><given-names>文岗</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>姚</surname><given-names>一杨</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>晓东</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>杨</surname><given-names>迁</given-names></name><xref ref-type="aff" rid="aff5"><sup>5</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>孔</surname><given-names>德岐</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>国家电网浙江省电力有限公司，浙江 杭州</addr-line></aff><aff id="aff4"><addr-line>西北工业大学计算机学院，陕西 西安;西北工业大学深圳研究院，广东 深圳</addr-line></aff><aff id="aff2"><addr-line>航空工业西安航空计算技术研究所，陕西 西安</addr-line></aff><aff id="aff5"><addr-line>国网浙江省电力有限公司温州供电公司，浙江 温州</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>01</day><month>04</month><year>2020</year></pub-date><volume>10</volume><issue>04</issue><fpage>777</fpage><lpage>782</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对普通测控系统面临硬件环境改变、测控任务变化或系统升级时，软件程序往往需要耗时耗力修改的不足，结合测控系统的软件架构，开展了LabWindows环境下核心服务层设计，采用模块化思想搭建通用测控系统软件模块，通过简单的调整能适应不同的硬件环境和测控任务，从而使测控系统在保证动态可重构性的同时获得较高的整体运行效率。模块化设计具有较高的适应性，二次开发的难度也低于普通测控系统，具有较好的应用价值。 Aiming at the shortage that the general computer automated measurement and control system is faced with the change of hardware environment, the change of measurement and control task or the system upgrade, the software often needs time-consuming and labor-consuming modification, the design of core service layer under LabWindows Development Platform is carried out based on software architecture of measurement and control system. The software module of general measurement and control system is built with the idea of modularization. The measurement and control system can obtain higher overall operating efficiency while guaranteeing the dynamic recon-figurability. Modular design has a high adaptability, the difficulty of secondary development is lower than ordinary measurement and control system, has a better application value. 
  
 
</p></abstract><kwd-group><kwd>测控系统，动态可重构，适应性，模块化, Test System</kwd><kwd> Dynamic Reconfigurable</kwd><kwd> Adaptability</kwd><kwd> Modular</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>动态可重构性测控系统软件模块化设计<sup> </sup></title><p>徐文岗<sup>1</sup>，姚一杨<sup>2</sup>，王晓东<sup>3,4</sup>，杨迁<sup>5</sup>，孔德岐<sup>1</sup></p><p><sup>1</sup>航空工业西安航空计算技术研究所，陕西 西安</p><p><sup>2</sup>国家电网浙江省电力有限公司，浙江 杭州</p><p><sup>3</sup>西北工业大学计算机学院，陕西 西安</p><p><sup>4</sup>西北工业大学深圳研究院，广东 深圳</p><p><sup>5</sup>国网浙江省电力有限公司温州供电公司，浙江 温州</p><p>收稿日期：2020年4月4日；录用日期：2020年4月19日；发布日期：2020年4月26日</p><disp-formula id="hanspub.35271-formula42"><graphic xlink:href="//html.hanspub.org/file/21-1541736x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>针对普通测控系统面临硬件环境改变、测控任务变化或系统升级时，软件程序往往需要耗时耗力修改的不足，结合测控系统的软件架构，开展了LabWindows环境下核心服务层设计，采用模块化思想搭建通用测控系统软件模块，通过简单的调整能适应不同的硬件环境和测控任务，从而使测控系统在保证动态可重构性的同时获得较高的整体运行效率。模块化设计具有较高的适应性，二次开发的难度也低于普通测控系统，具有较好的应用价值。</p><p>关键词 :测控系统，动态可重构，适应性，模块化</p><disp-formula id="hanspub.35271-formula43"><graphic xlink:href="//html.hanspub.org/file/21-1541736x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/21-1541736x7_hanspub.png" /> <img src="//html.hanspub.org/file/21-1541736x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>计算机自动测量和控制系统(computer automated measurement and control system，简称测控系统)是自动化控制技术、计算机科学、微电子技术和通信技术有机结合、综合发展的产物 [<xref ref-type="bibr" rid="hanspub.35271-ref1">1</xref>]。测控系统包括各种数据采集和处理系统、自动测量系统、生产过程控制系统等 [<xref ref-type="bibr" rid="hanspub.35271-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.35271-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.35271-ref4">4</xref>]。通常情况，用户为适应不同测控任务需求，往往想研制开发一套可重构复用的高可靠测控系统，以提高工作效率、降低开发费用。</p><p>测控系统的软件部分在面临硬件环境改变、测控任务变化或系统升级时，程序都需要修改。普通测控系统的修改往往耗时耗力。采用模块化、层次化的结构，测控系统就能够动态加载所需的模块 [<xref ref-type="bibr" rid="hanspub.35271-ref5">5</xref>]，这样不但可以减小二次开发的难度，也可以提高系统的灵活度和适应性。为此，论文研究保证动态可重构性的同时获得较高的执行效率的模块化设计方法。此时，只需要修改该控制平台相应的传感器电路和软件程序，就可以使其满足更多的测控需求。此外，还可以节省研发的费用，缩短研发周期，同时提高系统的可靠性 [<xref ref-type="bibr" rid="hanspub.35271-ref1">1</xref>]。</p></sec><sec id="s4"><title>2. 测控系统模块化设计</title><sec id="s4_1"><title>2.1. 测控系统软件软件架构</title><p>测控系统的工作是以数据为基础的，其流程一般可划分为数据输入/输出、数据传递和数据处理三个阶段 [<xref ref-type="bibr" rid="hanspub.35271-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.35271-ref7">7</xref>]。测控系统如果需要修改，通常是因为对这三个阶段的要求有所变化。一般来说，数据输入/输出的方式则取决于硬件系统，数据传递服从于数据输入/输出和数据处理的需要，而数据处理的过程取决于测控任务的内容。除了数据处理阶段决定了数据输入/输出所需要选通的通道外，这两部分互相影响并不大。因此，本文将测控系统的软件部分划分为如图1所示的三个层次。图1中：</p><p>(1) 硬件控制层的主要作用就是对具体测控硬件进行抽象，向上层提供统一的用于获取或输出数据的函数接口及概要描述。在硬件环境变化时，只需动态卸载和加载与硬件相关的驱动模块即可保证系统正常运行，从而使系统具有较强的适应性。</p><p>(2) 核心服务层是整个系统的中心，也是唯一能独立运行的部分。它的主要任务是动态挂接各模块并控制这些它们之间的数据流，亦即控制传递数据的过程。它还要完成硬件调度和控制工作。</p><p>(3) 用户服务层的作用是进行数据处理，完成具体的测控任务。在测控任务改变时，只需要动态卸载和加载用户服务模块即可完成系统调整，从而使系统具有较强的灵活性。</p><p>图1. 测试系统结构划分</p><p>此时，只要预先规定统一的软件接口，用户服务层和硬件控制层中各模块的编写都比较简单。软件接口包含完备的标准函数和配套的数据结构。</p><p>标准函数的主要作用是使其他模块能够调用本模块的各项功能。采用模块间直接函数调用的形式使用目标模块功能，虽然在接口会较为复杂，但整个系统的执行效率能够得到保证。数据结构是数据传递的统一格式，常用的数据结构是作为数据缓冲区的循环队列 [<xref ref-type="bibr" rid="hanspub.35271-ref8">8</xref>]。</p><p>硬件控制模块一般向上层提供开启/关闭硬件、获取硬件描述信息以及调用硬件功能的函数。例如，AD板卡的开始/停止连续采集、进行单次采集和获取采集数据。硬件控制模块一般由核心服务模块汇总所有用户服务模块的要求后再进行控制。</p><p>核心服务模块向上层资源请求函数，用于用户服务模块向其请求通道资源。用户服务模块向核心服务模块开放用于获取描述信息的函数。为了支持核心服务模块的数据流控制功能，有时各模块还要提供索取或传递数据缓冲区地址及缓冲区存储状态的函数。</p></sec><sec id="s4_2"><title>2.2. 核心服务层设计</title><p>核心服务层是整个系统的中心，其主要功能是控制测控系统的数据流。由于数据的需求很可能会随系统结构而变化，为了保证数据按照需求流动此种系统就需要对数据流进行额外的控制，其执行效率可能会低于普通系统。为此，核心服务层在具体实现时就存在不同的内部设计，尤其是其中数据流控制的设计，在对系统可重构性提供支持的同时，还要考虑系统的执行效率。因此，核心服务层设计决定了整个测控系统动态重构的兼容与扩展能力，同时极大地影响着测控系统的执行效率。</p><p>(1) 模块载入设计</p><p>为了保证系统的动态可重构性，核心服务层必须能够动态加载、卸载模块 [<xref ref-type="bibr" rid="hanspub.35271-ref9">9</xref>]。为此，挂接模块时首先采用LabWindows的函数LoadExternalModule动态读入含有该模块的库文件。</p><p>1) 若载入的是硬件控制模块，则系统分配一个用于存储硬件信息的结构体地址。使用函数GetExternalModuleAddr获得该模块中各标准函数的地址，写入结构体内的函数指针。然后调用标准函数获得所驱动的硬件设备的名称、各类型通道数，如有必要还可读入其他信息，如输入上下限等。这些信息同样存入结构体，供用户服务模块选择工作通道时参考。为保证系统运行正常，在载入过程中还应该调用标准函数查看驱动程序和对应的硬件是否匹配。</p><p>2) 若载入的是用户服务模块，则系统分配一个用于存储服务信息的结构体地址。使用GetExternalModuleAddr命令获得该模块中各标准函数的地址，写入结构体内的函数指针。然后将核心服务模块的标准函数地址发送给用户服务模块，并获得所该模块的各项信息。最后，在硬件提供的通道中为该模块分配工作通道。该过程可以由用户完成，也可以由系统自动分配。具体的通道占用情况在硬件控制模块对应的结构体中进行注册。</p><p>(2) 数据流控制设计</p><p>各用户模块对数据的需求很可能是不同的，为了保证挂接的模块能够正常工作，核心服务层必须能够按照用户服务层的需求来控制数据流和动态分配数据。数据流控制的方案依照数据分流模式的不同可以三种，如图2所示。这里以用户服务模块从某硬件设备连续获取数据为例，分别予以描述。</p><p>图2. 数据流控制模式示意图</p><p>1) 间接传递模式</p><p>图2中实线所示为间接传递式数据流控制。在这种模式下，硬件控制模块先从对应的硬件获取数据，然后填入核心服务层的数据缓冲区(通常采用循环队列形式)。核心服务层再按照各用户服务模块对数据通道的注册情况，将指定通道的数据填入它们的数据缓冲区。这种方式编程实现较为简单，但是由于数据要经过两次转存，时间和空间开销较大。</p><p>2) 直接传递模式</p><p>图2中虚线所示为直接传递式数据流控制。在这种模式下，核心服务模块不介入具体的数据传递过程，而仅仅在测控任务开始之前生成数据分配表，用以标明各通道数据应该流向哪些用户服务模块。硬件控制模块获得数据分配表和各用户服务模块的数据缓冲区地址后，测控任务才能开始。在测控任务进行中，硬件控制模块将用户服务模块指通道的数据直接填入它们的数据缓冲区，也就是在数据获取后立刻进行数据分配。这种方式下，硬件控制模块的编程实现略为复杂，但是时间和空间开销较小。</p><p>3) 缓存共用模式</p><p>图2中点划线所示为缓存共用式数据流控制。考虑有可能存在几个不同的用户服务模块同时需要某些通道的数据，那么向各用户服务模块分别传递这些相同的数据就会浪费时间和空间。在此模式下，硬件控制模块将数据填入核心服务层的数据缓冲区，并调用标准函数，更新用于标明缓冲区内数据个数的变量。用户服务模块直接对核心服务层缓冲区内所需的数据进行只读处理。这样数据指经过一次转存，也不存在重复转存的问题，因而时间和空间开销也较小。但是，对于任意用户服务模块，所需的数据很可能不是连续存储的，这就给数据处理工作带来额外的编程负担。</p><p>三种模式中，缓存共用模式与普通测控系统最为接近，效率也最高，一般建议使用此种模式。但如果挂接的用户服务模块数量较少，或多模块共用的通道很少，则直接传递式的效率与其相差无几。由于缓存共用模式下用户服务模块的编写相对复杂，所以如果同时挂接的用户服务模块较少，而它们又需要经常修改或编写，那么就可以选用直接传递模式。用户服务模块向硬件输出数据的模式与此类似。</p><p>(3) 其他主要细节的设计</p><p>1) 缓存共用模式下的缓冲区设计</p><p>动态可重构的测控系统中，数据缓冲区均以循环队列形式实现。在从硬件获取数据并处理的过程中，队列的尾指针记录于核心服务模块中。用户服务模块可通过函数接口查询这一指针。但是，由于各用户服务模块对缓冲区的读取情况不一，所以队列的头指针由各模块自己保存。</p><p>2) 硬件参数的设置</p><p>在前述设计中，所有硬件参数设置，如AD输入的上下限，都是固化在驱动程序中。除非修改程序，否则无法更改。如果要经常更改硬件参数，则考虑在测控系统之外建立一个硬件设置模块，通过简单地用户界面操作，更改硬件参数。但这样就需要软件接口提供额外的支持，硬件控制模块的编制难度相应加大。</p><p>3) 库文件生成设计</p><p>前文所述的模块化系统中，除核心服务模块是封装为可执行文件外，其余各模块都应封装为库文件——通常是动态链接库文件。如果采用LabWindows生成DLL文件，则可以直接加载对应的LIB文件。但如果是采用VC生成，则首先要保证所有函数均以C格式得到编译，而后使用LabWindows中的“Generate DLL Import Library”功能，以目标DLL文件及含有函数声明的头文件，生成LIB文件。利用该LIB文件可以动态加载库文件。</p></sec></sec><sec id="s5"><title>3. 小结</title><p>本文建立了一种模块化搭建通用测控系统软件的方法。该方法可以有效支撑测控平台的动态重构扩展，在极大提高测控软件的通用性、适应性的同时，大大降低测控平台二次开发的难度。基于本文的模块化设计思路，测控系统只需经过简单的配置就可以动态生成测控任务，能够很好地适应各种测控任务的需求。因此，本文提出的通用模块化设计在提升可重构测控系统可开发性和可靠性方面有很好的优势，具有良好的应用价值。</p></sec><sec id="s6"><title>基金项目</title><p>国家某重点科研项目(MJ-2016-S-42，MJ-2018-S-34)，国防基础科研计划项目，国网浙江省电力有限公司科技项目(2020年)，陕西省创新能力支撑计划项目(2019PT-03)以及全军共用信息系统装备预研专用技术项目、装备预先研究项目(共用技术)。</p></sec><sec id="s7"><title>文章引用</title><p>徐文岗,姚一杨,王晓东,杨 迁,孔德岐. 动态可重构性测控系统软件模块化设计Modular Design for Dynamic Reconfigurable Measurement and Control System Software[J]. 计算机科学与应用, 2020, 10(04): 777-782. https://doi.org/10.12677/CSA.2020.104081</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.35271-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">蔡福喜, 黄大贵. 基于模块化设计思想的测控系统框架设计[J]. 测控技术, 2009, 28(1): 55-57, 61.</mixed-citation></ref><ref id="hanspub.35271-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">顾光武. USB及CPLD技术研究及其在测控系统中的应用[D]: [硕士学位论文]. 成都: 四川大学, 2006.</mixed-citation></ref><ref id="hanspub.35271-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">赵洋, 吴昭辉, 姚跃民, 邵宇航, 金文. 基于Vxworks的飞行器模飞测试方法研究[J]. 计算机测量与控制, 2020, 28(3): 9-13.</mixed-citation></ref><ref id="hanspub.35271-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">汪洋, 赵伊宁, 李梦超, 杜以林. 基于系留气球的测控系统研究[J]. 计算机测量与控制, 2019, 27(9): 109-111, 116.</mixed-citation></ref><ref id="hanspub.35271-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">黄为, 何莉莉, 陈维荣. 虚拟仪器测控系统的动态可重构性研究[J]. 自动化仪表, 2005, 26(4): 27-29.</mixed-citation></ref><ref id="hanspub.35271-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">张则剑. 测控系统数据处理支撑平台研究[J]. 计算机应用技术, 2019(9): 114-116.</mixed-citation></ref><ref id="hanspub.35271-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">王鹏宇, 卞光浪, 秦刚. 实时测控系统数据分析与处理方法研究[J]. 舰船电子工程, 2020, 1(40): 175-179.</mixed-citation></ref><ref id="hanspub.35271-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">孔姗姗. 视觉目标跟踪系统的设计与实现[D]: [硕士学位论文]. 南京: 东南大学, 2014.</mixed-citation></ref><ref id="hanspub.35271-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">张凤均, 等. LabWindows/CVI开发入门和进阶[M]. 北京: 北京航空航天大学出版社, 2001.</mixed-citation></ref></ref-list></back></article>