<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2016.53058</article-id><article-id pub-id-type="publisher-id">AAM-18448</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20160300000_99312637.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  群平衡化赋权有向图/无向图的分布式算法研究
  Distributed Strategies for Group-Balancing General Weighted Directed/Undirected Graphs
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>杨</surname><given-names>繁</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>于</surname><given-names>俊燕</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>高</surname><given-names>玉兰</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>禹</surname><given-names>梅</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>邵</surname><given-names>晋梁</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>电子科技大学，通信抗干扰技术国际级重点实验室，四川 成都</addr-line></aff><aff id="aff4"><addr-line>华北电力大学，控制与计算机工程学院，北京</addr-line></aff><aff id="aff2"><addr-line>电子科技大学，数学科学学院，四川 成都</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>jyyuzhao@126.com(于俊)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>15</day><month>08</month><year>2016</year></pub-date><volume>05</volume><issue>03</issue><fpage>472</fpage><lpage>486</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  解决多智能体系统一致性协调控制的关键问题是设计合适的协议或算法使得多智能体的状态最终达到一致。己有的理论结果说明一些图平衡条件，如平衡条件和群平衡条件，是解决多智能体系统平均一致性问题和群平均一致性问题的一个必要条件。因此怎样平衡化和群平衡化一个一般图是一个值得研究的问题。然而目前涉及到如何平衡化和群平衡化一个一般图的结果还很少。本文针对有向拓扑图和无向拓扑图，分别提出两种不同的群平衡化算法，并从理论分析和数值仿真两方面验证两种算法的有效性。
   A key problem of solving the consensus coordination control of multi-agent systems is to design appropriate protocols or algorithms which guarantee the agents reaching consensus. Although existing theoretical results have illustrated the balance conditions and the group-balance condi-tions are necessary when it comes to average consensus and group average consensus respectively, there are few results on how to balance and group-balance a general graph. In this paper, we design two distributed algorithm to group-balance directed and undirected graphs respectively, and prove the validity of the algorithms via both theoretical analysis and example illustrations.
 
</p></abstract><kwd-group><kwd>多智能体系统，群一致性，分布式算法，群平衡，有向/无向图, Multi-Agent Systems</kwd><kwd> Group Consensus</kwd><kwd> Distributed Algorithms</kwd><kwd> Group-Balance</kwd><kwd> Directed/Undirected Graphs</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>群平衡化赋权有向图/无向图的分布式算法研究<sup> </sup></title><p>杨繁<sup>1</sup>，于俊燕<sup>1</sup>，高玉兰<sup>2</sup>，禹梅<sup>3</sup>，邵晋梁<sup>1</sup></p><p><sup>1</sup>电子科技大学，数学科学学院，四川 成都</p><p><sup>2</sup>电子科技大学，通信抗干扰技术国际级重点实验室，四川 成都</p><p><sup>3</sup>华北电力大学，控制与计算机工程学院，北京</p><disp-formula id="hanspub.18448-formula258"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2016年8月17日；录用日期：2016年8月27日；发布日期：2016年8月30日</p><disp-formula id="hanspub.18448-formula259"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>解决多智能体系统一致性协调控制的关键问题是设计合适的协议或算法使得多智能体的状态最终达到一致。己有的理论结果说明一些图平衡条件，如平衡条件和群平衡条件，是解决多智能体系统平均一致性问题和群平均一致性问题的一个必要条件。因此怎样平衡化和群平衡化一个一般图是一个值得研究的问题。然而目前涉及到如何平衡化和群平衡化一个一般图的结果还很少。本文针对有向拓扑图和无向拓扑图，分别提出两种不同的群平衡化算法，并从理论分析和数值仿真两方面验证两种算法的有效性。</p><p>关键词 :多智能体系统，群一致性，分布式算法，群平衡，有向/无向图</p><disp-formula id="hanspub.18448-formula260"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>多智能体系统是由许多相互关联的个体通过局部规则组成的系统，其控制理论在过去的十几年中引起诸多学者关注，并得到了快速发展。由于多智能体控制是通过协调控制多智能体系统每个个体，最终达到解决大型、复杂的问题，这一系统特点使得多智能体系统在工程上的潜在应用价值得到了不同学科领域学者的广泛关注，例如：多机器人/车辆系统、传感器网络、人造卫星簇等。</p><p>作为多智能体协调控制的基本问题，一致性问题得到广泛关注，己涌现出很多优秀成熟的结果 [<xref ref-type="bibr" rid="hanspub.18448-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.18448-ref2">2</xref>] 。Olfati-Saber在 [<xref ref-type="bibr" rid="hanspub.18448-ref1">1</xref>] 中研究了固定/切换拓扑下一致性问题，确立了一致性问题研究的基本理论框架。随后，更深入的结果和有效的方法不断被提出 [<xref ref-type="bibr" rid="hanspub.18448-ref3">3</xref>] - [<xref ref-type="bibr" rid="hanspub.18448-ref17">17</xref>] 。其中基于图理论Ren和Beard [<xref ref-type="bibr" rid="hanspub.18448-ref3">3</xref>] 得到了固定拓扑下一阶线性多智能体系统达到一致性的充要条件是系统的拓扑图包含生成树；切换拓扑下，若在给定长度的时间区间上的并包含生成树，则系统能实现状态一致。在文献 [<xref ref-type="bibr" rid="hanspub.18448-ref5">5</xref>] - [<xref ref-type="bibr" rid="hanspub.18448-ref8">8</xref>] 中，作者运用代数思想解决了离散时间多智能体系统一致性问题的充要条件，并基于Lyapunov稳定性理论解决了连续时间多智能系统的一致性问题。随着对一致性问题研究的深入，二阶多智能体系统作为一种更一般的模型也得到了不同学科的关注 [<xref ref-type="bibr" rid="hanspub.18448-ref9">9</xref>] - [<xref ref-type="bibr" rid="hanspub.18448-ref12">12</xref>] 。在 [<xref ref-type="bibr" rid="hanspub.18448-ref10">10</xref>] 中作者运用代数理论分析系统方程的特征根得到了系统达到一致的充要条件，并指出拓扑结构包含生成树只是二阶系统达到一致的必要条件而非充分条件。文献 [<xref ref-type="bibr" rid="hanspub.18448-ref11">11</xref>] 研究切换拓扑下具有时滞的二阶离散多智能体系统的一致性问题，利用模型变换(增广系统)和非负矩阵理论，作者给出了在有联合生成树的情形下一致性问题可解的充分条件。</p><p>对于一般的多智能体一致性问题，最终所有个体的状态渐近收敛到同一个值。但是很多情况下，由于个体性能的差异或者任务分配的不同，多智能体系统的个体被分成不同的群体，针对这样的复杂多智能体网络， [<xref ref-type="bibr" rid="hanspub.18448-ref18">18</xref>] - [<xref ref-type="bibr" rid="hanspub.18448-ref25">25</xref>] 研究了比较广泛的一致性——群一致性。对于多智能体群一致性问题，一个关键问题是设计合适的协议和算法使被分为多个群的图的图中相同群内个体达到相同状态而不同群内的个体状态最终可以不尽相同。对于一阶连续时间多智能体系统，在文献 [<xref ref-type="bibr" rid="hanspub.18448-ref18">18</xref>] - [<xref ref-type="bibr" rid="hanspub.18448-ref20">20</xref>] 中作者给出了定常拓扑和切换拓扑下群平均一致性可解的条件。值得注意的是文中增加了平衡对这一条件用以限制群之间的藕合作用。随后，关于多智能体系统两个群的一致性问题，在文献 [<xref ref-type="bibr" rid="hanspub.18448-ref25">25</xref>] 中，作者给出了弱于 [<xref ref-type="bibr" rid="hanspub.18448-ref18">18</xref>] 的有向图能达到群一致性的充分条件，即对于每一个群，群内每个点对于另一个群的邻接出权值在任何时间都是相同的群平衡条件。</p><p>基于以上分析，可以看到，当涉及平均一致性和群平均一致性时，平衡条件和群平衡条件是必需的。因此，对于多智能体系统的平均一致性和群平均一致性问题，如何平衡化(群平衡化)一个一般图让它满足平衡条件(群平衡条件)成为一个待解决的关键问题。近几年，基于平均一致性平衡条件己有一些有趣的结果被提出来。文献 [<xref ref-type="bibr" rid="hanspub.18448-ref26">26</xref>] 中提供了平衡化一个赋权有向图的两个算法，它用迭代条件去改变某些权值，最终达到每个点的出权值之和等于它的入权值之和的平衡条件。在初始拓扑图是强连通的(或强连通并图)的条件下，文献 [<xref ref-type="bibr" rid="hanspub.18448-ref27">27</xref>] 中提出了一个分布式迭代算法，通过给每个边设计一个正整数边权，使得拓扑图达到平衡。文献 [<xref ref-type="bibr" rid="hanspub.18448-ref28">28</xref>] 中提出了一个分散式算法去平衡化一个强连通赋权图，其特点是依赖于Laplacian的零特征值的左特征向量的分布式估计。文献 [<xref ref-type="bibr" rid="hanspub.18448-ref29">29</xref>] 中作者证明了只要一个有向图的关联矩阵的零空间包含正向量，这个有向图就能被平衡。</p><p>然而，多智能体系统问题中图往往被用来描述个体或群体之间的信息交流模式，因而实际的模型可以很复杂，从而对图的要求也不仅仅局限于一个图的内部的特性。一个很好的例子就是群一致性问题，该问题就对两个或两个以上图之间的连接有一定的要求。然而目前关于平衡化的结果均只涉及到一个图的平衡，而没有考虑两个或更多图之间的信息。在此背景下，本文以含有两个群的多智能体系统为研究对象，以代数图理论为主要分析工具，设计分布式群平衡化算法。本文的主要贡献是设计了两种算法分别对应于赋权有向图和赋权无向图。由于两种算法初始条件对图本身无任何要求，从而基于这两种算法，一般的拓扑图最终达到群平衡，从而为分布式多智能体系统达到群平均一致提供必要条件。本文的结构如下：第2节为问题描述和基础理论；第3、4节分别给出赋权有向图和赋权无向图的群平衡算法描述、算法收敛性分析和算例；第5节是本文小结。</p></sec><sec id="s4"><title>2. 图理论及准备工作</title><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x9_hanspub.png" xlink:type="simple"/></inline-formula>是由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x10_hanspub.png" xlink:type="simple"/></inline-formula>个顶点组成的赋权有向图，其中点集表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x11_hanspub.png" xlink:type="simple"/></inline-formula>，边集表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x12_hanspub.png" xlink:type="simple"/></inline-formula>，一个赋权邻接矩阵表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x13_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x14_hanspub.png" xlink:type="simple"/></inline-formula>为实数。点指标集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x15_hanspub.png" xlink:type="simple"/></inline-formula>属于一个有限集，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x16_hanspub.png" xlink:type="simple"/></inline-formula>的一条边表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x17_hanspub.png" xlink:type="simple"/></inline-formula>(从<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x18_hanspub.png" xlink:type="simple"/></inline-formula>到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x19_hanspub.png" xlink:type="simple"/></inline-formula>)。图的边权值是实数，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x20_hanspub.png" xlink:type="simple"/></inline-formula>而且，我们假设对所有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x21_hanspub.png" xlink:type="simple"/></inline-formula>，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x22_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>不失一般性，本文考虑由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x23_hanspub.png" xlink:type="simple"/></inline-formula>个节点组成的网络<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x24_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x25_hanspub.png" xlink:type="simple"/></inline-formula>是一个赋权有向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x26_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x27_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x28_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x29_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x30_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x31_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x32_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x33_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x34_hanspub.png" xlink:type="simple"/></inline-formula>。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x35_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x36_hanspub.png" xlink:type="simple"/></inline-formula>，目标是设计算法使得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x37_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x38_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x39_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x40_hanspub.png" xlink:type="simple"/></inline-formula> (群平衡条件)。定义<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x41_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x42_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x43_hanspub.png" xlink:type="simple"/></inline-formula>。赋权邻接矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x44_hanspub.png" xlink:type="simple"/></inline-formula>依附于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x45_hanspub.png" xlink:type="simple"/></inline-formula>。则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x46_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x47_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x48_hanspub.png" xlink:type="simple"/></inline-formula>的两个子网络。因此，网络<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x49_hanspub.png" xlink:type="simple"/></inline-formula>是由两个子网络<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x50_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x51_hanspub.png" xlink:type="simple"/></inline-formula>组成的。</p><p>本文的目标是通过设计算法实现一个一般的图的群平衡，即设计有效的算法达到群平衡化一个任意图的目的。这里考虑的平衡是 [<xref ref-type="bibr" rid="hanspub.18448-ref25">25</xref>] 为了实现多智能体的群一致性而提出的群平衡条件，具体地，群平衡条</p><p>件数学表达式如下：满足群平衡条件 [<xref ref-type="bibr" rid="hanspub.18448-ref25">25</xref>] ：1) <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x52_hanspub.png" xlink:type="simple"/></inline-formula>2) <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x53_hanspub.png" xlink:type="simple"/></inline-formula>。该条件表明：对于每一群组(子图)，群(子图)中每个个体(结点)接受另一个群(子图)的综合影响(邻接出权值)在任何时间都相同。</p></sec><sec id="s5"><title>3. 赋权有向图的群平衡化算法</title><p>由于多智能体系统群一致性研究多智能体渐近达到两个以上的最终状态，因此个体往往有两个或两个以上的分组，每一组的个体渐近达到一致。这导致拓扑图往往按照个体的分组被分成两个或两个以上的子图。我们针对群一致的拓扑特性设计两种分布式算法，使得一个一般的图在有限步满足群平衡条件。由于设计的算法对初始图没有限定，因此这一节设计的算法可以应用到任何一个一般的图上，最终实现该图的群平衡。</p>含有两个子图的赋权有向图的群平衡化<p>A. 算法I</p><p>输入对象：一个有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x54_hanspub.png" xlink:type="simple"/></inline-formula>个点的赋权有向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x55_hanspub.png" xlink:type="simple"/></inline-formula>，它包含两个子图，分别是有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x56_hanspub.png" xlink:type="simple"/></inline-formula>个点的赋权有向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x57_hanspub.png" xlink:type="simple"/></inline-formula>和有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x58_hanspub.png" xlink:type="simple"/></inline-formula>个点的赋权有向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x59_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>初始化：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x60_hanspub.png" xlink:type="simple"/></inline-formula>，如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x61_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x62_hanspub.png" xlink:type="simple"/></inline-formula>，否则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x63_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>迭代：1) 对于每个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x64_hanspub.png" xlink:type="simple"/></inline-formula>，计算</p><disp-formula id="hanspub.18448-formula261"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x65_hanspub.png"  xlink:type="simple"/></disp-formula><p>如果对于任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x66_hanspub.png" xlink:type="simple"/></inline-formula>，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x67_hanspub.png" xlink:type="simple"/></inline-formula>，则群平衡条件达到，退出算法。</p><p>2) 计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x68_hanspub.png" xlink:type="simple"/></inline-formula>(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x69_hanspub.png" xlink:type="simple"/></inline-formula>为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x70_hanspub.png" xlink:type="simple"/></inline-formula>中所有点的群外邻接出权值和)，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x71_hanspub.png" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x72_hanspub.png" xlink:type="simple"/></inline-formula>为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x73_hanspub.png" xlink:type="simple"/></inline-formula>中所有点的群外邻接出权值和)。如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x74_hanspub.png" xlink:type="simple"/></inline-formula>且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x75_hanspub.png" xlink:type="simple"/></inline-formula>，转3)；如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x76_hanspub.png" xlink:type="simple"/></inline-formula>或<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x77_hanspub.png" xlink:type="simple"/></inline-formula>，转4)。</p><p>3) 由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x78_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x79_hanspub.png" xlink:type="simple"/></inline-formula>知，对于每个群，群内所有点的群外邻接出权值之和为零，如果群内每个点的群外邻接出权值都为零，则群内每个点的群外邻接出权值相等，平衡条件达到。为了达到此目的设计了(i)~(iii)。</p><p>(i) 在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x80_hanspub.png" xlink:type="simple"/></inline-formula>中选择有最大<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x81_hanspub.png" xlink:type="simple"/></inline-formula>值的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x82_hanspub.png" xlink:type="simple"/></inline-formula>，它的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x83_hanspub.png" xlink:type="simple"/></inline-formula>值表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x84_hanspub.png" xlink:type="simple"/></inline-formula>，在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x85_hanspub.png" xlink:type="simple"/></inline-formula>中选择有最小值的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x86_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>(ii) 找到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x87_hanspub.png" xlink:type="simple"/></inline-formula>的其中一条出边<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x88_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x89_hanspub.png" xlink:type="simple"/></inline-formula>的其中一条出边<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x90_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x91_hanspub.png" xlink:type="simple"/></inline-formula>的权值减去<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x92_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x93_hanspub.png" xlink:type="simple"/></inline-formula>的权值加上<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x94_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>(iii) 置<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x95_hanspub.png" xlink:type="simple"/></inline-formula>，转1)并重复以上迭代。</p><p>4) 以下(i)~(ii)为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x96_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x97_hanspub.png" xlink:type="simple"/></inline-formula>重新赋值。因为某个群中可能存在没有群外出邻居的点(点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x98_hanspub.png" xlink:type="simple"/></inline-formula>的群外出邻居是指与点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x99_hanspub.png" xlink:type="simple"/></inline-formula>的出边相关联并且与点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x100_hanspub.png" xlink:type="simple"/></inline-formula>不在同一个群内的点)，这样的点群外邻接出权值只能是零。在此情况下，要使此群内每个点的群外邻接出权值相等，则此群内所有点的群外邻接出权值之和必需为零。若图中每个点都有群外出邻居，假设在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x101_hanspub.png" xlink:type="simple"/></inline-formula>中有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x102_hanspub.png" xlink:type="simple"/></inline-formula>个点，在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x103_hanspub.png" xlink:type="simple"/></inline-formula>中有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x104_hanspub.png" xlink:type="simple"/></inline-formula>个点。如果群<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x105_hanspub.png" xlink:type="simple"/></inline-formula>内每个点的群外邻接</p><p>出权值都为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x106_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x107_hanspub.png" xlink:type="simple"/></inline-formula>群内每个点的群外邻接出权值都为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x108_hanspub.png" xlink:type="simple"/></inline-formula>，则对于每个群，群内每个点的群外邻接出权</p><p>值相等，为了便于此条件下的有向图的群平衡化，(iii)中定义<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x109_hanspub.png" xlink:type="simple"/></inline-formula>作为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x110_hanspub.png" xlink:type="simple"/></inline-formula>值与目的值的偏差，只要使每个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x111_hanspub.png" xlink:type="simple"/></inline-formula>值都为零就达到了群平衡条件。以下为算法的具体步骤：</p><p>(i) 如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x112_hanspub.png" xlink:type="simple"/></inline-formula>，若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x113_hanspub.png" xlink:type="simple"/></inline-formula>中存在没有群外出邻居的点，让<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x114_hanspub.png" xlink:type="simple"/></inline-formula>中某一点的某一出边的边权值减<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x115_hanspub.png" xlink:type="simple"/></inline-formula>，重新计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x116_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x117_hanspub.png" xlink:type="simple"/></inline-formula>；若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x118_hanspub.png" xlink:type="simple"/></inline-formula>中每个点至少有一个群外出邻居，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x119_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>(ii) 如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x120_hanspub.png" xlink:type="simple"/></inline-formula>，若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x121_hanspub.png" xlink:type="simple"/></inline-formula>中存在没有群外出邻居的点，让<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x122_hanspub.png" xlink:type="simple"/></inline-formula>中某一点的某一出边的边权值减<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x123_hanspub.png" xlink:type="simple"/></inline-formula>，重新计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x124_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x125_hanspub.png" xlink:type="simple"/></inline-formula>。若此时<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x126_hanspub.png" xlink:type="simple"/></inline-formula>，算法转3)；若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x127_hanspub.png" xlink:type="simple"/></inline-formula>中每个点至少有一个群外出邻居，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x128_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>(iii) 令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x129_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x130_hanspub.png" xlink:type="simple"/></inline-formula>，如果对任意<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x131_hanspub.png" xlink:type="simple"/></inline-formula>，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x132_hanspub.png" xlink:type="simple"/></inline-formula>，此时<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x133_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x134_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x135_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x136_hanspub.png" xlink:type="simple"/></inline-formula>，满足平衡条件(1)和(2)，则图达到群平衡，退出算法。</p><p>以下(iv)~(vi)中与3)中的方法类似。</p><p>(iv) 在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x137_hanspub.png" xlink:type="simple"/></inline-formula>中选择有最大<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x138_hanspub.png" xlink:type="simple"/></inline-formula>值的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x139_hanspub.png" xlink:type="simple"/></inline-formula>，它的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x140_hanspub.png" xlink:type="simple"/></inline-formula>值表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x141_hanspub.png" xlink:type="simple"/></inline-formula>，在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x142_hanspub.png" xlink:type="simple"/></inline-formula>中选择有最小值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x143_hanspub.png" xlink:type="simple"/></inline-formula>的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x144_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>(v) 找到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x145_hanspub.png" xlink:type="simple"/></inline-formula>的其中一条出边<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x146_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x147_hanspub.png" xlink:type="simple"/></inline-formula>的其中一条出边<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x148_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x149_hanspub.png" xlink:type="simple"/></inline-formula>的权值减去<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x150_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x151_hanspub.png" xlink:type="simple"/></inline-formula>的权值加上<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x152_hanspub.png" xlink:type="simple"/></inline-formula></p><p>(vi) 置<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x153_hanspub.png" xlink:type="simple"/></inline-formula>，转1) 并重复以上迭代。</p><p>为了更直接地理解上述算法，请看下面一个例子。</p><p>例1：考虑赋权有向图图1。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x154_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x155_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x156_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x157_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x158_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x159_hanspub.png" xlink:type="simple"/></inline-formula>。假设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x160_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x161_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x162_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x163_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>计算</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x164_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x165_hanspub.png" xlink:type="simple"/></inline-formula></p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x166_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x167_hanspub.png" xlink:type="simple"/></inline-formula></p><p>因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x168_hanspub.png" xlink:type="simple"/></inline-formula>中每个点至少有一个群外出邻居，所以转4)-(iii)，</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x169_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x170_hanspub.png" xlink:type="simple"/></inline-formula></p><p>算法演示(见图1)。</p><p>一旦计算出每个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x171_hanspub.png" xlink:type="simple"/></inline-formula>值，转入算法(4)-iv)：选择每个群中具有最大<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x172_hanspub.png" xlink:type="simple"/></inline-formula>值的点，如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x173_hanspub.png" xlink:type="simple"/></inline-formula>中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x174_hanspub.png" xlink:type="simple"/></inline-formula>(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x175_hanspub.png" xlink:type="simple"/></inline-formula>)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x176_hanspub.png" xlink:type="simple"/></inline-formula>中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x177_hanspub.png" xlink:type="simple"/></inline-formula>(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x178_hanspub.png" xlink:type="simple"/></inline-formula>)，再选择每个群中具有最小<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x179_hanspub.png" xlink:type="simple"/></inline-formula>值的点，如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x180_hanspub.png" xlink:type="simple"/></inline-formula>中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x181_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x182_hanspub.png" xlink:type="simple"/></inline-formula>中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x183_hanspub.png" xlink:type="simple"/></inline-formula>，如果在每个群内至少有两个最大的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x184_hanspub.png" xlink:type="simple"/></inline-formula>值或者至少有两个最小的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x185_hanspub.png" xlink:type="simple"/></inline-formula>值，则随机选择一个。</p><p>如图2，令</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x186_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x187_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x188_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x189_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>一些权值改变后，在下次迭代中，计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x190_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x191_hanspub.png" xlink:type="simple"/></inline-formula>，并</p><p>且执行与之前相同的步骤。重复上述步骤直到对任意<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x192_hanspub.png" xlink:type="simple"/></inline-formula>，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x193_hanspub.png" xlink:type="simple"/></inline-formula>。这个例子在三次迭代之后成立，最终边权如图3所示，可以看到图3为群平衡图。</p><p>B. 算法有效性分析</p><p>在每个群中，前提条件<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x194_hanspub.png" xlink:type="simple"/></inline-formula>意味着如果在迭代中的第三步有具有最大<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x195_hanspub.png" xlink:type="simple"/></inline-formula>值的点，则至</p><p>少必有一个最小<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x196_hanspub.png" xlink:type="simple"/></inline-formula>值的点，反之亦然。从迭代中第3)-ii)步中的权值改变，我们能发现</p><p>1)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x197_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x198_hanspub.png" xlink:type="simple"/></inline-formula>的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x199_hanspub.png" xlink:type="simple"/></inline-formula>值变为零；</p><p>2) 除了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x200_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x201_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x202_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x203_hanspub.png" xlink:type="simple"/></inline-formula>，其他点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x204_hanspub.png" xlink:type="simple"/></inline-formula>值没有改变；</p><p>3)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x205_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x206_hanspub.png" xlink:type="simple"/></inline-formula>的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x207_hanspub.png" xlink:type="simple"/></inline-formula>值增加了。</p><p>图1. 例1中图的边权值及每个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x211_hanspub.png" xlink:type="simple"/></inline-formula>值，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x212_hanspub.png" xlink:type="simple"/></inline-formula>值的初始化</p><p>图2. 例1中执行4)-v)后的边权改变</p><p>图3. 例1中达到平衡后的图的边权值及每个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x217_hanspub.png" xlink:type="simple"/></inline-formula>值，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x218_hanspub.png" xlink:type="simple"/></inline-formula>值</p><p>因此，有这样的事实：如果在某一步<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x219_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x220_hanspub.png" xlink:type="simple"/></inline-formula>，它将会永远都等于零。也就是说，在接下来的迭代中，它的值不会改变。基于以上的事实，如果一个点在某步迭代是平衡的，它将会永远平衡。并且在每次迭代中，每个群中至少一个点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x221_hanspub.png" xlink:type="simple"/></inline-formula>值变为0，这个点是第3)-i)步中被选择的具有最大<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x222_hanspub.png" xlink:type="simple"/></inline-formula>值的点。在某次迭代中，某个群中也可能有两个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x223_hanspub.png" xlink:type="simple"/></inline-formula>值变为0。如果最小<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x224_hanspub.png" xlink:type="simple"/></inline-formula>值也变为0，事实上，这一定出现在最后一步。因此，很容易发现，算法达到平衡所需的步数至多为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x225_hanspub.png" xlink:type="simple"/></inline-formula>步。下面的定理给出了这一节的主要结论。</p><p>定理1：赋权有向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x226_hanspub.png" xlink:type="simple"/></inline-formula>达到群平衡条件(1)和(2)的迭代次数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x227_hanspub.png" xlink:type="simple"/></inline-formula>满足<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x228_hanspub.png" xlink:type="simple"/></inline-formula>。</p></sec><sec id="s6"><title>4. 赋权无向图的群平衡化算法</title><sec id="s6_1"><title>4.1. 含有两个子图且子图间连通的赋权无向图的群平衡化</title><p>定义1：对于包含两个子图的赋权无向图，如果去掉图中所有子图内的边后得到的图仍是连通的，就称此无向图的子图间是连通的；如果去掉图中子图内的所有边后得到的图是由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x229_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支构成的，就称此无向图的子图间是不连通的。</p><p>注：由于子图体现的是处于一个群内的个体间的拓扑关系，因此子图间关系连通表明：对于图中相同群内任意两点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x230_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x231_hanspub.png" xlink:type="simple"/></inline-formula>，都能找到一个从<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x232_hanspub.png" xlink:type="simple"/></inline-formula>到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x233_hanspub.png" xlink:type="simple"/></inline-formula>且满足以下条件的无圈路：存在一系列点 <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x234_hanspub.png" xlink:type="simple"/></inline-formula> (奇数个)，使得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x235_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x236_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x237_hanspub.png" xlink:type="simple"/></inline-formula>，或者<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x238_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x239_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>算法II</p><p>输入对象：一个有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x240_hanspub.png" xlink:type="simple"/></inline-formula>个点的赋权无向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x241_hanspub.png" xlink:type="simple"/></inline-formula>，包含两个群，分别是有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x242_hanspub.png" xlink:type="simple"/></inline-formula>个点的赋权无向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x243_hanspub.png" xlink:type="simple"/></inline-formula>和有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x244_hanspub.png" xlink:type="simple"/></inline-formula>个点的赋权无向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x245_hanspub.png" xlink:type="simple"/></inline-formula>，并且群间关系为连通的。</p><p>初始化：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x246_hanspub.png" xlink:type="simple"/></inline-formula>，如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x247_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x248_hanspub.png" xlink:type="simple"/></inline-formula>，否则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x249_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>迭代：1)对于每个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x250_hanspub.png" xlink:type="simple"/></inline-formula>，计算</p><disp-formula id="hanspub.18448-formula262"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x251_hanspub.png"  xlink:type="simple"/></disp-formula><p>如果对于任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x252_hanspub.png" xlink:type="simple"/></inline-formula>，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x253_hanspub.png" xlink:type="simple"/></inline-formula>，这表明群平衡条件达到，则退出算法。</p><p>2) 计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x254_hanspub.png" xlink:type="simple"/></inline-formula>。如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x255_hanspub.png" xlink:type="simple"/></inline-formula>，转3)；如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x256_hanspub.png" xlink:type="simple"/></inline-formula>，转4)。</p><p>3) 由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x257_hanspub.png" xlink:type="simple"/></inline-formula>知，对于每个群，群中所有点的群外邻接出权值之和为零，如果群内每个点的群外邻接出权值都为零，则群平衡条件达到，由此设计了(i)~(iii)。</p><p>(i) 在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x258_hanspub.png" xlink:type="simple"/></inline-formula>中选择有最大<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x259_hanspub.png" xlink:type="simple"/></inline-formula>值的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x260_hanspub.png" xlink:type="simple"/></inline-formula>，它的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x261_hanspub.png" xlink:type="simple"/></inline-formula>值表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x262_hanspub.png" xlink:type="simple"/></inline-formula>，在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x263_hanspub.png" xlink:type="simple"/></inline-formula>中选择有最小<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x264_hanspub.png" xlink:type="simple"/></inline-formula>值的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x265_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x266_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>(ii) 找到一个从<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x267_hanspub.png" xlink:type="simple"/></inline-formula>到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x268_hanspub.png" xlink:type="simple"/></inline-formula>的无圈路<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x269_hanspub.png" xlink:type="simple"/></inline-formula>(由奇数个点组成)。</p><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x270_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x271_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x272_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x273_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x274_hanspub.png" xlink:type="simple"/></inline-formula></p><disp-formula id="hanspub.18448-formula263"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x275_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x276_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x277_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>(iii) 置<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x278_hanspub.png" xlink:type="simple"/></inline-formula>，转1)并重复以上迭代。</p><p>4)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x279_hanspub.png" xlink:type="simple"/></inline-formula>中所有点的邻接出权值之和与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x280_hanspub.png" xlink:type="simple"/></inline-formula>中所有点的邻接出权值之和都为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x281_hanspub.png" xlink:type="simple"/></inline-formula>，假设在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x282_hanspub.png" xlink:type="simple"/></inline-formula>中有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x283_hanspub.png" xlink:type="simple"/></inline-formula>个点，</p><p>在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x284_hanspub.png" xlink:type="simple"/></inline-formula>中有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x285_hanspub.png" xlink:type="simple"/></inline-formula>个点，如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x286_hanspub.png" xlink:type="simple"/></inline-formula>群内每个点的群外邻接出权值都为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x287_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x288_hanspub.png" xlink:type="simple"/></inline-formula>群内每个点的群外邻接出权值都为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x289_hanspub.png" xlink:type="simple"/></inline-formula>，则对于每个群，群内每个点的群外邻接出权值相等，平衡条件达到。在(i)中定义<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x290_hanspub.png" xlink:type="simple"/></inline-formula>作为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x291_hanspub.png" xlink:type="simple"/></inline-formula>值与</p><p>目的值的偏差，只要使每个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x292_hanspub.png" xlink:type="simple"/></inline-formula>值都为零就达到了群平衡条件，以下为算法的具体步骤：</p><p>(i) 令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x293_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x294_hanspub.png" xlink:type="simple"/></inline-formula>。如果对任意<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x295_hanspub.png" xlink:type="simple"/></inline-formula>，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x296_hanspub.png" xlink:type="simple"/></inline-formula>，则此时<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x297_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x298_hanspub.png" xlink:type="simple"/></inline-formula>，满足平衡条件(1)和(2)，则群平衡达到，退出算法。</p><p>以下(ii)-(iv)中与3)中的方法类似。</p><p>(ii) 在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x299_hanspub.png" xlink:type="simple"/></inline-formula>中选择有最大<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x300_hanspub.png" xlink:type="simple"/></inline-formula>值的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x301_hanspub.png" xlink:type="simple"/></inline-formula>，它的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x302_hanspub.png" xlink:type="simple"/></inline-formula>值表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x303_hanspub.png" xlink:type="simple"/></inline-formula>，在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x304_hanspub.png" xlink:type="simple"/></inline-formula>中选择有最小<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x305_hanspub.png" xlink:type="simple"/></inline-formula>值的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x306_hanspub.png" xlink:type="simple"/></inline-formula>,。</p><p>(iii) 找到一个从<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x307_hanspub.png" xlink:type="simple"/></inline-formula>到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x308_hanspub.png" xlink:type="simple"/></inline-formula>无圈路，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x309_hanspub.png" xlink:type="simple"/></inline-formula> (由奇数个点组成)，其中</p><disp-formula id="hanspub.18448-formula264"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x310_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.18448-formula265"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x311_hanspub.png"  xlink:type="simple"/></disp-formula><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x312_hanspub.png" xlink:type="simple"/></inline-formula></p><disp-formula id="hanspub.18448-formula266"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x313_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.18448-formula267"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x314_hanspub.png"  xlink:type="simple"/></disp-formula><p>(iv) 置<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x315_hanspub.png" xlink:type="simple"/></inline-formula>，转1)并重复以上迭代。</p><p>下面，为了更直观地了解上述算法的各个步骤，我们给出一个算例。</p><p>例2：考虑赋权无向图图4，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x316_hanspub.png" xlink:type="simple"/></inline-formula>，点集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x317_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x318_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x319_hanspub.png" xlink:type="simple"/></inline-formula>边集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x320_hanspub.png" xlink:type="simple"/></inline-formula>。假设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x321_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x322_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x323_hanspub.png" xlink:type="simple"/></inline-formula>。下面对其实施算法II。</p><p>计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x324_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x325_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x326_hanspub.png" xlink:type="simple"/></inline-formula>中每个点至少有一个群外出邻居，因此计算</p><disp-formula id="hanspub.18448-formula268"><graphic xlink:href="http://html.hanspub.org/file/19-2620290x327_hanspub.png"  xlink:type="simple"/></disp-formula><p>这部分算法演示如图4。</p><p>一旦计算出每个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x328_hanspub.png" xlink:type="simple"/></inline-formula>值，转入计算(4)-(ii)，并选择每个群中有最大<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x329_hanspub.png" xlink:type="simple"/></inline-formula>值的点，如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x330_hanspub.png" xlink:type="simple"/></inline-formula>中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x331_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x332_hanspub.png" xlink:type="simple"/></inline-formula>中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x333_hanspub.png" xlink:type="simple"/></inline-formula>，再选择每个群中具有最小<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x334_hanspub.png" xlink:type="simple"/></inline-formula>值的点，如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x335_hanspub.png" xlink:type="simple"/></inline-formula>中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x336_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x337_hanspub.png" xlink:type="simple"/></inline-formula>中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x338_hanspub.png" xlink:type="simple"/></inline-formula>，如果在每个群内至少有两个最大的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x339_hanspub.png" xlink:type="simple"/></inline-formula>值或者至少有两个最小的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x340_hanspub.png" xlink:type="simple"/></inline-formula>值，则随机选择一个。选择一条<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x341_hanspub.png" xlink:type="simple"/></inline-formula>到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x342_hanspub.png" xlink:type="simple"/></inline-formula>的路，例如：路<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x343_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x344_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x345_hanspub.png" xlink:type="simple"/></inline-formula>，则</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x346_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x347_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>选择另一条<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x348_hanspub.png" xlink:type="simple"/></inline-formula>到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x349_hanspub.png" xlink:type="simple"/></inline-formula>的路，例如：路<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x350_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x351_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x352_hanspub.png" xlink:type="simple"/></inline-formula>，则</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x353_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x354_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p>即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x355_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x356_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x357_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x358_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x359_hanspub.png" xlink:type="simple"/></inline-formula>，如图5。</p><p>一些权值改变后，在下次迭代中，重新计算</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x360_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p>并且执行与之前相同的步骤。这个过程被重复直到对任意<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x361_hanspub.png" xlink:type="simple"/></inline-formula>，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x362_hanspub.png" xlink:type="simple"/></inline-formula>。这个例子发生在两次迭代之后，最终边权如图6所示，图6为被群平衡后的图。</p></sec><sec id="s6_2"><title>4.2. 含有两个子图且子图间有s (s &gt; 1)个连通分支的赋权无向图的群平衡化</title><p>算法III</p><p>输入对象：一个有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x363_hanspub.png" xlink:type="simple"/></inline-formula>个点的赋权无向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x364_hanspub.png" xlink:type="simple"/></inline-formula>，它包含两个子图，分别是有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x365_hanspub.png" xlink:type="simple"/></inline-formula>个点的赋权无向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x366_hanspub.png" xlink:type="simple"/></inline-formula>和有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x367_hanspub.png" xlink:type="simple"/></inline-formula>个点的赋权无向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x368_hanspub.png" xlink:type="simple"/></inline-formula>。并且群间关系为有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x369_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支的赋权无向图。</p><p>初始化：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x370_hanspub.png" xlink:type="simple"/></inline-formula>，如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x371_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x372_hanspub.png" xlink:type="simple"/></inline-formula>，否则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x373_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>1) 如果对每个连通分支，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x374_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x375_hanspub.png" xlink:type="simple"/></inline-formula>代表第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x376_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中所有点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x377_hanspub.png" xlink:type="simple"/></inline-formula>值总和。对于每个连通分支，算法类似于4.1-3)，若每个连通分支达到群平衡，则此无向图达到群平衡。</p><p>2) 如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x378_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x379_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p>图4. 例2中图的边权值及每个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x383_hanspub.png" xlink:type="simple"/></inline-formula>值，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x384_hanspub.png" xlink:type="simple"/></inline-formula>值的初始化</p><p>图5. 例2中执行4)-iii)后的边权改变</p><p>图6. 例2中达到平衡后的图的边权值及每个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x389_hanspub.png" xlink:type="simple"/></inline-formula>值，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x390_hanspub.png" xlink:type="simple"/></inline-formula>值</p><p>情况1：若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x391_hanspub.png" xlink:type="simple"/></inline-formula>中存在没有群外出邻居的点，让第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x392_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中的某一边的边权值减<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x393_hanspub.png" xlink:type="simple"/></inline-formula>，重新计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x394_hanspub.png" xlink:type="simple"/></inline-formula>。若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x395_hanspub.png" xlink:type="simple"/></inline-formula>，则转1)。</p><p>情况2：若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x396_hanspub.png" xlink:type="simple"/></inline-formula>中每个点至少有一个群外出邻居，则算法转3)。</p><p>3) 计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x397_hanspub.png" xlink:type="simple"/></inline-formula></p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x398_hanspub.png" xlink:type="simple"/></inline-formula>中所有点的邻接出权值之和为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x399_hanspub.png" xlink:type="simple"/></inline-formula>，假设在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x400_hanspub.png" xlink:type="simple"/></inline-formula>中有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x401_hanspub.png" xlink:type="simple"/></inline-formula>个点，若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x402_hanspub.png" xlink:type="simple"/></inline-formula>群内每个点的群外邻接出权值都为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x403_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x404_hanspub.png" xlink:type="simple"/></inline-formula>群内每个点的群外邻接出权值相等，要使每个连通分支都达到群平衡，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x405_hanspub.png" xlink:type="simple"/></inline-formula>群内每个点的群外邻接出权值需都为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x406_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x407_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x408_hanspub.png" xlink:type="simple"/></inline-formula>分别代表第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x409_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x410_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x411_hanspub.png" xlink:type="simple"/></inline-formula>中点的个数。在4)中定义<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x412_hanspub.png" xlink:type="simple"/></inline-formula>作为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x413_hanspub.png" xlink:type="simple"/></inline-formula>值与目的值的偏差，只要使每个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x414_hanspub.png" xlink:type="simple"/></inline-formula>值都为零就达到了群平衡条件。以下为算法的具体步骤：</p><p>4) 令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x415_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x416_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x417_hanspub.png" xlink:type="simple"/></inline-formula>是既在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x418_hanspub.png" xlink:type="simple"/></inline-formula>中也在第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x419_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中的点，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x420_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>5) i) 如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x421_hanspub.png" xlink:type="simple"/></inline-formula>，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x422_hanspub.png" xlink:type="simple"/></inline-formula>(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x423_hanspub.png" xlink:type="simple"/></inline-formula>是第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x424_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中的点)，则对于每个连通分支，算法类似于4.1-4)，目的是每个连通分支达到群平衡。</p><p>ii) 如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x425_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x427_hanspub.png" xlink:type="simple"/></inline-formula><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x426_hanspub.png" xlink:type="simple"/></inline-formula>，(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x428_hanspub.png" xlink:type="simple"/></inline-formula>是第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x429_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中的点)，让第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x430_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中某一边的边权值减<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x431_hanspub.png" xlink:type="simple"/></inline-formula>，则重新计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x432_hanspub.png" xlink:type="simple"/></inline-formula>(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x433_hanspub.png" xlink:type="simple"/></inline-formula>是第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x434_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中的点)，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x435_hanspub.png" xlink:type="simple"/></inline-formula>(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x436_hanspub.png" xlink:type="simple"/></inline-formula>是第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x437_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中的点)。</p><p>目标是使得任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x438_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x439_hanspub.png" xlink:type="simple"/></inline-formula>，对于每个连通分支，算法类似于4.1-4)。</p><p>在每个连通分支平衡后有，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x440_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x441_hanspub.png" xlink:type="simple"/></inline-formula>；对于既在第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x442_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中也在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x443_hanspub.png" xlink:type="simple"/></inline-formula>中的点，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x444_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x445_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x446_hanspub.png" xlink:type="simple"/></inline-formula>。易知，当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x447_hanspub.png" xlink:type="simple"/></inline-formula>时，平衡条件(1)满足，但是只有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x448_hanspub.png" xlink:type="simple"/></inline-formula>为常数时，条件(2)才能成立。如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x449_hanspub.png" xlink:type="simple"/></inline-formula>不为常数，则图不能通过算法III实现平衡。下面通过一个反例验证这个结论。</p><p>例3. 考虑图7中的无向图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x450_hanspub.png" xlink:type="simple"/></inline-formula>，点集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x451_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x452_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x453_hanspub.png" xlink:type="simple"/></inline-formula>，边集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x454_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x455_hanspub.png" xlink:type="simple"/></inline-formula>。假设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x456_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x457_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x458_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x459_hanspub.png" xlink:type="simple"/></inline-formula>有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x460_hanspub.png" xlink:type="simple"/></inline-formula>。因此算法III不能平衡该图。下面验证此结论。</p><p>计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x461_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x462_hanspub.png" xlink:type="simple"/></inline-formula>。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x463_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x464_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x465_hanspub.png" xlink:type="simple"/></inline-formula>中每个点都有群外出邻居，计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x466_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x467_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x468_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x469_hanspub.png" xlink:type="simple"/></inline-formula>是既在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x470_hanspub.png" xlink:type="simple"/></inline-formula>中也在第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x471_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中的点。这部分算法演示如图7。由算法(5)-ii)，因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x472_hanspub.png" xlink:type="simple"/></inline-formula>(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x473_hanspub.png" xlink:type="simple"/></inline-formula>是第1个连通分支中的点)，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x474_hanspub.png" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x475_hanspub.png" xlink:type="simple"/></inline-formula>是第2个连通分支中的点)。</p><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x476_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x477_hanspub.png" xlink:type="simple"/></inline-formula>，如图8。</p><p>重新计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x478_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x479_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x480_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x481_hanspub.png" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x482_hanspub.png" xlink:type="simple"/></inline-formula>是第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x483_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中的点)。</p><p>对于每个连通分支，算法类似于4.1-4)。</p><p>这个例子两次迭代后有，对任意<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x484_hanspub.png" xlink:type="simple"/></inline-formula>，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x485_hanspub.png" xlink:type="simple"/></inline-formula>。此时<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x486_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x487_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x488_hanspub.png" xlink:type="simple"/></inline-formula>，不满足平衡条件(2)。至此，可以看到，该图不能被群平衡化，见图9。关于无向图的算法的有效性分析，由于其与有向图的算法分析类似，因此这里不再重复。基于以上的分析，很容易得到下面的定理：</p><p>定理2. 对于如下两种图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x489_hanspub.png" xlink:type="simple"/></inline-formula></p><p>i) 包含两个子图且子图间连通的赋权无向图；</p><p>ii) 满足<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x490_hanspub.png" xlink:type="simple"/></inline-formula>为常数的包含两个子图且子图间不连通的赋权无向图；</p><p>达到条件(1)和(2)的迭代次数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x491_hanspub.png" xlink:type="simple"/></inline-formula>满足<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x492_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x493_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x494_hanspub.png" xlink:type="simple"/></inline-formula>分别代表第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x495_hanspub.png" xlink:type="simple"/></inline-formula>个连通分支中包含<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x496_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x497_hanspub.png" xlink:type="simple"/></inline-formula>中点的个数。</p></sec></sec><sec id="s7"><title>5. 结论</title><p>本文设计了两种关于群平衡化一般的赋权有向图和赋权无向图的分布式算法，我们通过理论和例子分别分析和演示了算法的有效性。值得指出的是这两种算法对初始图本身无任何限制，且都可以在有限步之后使得一个图达到群平衡。因此所设计的算法可以应用于一般的赋权有向图和赋权无向图，对解决群平均一致性提供了一定的理论基础。虽然本文提出了针对赋权有向图和赋权无向图的两种不同的群平衡化算法，但是本文所研究的结果只适用于含有两个子图的情形。在未来的工作中，我们将研究更有效的关于群平衡化的算法，并进一步讨论各个算法的优缺点。同时，对于含有三个以上的子图设计有效的分布式算法使其达到某种平衡也是未来值得研究的一个问题。</p><p>图7. 例3中图的边权值及每个点的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x501_hanspub.png" xlink:type="simple"/></inline-formula>值，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/19-2620290x502_hanspub.png" xlink:type="simple"/></inline-formula>值的初始</p><p>图8. 例3中执行5)-ii)的边权改变</p><p>图9. 例3中的图不能被平衡</p></sec><sec id="s8"><title>基金项目</title><p>国家自然基金(61004031, 61104141, 61473061, 61403064)，中央高校基本业务费(ZYGX2010J108, ZYGX2013Z005)。</p></sec><sec id="s9"><title>文章引用</title><p>杨繁,于俊燕,高玉兰,禹梅,邵晋梁. 群平衡化赋权有向图/无向图的分布式算法研究Distributed Strategies for Group-Balancing General Weighted Directed/Undirected Graphs[J]. 应用数学进展, 2016, 05(03): 472-486. http://dx.doi.org/10.12677/AAM.2016.53058</p></sec><sec id="s10"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.18448-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Olfati-Saber, R. and Murray, R.M. (2003) Consensus Protocols for Networks of Dynamic Agents. Proceedings of the American Con-trol Conference, Denver, 4-6 June 2003, 951-956.</mixed-citation></ref><ref id="hanspub.18448-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Olfati-Saber, R. and Murray, R.M. (2004) Consensus Problems in Networks of Agents with Switching Topology and Time Delay. IEEE Transactions on Automatic Control, 49, 1520-1533. &lt;br&gt;http://dx.doi.org/10.1109/TAC.2004.834113</mixed-citation></ref><ref id="hanspub.18448-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Ren, W. and Bward, R.W. (2005) Consensus Seeking in Multi-Agent Systems under Dynamically Charging Interaction Topologies. IEEE Transactions on Automatic Control, 50, 655-661. &lt;br&gt;http://dx.doi.org/10.1109/TAC.2005.846556</mixed-citation></ref><ref id="hanspub.18448-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Xiao, F. and Wang, L. (2006) State Consensus for Multi-Agent Systems with Switching Topologies and Time-Varying Delays. International Journal of Control, 79, 1277-1284. &lt;br&gt;http://dx.doi.org/10.1080/00207170600825097</mixed-citation></ref><ref id="hanspub.18448-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Xiao, F. and Wang, L. (2008) Consensus Protocols for Discrete-Time Mul-ti-Agent Systems with Time-Varying Delays. Automatica, 44, 2577-2582. &lt;br&gt;http://dx.doi.org/10.1016/j.automatica.2008.02.017</mixed-citation></ref><ref id="hanspub.18448-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Xiao, F. and Wang, L. (2008) Asynchronous Consensus in Conti-nuous-Time Multi-Agent Systems with Switching Topology and Time-Varying Delays. IEEE Transactions on Automatic Control, 53, 1804-1816.  
&lt;br&gt;http://dx.doi.org/10.1109/TAC.2008.929381</mixed-citation></ref><ref id="hanspub.18448-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Xiao, F. and Wang, L. (2006) Consensus Problems of Multi-Agent Systems under Discrete Communication Structure. Proceedings of the IEEE Conference on Decision and Control, San Diego, 13-15 December 2006, 4289-4294.  
&lt;br&gt;http://dx.doi.org/10.1109/CDC.2006.376956</mixed-citation></ref><ref id="hanspub.18448-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Xiao, F. and Wang, L. (2006) Consensus Behavior of Agents in Networked Systems under General Communication Topologies. Proceedings of the 2006 IEEE International Symposium on Intelligent Control, Munich, 4-6 October 2006, 862-867.</mixed-citation></ref><ref id="hanspub.18448-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Ren, W. and Atkins, E. (2007) Distributed Multi-Vehicle Coordinated Control via Local Information Exchange. International Journal of Robust and Nonlinear Control, 17, 1002-1033. &lt;br&gt;http://dx.doi.org/10.1002/rnc.1147</mixed-citation></ref><ref id="hanspub.18448-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Xie, G.M. and Wang, L. (2007) Consensus Control for a Class of Networks of Dynamic Agents. International Journal of Robust and Nonlinear Control, 17, 941-959. &lt;br&gt;http://dx.doi.org/10.1002/rnc.1144</mixed-citation></ref><ref id="hanspub.18448-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Lin, P. and Jia, Y.M. (2009) Consensus of Second-Order Discrete-Time Multi-Agent Systems with Non-Uniform Time-Delays and Dynamically Changing Topologies. Automatica, 45, 2154-2158.  
&lt;br&gt;http://dx.doi.org/10.1016/j.automatica.2009.05.002</mixed-citation></ref><ref id="hanspub.18448-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Yu, W.W. and Chen, G. (2010) Second-Order Consensus for Mul-ti-Agent Systems with Directed Topologies and Nonlinear Dynamics. IEEE Transactions on Systems, Man, and Cybernetics Society, 40, 881-891.</mixed-citation></ref><ref id="hanspub.18448-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Sun, Y.G. and Wang, L. (2009) Consensus of Multi-Agent Systems in Directed Networks with Non-Uniform Time- Varying Delays. IEEE Transactions on Automatic Control, 54, 1607-1613.  
&lt;br&gt;http://dx.doi.org/10.1109/TAC.2009.2017963</mixed-citation></ref><ref id="hanspub.18448-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Li, T. and Zhang, J.F. (2009) Mean Square Average-Consensus under Mea-surement Noises and Fixed Topologies. Automatica, 45, 1929-1936. &lt;br&gt;http://dx.doi.org/10.1016/j.automatica.2009.04.017</mixed-citation></ref><ref id="hanspub.18448-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Zheng, Y.S. and Wang, L. (2012) Finite-Time Consensus of Hetero-geneous Multi-Agent Systems with and without Velocity Measurements. Systems and Control Letters, 61, 871-878. &lt;br&gt;http://dx.doi.org/10.1016/j.sysconle.2012.05.009</mixed-citation></ref><ref id="hanspub.18448-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Zheng, Y.S. and Wang, L. (2012) Distributed Consensus of Heterogeneous Multi-Agent Systems with Fixed and Switching Topologies. International Journal of Control, 85, 1967-1976.  
&lt;br&gt;http://dx.doi.org/10.1080/00207179.2012.713986</mixed-citation></ref><ref id="hanspub.18448-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Zheng, Y.S. and Wang, L. (2016) Consensus of Switched Multi-Agent Systems. IEEE Transactions on Circuits and Systems, 63, 314-318.</mixed-citation></ref><ref id="hanspub.18448-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">Yu, J.Y. and Wang, L. (2009) Group Consensus of Mul-ti-Agent Systems with Undirected Communication Groups. Proceedings of the 7th Asian Control Conference, Hong Kong, 27-29 August 2009, 105-110.</mixed-citation></ref><ref id="hanspub.18448-ref19"><label>19</label><mixed-citation publication-type="other" xlink:type="simple">Yu, J.Y. and Wang, L. (2010) Group Consensus in Multi Agent Systems with Switching Topologies and Communication Delays. Systems &amp; Control Letters, 59, 340-348. &lt;br&gt;http://dx.doi.org/10.1016/j.sysconle.2010.03.009</mixed-citation></ref><ref id="hanspub.18448-ref20"><label>20</label><mixed-citation publication-type="other" xlink:type="simple">Yu, J.Y. and Wang, L. (2012) Group Consensus of Multi-Agent Systems with Directed Information Exchange. International Journal of Systems Science, 43, 334-348. &lt;br&gt;http://dx.doi.org/10.1080/00207721.2010.496056</mixed-citation></ref><ref id="hanspub.18448-ref21"><label>21</label><mixed-citation publication-type="other" xlink:type="simple">Chen, Y. and Lv, J.H. (2011) On the Cluster Consensus of Discrete-Time Multi-Agent Systems. Systems &amp; Control Letters, 60, 517-523. &lt;br&gt;http://dx.doi.org/10.1016/j.sysconle.2011.04.009</mixed-citation></ref><ref id="hanspub.18448-ref22"><label>22</label><mixed-citation publication-type="other" xlink:type="simple">Qin, J.H. and Yu, C.B. (2013) Cluster Consensus Control of Generic Linear Multi-Agent Systems under Directed Topology with Acyclic Partition. Automatica, 49, 2898-2905. &lt;br&gt;http://dx.doi.org/10.1016/j.automatica.2013.06.017</mixed-citation></ref><ref id="hanspub.18448-ref23"><label>23</label><mixed-citation publication-type="other" xlink:type="simple">Han, Y.J. and Yu, W.W. (2013) Cluster Consensus in Discrete-Time Networks of Multi-Agents with Inter-Cluster Nonlinear Inputs. IEEE Transactions on Neural Networks and Learning Systems, 24, 566-578.  
&lt;br&gt;http://dx.doi.org/10.1109/TNNLS.2013.2237786</mixed-citation></ref><ref id="hanspub.18448-ref24"><label>24</label><mixed-citation publication-type="other" xlink:type="simple">Xie, D.M. and Liu, Q.L. (2014) Necessary and Sufficient Condition for Group Consensus of Multi-Agent Systems. Applied Mathematics and Computation, 243, 870-878. &lt;br&gt;http://dx.doi.org/10.1016/j.amc.2014.06.069</mixed-citation></ref><ref id="hanspub.18448-ref25"><label>25</label><mixed-citation publication-type="other" xlink:type="simple">Tan, C. and Liu, G.P. (2011) Group Consensus of Networked Multi-Agent Systems with Directed Topology. Proceedings of the 28th IFAC World Congress, Milano, 28 August-2 September 2011, 8878-8883.  
&lt;br&gt;http://dx.doi.org/10.3182/20110828-6-it-1002.02690</mixed-citation></ref><ref id="hanspub.18448-ref26"><label>26</label><mixed-citation publication-type="other" xlink:type="simple">Hadjicostis, C.N. and Rikos, A. (2012) Distributed Strategies for Balancing a Weighted Digraph. Proceedings of the 20th Mediterranean Conference on Control and Automation, Barcelona, 3-6 July 2012, 1141-1146.  
&lt;br&gt;http://dx.doi.org/10.1109/med.2012.6265792</mixed-citation></ref><ref id="hanspub.18448-ref27"><label>27</label><mixed-citation publication-type="other" xlink:type="simple">Apostolos, I.R. and Cristoforos, N.H. (2013) Distributed Balancing of a Di-graph with Integer Weights. Proceedings of the IEEE Conference on Decision Control, Firenze, 10-13 December 2013, 1983-1988.</mixed-citation></ref><ref id="hanspub.18448-ref28"><label>28</label><mixed-citation publication-type="other" xlink:type="simple">Attilio, P. and Andera, R. (2013) A Decentralized Algorithm for Balancing a Strongly Connected Weighted Digraph. Proceedings of the American Control Conference, Washington DC, 17-19 June 2013, 6547-6552.</mixed-citation></ref><ref id="hanspub.18448-ref29"><label>29</label><mixed-citation publication-type="other" xlink:type="simple">Fan, Y. and Han, R.Z. (2015) Graph-Balancing Algorithms for Average Consensus over Directed Networks. International Journal of Systems Science, 47, 135-148. &lt;br&gt;http://dx.doi.org/10.1080/00207721.2015.1029720</mixed-citation></ref></ref-list></back></article>