<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2016.67050</article-id><article-id pub-id-type="publisher-id">CSA-18120</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20160700000_20488483.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于D2D对等协作传输的自适应流媒体方法
  Dynamic Adaptive Streaming Based on D2D Cooperative Transportation
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>寿</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>清华大学计算机科学与技术系，北京</addr-line></aff><author-notes><corresp id="cor1">* E-mail:</corresp></author-notes><pub-date pub-type="epub"><day>27</day><month>07</month><year>2016</year></pub-date><volume>06</volume><issue>07</issue><fpage>406</fpage><lpage>414</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  随着移动互联网视频流量的快速增长，移动网络带宽成为限制流媒体传输质量的瓶颈。本文设计了一个多对多的设备到设备(D2D)的协作式自适应流媒体传输框架，将结合蜂窝网络和Wi-Fi自组网络，让设备可以充分利用邻近设备闲置的网络带宽能力来下载和分享视频，并且兼容现有自适应流媒体协议(DASH)。通过集群QoE感知，包括整体的网络带宽、缓存长度以及能耗等反馈信息，来选择合适的视频码率；并通过对等的协作方式，进行资源分配。实验结果表明：该方法相比传统非协作式传输方法，可以有效提高20%的用户满意度。
   With the recent popularity of mobile device, the video traffic is expanding while the mobile internet access cannot meet the growth of demand for media service. In this paper, we propose a De-vice-to-Device (D2D) cooperative adaptive streaming system, which supports asynchronous downloading and sharing for multi-bitrate videos in the crowd sourced network, to improve the quality of video streaming, and compatible with DASH protocol. We propose a crowd sourced QoE- aware quality adaptation algorithm for DASH and the metrics of QoE consist of network capacity, buffer level and energy. The experimental result shows that the proposed cooperative DASH system can improve 20% of user QOE as compared with the non-cooperative method. 
 
</p></abstract><kwd-group><kwd>模板，D2D，QoE，带宽聚合，自适应，流媒体, D2D</kwd><kwd> QoE</kwd><kwd> Bandwidth Aggregation</kwd><kwd> Dash</kwd><kwd> Video Streaming</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于D2D对等协作传输的自适应流媒体方法<sup> </sup></title><p>王寿</p><p>清华大学计算机科学与技术系，北京</p><disp-formula id="hanspub.18120-formula323"><graphic xlink:href="http://html.hanspub.org/file/3-1540602x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2016年7月6日；录用日期：2016年7月25日；发布日期：2016年7月28日</p><disp-formula id="hanspub.18120-formula324"><graphic xlink:href="http://html.hanspub.org/file/3-1540602x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>随着移动互联网视频流量的快速增长，移动网络带宽成为限制流媒体传输质量的瓶颈。本文设计了一个多对多的设备到设备(D2D)的协作式自适应流媒体传输框架，将结合蜂窝网络和Wi-Fi自组网络，让设备可以充分利用邻近设备闲置的网络带宽能力来下载和分享视频，并且兼容现有自适应流媒体协议(DASH)。通过集群QoE感知，包括整体的网络带宽、缓存长度以及能耗等反馈信息，来选择合适的视频码率；并通过对等的协作方式，进行资源分配。实验结果表明：该方法相比传统非协作式传输方法，可以有效提高20%的用户满意度。</p><p>关键词 :模板，D2D，QoE，带宽聚合，自适应，流媒体</p><disp-formula id="hanspub.18120-formula325"><graphic xlink:href="http://html.hanspub.org/file/3-1540602x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>近年来，智能手机、平板电脑、超极本等移动设备越来越普及，人们对移动设备的使用也有赶超传统PC电脑之势。移动设备上的网络流量有了爆炸性的增长，平均每两年翻一番。显而易见的，视频流量占据着移动网络流量的主要比例，越来越多的人选择使用移动设备来观看视频。从2015年到2020年，移动端的网络流量将激增5倍，而视频流量占比将从50%增长到75%，与之相伴的，是用户对视频体验的更高需求。其中包括更高的视频分辨率、更低的视频载入延迟和更灵敏的视频交互反应速度等等，这些需求相应的对移动网络带宽的要求也会更高。增长的需求让流媒体传输技术也产生了变革，传统的实时流传输协议，对内容分发网络支持不够友好，取而代之的是基于HTTP的动态自适应流媒体协议(DASH)。自适应流媒体协议，在移动网络中有着优越的性能表现，可以适应多元化的移动设备和多元的异构移动网络，自动切换合适的码率，充分提高了网络带宽的利用率，并保障用户体验。</p><p>移动设备逐渐配备越来越多的无线网络接口，例如Cellular (蜂窝网络)、Wi-Fi (IEEE 802.1无线网络)、Bluetooth (蓝牙)和NFC (近距离无线通讯技术)等等。带宽聚合技术，是通过聚合多重网络链路的带宽，来为一个应用出口服务。如果将带宽聚合技术，应用到DASH传输中，便能提高用户的观看体验。本文提出了一个设备到设备(D2D)的协作式自适应流媒体传输框架，将结合蜂窝网络和Wi-Fi自组网络，让设备可以充分利用邻近设备闲置的网络带宽能力来下载和分享视频，并且跟现有的自适应流媒体协议(DASH)无缝结合在一起，使之可以兼容通用的DASH标准。设备终端通过Wi-Fi自组网络，连接成集群，集群的节点通过蜂窝网络从服务器下载视频切片，节点之间通过D2D自组网络传递消息和转发视频数据。它们通过集群QoE感知的方式，以提高设备集群的带宽利用率、缓存状况和能耗状况为目标，进行视频协作分发和下载。该框架不仅支持现有的DASH协议，并比其他协作方式兼容更多节点，可以实现多对多的协作传输，使群组用户有更好的观看体验(图1)。</p></sec><sec id="s4"><title>2. 相关工作</title><p>在2015年的网络流量报告中，我们发现视频流量占据了网络数据流量的主要成分，已经超过了55%。而如今用户似乎更加习惯于在手机、平板电脑等移动设备上观看视频，视频流量在移动设备上的占比也超过了传统PC和电视。传统的实时流传输协议(Real Time Streaming Protocol, RTSP)难以满足新的移动网络的需求。如今内容分发网络(Content Delivery Networks, CDN)逐渐取代了传统服务器的网络架构，而RTSP协议由于使用TCP或UDP来传输数据，会产生难以穿透防火墙，占用过多的会话缓存开销，以及</p><p>图1. D2D协作式自适应流媒体场景示意图</p><p>需要铺设复杂的服务端系统等问题，导致难以兼容CDN网络 [<xref ref-type="bibr" rid="hanspub.18120-ref1">1</xref>] 。而基于HTTP的分段式传输，则在CDN网络中如鱼得水，大大降低了视频内容部署的成本，并提高了传输效率。一种新型的，对移动设备友好的动态自适应流媒体技术(DASH)在商业应用中渐渐发展起来 [<xref ref-type="bibr" rid="hanspub.18120-ref2">2</xref>] 。</p><p>其中流行的DASH协议包括：苹果公司发布的HLS (HTTP Live Streaming)技术，Adobe公司发布的HDS (HTTP Dynamic Streaming)和微软公司发布的Smooth Streaming。虽然这三家技术的核心原理相同，但都互不兼容。在2011年2月，MPEG和3GP发布了第一份公开的自适应码率协议MPEG-DASH。MPEG-DASH协议是基于HTTP的视频分段式传输协议，它支持视频按小段的时长分段，每个分段都具有不同码率的版本，并用一个索引文件MPD描述完整的分段信息。MPEG-DASH是客户端驱动的协议，它通过HTTP请求去获得视频索引文件和具体的视频数据文件。</p><p>DASH技术的核心部分，就是基于用户体验值(Quality of Experience, QoE)感应的反馈机制。QoE是衡量用户主观感受的度量值，在工业应用中难以测量。实际应用中，往往将其转化为可测量的QoS指标 [<xref ref-type="bibr" rid="hanspub.18120-ref3">3</xref>] ，例如启动时延、卡顿总时延、功耗值以及码率自适应的变化等等 [<xref ref-type="bibr" rid="hanspub.18120-ref4">4</xref>] 。客户端则将缓存时长、平均码率、观看时长和点击次数反馈给服务器，用于验证QoE的结果。基于QoE预测的DASH技术，能比传统流媒体技术提高20%的用户体验分数 [<xref ref-type="bibr" rid="hanspub.18120-ref5">5</xref>] 。</p><p>现有的测试工作，分别对Smooth Streaming、HDS、HLS和MPEG-DASH等协议作了性能分析，检验客户端播放器分别对长时间和短时间的网络变化产生什么样的应变，是否可以快速地调整到当前网络带宽所能容忍的最高码率。其中Smooth Streaming表现优异，它播放平稳很少有剧烈的切换，而且对内存的消耗小，但是对短时间的网络变化反应不够灵敏，卡顿时间较长 [<xref ref-type="bibr" rid="hanspub.18120-ref6">6</xref>] 。而当多个播放器共享同一个网络节点，产生TCP竞争时，Smooth Streaming表现平稳，而另一个播放器OSMF抖动剧烈 [<xref ref-type="bibr" rid="hanspub.18120-ref7">7</xref>] 。针对大量的视频数据研究，得到一个有用的经验是，一定范围内，视频分段的长度越小，效果越佳 [<xref ref-type="bibr" rid="hanspub.18120-ref8">8</xref>] 。这些研究对DASH的设计都能带来很好的帮助。</p><p>对于码率自适应算法的反馈机制，一直以来业界缺乏一个清晰的认识和统一的标准：哪个优化目标才是该机制所应该优先考虑的，哪个信号变量(预估的网络吞吐率，当前的缓存级别)才是控制回路中核心的参考信号；信号变量的影响权重应该是多少，反馈的灵敏度如何设置？围绕这个脉络，最初的码率切换算法都以网络带宽预测值作为信号变量。带宽预测是一个难点，传统的方法是分析TCP传输的回路时间(Round Trip Time，RTT)和丢包率来进行预测。可是这种方法在短时间内多变的无线网络环境下十分不准确，反而基于历史HTTP文件下载速率来预测带宽，对于DASH系统更加适用 [<xref ref-type="bibr" rid="hanspub.18120-ref9">9</xref>] 。可是将带宽预测值作为反馈信号，码率的切换会剧烈抖动，因为TCP传输链路容量是多变的。实际上DASH中都有缓存，缓存可以有效缓解网络容量抖动，基于缓存感知的预测方法会比带宽预测更加鲁邦。只在启动的时候进行简单的带宽预测，其它时刻基于缓存感知来切换码率，会减少10%~20%的卡顿延迟 [<xref ref-type="bibr" rid="hanspub.18120-ref10">10</xref>] 。</p></sec><sec id="s5"><title>3. 去中心化协作传输</title><sec id="s5_1"><title>3.1. 自适应码率选择策略</title><p>假设现在节点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x10_hanspub.png" xlink:type="simple"/></inline-formula>存在宽裕的蜂窝网络资源，在时间<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x11_hanspub.png" xlink:type="simple"/></inline-formula>内，可以给自组网内的其它节点集合<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x12_hanspub.png" xlink:type="simple"/></inline-formula>协作传输流媒体<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x13_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x14_hanspub.png" xlink:type="simple"/></inline-formula>(总数为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x15_hanspub.png" xlink:type="simple"/></inline-formula>)，只要分配的切片数确定了，相应的码率也会一致。那么所有的最优码率分布可以表示为</p><disp-formula id="hanspub.18120-formula326"><graphic xlink:href="http://html.hanspub.org/file/3-1540602x16_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x17_hanspub.png" xlink:type="simple"/></inline-formula>表示<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x18_hanspub.png" xlink:type="simple"/></inline-formula>对于节点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x19_hanspub.png" xlink:type="simple"/></inline-formula>的方案向量，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x20_hanspub.png" xlink:type="simple"/></inline-formula>表示给节点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x21_hanspub.png" xlink:type="simple"/></inline-formula>分配<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x22_hanspub.png" xlink:type="simple"/></inline-formula>个切片时，所选择的码率。如何选择码率，从而保证相应节点的效益之和最高是本章节所考虑的内容。相应的节点的效益之和表现为视频质量的收益，码率切换的损失，以及能耗开销的线性叠加 [<xref ref-type="bibr" rid="hanspub.18120-ref3">3</xref>] 。可以得到下面的最优化方程。</p><disp-formula id="hanspub.18120-formula327"><graphic xlink:href="http://html.hanspub.org/file/3-1540602x23_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s5_2"><title>3.2. 迭代增益分配算法</title><p>节点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x24_hanspub.png" xlink:type="simple"/></inline-formula>给自组网内的其它节点集合<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540602x25_hanspub.png" xlink:type="simple"/></inline-formula>分配自己的闲置资源，具体表现为将空闲的时长按一定比例分配给各个节点，并保证总体收益最高。最优资源分配的解可以通过迭代法而得，因为上一章的码率效益增量矩阵符合非递减特性。本章节的迭代法的基本思想是每一步多分配一个基本的资源，保证每一步的解都是当前最优，类似于贪心策略，到最后所有资源都分配出去得到的解便是最优解。具体来说，先初始化资源分配向量为空，即当前没有节点获得资源。然后分配第一个切片，遍历所有的节点，计算假设该节点多分配了此切片，带来的增益是多少，选择最大增益的节点，把该切片分配给它；然后分配第二个切片，以此类推，直到空闲的切片资源分配完毕，即可得整体QoE最优的分配方案。</p><disp-formula id="hanspub.18120-formula328"><graphic xlink:href="http://html.hanspub.org/file/3-1540602x26_hanspub.png"  xlink:type="simple"/></disp-formula></sec></sec>
<sec id="s6">
<title>4. 系统设计与实现</title>
<p>自组网D2D协作流媒体系统主要是流媒体系统中嵌入D2D协作传输控制来实现的。如图2所示，一个完整的流媒体系统，主要由网络数据传输模块和播放器模块两大块构成。播放器由视频缓存队列，编解码器和控制器组成；数据协助传输模块主要是对控制消息和数据转发两部分进行调度，由一个总的调度器来完成；底层的网络环境是Wi-Fi网络和蜂窝网络的混合网络，分别对应两个网络接口。数据传</p></sec></body>
<back><ref-list><title>References</title><ref id="hanspub.18120-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Stockhammer, T. (2011) Dynamic Adaptive Streaming over HTTP: Standards and Design Principles. Proceedings of the Second Annual ACM Conference on Multimedia Systems, 133-144. &lt;br&gt;http://dx.doi.org/10.1145/1943552.1943572</mixed-citation></ref><ref id="hanspub.18120-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Sodagar, I. (2011) The Mpeg-Dash Standard for Multimedia Streaming over the Internet. IEEE Multimedia, 18, 62-67. 
&lt;br&gt;http://dx.doi.org/10.1109/MMUL.2011.71</mixed-citation></ref><ref id="hanspub.18120-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Oyman, O. and Singh, S. (2012) Quality of Experience for HTTP Adaptive Streaming Services. IEEE Communications Magazine, 50, 20-27. &lt;br&gt;http://dx.doi.org/10.1109/MCOM.2012.6178830</mixed-citation></ref><ref id="hanspub.18120-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Balachandran, A., Sekar, V., Akella, A., et al. (2013) Developing a Pre-dictive Model of Quality of Experience for Internet Video. ACM SIGCOMM Computer Communication Review, 43, 339-350.  
&lt;br&gt;http://dx.doi.org/10.1145/2534169.2486025</mixed-citation></ref><ref id="hanspub.18120-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Seufert, M., Egger, S., Slanina, M., et al. (2015) A Survey on Quality of Ex-perience of HTTP Adaptive Streaming. IEEE Communications Surveys &amp; Tutorials, 17, 469-492. &lt;br&gt;http://dx.doi.org/10.1109/COMST.2014.2360940</mixed-citation></ref><ref id="hanspub.18120-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Lederer, S., Müller, C. and Timmerer, C. (2012) Dynamic Adaptive Streaming over HTTP Dataset. Proceedings of the 3rd Multimedia Systems Conference, 89-94. &lt;br&gt;http://dx.doi.org/10.1145/2155555.2155570</mixed-citation></ref><ref id="hanspub.18120-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Müller, C., Lederer, S. and Timmerer, C. (2012) An Evaluation of Dynamic Adaptive Streaming over HTTP in Vehicular Environments. Proceedings of the 4th Workshop on Mobile Video, 37-42. 
&lt;br&gt;http://dx.doi.org/10.1145/2151677.2151686</mixed-citation></ref><ref id="hanspub.18120-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Yin, X., Sekar, V. and Sinopoli, B. (2014) Toward a Principled Framework to Design Dynamic Adaptive Streaming Algorithms over http. Proceedings of the 13th ACM Workshop on Hot Topics in Networks, 9. 
&lt;br&gt;http://dx.doi.org/10.1145/2670518.2673877</mixed-citation></ref><ref id="hanspub.18120-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Huang, T.Y., Handigol, N., Heller, B., et al. (2012) Confused, Timid, and Unstable: Picking a Video Streaming Rate Is Hard. Proceedings of the 2012 ACM Conference on Internet Measurement Conference, 225-238. 
&lt;br&gt;http://dx.doi.org/10.1145/2398776.2398800</mixed-citation></ref><ref id="hanspub.18120-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Huang, T.Y., Johari, R., McKeown, N., et al. (2015) A Buffer-Based Approach to Rate Adaptation: Evidence from a Large Video Streaming Service. ACM SIGCOMM Computer Communication Review, 44, 187-198. 
&lt;br&gt;http://dx.doi.org/10.1145/2740070.2626296</mixed-citation></ref></ref-list></back></article>