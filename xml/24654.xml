<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2018.84057</article-id><article-id pub-id-type="publisher-id">CSA-24654</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20180400000_42126965.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于CAVLC拖尾系数的H.264/AVC视频信息隐藏算法
  H.264/AVC Video Information Hiding Algorithm Based on CAVLC Trailing Coefficient
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>克明</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>马</surname><given-names>春波</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>桂林电子科技大学信息与通信学院，广西 桂林</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>08</day><month>04</month><year>2018</year></pub-date><volume>08</volume><issue>04</issue><fpage>512</fpage><lpage>521</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对H.264/AVC视频编码标准熵编码域大容量隐藏的需求，本文提出了一种基于CAVLC (Context Adaptive Variable Length Coding)拖尾系数的H.264/AVC视频信息隐藏方法，通过调制合适的4 &#215; 4亮度DCT块的拖尾系数符号嵌入秘密信息。该方法根据拖尾系数数目调整秘密信息映射规则。信息提取过程不需要原始视频，也不需要完全解码，只解码CAVLC过程拖尾系数符号即可。实验结果表明，该算法在不改变比特率及不影响视频主观质量情况下，具有较高的嵌入效率和容量。 In order to meet the requirement of large capacity concealment of entropy coding domain of H.264/AVC video coding standard, this paper proposes a H.264/AVC video information hiding method based on tailing coefficients of CAVLC (Context Adaptive Variable Length Coding). The secret information is embedded by modulating the trailing coefficient symbol of the 4 &#215; 4 luma DCT block. The method adjusts the secret information mapping rule according to the number of trailing coefficients. The information extraction process does not require the original video and complete decoding, and only decodes the trailing coefficient symbols of the CAVLC process. Experimental results show that the algorithm has high embedding efficiency and capacity without changing the bit rate and without affecting the subjective quality of the video.
    
  
 
</p></abstract><kwd-group><kwd>视频信息隐藏，H.264/AVC，CAVLC，拖尾系数, Video Information Hiding</kwd><kwd> H.264/AVC</kwd><kwd> CAVLC</kwd><kwd> Trailing Coefficient</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于CAVLC拖尾系数的H.264/AVC视频信息隐藏算法<sup> </sup></title><p>王克明<sup>1</sup>，马春波<sup>2*</sup></p><p>桂林电子科技大学信息与通信学院，广西 桂林</p><disp-formula id="hanspub.24654-formula9"><graphic xlink:href="//html.hanspub.org/file/12-1540976x5_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2018年4月5日；录用日期：2018年4月21日；发布日期：2018年4月28日</p><disp-formula id="hanspub.24654-formula10"><graphic xlink:href="//html.hanspub.org/file/12-1540976x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>针对H.264/AVC视频编码标准熵编码域大容量隐藏的需求，本文提出了一种基于CAVLC (Context Adaptive Variable Length Coding)拖尾系数的H.264/AVC视频信息隐藏方法，通过调制合适的4 &#215; 4亮度DCT块的拖尾系数符号嵌入秘密信息。该方法根据拖尾系数数目调整秘密信息映射规则。信息提取过程不需要原始视频，也不需要完全解码，只解码CAVLC过程拖尾系数符号即可。实验结果表明，该算法在不改变比特率及不影响视频主观质量情况下，具有较高的嵌入效率和容量。</p><p>关键词 :视频信息隐藏，H.264/AVC，CAVLC，拖尾系数</p><disp-formula id="hanspub.24654-formula11"><graphic xlink:href="//html.hanspub.org/file/12-1540976x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/12-1540976x8_hanspub.png" /> <img src="//html.hanspub.org/file/12-1540976x9_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>互联网的发展与普及，使得信息传递更加便捷。但在公开信道上传输的信息极易遭到拦截、窃取、破坏、篡改，不仅个人、企业不堪其扰，国家安全也受到了威胁，因此，确保信息安全变得尤为重要。保证信息安全最基本的方法是加密，它通过置乱消息的内容使攻击者无法读懂消息。但加密的内容更容易引起攻击者的好奇和注意，并有被破译的可能。而信息隐藏技术作为保证信息安全的另一手段，通过隐藏通信的存在很好的解决了加密的缺陷，从而受到广泛关注 [<xref ref-type="bibr" rid="hanspub.24654-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.24654-ref2">2</xref>] 。</p><p>信息隐藏技术是将秘密信息嵌入公开载体(文本、图像、音频、视频)中，在不引起第三方注意的情况下完成隐蔽通信的一种手段。具有安全性、大容量两个重要特性。安全性要求对载体的修改在人类可感知范围之外，以此降低隐蔽通信被发现的可能性；大容量性则要求载体有尽可能多的冗余用于隐藏信息。相对于文本、图像、音频等信息隐藏载体，数字视频具有信号空间大的特点，能够满足信息隐藏大容量嵌入信息的需求。</p><p>在以往的基于MPEG1和MPEG2视频编码标准的信息隐藏技术中，通过直接调制量化后的DCT系数来隐藏信息，而H.264/AVC标准引入了帧内预测编码、可变块大小运动补偿及基于上下文自适应熵编码等新特性 [<xref ref-type="bibr" rid="hanspub.24654-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.24654-ref4">4</xref>] ，预测残差在经过4 &#215; 4DCT变换、量化之后，系数大部分为0或&#177;1，这使得轻微的变动足以影响视频比特率及质量，所以以往的图片和视频编码标准中的DCT域隐藏方法不能直接应用到H.264/AVC标准中，必须深入研究H.264/AVC标准的特性并探讨新的信息隐藏方法。</p></sec><sec id="s4"><title>2. 相关工作</title><p>目前，很多学者对基于H.264/AVC标准的视频隐藏做了研究，主要通过调制帧内、帧间预测模式 [<xref ref-type="bibr" rid="hanspub.24654-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.24654-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.24654-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.24654-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.24654-ref9">9</xref>] ，修改帧间预测中运动矢量的大小 [<xref ref-type="bibr" rid="hanspub.24654-ref11">11</xref>] ，调制熵编码过程中QDCT系数及码字 [<xref ref-type="bibr" rid="hanspub.24654-ref12">12</xref>] [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 等来实现秘密信息的嵌入。</p><p>文献 [<xref ref-type="bibr" rid="hanspub.24654-ref5">5</xref>] 根据10个视频序列的统计数据在帧内4 &#215; 4亮度块与秘密信息之间建立映射，并通过修改帧内4 &#215; 4块的预测模式隐藏1比特信息。信息嵌入容量由一个能量参数 控制。该算法的映射规则建立在测试序列分析之上，对于其他视频序列，该规则未必是最优的。</p><p>文献 [<xref ref-type="bibr" rid="hanspub.24654-ref6">6</xref>] 在帧内和帧间预测编码中，基于分块大小与秘密信息间建立映射。此算法在比特率增加很小及视频质量无主观恶化的情况下能够有效的隐藏秘密信息。</p><p>文献 [<xref ref-type="bibr" rid="hanspub.24654-ref7">7</xref>] 利用帧内4 &#215; 4块预测模式的奇偶性与待嵌信息间建立映射，并引入矩阵编码技术，调制一个块的预测模式能够嵌入2比特秘密信息。该算法具有较高的数据嵌入率。</p><p>文献 [<xref ref-type="bibr" rid="hanspub.24654-ref8">8</xref>] 利用LSB嵌入思想，将4 &#215; 4帧内预测模式调制为与秘密信息奇偶性不同的次优模式。算法没有对用于隐藏的块进行筛选，如果最优模式与次优模式差值较大时，模式的修改对视频质量影响较大。文献 [<xref ref-type="bibr" rid="hanspub.24654-ref9">9</xref>] 对 [<xref ref-type="bibr" rid="hanspub.24654-ref8">8</xref>] 做了改进，选择参考亮度值接近的帧内4 &#215; 4亮度块进行嵌入。改进的算法具有良好的不可见性。</p><p>文献 [<xref ref-type="bibr" rid="hanspub.24654-ref11">11</xref>] 基于运动矢量进行隐藏，通过对不同宏块类型赋予不同的阈值来进行信息隐藏点的选择，并引入菱形编码，减少运动矢量修改率，提高了嵌入容量。但以上基于预测过程和运动矢量的隐藏方法或多或少都改变了视频的比特率。</p><p>文献 [<xref ref-type="bibr" rid="hanspub.24654-ref12">12</xref>] 通过修改CAVLC最高频拖尾系数的符号嵌入1比特信息，该方法保持信息嵌入前后比特率不变，但用于嵌入信息的数据块的位置不可控，调制所有最高频拖尾系数符号嵌入信息时，视频有较大失真。文献 [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 和文献 [<xref ref-type="bibr" rid="hanspub.24654-ref12">12</xref>] 相同，通过调制拖尾系数符号嵌入秘密信息。其首先使用随机数生成器生成随机嵌入位置，然后调制所有拖尾系数符号的校验和并随机调制一个符号位来嵌入1比特信息。该方法在保持比特率不变及视频质量的同时保证了嵌入信息的安全性，但其信息嵌入容量十分有限。且在调制3个拖尾系数符号中的1个时只能嵌入1比特秘密信息，嵌入效率较低，没有充分利用H.264/AVC拖尾系数符号的冗余特性。在保证隐藏信息安全性及视频质量的同时，为提升信息嵌入效率及容量，本文提出了一种基于H.264/AVC基本档次CAVLC过程的信息隐藏方案，根据拖尾系数个数来调整秘密信息嵌入数目。信息的提取过程中只需解码4 &#215; 4亮度DCT块的CAVLC过程即可。</p><p>本文其余部分安排如下，第三部分简要介绍H.264/AVC的CAVLC基本原理及编码过程。第四部分，将详细描述提出的信息隐藏算法的原理及算法实现主要步骤。第五部分是仿真结果及分析。第六部分给出结论。</p></sec><sec id="s5"><title>3. H.264/AVC中的CAVLC</title><p>H.264/AVC熵编码方法有两种，其一是基于上下文的自适应可变长编码(CAVLC)，另一种是基于上下文的自适应二进制算术编码(CABAC)。两种算法各有优劣，CABAC以低比特率的特征应用于H.264的主要档次。而CAVLC则以低计算复杂度、低耗时的特点应用于H.264的基本档次。</p><sec id="s5_1"><title>3.1. CAVLC基本原理</title><p>H.264的CAVLC用于对亮度和色度残差数据进行编码。经过预测、变换、量化之后的4 &#215; 4系数块多半都是稀疏的(大部分为0)。这些数据块经zig-zag扫描重排序后，得到一维数组。图1是某一4 &#215; 4亮度残差块zig-zag扫描示例，可以看出，幅值大的位于数组前端，而后端大部分是&#177;1和0。CAVLC使用游程编码来紧凑表示零串以达到压缩冗余的目的。由于相邻块的非零系数个数通常是相关的，对系数个数的编码使用码表，而表的选择依赖于相邻块非零系数的个数，这体现了基于上下文的思想。CAVLC充分利用残差数据的特性进行编码，在减少数据冗余的同时，提升了H.264的编码效率。</p></sec><sec id="s5_2"><title>3.2. CAVLC的编码过程</title><p>CAVLC的编码过程主要有以下5个步骤：</p><p>图1. 4 &#215; 4块zig-zag扫描</p><p>1) 对非零系数的数目(Total Coeffs, TC)和拖尾系数数目(Trailing Ones, T1)进行编码。其中TC {0, 1,…16}，T1 {0, 1, 2, 3}。以逆zig-zag扫描的顺序，如果&#177;1的个数大于3，则只取前3个为拖尾系数。编码基于左邻及上邻块的非零系数个数得到NC值，并通过查表的方式获得编码比特流。共有4个变长表格和1个定长表格可供选择。</p><p>2) 对拖尾系数的符号(Trailingones sign flag, T1s)以逆zig-zag扫描顺序进行编码。其中“−”用比特1表示，“+”用比特0表示。</p><p>3) 对除拖尾系数之外的非零系数的幅值(level)进行编码。幅值由两部分组成：前缀(level_prefix)和后缀(level_suffix)。通过计算level_prefix和level_suffix的值并查表得到编码比特流。</p><p>4) 对最后一个非零系数前零的数目(TotalZeros)进行编码。其中TotalZeros是指按照正向扫描的最后一个非零系数前零的总数,同样通过查表编码。</p><p>5) 对每个非零系数前零的个数(Runbefore)查表编码。按照逆zig-zag扫描的顺序进行，其中最后一个非零系数前零的个数不需要进行Runbefore编码，如果没有剩余的零需要编码(Runbefore=TotalZeros)时也无需进行Runbefore编码。</p></sec></sec><sec id="s6"><title>4. 基于CAVLC拖尾系数的信息隐藏算法</title><p>分析3.2中CAVLC编码过程可知，只有第二步中拖尾系数符号编码时不使用码表，且修改拖尾系数符号不会影响其他编码步骤。这保证了信息嵌入前后码流总比特数不变。因此，本算法通过选择I帧、P帧中合适的4 &#215; 4亮度DCT块，在其CAVLC编码过程第二步的拖尾系数符号与秘密信息间建立映射来嵌入信息。</p><sec id="s6_1"><title>4.1. 待嵌信息预处理</title><p>Logistic混沌序列是源于人口统计的非线性动力学系统，是一个已经被证明安全性的完全成熟的映射 [<xref ref-type="bibr" rid="hanspub.24654-ref10">10</xref>] ，对初始值和参数及其敏感。为了提升信息隐藏方法的安全性，本算法首先利用logistic混沌序列对待嵌信息进行加密预处理。其系统方程如下：</p><p>x ( k + 1 ) = μ ∗ x ( k ) ∗ [ 1 − x ( k ) ] (1)</p><p>其中，u是控制参数， k ∈ [ 0 , 1 , ⋯ , n ] 。当满足 0 &lt; x ( 0 ) &lt; 1 ，且 3.5699456 &lt; u ≤ 4 时可以认为此系统是混沌系统。</p><p>具体预处理过程为，设待嵌秘密信息序列 S = { s i | i = ( 1 , 2 , 3 , ⋯ , n ) , s i ∈ { 0 , 1 } } ，则 k ∈ [ 0 , 1 , ⋯ , n − 2 ] 。设定 x ( 0 ) 及控制参数u的值，并带入式(1)迭代 n − 1 次，可得到logistic混沌序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-1540976x19_hanspub.png" xlink:type="simple"/></inline-formula>。为实现对待嵌信息的加密，需要把序列L的各个值映射为数值0或1。设置阈值 T = 0.5 ，映射关系如下所示，</p><p>L ′ = { 0 l i &lt; T 1 l i ≥ T (2)</p><p>则根据式(2)可得映射之后的序列为 L ′ = { l ′ i | i = ( 1 , 2 , 3 , ⋯ , S l ) , l ′ i ∈ { 0 , 1 } } 。最后将序列 L ′ 与待嵌信息序列S对应位置进行异或，得到加密后的信息序列 S ′ = { s ′ i | i = ( 1 , 2 , 3 , ⋯ , n ) , s ′ i ∈ { 0 , 1 } } ， S ′ 即为预处理后用于隐藏的信息序列。</p></sec><sec id="s6_2"><title>4.2. 嵌入块的选择</title><sec id="s6_2_1"><title>4.2.1 . 候选块</title><p>H.264的帧内预测包含4 &#215; 4和16 &#215; 16两种亮度预测模式，对于16 &#215; 16模式的块，在4 &#215; 4DCT变换之后，还需要将其直流系数组成新的4 &#215; 4矩阵，并进行Hadamard变换及量化。CAVLC过程中也需要对这些直流系数块编码。由于直流系数在低频域，更改系数将对视频主观质量造成较大影响，因此，本算法嵌入信息时不选用亮度直流系数块。另外，在拖尾系数数目为零的块无法嵌入信息。所以，基于人眼特性及以上原则，用于嵌入信息的候选块应满足以下三个条件：一、4 &#215; 4DCT亮度块；二、非直流系数块；三、拖尾系数数目不为零。</p></sec><sec id="s6_2_2"><title>4.2.2 . 宿主块</title><p>宿主块，即实际用于隐藏的候选块。当选取所有的候选块进行信息嵌入时，视频图像有较大失真，因此本算法设定参数E来限制用于隐藏信息的宿主块。例如，当E = 12时，则将每12个候选块分为一组，只在分组的第一个块隐藏信息。E取其他值时操作同上，通过调节E的大小能很好的保证视频质量。</p></sec></sec><sec id="s6_3"><title>4.3. 映射规则</title><p>为了充分利用CAVLC拖尾系数符号冗余且减少秘密信息嵌入带来的视频失真，本算法在拖尾系数个数为1-2的块中只修改最高频的符号位来嵌入1比特秘密信息。当拖尾系数数目为3时，引入矩阵编码技术，至多修改1比特数据嵌入2比特秘密信息。</p><p>已知待嵌秘密信息序列为 S ′ = { s ′ i | i = ( 1 , 2 , 3 , ⋯ , n ) , s ′ i ∈ { 0 , 1 } } ，以逆zig-zag顺序扫描的拖尾符号分别为 c 1 ， c 2 ， c 3 (如果存在)，则对于不同拖尾系数数目的宿主块，分以下两种情况：</p><p>1) 当拖尾数目为1~2时，只调制最高频拖尾系数符号 c 1 来嵌入1比特信息，映射规则如下，</p><p>c ′ 1 = { c 1 if   ( c 1 mod 2 ) = s ′ i c 1 &#175; if   ( c 1 mod 2 ) ≠ s ′ i (3)</p><p>其中， c 1 &#175; 表示对 c 1 取反， c ′ 代表嵌秘之后的最高频拖尾系数， s ′ i 表示将要嵌入的第i比特信息。</p><p>2) 当拖尾数目为3时，采用矩阵编码技术隐藏。其通用形式是 n = 2 k − 1 ，即用n个原始数据比特负载k比特秘密信息，对数据的更改最多也只有1比特，用三元组表示为 ( 1 , n , k ) 。在这里，选取 n = 3 ， k = 2 ，即用3个原始拖尾符号负载2比特秘密信息。具体映射规则如表1所示。</p><p>其中，符号“ ⊕ ”表示异或运算。若当前有2比特待嵌秘密信息 s ′ i s ′ i + 1 = 00 ，3个原始拖尾符号 c 1 = 0 ， c 2 = 0 ， c 3 = 1 ，则有以下等式：</p><p>c 1 ⊕ c 2 = 0 , c 2 ⊕ c 3 = 1 (4)</p><p>根据表1的映射规则可知，调制<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-1540976x46_hanspub.png" xlink:type="simple"/></inline-formula>，即可实现秘密信息的嵌入。</p></sec><sec id="s6_4"><title>4.4. 信息隐藏步骤</title><p>算法的整体隐藏框架如图2所示，在编码端，首先利用logistic混沌序列对伪随机秘密信息进行加密，后根据4.2中嵌入条件确定宿主块位置，并通过判断拖尾系数的数目，选定映射规则将信息嵌入拖尾系数符号位中，得到隐藏信息后的比特流。</p><sec id="s6_4_1"><title>4.4.1 . 信息嵌入过程</title><p>具体的信息隐藏方案如下：</p><p>1) 对待嵌秘密信息进行logistic混沌加密，以增强算法的安全性；</p><p>图2. 信息隐藏框架</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Secret information mapping rule</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >秘密信息</th><th align="center" valign="middle" >原始拖尾系数符号关系(逆序)</th><th align="center" valign="middle" >需要调制的拖尾系数符号</th></tr></thead><tr><td align="center" valign="middle" >s ′ i s ′ i + 1 = 00</td><td align="center" valign="middle" >c 1 ⊕ c 2 = 0 , c 2 ⊕ c 3 = 0</td><td align="center" valign="middle" >不变</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 0 , c 2 ⊕ c 3 = 1</td><td align="center" valign="middle" >c 3</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 1 , c 2 ⊕ c 3 = 0</td><td align="center" valign="middle" >c 1</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 1 , c 2 ⊕ c 3 = 1</td><td align="center" valign="middle" >c 2</td></tr><tr><td align="center" valign="middle" >s ′ i s ′ i + 1 = 01</td><td align="center" valign="middle" >c 1 ⊕ c 2 = 0 , c 2 ⊕ c 3 = 0</td><td align="center" valign="middle" >c 3</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 0 , c 2 ⊕ c 3 = 1</td><td align="center" valign="middle" >不变</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 1 , c 2 ⊕ c 3 = 0</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-1540976x61_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 1 , c 2 ⊕ c 3 = 1</td><td align="center" valign="middle" >c 1</td></tr><tr><td align="center" valign="middle" >s ′ i s ′ i + 1 = 10</td><td align="center" valign="middle" >c 1 ⊕ c 2 = 0 , c 2 ⊕ c 3 = 0</td><td align="center" valign="middle" >c 1</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/12-1540976x67_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" >c 2</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 1 , c 2 ⊕ c 3 = 0</td><td align="center" valign="middle" >不变</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 1 , c 2 ⊕ c 3 = 1</td><td align="center" valign="middle" >c 3</td></tr><tr><td align="center" valign="middle" >s ′ i s ′ i + 1 = 11</td><td align="center" valign="middle" >c 1 ⊕ c 2 = 0 , c 2 ⊕ c 3 = 0</td><td align="center" valign="middle" >c 2</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 0 , c 2 ⊕ c 3 = 1</td><td align="center" valign="middle" >c 1</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 1 , c 2 ⊕ c 3 = 0</td><td align="center" valign="middle" >c 3</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >c 1 ⊕ c 2 = 1 , c 2 ⊕ c 3 = 1</td><td align="center" valign="middle" >不变</td></tr></tbody></table></table-wrap><p>表1. 秘密信息映射规则</p><p>2) 设定嵌入参数E，并标记分组中宿主块位置；</p><p>3) 判断当前块是否为候选块，若否，则对当前块正常编码并继续执行当前步骤；</p><p>4) 根据参数E判断当前块是否为宿主块，若否，则对当前块正常编码并返回步骤3；</p><p>5) 判断当前宿主块拖尾系数数目是否为3，若是，则基于表1的映射规则进行信息嵌入，否则利用式(3)嵌入信息；</p><p>6) 判断秘密信息是否嵌入完毕，若是，则嵌入结束，否则返回步骤2。</p></sec><sec id="s6_4_2"><title>4.4.2. 信息提取过程</title><p>信息提取过程不需要完全解码，只解码拖尾系数符号即可。具体提取过程如下：</p><p>1) 设定与编码端相同的参数E，并标记分组中E个宿主块位置，然后根据秘钥生成混沌序列L；</p><p>2) 判断当前块是否为宿主块，若否，则正常解码当前块并继续执行此步骤；</p><p>3) 判断当前宿主块拖尾系数数目是否为3，若是，则基于表1映射规则提取信息，否则直接提取最高频拖尾系数为秘密信息；</p><p>4) 判断是否所有秘密信息都已提取完毕，若否，则返回步骤2；</p><p>5) 将步骤1生成的混沌序列L与提取的秘密信息对应位置逐个进行异或，得到原始信息。</p></sec></sec></sec><sec id="s7"><title>5. 实验结果</title><p>为了对提出的信息隐藏方案进行验证，基于H.264/AVC参考软件JM19.0 [<xref ref-type="bibr" rid="hanspub.24654-ref14">14</xref>] 进行了仿真。实验中用到ice，city，soccer，foreman共4个标准QCIF测试序列。JM参考软件主要编码配置参数如表2所示，其余参数采用软件默认设置。</p><p>实验选取了4个视频序列的前50帧进行测试，并从以下几方面对算法进行评估。</p><p>A) 嵌入信息前后视频主观质量评价</p><p>图3是4个序列嵌入信息前后的第25帧图像，其中(a)是原始重建图像，(b)、(c)分别是E取16、20时的嵌秘图像。与原始视频重建帧对比分析可得，(b)、(c)中图像质量均无明显恶化。</p><p>B) 客观质量评价</p><p>为对提出的算法进一步评估，引入了4个客观质量评价指标，当嵌入控制参数E分别取12、16、20时，视频综合性能测试结果如表3所示。</p><p>表中，Capacity表示本算法在各个视频序列中的嵌入容量，Y-PSNR是嵌入信息后视频序列亮度平面的平均峰值信噪比。SSIM是结构相似度评价指标，该指标与人类视觉感知系统相符，取值为0-1，其值越接近1，表示失真图像与原图越相似。BRV表示嵌入信息前后视频比特率变化情况，定义如下：</p><p>BRV = B ′ − B B &#215; 100 % (5)</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> The main configuration parameters of the JM reference softwar</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >Parameters</th><th align="center" valign="middle" >Configuration</th></tr></thead><tr><td align="center" valign="middle" >Profile</td><td align="center" valign="middle" >Baseline</td></tr><tr><td align="center" valign="middle" >Frames Rate</td><td align="center" valign="middle" >30</td></tr><tr><td align="center" valign="middle" >QP</td><td align="center" valign="middle" >28</td></tr><tr><td align="center" valign="middle" >GOP</td><td align="center" valign="middle" >IPPPP</td></tr><tr><td align="center" valign="middle" >Total Frames</td><td align="center" valign="middle" >50</td></tr></tbody></table></table-wrap><p>表2. JM参考软件的主要配置参数</p><p>图3. 嵌秘前后第25帧视频图像</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Video comprehensive performance test when E = 12, 16, 2</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >视频</th><th align="center" valign="middle"  colspan="3"  >Capacity/bit</th><th align="center" valign="middle"  colspan="4"  >Y-PSNR/dB</th><th align="center" valign="middle"  colspan="4"  >SSIM</th><th align="center" valign="middle"  colspan="3"  >BRV/%</th></tr></thead><tr><td align="center" valign="middle" >序列</td><td align="center" valign="middle" >E = 12</td><td align="center" valign="middle" >E = 16</td><td align="center" valign="middle" >E = 20</td><td align="center" valign="middle" >original</td><td align="center" valign="middle" >E = 12</td><td align="center" valign="middle" >E = 16</td><td align="center" valign="middle" >E = 20</td><td align="center" valign="middle" >original</td><td align="center" valign="middle" >E = 12</td><td align="center" valign="middle" >E = 16</td><td align="center" valign="middle" >E = 20</td><td align="center" valign="middle" >E = 12</td><td align="center" valign="middle" >E = 16</td><td align="center" valign="middle" >E = 20</td></tr><tr><td align="center" valign="middle" >ice</td><td align="center" valign="middle" >1108</td><td align="center" valign="middle" >827</td><td align="center" valign="middle" >674</td><td align="center" valign="middle" >39.44</td><td align="center" valign="middle" >34.68</td><td align="center" valign="middle" >37.24</td><td align="center" valign="middle" >38.03</td><td align="center" valign="middle" >0.981</td><td align="center" valign="middle" >0.974</td><td align="center" valign="middle" >0.976</td><td align="center" valign="middle" >0.978</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >soccer</td><td align="center" valign="middle" >1709</td><td align="center" valign="middle" >1268</td><td align="center" valign="middle" >1031</td><td align="center" valign="middle" >35.94</td><td align="center" valign="middle" >31.16</td><td align="center" valign="middle" >33.50</td><td align="center" valign="middle" >33.49</td><td align="center" valign="middle" >0.917</td><td align="center" valign="middle" >0.892</td><td align="center" valign="middle" >0.904</td><td align="center" valign="middle" >0.908</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >city</td><td align="center" valign="middle" >1185</td><td align="center" valign="middle" >898</td><td align="center" valign="middle" >714</td><td align="center" valign="middle" >35.15</td><td align="center" valign="middle" >31.37</td><td align="center" valign="middle" >29.80</td><td align="center" valign="middle" >32.50</td><td align="center" valign="middle" >0.939</td><td align="center" valign="middle" >0.911</td><td align="center" valign="middle" >0.913</td><td align="center" valign="middle" >0.920</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >foreman</td><td align="center" valign="middle" >1382</td><td align="center" valign="middle" >1002</td><td align="center" valign="middle" >825</td><td align="center" valign="middle" >36.98</td><td align="center" valign="middle" >30.38</td><td align="center" valign="middle" >30.16</td><td align="center" valign="middle" >32.79</td><td align="center" valign="middle" >0.956</td><td align="center" valign="middle" >0.931</td><td align="center" valign="middle" >0.940</td><td align="center" valign="middle" >0.948</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr></tbody></table></table-wrap><p>表3. E = 12, 16, 20时视频综合性能测试</p><p>其中，B'表示嵌入信息后视频序列的比特率，B表示未嵌入信息时的比特率。</p><p>由表3可知，随着嵌入间隔E的增大，用于嵌入信息的宿主块减少，相应的各个视频序列隐藏容量也减少了。对于视频序列的平均PSNR，应该随着E的增大而减小，但在city序列中，E = 12时视频序列的PSNR却小于E = 16的PSNR，分析原因，是由于E=16时修改过多位于低频的拖尾系数从而导致帧内误差累积，造成了PSNR的下降。在表中SSIM这一指标变化趋势较为统一，整体随着E的增加而逐渐接近原始解码帧的SSIM值。另外，本算法的视频比特率在嵌入信息前后严格保持不变。综合分析各个评价指标，当E取值为16、20时，本算法在隐藏容量与视频质量之间取得了较好的平衡。</p><p>表4是取10帧视频序列限定调制200个块的情况下，本文方法与文献 [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 比较的实验结果。</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> The experimental results compared with literature [13</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >视频</th><th align="center" valign="middle"  colspan="4"  >文献 [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 方法</th><th align="center" valign="middle"  colspan="4"  >本文方法</th></tr></thead><tr><td align="center" valign="middle" >序列</td><td align="center" valign="middle" >Capacity/bits</td><td align="center" valign="middle" >Y-PSNR/dB</td><td align="center" valign="middle" >SSIM</td><td align="center" valign="middle" >BRV/%</td><td align="center" valign="middle" >Capacity/bits</td><td align="center" valign="middle" >Y-PSNR/dB</td><td align="center" valign="middle" >SSIM</td><td align="center" valign="middle" >BRV/%</td></tr><tr><td align="center" valign="middle" >ice</td><td align="center" valign="middle" >200</td><td align="center" valign="middle" >36.34</td><td align="center" valign="middle" >0.976</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >274</td><td align="center" valign="middle" >33.87</td><td align="center" valign="middle" >0.973</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >soccer</td><td align="center" valign="middle" >200</td><td align="center" valign="middle" >29.79</td><td align="center" valign="middle" >0.910</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >264</td><td align="center" valign="middle" >33.13</td><td align="center" valign="middle" >0.913</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >city</td><td align="center" valign="middle" >200</td><td align="center" valign="middle" >32.76</td><td align="center" valign="middle" >0.926</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >257</td><td align="center" valign="middle" >31.63</td><td align="center" valign="middle" >0.920</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >foreman</td><td align="center" valign="middle" >200</td><td align="center" valign="middle" >28.64</td><td align="center" valign="middle" >0.936</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >232</td><td align="center" valign="middle" >30.70</td><td align="center" valign="middle" >0.942</td><td align="center" valign="middle" >0</td></tr></tbody></table></table-wrap><p>表4. 与文献 [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 比较的实验结果</p><p>在隐藏容量方面，本文算法要明显高于文献 [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 。这是因为文献 [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 每调制1个块只能嵌入1比特信息，而本文算法在调制拖尾数目为3的块时，能够隐藏2比特信息。随着所调制拖尾数目为3的块的增多，本文方案将比文献 [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 隐藏容量更大。</p><p>峰值信噪比与结构相似性方面，文献 [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 算法ice和city序列的值要高于本算法。但在soccer和foreman序列中其值要低于本算法。</p><p>在比特率变化方面，本算法与文献 [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 一致，嵌入信息前后视频比特率严格保持不变。</p></sec><sec id="s8"><title>6. 结论</title><p>本文提出的视频信息隐藏方案基于H.264/AVC视频编码标准CAVLC过程的拖尾系数编码步骤。利用logistic混沌序列加密待嵌信息，提高了安全性，并用嵌入参数E控制嵌入间隔，在保证嵌秘前后视频的比特率保持不变及视频质量良好的情况下，本方案每调制一个拖尾数目为3的4 &#215; 4块，将比文献 [<xref ref-type="bibr" rid="hanspub.24654-ref13">13</xref>] 多隐藏1比特秘密信息，具有更高的嵌入效率，因此隐藏容量也有所提升。同时，算法复杂度低，隐藏与提取过程耗时较少，适于实时应用。但由于本算法在熵编码过程中嵌入信息时改变了残差系数值，在帧内预测过程将会导致失真累积，随着嵌入容量的增加，视频将越来越恶化。另外，嵌秘码流不能够抵抗重编码攻击。</p></sec><sec id="s9"><title>资助信息</title><p>国家自然科学基金(61167006)。</p></sec><sec id="s10"><title>文章引用</title><p>王克明,马春波. 基于CAVLC拖尾系数的H.264/AVC视频信息隐藏算法 H.264/AVC Video Information Hiding Algorithm Based on CAVLC Trailing Coefficient[J]. 计算机科学与应用, 2018, 08(04): 512-521. https://doi.org/10.12677/CSA.2018.84057</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.24654-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">刘振华, 尹萍. 信息隐藏技术及其应用[M]. 北京: 科学出版社, 2002: 3-9.</mixed-citation></ref><ref id="hanspub.24654-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">汪小帆, 戴跃伟, 茅耀斌. 信息隐藏技术: 方法与应用[M]. 北京: 机械工业出版社, 2001: 2-5.</mixed-citation></ref><ref id="hanspub.24654-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">毕厚杰. 新一代视频压缩编码标准——H.264/AVC(第二版) [M]. 北京: 人民邮电出版社, 2009: 76-139.</mixed-citation></ref><ref id="hanspub.24654-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Wiegand, T., Sullivan, G.J., Bjntegaard, G. and Luthra, A. (2003) Overview of the H.264/AVC Video Coding Standard. IEEE Transactions on Circuits and Sys-tems for Video Technology, 13, 560-576.  
&lt;br&gt;https://doi.org/10.1109/TCSVT.2003.815165</mixed-citation></ref><ref id="hanspub.24654-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Hu, Y., Hang, C.T. and Su, Y.T. (2008) Information Hiding for H.264/AVC. Acta Electronica Sinica, 36, 690-694.</mixed-citation></ref><ref id="hanspub.24654-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Wang, R.D., Zhu, H.L. and Xu, D.W. (2010) Information Hid-ing Algorithm for H.264/AVC Based on Encoding Mode. Opto-Electronic Engineering, 37, 144-150.</mixed-citation></ref><ref id="hanspub.24654-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Yang, G.B., Li, J.J., He, Y.L., et al. (2011) An Information Hiding Algorithm Based on Intra-Prediction Modes and Matrix Coding for H.264/AVC Video Stream. AEU-International Journal of Electronics and Communications, 65, 331-337. &lt;br&gt;https://doi.org/10.1016/j.aeue.2010.03.011</mixed-citation></ref><ref id="hanspub.24654-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Xu, D. and Wang, J. (2012) Prediction Mode Modulated Da-ta-Hiding Algorithm for H.264/AVC. Journal of Real-Time Image Processing, 7, 205-214.</mixed-citation></ref><ref id="hanspub.24654-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Xu, D.W. and Wang, R.D. (2011) An Improved Information Hiding Algorithm with Prediction Mode Modulating for H.264/AVC. Opto-Electronic Engineering, 38, 93-99.</mixed-citation></ref><ref id="hanspub.24654-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Kanso, A. and Smaoui, N. (2007) Logistic Chaotic Maps for Binary Numbers Generations. Chaos, Solitons and Fractals, 40, 2557-2568. &lt;br&gt;https://doi.org/10.1016/j.chaos.2007.10.049</mixed-citation></ref><ref id="hanspub.24654-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">苏育挺, 张新龙, 张承乾, 等. 基于运动矢量的H.264信息隐藏算法[J]. 天津大学学报, 2014, 47(1): 67-73.</mixed-citation></ref><ref id="hanspub.24654-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Kim, S.M., Kim, S.B., Hong, Y., et al. (2007) Data Hiding on H.264/AVC Compressed Video. International Conference on Image Analysis and Recognition (ICIAR 2007), Montreal, LNCS 4633, 698-707.</mixed-citation></ref><ref id="hanspub.24654-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Lin, X., Li, Q., Wang, W. and Zeng, G. (2012) Information Hiding Based on CAVLC in H.264/AVC Standard. 2012 Fourth International Conference on Multimedia Information Networking and Security, Nan-jing, 900-904.  
&lt;br&gt;https://doi.org/10.1109/MINES.2012.129</mixed-citation></ref><ref id="hanspub.24654-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">H.264/AVC JVT Reference Software JM19.0. http://iphome.hhi.de/suehring/tml/download/</mixed-citation></ref></ref-list></back></article>