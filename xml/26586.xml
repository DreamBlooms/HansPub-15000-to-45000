<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2018.78119</article-id><article-id pub-id-type="publisher-id">AAM-26586</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20180800000_27896458.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  求非线性方程重根的区间算法
  Interval Algorithm of Nonlinear Equation with Multiple Root
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>武</surname><given-names>松</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>奕为</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>肖</surname><given-names>旺</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>海军</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>中国矿业大学附属中学，江苏 徐州</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><aff id="aff1"><addr-line>中国矿业大学数学学院，江苏 徐州</addr-line></aff><pub-date pub-type="epub"><day>14</day><month>08</month><year>2018</year></pub-date><volume>07</volume><issue>08</issue><fpage>1020</fpage><lpage>1027</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  本文主要研究非线性方程重根问题的求解方法。基于区间分析理论和函数的二阶近似逼近，设计了一种求解非线性方程重根问题的新方法，并进行了相关的收敛性分析，给出了近似解在数值上的误差估计，最后通过数值算例与传统的区间迭代法进行了对比。新方法不仅能解决非线性方程的单根问题，而且能有效解决非线性方程的二重根问题，且计算量较小，收敛速度较快，数值结果有效可靠。
   This article mainly discusses methods for solving nonlinear equation. Based on theory of interval analysis and the second order approximate approach, a new method is proposed to solve nonlinear equation with multiple root, carrying related convergence analysis, giving numerical error estimation of approximate solution, contract with traditional method though several numerical examples at last. It can not only solve nonlinear equation with simple root but also solve nonlinear equation with double root efficiently. At the same time, the new method needs less amount of computation and has fast convergence; the numerical results are effective and reliable.
 
</p></abstract><kwd-group><kwd>非线性方程，重根，区间迭代法，区间Newton法，收敛性, Nonlinear Equation</kwd><kwd> Multiple Root</kwd><kwd> Interval Iterative Method</kwd><kwd> Interval Newton Method</kwd><kwd> Convergence</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>求非线性方程重根的区间算法<sup> </sup></title><p>武松<sup>1</sup>，王奕为<sup>2</sup>，肖旺<sup>1</sup>，王海军<sup>1</sup></p><p><sup>1</sup>中国矿业大学数学学院，江苏 徐州</p><p><sup>2</sup>中国矿业大学附属中学，江苏 徐州</p><p><img src="//html.hanspub.org/file/6-2620717x1_hanspub.png" /></p><p>收稿日期：2018年8月3日；录用日期：2018年8月20日；发布日期：2018年8月27日</p><disp-formula id="hanspub.26586-formula74"><graphic xlink:href="//html.hanspub.org/file/6-2620717x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文主要研究非线性方程重根问题的求解方法。基于区间分析理论和函数的二阶近似逼近，设计了一种求解非线性方程重根问题的新方法，并进行了相关的收敛性分析，给出了近似解在数值上的误差估计，最后通过数值算例与传统的区间迭代法进行了对比。新方法不仅能解决非线性方程的单根问题，而且能有效解决非线性方程的二重根问题，且计算量较小，收敛速度较快，数值结果有效可靠。</p><p>关键词 :非线性方程，重根，区间迭代法，区间Newton法，收敛性</p><disp-formula id="hanspub.26586-formula75"><graphic xlink:href="//html.hanspub.org/file/6-2620717x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/6-2620717x7_hanspub.png" /> <img src="//html.hanspub.org/file/6-2620717x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>非线性方程的求根问题是数值分析的一个基本问题。1966年，Moore [<xref ref-type="bibr" rid="hanspub.26586-ref1">1</xref>] 提出的二次收敛的古典区间牛顿法是一种重要的方法，但是该方法要求 0 ∉ F ′ ( X ( 0 ) ) ，对于求重根的情况，此时， 0 ∈ F ′ ( X ( k ) ) ,   k = 0 , 1 , 2 , ⋯ ，该方法不再适用。</p><p>对于 0 ∈ F ′ ( X ( 0 ) ) 的情况，Hansen [<xref ref-type="bibr" rid="hanspub.26586-ref2">2</xref>] 对古典的区间Newton法做了有效的改进，给出了在相应初始区间始终收敛的区间Newton法。改进的区间Newton法，仅需在初始迭代区间存在有限个实根，无论这些实根的重数是多少，均可以有效计算初始区间的所有根，而且可以推广到高维的情形。但是应用改进的区间Newton法来求解非线性方程的重根问题时，其收敛速度将变得很慢。</p><p>在实际应用中，遇到的问题可能是求方程的单根，也可能是求方程的重根。现有的许多高阶收敛的区间迭代法 [<xref ref-type="bibr" rid="hanspub.26586-ref6">6</xref>] - [<xref ref-type="bibr" rid="hanspub.26586-ref15">15</xref>] 在求解方程单根时表现出非常好的数值结果，但当求解的是非线性方程的重根时，其计算效率就会大大下降。</p><p>在本文中，我们引入以下符号说明： I ( R ) 表示R上所有区间的集合，关于区间 X = [ x _ , x &#175; ] = { x ∈ R | x _ ≤ x ≤ x &#175; } (如果 x &#175; = x _ = x ，则 X = [ x _ , x &#175; ] = [ x , x ] = x 退化为一个点)，称 m ( X ) = x &#175; + x _ 2 为区间X的中点， W ( X ) = x &#175; − x _ 为区间X的宽度， | X | = max { | x _ | , | x &#175; | } 为区间X的绝对值。与本文相关的其它区间分析的内容可参阅文献 [<xref ref-type="bibr" rid="hanspub.26586-ref1">1</xref>] - [<xref ref-type="bibr" rid="hanspub.26586-ref6">6</xref>] 等。</p><p>定义1：设 f : R → R ，若存在区间值映射 F : I ( R ) → I ( R ) ，对任意 x ∈ X ⊆ I ( R ) ，有 F ( [ x , x ] ) = f ( x ) 成立，则称区间值映射 F ( X ) 为函数 f ( x ) 的区间扩展。相对应， F ′ ( X ) 为导函数 f ′ ( x ) 的区间扩展， F ″ ( X ) 为二阶导数 f ″ ( x ) 的区间扩展。</p><p>定义2：设区间值映射 F : I ( R ) → I ( R ) 为函数f的区间扩展，而 X ,   Y ∈ I ( R ) 且满足 X ⊆ Y ，如果成立 F ( X ) ⊆ F ( Y ) ，则称区间值映射F具有包含单调性。</p></sec><sec id="s4"><title>2. Hansen改进的区间Newton法</title><p>古典区间Newton法是求解非线性方程的经典方法。设f是单变量实值的连续可微函数， F ′ ( X ) 是 f ′ ( x ) 在区间X上具有包含单调性的区间扩展，记 F ′ ( X ( 0 ) ) 为函数 f ′ ( x ) 在给定区间 X ( 0 ) 上的区间扩展，如果 0 ∉ F ′ ( X ( 0 ) ) ，则可建立如下迭代公式</p><p>X ( k + 1 ) = X ( k ) ∩ N ( X ( k ) ) ,     k = 0 , 1 , 2 , ⋯</p><p>这里</p><p>N ( X ( k ) ) = m ( X ( k ) ) − f ( m ( X ( k ) ) ) F ′ ( X (k))</p><p>这就是著名的古典区间Newton法 [<xref ref-type="bibr" rid="hanspub.26586-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.26586-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.26586-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.26586-ref4">4</xref>] 。</p><p>当 0 ∈ F ′ ( X ( k ) ) 时，Hansen通过引进无界区间的概念来定义区间除法。</p><p>设 F ′ ( X ( k ) ) = [ c k , d k ] ，因为 0 ∈ [ c k , d k ] ，定义</p><p>1 F ′ ( X ( k ) ) = { [ 1 d k , ∞ ]                   c k = 0 [ − ∞ , 1 c k ]                 d k = 0 [ − ∞ , 1 c k ] ∪ [ 1 d k , ∞ ]       其 它 情 况</p><p>若成立 f ( m ( X ( k ) ) ) = 0 ，则 m ( X ( k ) ) 就是f的零点，否则 H ( X ( k ) ) 就有两种可能的定义，</p><p>1) 对于 f ( m ( X ( k ) ) ) &gt; 0 的情形，有</p><p>H ( X ( k ) ) = { [ − ∞ , q k ]                 c k = 0 [ p k , ∞ ]                     d k = 0 [ − ∞ , q k ] ∪ [ p k , ∞ ]         其 它 情 况</p><p>2) 对于 f ( m ( X ( k ) ) ) &lt; 0 的情形，有其它情况</p><p>H ( X ( k ) ) = { [ q k , ∞ ]                       c k = 0 [ − ∞ , p k ]                       d k = 0 [ − ∞ , p k ] ∪ [ q k , ∞ ]             其 它 情 况</p><p>其中 p k = m ( X ( k ) ) − f ( m ( X ( k ) ) ) / c k q k = m ( X ( k ) ) − f ( m ( X ( k ) ) ) / d k</p><p>当 0 ∉ F ′ ( X ( k ) ) 时，有</p><p>H ( X ( k ) ) = m ( X ( k ) ) − f ( m ( X ( k ) ) ) F ′ ( X (k))</p><p>此时</p><p>X ( k + 1 ) = X ( k ) ∩ H ( X ( k ) ) ,   k = 0 , 1 , 2 , ⋯</p><p>即为Hansen [<xref ref-type="bibr" rid="hanspub.26586-ref2">2</xref>] 改进的区间Newton法。</p></sec><sec id="s5"><title>3. 新的区间迭代算法</title><p>对于非线性方程 f ( x ) = 0 ，设 x * 为该方程的单根或重根， x 0 是比较靠近 x * 的初始值。使用泰勒公式将 f ( x ) = 0 展开到二阶，有</p><p>f ( x 0 ) + ( x − x 0 ) f ′ ( x 0 ) + 1 2 ( x − x 0 ) 2 f ″ ( ξ ) = 0 (1)</p><p>这是一个关于x的二次方程且一定存在实根，解得</p><p>x = x 0 − f ′ ( x 0 ) − [ f ′ ( x 0 ) ] 2 − 2 f ( x 0 ) f ″ ( ξ ) f ″ ( ξ ) (2)</p><p>或</p><p>x = x 0 − f ′ ( x 0 ) + [ f ′ ( x 0 ) ] 2 − 2 f ( x 0 ) f ″ ( ξ ) f ″ ( ξ ) (3)</p><p>设 F ″ ( X ) 为 f ″ ( x ) 的具有包含单调性的区间扩展，新的区间迭代法如下</p><p>X ( k + 1 ) = X ( k ) ∩ S ( X ( k ) ) (4)</p><p>这里<sub> </sub></p><p>S ( X ( k ) ) = m ( X ( k ) ) − f ′ ( m ( X ( k ) ) ) − [ f ′ ( m ( X ( k ) ) ) ] 2 − 2 f ( m ( X ( k ) ) ) F ″ ( X ( k ) ) F ″ ( X ( k ) ) (5)</p><p>或</p><p>S ( X ( k ) ) = m ( X ( k ) ) − f ′ ( m ( X ( k ) ) ) + [ f ′ ( m ( X ( k ) ) ) ] 2 − 2 f ( m ( X ( k ) ) ) F ″ ( X ( k ) ) F ″ ( X ( k ) ) (6)</p></sec><sec id="s6"><title>4. 新方法的收敛性与误差分析</title><p>说明：以上区间算子S有两种，所用方法完全相同，所以以下定理只就第一种情况进行证明，第二种情况的证明步骤也完全相同，就不作详叙。</p><p>定理1：设f为给定区间 X ( 0 ) 上的一个二阶连续可微函数，且 0 ∉ F ″ ( X ( k ) ) , k = 0 , 1 , 2 , ⋯ 如果 X ( 0 ) 包含有f的一个零点 x * ，则所有的 X ( k ) , k = 0 , 1 , 2 , ⋯ 都包含 x * ，且有 X ( k +1 ) ⊆ X ( k ) , x * ∈ ∩ k = 0 ∞ X ( k ) 。</p><p>证明：由式(2)可知</p><p>x * = m ( X ( 0 ) ) − f ′ ( m ( X ( 0 ) ) ) − [ f ′ ( m ( X ( 0 ) ) ) ] 2 − 2 f ( m ( X ( 0 ) ) ) f ″ ( ξ ) f ″ ( ξ ) ∈ m ( X ( 0 ) ) − f ′ ( m ( X ( 0 ) ) ) − [ f ′ ( m ( X ( 0 ) ) ) ] 2 − 2 f ( m ( X ( 0 ) ) ) F ″ ( X ( 0 ) ) F ″ ( X (0) )</p><p>故 x * ∈ X ( 0 ) ∩ S ( X ( 0 ) ) = X ( 1 ) 。</p><p>同理，如果 x * ∈ X ( k ) ，则 x * ∈ X ( k + 1 ) ，由数学归纳法可得</p><p>x * ∈ X ( k ) ,   k = 0 , 1 , ⋯</p><p>所以 x * ∈ ∩ k = 0 ∞ X ( k ) ，由式(4)可得 X ( k + 1 ) ⊆ X ( k ) 。</p><p>该区间算子的好处在于：1) 能检测到一个区间是否有根存在，这样可以避免无用的迭代运算；2) 能保证在一个区间有且只有一个实根。</p><p>定理2：设f为给定区间 X ( 0 ) 上的一个二阶连续可微函数，且 0 ∉ F ″ ( X ) ，则</p><p>1) 如果 S ( X ) ⊆ X ，则X中有且仅有方程 f ( x ) = 0 的一实根。</p><p>2) 如果 X ∩ S ( X ) = ϕ ，则X中不含方程 f ( x ) = 0 的任何实根。</p><p>证明：1)首先证明方程 f ( x ) = 0 根的存在性，</p><p>对任意实数 y ∈ X ，构造算子 S ˜ ( y ) = y − f ′ ( y ) − [ f ′ ( y ) ] 2 − 2 f ( y ) l ( y , m ( X ) ) l ( y , m (X))</p><p>其中 l ( y , m ( X ) ) = { f ′ ( y ) − f ′ ( m ( X ) ) y − m ( X ) ,     y ≠ m ( X ) f ″ ( y ) ,                     y = m (X)</p><p>由于 f ′ ( x ) ,   f ″ ( x ) 在X上的连续，以及 0 ∉ F ″ ( X ) ，所以 S ˜ ( y ) 为定义在X的连续算子，当 y = m ( X ) 时，由 F ″ ( X ) 的包含单调性可知</p><p>S ˜ ( y ) = y − f ′ ( m ( X ) ) − [ f ′ ( m ( X ) ) ] 2 − 2 f ( m ( X ) ) f ″ ( m ( X ) ) f ″ ( m ( X ) ) ∈ S (X)</p><p>当 y ≠ m ( X ) 时，化简可得 S ˜ ( y ) ∈ S ( X ) ，又因为 S ( X ) ⊆ X ，则区间算子 S ˜ 是将X变换到其自身的连续算子，且区间X为有界闭凸集，根据Browner不动点定理，可知 S ˜ 存在不动点 x * ∈ X ，使得 S ˜ ( x ∗ ) = x ∗ ，从而有</p><p>f ′ ( x * ) − [ f ′ ( x * ) ] 2 − 2 f ( x * ) l ( y , m ( X ) ) l ( y , m ( X ) ) = 0</p><p>因为 0 ∉ F ″ ( X ) ，所以 l ( y , m ( X ) ) ≠ 0 ，故有 f ( x * ) = 0 。</p><p>下面证方程 f ( x ) = 0 根的唯一性，如果 m ( X ( k ) ) 是函数f的零点，成立</p><p>m ( X ( k ) ) = S ( X ( k ) ) = S ( m ( X ( k ) ) )</p><p>则有 m ( X ( k ) ) = X ( k ) ∩ S ( m ( X ( k ) ) ) ，这表明程序终止在有限步。</p><p>如果 m ( X ( k ) ) 不是f的零点，此时，由 S ( X ( k ) ) 的定义可知总有 S ( X ( k ) ) &gt; m ( X ( k ) ) 或 S ( X ( k ) ) &lt; m ( X ( k ) ) 成立，这表明 S ( X ( k ) ) 不包含 X ( k ) 的中点，因此必有 W ( X ( k + 1 ) ) &lt; 1 2 W ( X ( k ) ) ，从而<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x122_hanspub.png" xlink:type="simple"/></inline-formula>，故由根的存在性可知<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x123_hanspub.png" xlink:type="simple"/></inline-formula>点收敛于<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x124_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>综上可得X中有且仅有<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x125_hanspub.png" xlink:type="simple"/></inline-formula>的一个零点<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x126_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>2) 若X包含<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x127_hanspub.png" xlink:type="simple"/></inline-formula>的零点<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x128_hanspub.png" xlink:type="simple"/></inline-formula>，由定理1的证明可知<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x129_hanspub.png" xlink:type="simple"/></inline-formula>，故<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x130_hanspub.png" xlink:type="simple"/></inline-formula>与条件矛盾，所以X中不含<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x131_hanspub.png" xlink:type="simple"/></inline-formula>的零点。</p><p>定理3：设f为给定区间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x132_hanspub.png" xlink:type="simple"/></inline-formula>上的一个二阶连续可微函数，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x133_hanspub.png" xlink:type="simple"/></inline-formula>且方程<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x134_hanspub.png" xlink:type="simple"/></inline-formula>存在唯一的重根<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x135_hanspub.png" xlink:type="simple"/></inline-formula> (至少二重)。如果<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x136_hanspub.png" xlink:type="simple"/></inline-formula>且<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x137_hanspub.png" xlink:type="simple"/></inline-formula>为Lipschitz区间函数，则由迭代公式(4)所得区间列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x138_hanspub.png" xlink:type="simple"/></inline-formula>二次收敛，即存在常数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x139_hanspub.png" xlink:type="simple"/></inline-formula>，使得</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x140_hanspub.png" xlink:type="simple"/></inline-formula>.</p><p>证明：因为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x141_hanspub.png" xlink:type="simple"/></inline-formula>为Lipschitz区间函数，则存在<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x142_hanspub.png" xlink:type="simple"/></inline-formula>，使得</p><disp-formula id="hanspub.26586-formula76"><graphic xlink:href="//html.hanspub.org/file/6-2620717x143_hanspub.png"  xlink:type="simple"/></disp-formula><p>且</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x144_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p>所以</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x145_hanspub.png" xlink:type="simple"/></inline-formula>.</p><p>又因为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x146_hanspub.png" xlink:type="simple"/></inline-formula>，则存在<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x147_hanspub.png" xlink:type="simple"/></inline-formula>，使得<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x148_hanspub.png" xlink:type="simple"/></inline-formula>，且 <inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x149_hanspub.png" xlink:type="simple"/></inline-formula></p><p>故</p><disp-formula id="hanspub.26586-formula77"><graphic xlink:href="//html.hanspub.org/file/6-2620717x150_hanspub.png"  xlink:type="simple"/></disp-formula><p>这里，存在常数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x151_hanspub.png" xlink:type="simple"/></inline-formula>使得</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x152_hanspub.png" xlink:type="simple"/></inline-formula>.</p><p>综上可得<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x153_hanspub.png" xlink:type="simple"/></inline-formula>，令<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x154_hanspub.png" xlink:type="simple"/></inline-formula>，则有</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Numerical comparison of both HM method and SM metho</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算例</th><th align="center" valign="middle" >方法</th><th align="center" valign="middle" >ε</th><th align="center" valign="middle" >X</th><th align="center" valign="middle" >N</th><th align="center" valign="middle" >Time</th></tr></thead><tr><td align="center" valign="middle"  rowspan="2"  >例1</td><td align="center" valign="middle" >HM</td><td align="center" valign="middle" >10<sup>-5</sup></td><td align="center" valign="middle" >[4.99999649960659, 5.00000367154179]</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >0.60857</td></tr><tr><td align="center" valign="middle" >SM</td><td align="center" valign="middle" >10<sup>-6</sup></td><td align="center" valign="middle" >[4.99999988606068, 5.00000000011419]</td><td align="center" valign="middle" >7</td><td align="center" valign="middle" >0.05973</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >例2</td><td align="center" valign="middle" >HM</td><td align="center" valign="middle" >10<sup>-7</sup></td><td align="center" valign="middle" >[0.99999996117413, 1.00000005937561]</td><td align="center" valign="middle" >22</td><td align="center" valign="middle" >0.71521</td></tr><tr><td align="center" valign="middle" >SM</td><td align="center" valign="middle" >10<sup>-7</sup></td><td align="center" valign="middle" >[0.99999998873967, 1.00000000002325]</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >0.05563</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >例3</td><td align="center" valign="middle" >HM</td><td align="center" valign="middle" >10<sup>-5</sup></td><td align="center" valign="middle" >[-0.00000085777869, 0.00000894836582]</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >0.92766</td></tr><tr><td align="center" valign="middle" >SM</td><td align="center" valign="middle" >10<sup>-6</sup></td><td align="center" valign="middle" >[-0.00000000137489, 0.00000085072377]</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >0.04176</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >例4</td><td align="center" valign="middle" >HM</td><td align="center" valign="middle" >10<sup>-7</sup></td><td align="center" valign="middle" >[0.00000003271013, 0.00000004211397]</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >0.80112</td></tr><tr><td align="center" valign="middle" >SM</td><td align="center" valign="middle" >10<sup>-7</sup></td><td align="center" valign="middle" >[0.00000005386116, 0.00000000025008]</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >0.03085</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >例5</td><td align="center" valign="middle" >HM</td><td align="center" valign="middle" >10<sup>-7</sup></td><td align="center" valign="middle" >[20.08553699994834, 20.08553710310446]</td><td align="center" valign="middle" >23</td><td align="center" valign="middle" >1.01549</td></tr><tr><td align="center" valign="middle" >SM</td><td align="center" valign="middle" >10<sup>-10</sup></td><td align="center" valign="middle" >[20.08553692305315, 20.08553692318773]</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >0.04751</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >例6</td><td align="center" valign="middle" >HM</td><td align="center" valign="middle" >10<sup>-5</sup></td><td align="center" valign="middle" >[0.99999052853228, 1.00000877530884]</td><td align="center" valign="middle" >31</td><td align="center" valign="middle" >1.04777</td></tr><tr><td align="center" valign="middle" >SM</td><td align="center" valign="middle" >10<sup>-6</sup></td><td align="center" valign="middle" >[0.99999283194989, 1.00001451218668]</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >0.07953</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >例7</td><td align="center" valign="middle" >HM</td><td align="center" valign="middle" >10<sup>-5</sup></td><td align="center" valign="middle" >[8.30942912918713, 0.30944262386020]</td><td align="center" valign="middle" >44</td><td align="center" valign="middle" >0.18168</td></tr><tr><td align="center" valign="middle" >SM</td><td align="center" valign="middle" >10<sup>-5</sup></td><td align="center" valign="middle" >[8.30942265777352, 8.30944359614464]</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >0.14867</td></tr></tbody></table></table-wrap><p>表1. HM和SM两种方法的数值对比</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x155_hanspub.png" xlink:type="simple"/></inline-formula>.</p><p>同理有<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x156_hanspub.png" xlink:type="simple"/></inline-formula>。</p></sec><sec id="s7"><title>5. 数值算例及结果分析</title><p>为了验证本文方法的正确性，在联想G400笔记本电脑(处理器：英特尔第三代酷睿i5-3230M @ 2.60 GHz双核)上借助MATLAB R2012b与工具箱INTLAB_V5.5进行编程求解。下面将给出一些数值算例，分别应用本文的方法与Hansen改进的区间Newton法来求解，并对结果进行了对比分析，其中，“HM”表示Hansen改进的区间Newton法，“SM”表示本文的方法，ε表示精度，N表示迭代次数time表示迭代所用时间(单位为秒)，X表示计算结果(表1)。</p><p>具体算例和数值计算结果如下：</p><p>例1：求方程<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x157_hanspub.png" xlink:type="simple"/></inline-formula>在区间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x158_hanspub.png" xlink:type="simple"/></inline-formula>上的根，方程的准确重根为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x159_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>例2：求方程<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x160_hanspub.png" xlink:type="simple"/></inline-formula>在区间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x161_hanspub.png" xlink:type="simple"/></inline-formula>上的根，方程的准确重根为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x162_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>例3：求方程<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x163_hanspub.png" xlink:type="simple"/></inline-formula>在区间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x164_hanspub.png" xlink:type="simple"/></inline-formula>上的根，方程的准确重根为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x165_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>例4：求方程<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x166_hanspub.png" xlink:type="simple"/></inline-formula>在区间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x167_hanspub.png" xlink:type="simple"/></inline-formula>上的根，方程的准确重根为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x168_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>例5：求方程<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x169_hanspub.png" xlink:type="simple"/></inline-formula>在区间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x170_hanspub.png" xlink:type="simple"/></inline-formula>上的根，方程的准确重根为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x171_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>例6：求方程<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x172_hanspub.png" xlink:type="simple"/></inline-formula>在区间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x173_hanspub.png" xlink:type="simple"/></inline-formula>上的根，方程的准确重根为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x174_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>例7：求方程<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x175_hanspub.png" xlink:type="simple"/></inline-formula>在区间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x176_hanspub.png" xlink:type="simple"/></inline-formula>上的根，方程的准确重根为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/6-2620717x177_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>上述数值算例的结果以及更多的数值计算结果都验证了，在求解非线性方程的重根问题中，本文所建立的区间迭代法与Hansen改进的区间Newton法相比，在迭代次数和时间花费上具有更好的优势，这充分证明了本文方法是有效可靠的。</p></sec><sec id="s8"><title>基金项目</title><p>本文工作由江苏省自然科学基金(No. BK20151139)支持。</p></sec><sec id="s9"><title>文章引用</title><p>武松,王奕为,肖旺,王海军. 求非线性方程重根的区间算法Interval Algorithm of Nonlinear Equation with Multiple Root[J]. 应用数学进展, 2018, 07(08): 1020-1027. https://doi.org/10.12677/AAM.2018.78119</p></sec><sec id="s10"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.26586-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Moore, R. (1966) Interval Analysis. Prentice-Hall Englewood Cliffs, 23-65.</mixed-citation></ref><ref id="hanspub.26586-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Hansen, E. (1978) Interval Forms of Newtons Me-thod. Computing, 20, 153-163. &lt;br&gt;https://doi.org/10.1007/BF02252344</mixed-citation></ref><ref id="hanspub.26586-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">王德人, 张连生, 邓乃扬. 非线性方程的区间算法[M]. 上海: 科学技术出版社, 1987: 6-50.</mixed-citation></ref><ref id="hanspub.26586-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Moore, R., Kearfott, R.B. and Cloud, M.J. (1983) Introduction to Interval Analysis. Siam, 105-129.</mixed-citation></ref><ref id="hanspub.26586-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">沈祖和. 区间分析方法及其应用[J]. 应用数学与计算数学, 1983, 2(1): 1-29.</mixed-citation></ref><ref id="hanspub.26586-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Bakhtiari, P., Lotfi, T. and Mahdiani, K., et al. (2013) Interval Ostrowski-Type Methods with Guaranteed Convergence. Annali dell’Universita di Ferrara, 59, 221-234. &lt;br&gt;https://doi.org/10.1007/s11565-012-0174-4</mixed-citation></ref><ref id="hanspub.26586-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">胡建华, 陈兴同, 曹德欣. 数值计算方法[M]. 徐州: 中国矿业大学出版社, 2008: 153-170.</mixed-citation></ref><ref id="hanspub.26586-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Jin, D. and Lin, S. (2012) Advances in Electronic Commerce, Web Application and Communication. Springer, 83-87.</mixed-citation></ref><ref id="hanspub.26586-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Costabile, F., Gualtieri, M.I. and Luceri, R. (2001) A New Iterative Method for the Computation of the Solutions of Nonlinear Equations. Numerical Algorithms, 28, 87-100. &lt;br&gt;https://doi.org/10.1023/A:1014078328575</mixed-citation></ref><ref id="hanspub.26586-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">高利新, 魏木生. 同时求解f(x)零点的一种迭代解法[J]. 高等学校计算数学学报, 2002, 24(1): 57-64.</mixed-citation></ref><ref id="hanspub.26586-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Frontini, M. and Sormani, E. (2003) Some Variants of Newton’s Method with Third-Order Convergence. Applied Mathematics and Computation, 140, 419-426. &lt;br&gt;https://doi.org/10.1016/S0096-3003(02)00238-2</mixed-citation></ref><ref id="hanspub.26586-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Amat, S., Busquier, S. and Plaza, S. (2004) Review of Some Iterative Root-Finding Methods from a Dynamical Point of View. Scientia, 10, 3-35.</mixed-citation></ref><ref id="hanspub.26586-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">王海军, 曹德欣, 宋协武. 解非线性方程的一类可微优化方法[J]. 工程数学学报, 2005, 22(3): 543-546.</mixed-citation></ref><ref id="hanspub.26586-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Babajee, D.K.R. and Dauhoo, M.Z. (2006) An Analysis of the Prop-erties of the Variants of Newton’s Method with Third Order Convergence. Applied Mathematics and Computation, 183, 659-684.  
&lt;br&gt;https://doi.org/10.1016/j.amc.2006.05.116</mixed-citation></ref><ref id="hanspub.26586-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Wang, H.J. and Cao, D.X. (2009) Interval Expansion Method for Nonlinear Equation in Several Variables. Applied Mathematics and Computation, 212, 153-161. &lt;br&gt;https://doi.org/10.1016/j.amc.2009.02.008</mixed-citation></ref></ref-list></back></article>