<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2016.65036</article-id><article-id pub-id-type="publisher-id">CSA-17711</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20160500000_70489538.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  有向三角形树的匹配数
  On the Matching Number of Directed Triangle Trees
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>梦英</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>赵</surname><given-names>海兴</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>青海师范大学计算机学院，青海 西宁</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>1223788647@qq.com(李梦)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>25</day><month>05</month><year>2016</year></pub-date><volume>06</volume><issue>05</issue><fpage>292</fpage><lpage>302</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  有向图G的一个匹配是由其一组没有公共起点也没有公共终点的有向边构成的集合。图G的k匹配是指含k (k = 1, 2, …, n)条有向边的匹配；图G的k-匹配数是指含k (k = 1, 2, …, n)条有向边的匹配的选择方法数；图G的匹配数指所有k-匹配数的和。刘和Barabasi等人提出：有向网络的可控节点数等于有向网络的顶点数减去最大匹配包含的边数。说明有向网络的可控性与有向网络的匹配数有着密切的联系。因此，研究有向网络的所有匹配数目具有一定的应用意义。这篇文章主要研究一类有向三角形树的所有匹配数的计数问题和极值问题。给出了一类含n个三角形的有向三角形树匹配数的计算方法，以及有向三角形树匹配数的上下界和相应的结构。
   A matching of a directed graph G is a set of some directed edges without common starting-node and end-node. K-matching of a digraph G is the matching with the k (k = 1, 2,…, n) edges; k-matching number of a graph G is the number of distinct matchings containing k (k = 1, 2,…, n) edges. The matching of a graph G refers to the number of all k-matchings. Liu and Barabasi put forward: the number of controllable nodes in directed networks is equal to the number of nodes of directed networks minus the number of edges of the maximum matching. It illustrates that the matching number and controllability of directed networks have a close connection. Thus, the research of the number of all matchings of directed networks is of applied significance. This article mainly studies the counting problems and the extremal problems on the number of matchings in a class of directed triangle trees. We investigate the calculation method and the expression of the matching number in a class of directed triangle trees with n triangles and determine the bounds for the matching number in directed triangle trees with n triangles and the correspond graphs.
 
</p></abstract><kwd-group><kwd>复杂网络，有向树，有向三角形树，匹配，Hosoya指标, Complex Networks</kwd><kwd> Directed Tree</kwd><kwd> Directed Triangle Trees</kwd><kwd> Matching</kwd><kwd> Hosoya Index</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>有向三角形树的匹配数<sup> </sup></title><p>李梦英，赵海兴</p><p>青海师范大学计算机学院，青海 西宁</p><disp-formula id="hanspub.17711-formula426"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2016年5月4日；录用日期：2016年5月27日；发布日期：2016年5月30日</p><disp-formula id="hanspub.17711-formula427"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>有向图G的一个匹配是由其一组没有公共起点也没有公共终点的有向边构成的集合。图G的k匹配是指含k (k = 1, 2, …, n)条有向边的匹配；图G的k-匹配数是指含k (k = 1, 2, …, n)条有向边的匹配的选择方法数；图G的匹配数指所有k-匹配数的和。刘和Barabasi等人提出：有向网络的可控节点数等于有向网络的顶点数减去最大匹配包含的边数。说明有向网络的可控性与有向网络的匹配数有着密切的联系。因此，研究有向网络的所有匹配数目具有一定的应用意义。这篇文章主要研究一类有向三角形树的所有匹配数的计数问题和极值问题。给出了一类含n个三角形的有向三角形树匹配数的计算方法，以及有向三角形树匹配数的上下界和相应的结构。</p><p>关键词 :复杂网络，有向树，有向三角形树，匹配，Hosoya指标</p><disp-formula id="hanspub.17711-formula428"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>随着以互联网 [<xref ref-type="bibr" rid="hanspub.17711-ref1">1</xref>] 为代表的网络信息技术的飞速发展，人类社会已经逐步进入了复杂网络时代。钱学森给出了复杂网络 [<xref ref-type="bibr" rid="hanspub.17711-ref2">2</xref>] 的一个较为严格的定义：具有自相似、无标度、自组织、小世界、吸引子中部分或全部性质的网络为复杂网络。如何利用复杂网络让人们的生活更加有效，成为了人们关注的焦点。基于此，一些学者开始研究复杂网络的可控性。如果我们想要控制一个系统，我们首先要确定一个顶点集，通过在这些顶点集上输入不同的信号完全控制整个网络，我们称这些节点为驱动节点。我们特别有兴趣于：确定最小的驱动节点数 [<xref ref-type="bibr" rid="hanspub.17711-ref3">3</xref>] ，记为ND，它可以有效地完全控制系统的动力学过程。2011年刘和Barabasi 等人 [<xref ref-type="bibr" rid="hanspub.17711-ref3">3</xref>] 给出有向网络匹配的定义及最小输入定理：指出有向网络的可控节点数等于有向网络的顶点数减去最大匹配包含的边数，由此开启了研究复杂网络可控性的新篇章。</p><p>1971年日本化学家Haruo Hosoya [<xref ref-type="bibr" rid="hanspub.17711-ref4">4</xref>] - [<xref ref-type="bibr" rid="hanspub.17711-ref6">6</xref>] 介绍了基于结构描述的分子图，他命名了拓扑指标并记为Z。他用下面的方式定义了Z或Z(G)：从图G中选择k条相互独立的边的方法数记为m(G, k)，对所有图m(G, 0) = 1，并且m(G, 1)等于图G的边数，则：</p><disp-formula id="hanspub.17711-formula429"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x9_hanspub.png"  xlink:type="simple"/></disp-formula><p>称Z或Z(G)为Hosoya指标或Hosoya拓扑指标。</p><p>本文中我们首先给出有向树、有向三角形树及有向三角形树匹配的概念，研究有向三角形树的匹配数及其相关性质。其次根据本文的主要内容给出计算一类有向三角形树匹配数的算法。</p></sec><sec id="s4"><title>2. 基本知识</title><p>首先给出一些无向图、有向图及有向树的基本定义以及基本的符号表示。</p><sec id="s4_1"><title>2.1. 无向图的基本概念</title><p>一个图G = (V, E)是一个三元组 [<xref ref-type="bibr" rid="hanspub.17711-ref7">7</xref>] ，这个三元组包含一个顶点集V(G)，一个边集E(G)和一个关系，该关系使得每一条边和两个顶点(不一定是不同的点)相关联，并将这两个顶点称为这条边的端点。设边e的两个端点分别为u和v，则边e记为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x10_hanspub.png" xlink:type="simple"/></inline-formula>，称节点u和v在图G中邻接，记为u~v或v~u，并称节点u和v与边e关联；否则称为不邻接，记为u!~v。图G中，与节点v相关联的边的数目称为v的度，记d<sub>G</sub>(v)或d(v)。度为0的点称为孤立点，度为1的点称为悬挂点。</p><p>图G = (V, E)的一个匹配M [<xref ref-type="bibr" rid="hanspub.17711-ref7">7</xref>] 是由其一组没有公共端点的不是圈的边构成的集合；M是由若干条边构成的集合，故其大小就是边的条数。图G = (V, E)的一个极大匹配是不能再通过添加边来使其变大的匹配。一个最大匹配是图G = (V, E)的所有匹配中边数达到最大值的匹配，即含边数最多的匹配。</p><p>图G = (V, E)的一条路径P<sub>n</sub> [<xref ref-type="bibr" rid="hanspub.17711-ref7">7</xref>] 是一个简单图，其顶点排序使得两个顶点是邻接的当且仅当它们在顶点的序列中是前后相继的。</p></sec><sec id="s4_2"><title>2.2. 有向图的基本概念</title><p>一个有向图 [<xref ref-type="bibr" rid="hanspub.17711-ref7">7</xref>] G是一个三元组，其中包含一个顶点集V(G)，一个边集E(G)和一个为每有向条边分配一个有序顶点对的函数f，有序对的第一个顶点是有向边的尾部，称为有向边的起点；第二个顶点是有向边头部，称为有向边的终点；它们统称为有向边的端点。设有向边e的尾部为u，头部为v，则有向边e记为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x11_hanspub.png" xlink:type="simple"/></inline-formula>，称节点u和v在图G中邻接，记为u~v，我们说一条有向边就是指一条从其尾部到头部的边。若令v是有向图G中的顶点，出度是以v为尾部的边的条数，记为d<sup>+</sup>(v)；入度是以v为头部的边的条数，记为d<sup>-</sup>(v)。</p><p>有向图G的一个匹配M [<xref ref-type="bibr" rid="hanspub.17711-ref7">7</xref>] 是由其一组没有公共起点也没有公共终点的有向边构成的集合。匹配M中包含的有向边的终点称为匹配节点，否则为未匹配节点。M [<xref ref-type="bibr" rid="hanspub.17711-ref7">7</xref>] 是由若干条有向边构成的集合。故其大小就是有向边的条数。有向图G的一个极大匹配是不能再通过添加有向边来使其变大的匹配。一个最大匹配是有向图G的所有匹配中有向边数达到最大值的匹配，即含有向边数最多的匹配。</p><p>有向图G的一条途径 [<xref ref-type="bibr" rid="hanspub.17711-ref8">8</xref>] 是由顶点v<sub>i</sub>与有向边e<sub>i</sub>交错排列的序列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x12_hanspub.png" xlink:type="simple"/></inline-formula>，简记为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x13_hanspub.png" xlink:type="simple"/></inline-formula>，使得对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x14_hanspub.png" xlink:type="simple"/></inline-formula>，W中的有向边e<sub>i</sub>的尾是顶点v<sub>i</sub>、头是顶点v<sub>i</sub><sub>+1</sub>。我们也称W为一条从v<sub>1</sub>到v<sub>k</sub>的途径。若一条途径W中任意两条有向边都不相同，则称W为迹。若一条迹中的顶点是互不相同的，则称W为路径P<sub>n</sub>。</p><p>刘和Barabasi等人 [<xref ref-type="bibr" rid="hanspub.17711-ref3">3</xref>] 给出有向网络的匹配的定义：有向网络的边的子集E<sup>*</sup>称为是一个匹配集，如果E<sup>*</sup>中任意两条边都没有公共的始点，也没有公共的终点。如果一个节点是E<sup>*</sup>中某一条边的终点，该节点为匹配节点，否则为未匹配节点。</p><p>如果有向图 [<xref ref-type="bibr" rid="hanspub.17711-ref9">9</xref>] G = (V, E)被称为有向树T = (V, E)，则满足以下三个条件</p><p>1) 有且仅有一个节点的入度为0；</p><p>2) 除树根外的节点的入度为1；</p><p>3) 从树根到任一节点有一条连通的有向路。</p><p>有向图 [<xref ref-type="bibr" rid="hanspub.17711-ref9">9</xref>] G = (V,E)，在不考虑边的方向时是一棵无向树，则该有向图称为有向树。如图1。</p><p>其中顶点集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x15_hanspub.png" xlink:type="simple"/></inline-formula>，边集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x16_hanspub.png" xlink:type="simple"/></inline-formula>；其中入度为0的节点称为树根，出度为0的节点称为树叶；称节点v的前驱元素为v的父节点，称v的后继元素为v的子节点。事实上，在一个无环有向图G = (V,E)中也可以定义父节点和子节点，若有向边<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x17_hanspub.png" xlink:type="simple"/></inline-formula>，则称节点u是节点v的父节点，节点u是节点v的子节点。若有向边<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x18_hanspub.png" xlink:type="simple"/></inline-formula>，则称u是v的父节点，v是u的子节点。</p><p>有向树中，入度为0的节点称为树根 [<xref ref-type="bibr" rid="hanspub.17711-ref9">9</xref>] ，出度为0的节点称为树叶，出度不为0的节点称为分支节点，将不是根的分支节点称为内点。称从根节点到某个节点的路径长度为该节点的层或级。于是根节点是第0层节点，其子节点是第1层节点，以此类推。称与父节点在同一层的节点为堂兄弟。称节点的最大层次为树的高度或深度。</p><p>图1. 有向树G = (V; E)</p><p>有向树T = (V, E) [<xref ref-type="bibr" rid="hanspub.17711-ref9">9</xref>] 中，v∈V，由节点v及其所有后代导出的子图称为有向树T = (V, E)的子根树或子树。</p><p>有向树T = (V, E) [<xref ref-type="bibr" rid="hanspub.17711-ref9">9</xref>] 中，若max<sub>v</sub><sub>∈</sub><sub>V</sub> d<sup>+</sup>(v) = m则称T = (V, E)是有向m叉树。在m叉树T=(V, E)中，若对任意节点v都有d<sup>+</sup>(v) = m或0，则称T=(V, E)是有向完全m叉树，所有树叶节点所在的层都相同的有向完全m叉树称为有向正则m叉树或有向满m叉树。</p></sec></sec><sec id="s5"><title>3. 一类有向三角形树的匹配数</title><p>刘和Barabasi等人 [<xref ref-type="bibr" rid="hanspub.17711-ref3">3</xref>] 给出了有向网络匹配的定义以及有向网络可控节点数等于顶点数减去最大匹配包含的边数的结论。自然的问题是研究有向网络的所有匹配数目。本文中主要研究有向三角形树的所有匹配数的计数问题。首先给出与有向树F和有向三角形树D相关的一些基本定义，给出一类有向三角形树匹配数的计算方法、表达式，确定有最大和最小匹配数的有向三角形树的结构，其次根据本文的主要内容给出计算一类有向三角形树匹配数的算法。</p><sec id="s5_1"><title>3.1. 有向树的基本定义</title><p>有向树T被称为有向树F = (V, E)，则有向树T中的有向边的方向均是由上一层中的父节点指向下一层中的子节点的。如图2。</p><p>其中顶点集：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x20_hanspub.png" xlink:type="simple"/></inline-formula>，边集：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x21_hanspub.png" xlink:type="simple"/></inline-formula>；其中入度为0的节点称为树根，出度为0的节点称为树叶；若有向边(u, v)∈E，则称u是v的父节点，v是u的子节点。</p><p>有向星图F*是恰好只有一个节点出度为n-1，其余节点均为叶子节点的n个节点的有向树F。有向路Fp是节点出度为1或0的有向树F。</p></sec><sec id="s5_2"><title>3.2. 有向三角形树的基本定义</title><p>有向三角形树D = (V, E)的过程为：t = 1时，以v<sub>0</sub>为根节点，以v<sub>1</sub>，v<sub>2</sub>为左右子节点，生成两条有向边v<sub>0</sub>v<sub>1</sub>，v<sub>0</sub>v<sub>2</sub>，且节点v<sub>1</sub>，v<sub>2</sub>之间生成一条有向边v<sub>1</sub>v<sub>2</sub>(第三边)，这时节点{v<sub>0</sub>，v<sub>1</sub>，v<sub>2</sub>}构成一个有向三角形，记为D<sub>1</sub>；t = 2时，D<sub>1</sub>恰好包含3个节点{v<sub>0</sub>，v<sub>1</sub>，v<sub>2</sub>}∈V，在D<sub>1</sub>的任意一个节点上粘贴D<sub>1</sub>的节点v<sub>0</sub>，生成有向三角形树D<sub>2</sub>；以此类推，在有向三角形树D<sub>i</sub>的任意一个节点上，粘贴D<sub>1</sub>的节点v<sub>0</sub>，生成有向三角形树D<sub>i</sub><sub>+1</sub>；以时间步生成有向三角形树D<sub>n</sub>。图3是其中一种生成结果。</p><p>其中顶点集：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x22_hanspub.png" xlink:type="simple"/></inline-formula>，边集：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x23_hanspub.png" xlink:type="simple"/></inline-formula>；其中入度为0的节点称为树根，出度为0的节点称为树叶；若有向边(u, v)∈E，则称u是v的父节点，v是u的子节点。</p><p>有向三角形星图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x24_hanspub.png" xlink:type="simple"/></inline-formula>是在每一时间步都将D<sub>1</sub>的节点v<sub>0</sub>粘贴到节点v<sub>0</sub>而生成的。有向三角形路D<sub>pn</sub>(D<sub>pn</sub>)</p><p>图2. 有向树F</p><p>图3. 有向三角形树D<sub>3</sub></p><p>在每一时间步都将D<sub>1</sub>的节点v<sub>0</sub>粘贴到有向三角形树的最左(右)端的节点而生成的。</p><p>有向三角形树D的匹配数：n个三角形的有向三角形树D的边的子集E<sup>*</sup>称为是一个匹配集，如果E<sup>*</sup>中的任意两条有向边都没有公共的始点，也没有公共的终点。有向三角形树D的一个匹配是由若干条有向边构成的集合，故其大小就是有向边的条数。有向三角形树D的一个极大匹配是不能再通过添加有向边来使其变大的匹配。有向三角形树D的一个最大匹配是有向三角形树D的所有匹配中有向边数达到最大值的匹配，即含有向边数最多的匹配。有向三角形树D的k匹配是指含k条有向边的匹配；有向三角形树D的k匹配数指含<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x27_hanspub.png" xlink:type="simple"/></inline-formula>条有向边的匹配的选择方法数；有向三角形树D的匹配数指所有k匹配数的和，记为Z(D)；这里规定有向三角形树D的0匹配为1，即，空图(记为O)或只包含孤立点的有向树的匹配数为1。显然图3中有向三角形树D<sub>3</sub>的1匹配数为9：v<sub>0</sub>v<sub>1</sub>，v<sub>0</sub>v<sub>2</sub>，v<sub>1</sub>v<sub>2</sub>，v<sub>1</sub>v<sub>3</sub>，v<sub>1</sub>v<sub>4</sub>，v<sub>3</sub>v<sub>4</sub> v<sub>2</sub>v<sub>5</sub>，v<sub>2</sub>v<sub>6</sub>，v<sub>5</sub>v<sub>6</sub>；2-匹配数为28：{v<sub>0</sub>v<sub>1</sub>, v<sub>1</sub>v<sub>3</sub>}，{v<sub>0</sub>v<sub>1</sub>, v<sub>1</sub>v<sub>4</sub>}，{v<sub>0</sub>v<sub>1</sub>, v<sub>3</sub>v<sub>4</sub>}，{v<sub>0</sub>v<sub>1</sub>, v<sub>1</sub>v<sub>2</sub>}，{v<sub>0</sub>v<sub>1</sub>, v<sub>2</sub>v<sub>5</sub>}，{v<sub>0</sub>v<sub>1</sub>, v<sub>2</sub>v<sub>6</sub>}，{v<sub>0</sub>v<sub>1</sub>, v<sub>5</sub>v<sub>6</sub>}，{v<sub>0</sub>v<sub>2</sub>, v<sub>1</sub>v<sub>3</sub>}，{v<sub>0</sub>v<sub>2</sub>, v<sub>1</sub>v<sub>4</sub>}，{v<sub>0</sub>v<sub>2</sub>, v<sub>3</sub>v<sub>4</sub>}，{v<sub>0</sub>v<sub>2</sub>, v<sub>2</sub>v<sub>5</sub>}，{v<sub>0</sub>v<sub>2</sub>, v<sub>2</sub>v<sub>6</sub>}，{v<sub>0</sub>v<sub>2</sub>, v<sub>5</sub>v<sub>6</sub>}，{v<sub>1</sub>v<sub>2</sub>, v<sub>3</sub>v<sub>4</sub>}，{v<sub>1</sub>v<sub>2</sub>, v<sub>2</sub>v<sub>5</sub>}，{v<sub>1</sub>v<sub>2</sub>, v<sub>2</sub>v<sub>6</sub>}，{v<sub>1</sub>v<sub>2</sub>, v<sub>5</sub>v<sub>6</sub>}，{v<sub>1</sub>v<sub>3</sub>, v<sub>3</sub>v<sub>4</sub>}，{v<sub>1</sub>v<sub>3</sub>, v<sub>2</sub>v<sub>5</sub>}，{v<sub>1</sub>v<sub>3</sub>, v<sub>2</sub>v<sub>6</sub>}，{v<sub>1</sub>v<sub>3</sub>, v<sub>5</sub>v<sub>6</sub>}，{v<sub>1</sub>v<sub>4</sub>, v<sub>2</sub>v<sub>5</sub>}，{v<sub>1</sub>v<sub>4</sub>，v<sub>2</sub>v<sub>6</sub>}，{v<sub>1</sub>v<sub>4</sub>, v<sub>5</sub>v<sub>6</sub>}，{v<sub>3</sub>v<sub>4</sub>, v<sub>2</sub>v<sub>5</sub>}，{v<sub>3</sub>v<sub>4</sub>, v<sub>2</sub>v<sub>6</sub>}，{v<sub>3</sub>v<sub>4</sub>, v<sub>5</sub>v<sub>6</sub>}，{v<sub>2</sub>v<sub>5</sub>, v<sub>5</sub>v<sub>6</sub>}；同理，3-匹配数为36；4-匹配数为17；5-匹配数为3；有向三角形树D<sub>3</sub>的匹配数：0匹配数 + 1匹配数 + 2匹配数 + 3匹配数 + 4匹配数 + 5匹配数 = 95。</p></sec><sec id="s5_3"><title>3.3. 一类有向三角形树匹配数的计算方法</title><p>设D=(V, E)是在有向完全二叉树中的每一个节点的左右子节点上，添加一条从左子节点到右子节点的有向边所得的图，它是一类特殊的有向三角形树图。下面给出这一类有向三角形树匹配数的多项式算法。</p><p>定理3.3.1设D = (V, E)是在有向完全二叉树中的每一个节点的左右子节点上，添加一条从左子节点到右子节点的有向边所得的的图，设D = (V, E)是有n个三角形的有向三角形树，v<sub>1</sub>，v<sub>2</sub>分别是有向三角形树D的根节点v<sub>0</sub>的左、右子节点，则</p><disp-formula id="hanspub.17711-formula430"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x28_hanspub.png"  xlink:type="simple"/></disp-formula><p>这里D<sub>vi</sub>是以v<sub>i</sub>为根节点的有向三角形树；D<sub>vi</sub>-v<sub>i</sub>是从有向三角形树D<sub>vi</sub>中删除根节点v<sub>i</sub>形成的有向子图；</p><p>设v<sub>3</sub>，v<sub>4</sub>分别是v<sub>1</sub>的左、右子节点，则</p><disp-formula id="hanspub.17711-formula431"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x29_hanspub.png"  xlink:type="simple"/></disp-formula><p>这里D<sub>v</sub><sub>3</sub>-v<sub>3</sub>是D<sub>v</sub><sub>1</sub>-v<sub>1</sub>的有向子图。</p><p>证明：用归纳法证明，n = 1时，有向三角形树D仅包含一个三角形，Z(D) = 5，定理成立。</p><p>假设对小于n个三角形的有向三角形树D定理成立。设v<sub>1</sub>，v<sub>2</sub>分别是v<sub>0 </sub>的左、右子节点，见图4。</p><p>则有向三角形树D的匹配数可分为以下两类：</p><p>第一类：不包含根节点v<sub>0</sub>的匹配，即有向子图D-v<sub>0</sub>的匹配数Z(D-v<sub>0</sub>)，见图5。</p><p>第二类：恰好包含根节点v<sub>0</sub>的有向边v<sub>0</sub>v<sub>1</sub>或v<sub>0</sub>v<sub>2</sub>的匹配，即有向子图D<sub>1</sub>，D<sub>2</sub>的匹配数Z(D<sub>1</sub>)，Z(D<sub>2</sub>)，见图6。</p><p>因此</p><disp-formula id="hanspub.17711-formula432"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x30_hanspub.png"  xlink:type="simple"/></disp-formula><p>注意到有向子图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x31_hanspub.png" xlink:type="simple"/></inline-formula>的匹配可分为以下两类：</p><p>第一类：不包含有向边v<sub>1</sub>v<sub>2</sub>的匹配，即有向树D<sub>v</sub><sub>1</sub>的匹配数Z(D<sub>v</sub><sub>1</sub>)与有向树D<sub>v</sub><sub>2</sub>的匹配数Z(D<sub>v</sub><sub>2</sub>)的乘积，见图7。</p><p>第二类：恰好包含有向边v<sub>1</sub>v<sub>2</sub>的匹配，即有向子图D<sub>3</sub>的匹配数Z(D<sub>3</sub>)，见图7。</p><p>因此</p><disp-formula id="hanspub.17711-formula433"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x32_hanspub.png"  xlink:type="simple"/></disp-formula><p>而有向子图D<sub>1</sub>的匹配可以分为以下两类：</p><p>第一类：不包含有向边v<sub>1</sub>v<sub>2</sub>的匹配，即有向子图D<sub>4</sub>的匹配数Z(D<sub>4</sub>)，见图8。</p><p>第二类：恰好包含有向边v<sub>1</sub>v<sub>2</sub>的匹配，即有向子图D<sub>5</sub>的匹配数Z(D<sub>5</sub>)，见图8。</p><p>图4. 有向三角形树D</p><p>图5. 有向子图D-v<sub>0</sub></p><p>图6. 有向子图D<sub>1</sub>，有向子图D<sub>2</sub></p><p>图7. 有向树D<sub>v</sub><sub>1</sub>，有向树D<sub>v</sub><sub>2</sub>，有向子图D<sub>3</sub></p><p>图8. 有向子图D<sub>4</sub>, 有向子图D<sub>5</sub></p><p>因此</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x38_hanspub.png" xlink:type="simple"/></inline-formula>;</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x39_hanspub.png" xlink:type="simple"/></inline-formula>.</p><p>则有向三角形树D的匹配数</p><disp-formula id="hanspub.17711-formula434"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x40_hanspub.png"  xlink:type="simple"/></disp-formula><p>注意到有向子图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x41_hanspub.png" xlink:type="simple"/></inline-formula>与有向子图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x42_hanspub.png" xlink:type="simple"/></inline-formula>的结构相同，则</p><disp-formula id="hanspub.17711-formula435"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x43_hanspub.png"  xlink:type="simple"/></disp-formula><p>由归纳假设得：对有向三角形树D<sub>v</sub><sub>3</sub>，D<sub>v</sub><sub>4</sub>定理成立。</p><p>证毕。</p><p>定理3.3.2设D是含n个三角形的有向三角形树，则</p><disp-formula id="hanspub.17711-formula436"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x44_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x45_hanspub.png" xlink:type="simple"/></inline-formula>当且仅当D是有向三角形星<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x46_hanspub.png" xlink:type="simple"/></inline-formula>；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x47_hanspub.png" xlink:type="simple"/></inline-formula>当且仅当D是有向三角形路D<sub>pn</sub>。</p><p>证明：用数学归纳法证明。N = 1时，有向三角形树D 仅包含一个三角形，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x48_hanspub.png" xlink:type="simple"/></inline-formula>，定理成立。N = 2时，有向三角形树D包含两个三角形，这两个三角形构成的有向三角形树图有三种结构：有向三角形星图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x49_hanspub.png" xlink:type="simple"/></inline-formula>，有向三角形路<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x50_hanspub.png" xlink:type="simple"/></inline-formula>和D<sub>p</sub><sub>2</sub>。计算得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x51_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x52_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x53_hanspub.png" xlink:type="simple"/></inline-formula>，定理成立。</p><p>假设对小于n个三角形的有向三角形树图结论成立。(1) 用数学归纳法证明右边不等式。设D<sub>n</sub>是具有n个三角形的有向三角形树图，则D<sub>n</sub>可以在某一个具有n-1个三角形的有向三角形树图D<sub>n</sub><sub>-1</sub>的任意节点与新<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x54_hanspub.png" xlink:type="simple"/></inline-formula>的节点v<sub>0</sub>粘贴得到。D<sub>n</sub>和D<sub>n</sub><sub>-1</sub>的匹配有如下两种关系：</p><p>1) D<sub>n</sub><sub>-1</sub>的任意一个匹配和D<sub>1</sub>的任意一个匹配都没有公共始点和终点，注意到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x55_hanspub.png" xlink:type="simple"/></inline-formula>，此时有</p><disp-formula id="hanspub.17711-formula437"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x56_hanspub.png"  xlink:type="simple"/></disp-formula><p>2) D<sub>n</sub><sub>-1</sub>的某些匹配和D<sub>1</sub>的某些匹配有公共的始点，此时有</p><disp-formula id="hanspub.17711-formula438"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x57_hanspub.png"  xlink:type="simple"/></disp-formula><p>由归纳假设有</p><disp-formula id="hanspub.17711-formula439"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x58_hanspub.png"  xlink:type="simple"/></disp-formula><p>显然<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x59_hanspub.png" xlink:type="simple"/></inline-formula>，因此得</p><disp-formula id="hanspub.17711-formula440"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x60_hanspub.png"  xlink:type="simple"/></disp-formula><p>且等式成立当且仅当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x61_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>(2) 用数学归纳法证明左边不等式。设D<sub>n</sub>可以在某一个具有n-1个三角形的有向三角形树图D<sub>n</sub><sub>-1</sub>的任意节点与新<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x62_hanspub.png" xlink:type="simple"/></inline-formula>的节点v<sub>0</sub>粘贴得到，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x63_hanspub.png" xlink:type="simple"/></inline-formula>在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x64_hanspub.png" xlink:type="simple"/></inline-formula>的中心与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x65_hanspub.png" xlink:type="simple"/></inline-formula>的v<sub>0</sub>粘结得到，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x66_hanspub.png" xlink:type="simple"/></inline-formula>的有向边为v<sub>0</sub>v<sub>1</sub>，v<sub>0</sub>v<sub>2</sub>，v<sub>1</sub>v<sub>2</sub>。类似(1)的证明考虑<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x67_hanspub.png" xlink:type="simple"/></inline-formula>和D<sub>n</sub>的匹配，分下面几种情况考虑：</p><p>a)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x68_hanspub.png" xlink:type="simple"/></inline-formula>的匹配由v<sub>1</sub>v<sub>2</sub>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x69_hanspub.png" xlink:type="simple"/></inline-formula>匹配组成，D<sub>n</sub>的匹配由v<sub>1</sub>v<sub>2</sub>与D<sub>n</sub><sub>-1</sub>的匹配组成，根据归纳假设这种情形下<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x70_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>b)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x71_hanspub.png" xlink:type="simple"/></inline-formula>的匹配由v<sub>0</sub>v<sub>1</sub>，v<sub>0</sub>v<sub>2</sub>，v<sub>0</sub>v<sub>1</sub>v<sub>2</sub>分别与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x72_hanspub.png" xlink:type="simple"/></inline-formula>三角形的第三边生成的匹配组成，D<sub>n</sub>的匹配由v<sub>0</sub>v<sub>1</sub>，v<sub>0</sub>v<sub>2</sub>，v<sub>0</sub>v<sub>1</sub>v<sub>2</sub>分别与D<sub>n</sub><sub>-1</sub>三角形的第三边生成的匹配组成，这种情形下他们匹配数相等。</p><p>c)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x73_hanspub.png" xlink:type="simple"/></inline-formula>的匹配只能是v<sub>0</sub>v<sub>1</sub>，v<sub>0</sub>v<sub>2</sub>，v<sub>0</sub>v<sub>1</sub>v<sub>2</sub>，或者是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x74_hanspub.png" xlink:type="simple"/></inline-formula>包含中心点v<sub>0</sub>的匹配，D<sub>n</sub>的匹配由v<sub>0</sub>v<sub>1</sub>，v<sub>0</sub>v<sub>2</sub>，v<sub>0</sub>v<sub>1</sub>v<sub>2</sub>，或者D<sub>n</sub><sub>-1</sub>三角形的非第三边生成的匹配组成，或者由v<sub>0</sub>v<sub>1</sub>，v<sub>0</sub>v<sub>2</sub>，v<sub>0</sub>v<sub>1</sub>v<sub>2</sub>，和D<sub>n</sub><sub>-1</sub>中与v<sub>0</sub>不相交的D<sub>n</sub><sub>-1</sub>三角形的非第三边生成的匹配组成，这种情形下<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x75_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>由以上讨论得：</p><disp-formula id="hanspub.17711-formula441"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x76_hanspub.png"  xlink:type="simple"/></disp-formula><p>且等式成立当且仅当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x77_hanspub.png" xlink:type="simple"/></inline-formula>。下面计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x78_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>根据定理3.3.1设含n个三角形的有向三角形星图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x79_hanspub.png" xlink:type="simple"/></inline-formula>的中心节点为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x80_hanspub.png" xlink:type="simple"/></inline-formula>是v<sub>0</sub>的邻居节点，见图9，则有向三角形星图的匹配可分为以下两类：</p><p>第一类：不包中心节点v<sub>0</sub>的匹配，即有向子图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x81_hanspub.png" xlink:type="simple"/></inline-formula>的匹配数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x82_hanspub.png" xlink:type="simple"/></inline-formula>，见图9。</p><p>第二类：恰好包含中心节点v<sub>0</sub>的有向边v<sub>0</sub>v<sub>i</sub>(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x83_hanspub.png" xlink:type="simple"/></inline-formula>)$的匹配，即有向子图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x84_hanspub.png" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x85_hanspub.png" xlink:type="simple"/></inline-formula>)的匹配数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x86_hanspub.png" xlink:type="simple"/></inline-formula>，见图10。</p><p>如图10所示，共有n个有向子图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x87_hanspub.png" xlink:type="simple"/></inline-formula>，因此</p><disp-formula id="hanspub.17711-formula442"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x88_hanspub.png"  xlink:type="simple"/></disp-formula><p>注意到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x89_hanspub.png" xlink:type="simple"/></inline-formula>的每一个匹配必须包括有向边v<sub>0</sub>v<sub>i</sub>，当包含的有向边v<sub>0</sub>v<sub>i</sub>是v<sub>0</sub>的右节点时，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x90_hanspub.png" xlink:type="simple"/></inline-formula>的匹配数</p><disp-formula id="hanspub.17711-formula443"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x91_hanspub.png"  xlink:type="simple"/></disp-formula><p>当包含的有向边v<sub>0</sub>v<sub>i</sub>是v<sub>0</sub>左节点时，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x92_hanspub.png" xlink:type="simple"/></inline-formula>的匹配数</p><disp-formula id="hanspub.17711-formula444"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x93_hanspub.png"  xlink:type="simple"/></disp-formula><p>而有向三角形星图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x94_hanspub.png" xlink:type="simple"/></inline-formula>左节点数等于右节点数等于n。从<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x95_hanspub.png" xlink:type="simple"/></inline-formula>的一个k-匹配中删除左节点得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x96_hanspub.png" xlink:type="simple"/></inline-formula>的一个(k-1)-匹配，反之在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x97_hanspub.png" xlink:type="simple"/></inline-formula>的(k-1)-匹配中添加左节点得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x98_hanspub.png" xlink:type="simple"/></inline-formula>的一个k-匹配，</p><p>则有</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x99_hanspub.png" xlink:type="simple"/></inline-formula>所以</p><p>图9. 有向三角形星图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x103_hanspub.png" xlink:type="simple"/></inline-formula>，有向子图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x104_hanspub.png" xlink:type="simple"/></inline-formula></p><p>图10. 有向子图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x107_hanspub.png" xlink:type="simple"/></inline-formula></p><disp-formula id="hanspub.17711-formula445"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x108_hanspub.png"  xlink:type="simple"/></disp-formula><p>证毕。</p></sec><sec id="s5_4"><title>3.4. 有向三角形树匹配数的算法</title><p>本小节中，我们给出有向三角形树匹配数的算法。</p><p>设D = (V, E)是在有向完全二叉树中的每一个节点的左右子节点上，添加一条从左子节点到右子节点的有向边所得的图，设D<sub>n</sub> = (V, E)是包含n个三角形的有向三角形树，输出Z(D<sub>i</sub>)值。假设D<sub>0</sub>表示只含有一个节点的有向图，D<sub>vl</sub>和D<sub>vr</sub>分别表示D<sub>v</sub>的左、右子图。</p><p>开始</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x109_hanspub.png" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x110_hanspub.png" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x111_hanspub.png" xlink:type="simple"/></inline-formula></p><p>For each <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x112_hanspub.png" xlink:type="simple"/></inline-formula> bottom up do</p><disp-formula id="hanspub.17711-formula446"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x113_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17711-formula447"><graphic xlink:href="http://html.hanspub.org/file/5-1540582x114_hanspub.png"  xlink:type="simple"/></disp-formula><p>显然，该算法的时间复杂度为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x115_hanspub.png" xlink:type="simple"/></inline-formula>。</p></sec></sec><sec id="s6"><title>4. 结论与展望</title><p>本文中我们给出了有向网络中一类有向三角形树匹配数的计算方法和计算表达式。得出：有向三角形路D<sub>pn</sub>的匹配数最大，有向三角形星图<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540582x116_hanspub.png" xlink:type="simple"/></inline-formula>的匹配数最小。有向三角形树的匹配数与以其左右端子节点为顶点的有向三角形的数目密切相关：有向三角形树中，以左端子节点为顶点的有向三角形的数目越多，有向三角形树的匹配数越小；有向三角形树中，以右端子节点为顶点的有向三角形的数目越多，有向三角形树的匹配数越大。而刘和Barabasi等人有结论：有向路最易控制，即：需要的输入最少；有向星图最难控制，即：需要的输入最多；那么能否得出：有向三角形树的匹配数越大，有向三角形树越容易控制的结论；或者在什么条件下，有向三角形树的匹配数越大，有向三角形树可控制性越好，是值得思考的问题。</p></sec><sec id="s7"><title>基金项目</title><p>本文受科技部973专项(No. 2010CB334708)、国家自然基金项目(No. 61164005)、教育部长江学者与创新团队支持计划(No. IRT1068)、国家自然科学资金项目(批准号：11551002)、青海省自然基金项目(No. 2012-Z-943)资助。</p></sec><sec id="s8"><title>文章引用</title><p>李梦英,赵海兴. 有向三角形树的匹配数 On the Matching Number of Directed Triangle Trees[J]. 计算机科学与应用, 2016, 06(05): 292-302. http://dx.doi.org/10.12677/CSA.2016.65036</p></sec><sec id="s9"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.17711-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">汪小帆, 李翔, 陈关荣. 网络科学导论[M]. 北京: 高等教育出版社, 2012.</mixed-citation></ref><ref id="hanspub.17711-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">郭世泽, 陆哲明. 复杂网络基础理论[M]. 北京: 科学出版社, 2012.</mixed-citation></ref><ref id="hanspub.17711-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Liu, Y.Y., Slotine, J.J. and Barabasi, A.L. (2011) Controllability of Complex Networks. Nature, 473, 167-173. 
&lt;br&gt;http://dx.doi.org/10.1038/nature10011</mixed-citation></ref><ref id="hanspub.17711-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">陈关荣. 复杂动态网络环境下控制理论遇到的问题与挑战[J]. 自动化学报. 2013, 39(4): 312-321.</mixed-citation></ref><ref id="hanspub.17711-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Wagner, S. (2008) Extremal Trees with Respect to Hosoya Index and Merri-field-Simmons Index. MATCH Communications in Mathematical and in Computer Chemistry, 59, 203-216.</mixed-citation></ref><ref id="hanspub.17711-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Wagner, S. and Gutman, I. (2010) Maxima and Minima of the Hosoya Index and Merrifield-Simmons Index A Survey of Result and Techniques. Acta Applicandae Mathematicae, 112, 323-346.  
&lt;br&gt;http://dx.doi.org/10.1007/s10440-010-9575-5</mixed-citation></ref><ref id="hanspub.17711-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">West, D.B., 著. 图论导引[M]. 李建中, 骆吉洲, 译. 北京: 机械工业出版社, 2005.</mixed-citation></ref><ref id="hanspub.17711-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Jogen, B.J. and Gutin, G., 著. 有向图理论, 算法及其应用[M]. 姚兵, 张忠辅, 译. 北京: 科学出版社, 2009.</mixed-citation></ref><ref id="hanspub.17711-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">邓辉文. 离散数学[M]. 北京: 清华大学出版社, 2013.</mixed-citation></ref></ref-list></back></article>