<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2020.106123</article-id><article-id pub-id-type="publisher-id">CSA-36074</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20200600000_65949147.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于C#与STK的多雷达跟踪弹道导弹系统设计与实现
  Design and Implementation of Multi-Radar Tracking Ballistic Missile System Based on C# and STK
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>彪</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>程</surname><given-names>鹏举</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>韩</surname><given-names>卓茜</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>储</surname><given-names>雪峰</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>信息工程大学，河南 郑州</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>04</day><month>06</month><year>2020</year></pub-date><volume>10</volume><issue>06</issue><fpage>1185</fpage><lpage>1193</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   随着计算机技术的发展，应用计算机对导弹预警进行可视化模拟的研究得到不断的重视。本文针对前后雷达组网对导弹进行搜索跟踪的场景，使用STK与C#软件联合编程设计开发了多雷达跟踪弹道导弹预报交接可视化软件系统。首先介绍了系统的基本概述；然后分析了STK/X组件与C#集成的相关配置设计；最后详细介绍了可视化系统的界面设计与操作流程。通过系统运行表明，该系统兼容性好，运行稳定，操作性强，具有一定的工程应用价值。 With the development of computer technology, the visualization simulation of missile warning by computer has been paid more and more attention. In this paper, the visualization of multi-radar tracking ballistic missile prediction handover system is realized by joint programming of STK and C# software. Firstly, the basic overview of the system is introduced, and then the related configuration design of the integration of STK/X components and C# is analyzed. Finally, the interface design and operation flow of the visualization system are introduced in detail. The operation of this system shows that the system has good compatibility, stable operation, strong maneuverability, and has a certain engineering application value. 
  
 
</p></abstract><kwd-group><kwd>多雷达跟踪，STK，C#软件，导弹预警, Joint Programming</kwd><kwd> STK</kwd><kwd> C# Software</kwd><kwd> Missile Warning</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于C#与STK的多雷达跟踪弹道导弹系统 设计与实现<sup> </sup></title><p>王彪，程鹏举，韩卓茜，储雪峰</p><p>信息工程大学，河南 郑州</p><p>收稿日期：2020年5月27日；录用日期：2020年6月5日；发布日期：2020年6月12日</p><disp-formula id="hanspub.36074-formula7"><graphic xlink:href="//html.hanspub.org/file/12-1541779x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>随着计算机技术的发展，应用计算机对导弹预警进行可视化模拟的研究得到不断的重视。本文针对前后雷达组网对导弹进行搜索跟踪的场景，使用STK与C#软件联合编程设计开发了多雷达跟踪弹道导弹预报交接可视化软件系统。首先介绍了系统的基本概述；然后分析了STK/X组件与C#集成的相关配置设计；最后详细介绍了可视化系统的界面设计与操作流程。通过系统运行表明，该系统兼容性好，运行稳定，操作性强，具有一定的工程应用价值。</p><p>关键词 :多雷达跟踪，STK，C#软件，导弹预警</p><disp-formula id="hanspub.36074-formula8"><graphic xlink:href="//html.hanspub.org/file/12-1541779x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/12-1541779x7_hanspub.png" /> <img src="//html.hanspub.org/file/12-1541779x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>近年来随着计算机技术的不断发展，导弹预警研究从单纯的数据算法研究不断向可视化展示方向拓展 [<xref ref-type="bibr" rid="hanspub.36074-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.36074-ref2">2</xref>]。STK (Satellite Tool Kit)是美国AGI公司开发的软件，是航空航天领域一款非常实用的软件 [<xref ref-type="bibr" rid="hanspub.36074-ref3">3</xref>]。该软件不仅具有强大的二三维的图像处理操作能力同时又具有目标数据分析能力，而且可为其他编程软件提供可调用组件接口，方便了不同应用功能系统的开发 [<xref ref-type="bibr" rid="hanspub.36074-ref4">4</xref>]。</p><p>针对多雷达跟踪弹道导弹的预报交接场景可视化模拟的问题，本文以C#的winform为平台进行开发，调用STK软件中的二维三维可视化功能组件，设计开发了弹道导弹雷达预报交接可视化系统，实现了组网雷达预报交接导弹预警过程的可视化展示及操作，同时可对导弹状态数据及雷达观测数据进行分析，便于研究人员和考察人员观看整体过程。本文首先介绍了系统的基本概述，然后分析了系统的功能模块及组成，最后通过实例运行说明了系统的操作流程，验证了系统的各项功能及稳定性。</p></sec><sec id="s4"><title>2. 系统基本概述</title><sec id="s4_1"><title>2.1. 系统设计构架</title><p>系统的设计思想为，系统首先通过C#软件搭建一个界面显示窗口，通过STK/X组件将弹道导弹的雷达预报交接过程以一个动态场景进行展示。预报交接过程中涉及到的相关运算则由内核程序进行，其系统设计构架如图1所示。</p><p>图1. 系统设计的构架图</p></sec><sec id="s4_2"><title>2.2. 编程软件选择</title><p>系统内部的计算程序可通过各章节的仿真程序转换为目标程序语言，而系统外部界面的设计，可由MATLAB的GUI设计、C++的MFC设计以及C#的WinForm等多种程序语言进行设计。对比这几种编程优缺点，使用MATLAB的GUI设计，其界面设计较为快捷，但是由于调用的都是MATLAB自身函数，其运行速度较慢，软件的运行也需要MATLAB环境，不适宜作为通用软件的推广使用 [<xref ref-type="bibr" rid="hanspub.36074-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.36074-ref6">6</xref>]；使用C++进行MFC界面设计，C语言更接近于底层，其运行速度较快，但窗体界面较为单一老化，软件的开发已不适合当前主流界面 [<xref ref-type="bibr" rid="hanspub.36074-ref7">7</xref>]；C#的WinForm窗体设计，窗体界面搭建较为灵活，且窗体风格设计丰富，程序的运行速度与C++的MFC程序差不多 [<xref ref-type="bibr" rid="hanspub.36074-ref8">8</xref>]。因此本系统采用C#的WinForm进行系统外部界面搭建，并调用STK的三维、二维控件来完成系统构思中的功能实现。</p></sec></sec><sec id="s5"><title>3. C#调用组件的相关配置</title><sec id="s5_1"><title>3.1. 系统软件32位与64位的选择</title><p>本文系统软件在使用C#设计时定义为32位软件，优点在于其既可在x64的操作系统运行，也可以在x86 (32位)的操作系统上运行。x64平台下设计出的软件系统比x86设计出的系统运行速度快，系统设计之初曾尝试使用x64平台设计，但x64设计的软件只能运行在x64位的操作系统上运行，不如x86设计出的软件适用性广，且系统后面的需要的一些组件也需要在x86平台下运行，因此综合软件的使用范围和内部组件的兼容性，设计本文软件系统定位在32位软件。</p></sec><sec id="s5_2"><title>3.2. DotNetBar的.NET Framework组件调用</title><p>由于C# WinForm项目中自带的控件数量有限，而DotNetBar就是一套基于.NET美化控件库，内含有诸多控件以及多种界面的皮肤风格，窗口界面更为灵活多变，人机交互感觉更强。本文软件系统使用DotNetBar控件库，一是可以更加方便的添加更丰富的操作按钮，二是与时俱进更符合时代审美特色。关于DotNetBar控件库的更多介绍可查看官网http://www.devcomponents.com/dotnetbar/，其调用使用方法与调用其他组件的方法基本一致。</p></sec><sec id="s5_3"><title>3.3. STK相关COM组件的调用</title><p>本软件系统主要调用了STK三个COM组件库，分别为STK Objects、STK Util、STK X。其中STK Objects库，包含了STK结构的各个方面的类型、接口、事件和类。STK Util包含各种类库中的方法和属性，使用C#实例化对象后通过方法实现各项功能 [<xref ref-type="bibr" rid="hanspub.36074-ref9">9</xref>]。STK X是AGI公司开发的嵌入技术，它以COM组件的形式添加到用户软件系统中，调用方便快捷 [<xref ref-type="bibr" rid="hanspub.36074-ref10">10</xref>]。C#添加COM组件的具体流程如下：</p><p>a) 在解决方案资源管理器中找到“引用”选项，右击→【添加引用】→【COM/类型库】→选择AGI.STKObjects.Interop、AGI.STKUtil.Interop、AGI.STKX.Interop，点击确定添加。</p><p>b) 在.cs程序文件开头添加“using AGI.STKObjects”、“using AGI.STKUtil”的代码用以引用，三种控件的引用也要注意其运行版本号，软件开发阶段若版本不统一会出现运行问题，运行版本可在其属性中查看。</p><p>c) 在C#【工具箱】中将AGI Map Control和AGI Globe Control添加至窗体设计界面内，并可搭建形成系统的二维三维操作界面。</p><p>在向二三维场景中添加我们需要的导弹雷达等对象时，可以使用两种方法。一个是实例化AgStk Object Root类，通过调用类内不同的对象及方法实现相关操作，此方法需要查阅不同操作对应的方法，编程较为麻烦；另一个是使用“Execute Command”方法，该方法只需要将命令代码输入到“Execute Command”的参数值中，由于命令代码的编写规则掌握较快，应用该方法将更为快捷。两种方法的相关查阅资料均可在STK软件的帮助文档中查到。本软件系统将两种方法混合使用，更好的实现了诸多功能。</p></sec><sec id="s5_4"><title>3.4. 外部环境</title><p>a) 硬件要求。软件系统运行所需硬件配置如表1所述。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Hardware configuration table required for system operatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >计算机设备名称</th><th align="center" valign="middle" >配置要求</th></tr></thead><tr><td align="center" valign="middle" >CPU</td><td align="center" valign="middle" >3.0 GHz</td></tr><tr><td align="center" valign="middle" >显卡</td><td align="center" valign="middle" >N卡460以上</td></tr><tr><td align="center" valign="middle" >内存</td><td align="center" valign="middle" >1 GB及以上</td></tr><tr><td align="center" valign="middle" >显存</td><td align="center" valign="middle" >1 G及以上</td></tr><tr><td align="center" valign="middle" >硬盘</td><td align="center" valign="middle" >500 MB</td></tr></tbody></table></table-wrap><p>表1. 系统运行所需硬件配置表</p><p>b) 软件要求。软件系统运行所需软件配置如表2所述。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Software configuration required for system installation and operatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >软件类型</th><th align="center" valign="middle" >软件名称</th><th align="center" valign="middle" >软件版本</th></tr></thead><tr><td align="center" valign="middle" >操作系统</td><td align="center" valign="middle" >Microsoft Windows</td><td align="center" valign="middle" >WinXP及以上</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >其他配置</td><td align="center" valign="middle" >.NET Framework</td><td align="center" valign="middle" >4.0</td></tr><tr><td align="center" valign="middle" >Microsoft Visual Studio</td><td align="center" valign="middle" >2010及以上</td></tr></tbody></table></table-wrap><p>表2. 系统安装和运行所需软件配置</p></sec></sec><sec id="s6"><title>4. 软件系统设计与实现</title><sec id="s6_1"><title>4.1. 系统界面设计</title><p>论本文系统的主界面主要包括菜单栏、按钮栏、参数设置栏和图像显示栏四大摸块。其中菜单栏包括文件、目标、场景等菜单选项；按钮栏包括二维、三维界面操作按钮；参数设置栏包括导弹和雷达参数的设置；图像显示栏包括二三维动态展示窗口及传感器数据分析口等。系统主界面如图2所示。</p><p>图2. 系统主界面</p><sec id="s6_1_1"><title>4.1.1. 菜单项内容及使用</title><p>菜单栏的设置按照Windows窗体使用习惯及软件功能设置了三个菜单项，分别为“文件”、“目标”、“场景”。“文件”菜单包括“保存”、“清除”、“退出”等选项，可以进行“数据保存”、“数据清除”、“软件退出”等操作。“目标”菜单包括“导弹”、“雷达1”、“雷达2”等选项，可以对导弹和雷达进行建立和参数设置等操作。“场景”菜单包括“3D动态展示”、“2D动态展示”、“数据分析”等选项，可对右侧图像显示栏三种显示模式进行选择。其具体内容如图3所示。</p><p>图3. 菜单栏界面</p></sec><sec id="s6_1_2"><title>4.1.2. 界面按钮的介绍及使用</title><p>为对系统进行可视化操作，综合其他软件的按钮操作习惯，现在菜单栏的下方设置按钮栏，包括二维、三维界面操作共14个操作按钮，编号第①至⑧项按钮为对场景的播放进度设置，编号⑨⑩⑪⑫按钮为场景的视角设置，编号⑬⑭按钮为二维的放大和缩小操作，各按钮编号如图4所示。</p><p>图4. 工具栏操作按钮图示</p><p>按钮①到⑭按钮的程序编程，使用AGI.STKObjects.Interop接口实例化后，调用其内部函数及“ExecuteCommand()”的方法来实现。</p></sec><sec id="s6_1_3"><title>4.1.3. 设置模块功能</title><p>参数设置模块功能是该软件系统的重要核心部分，为实现多雷达对导弹的预报交接可视化展示功能，将该模块主要包括“导弹设置”、“预警雷达1设置”、“跟踪雷达2设置”三部分。通过对这三部分的参数设置，构建多雷达跟踪弹道导弹的预报交接仿真场景的基本元素，后续的图形化界面的场景也是对这些元素进行展示和分析的。</p><p>a) 导弹设置</p><p>通过对导弹的设置，仿真生成一条弹道轨迹。弹道轨迹的生成可通过添加发射点和落点的纬度、经度、高度以及发射时间由STK组件的内部计算引擎进行生成，也可以通过调用外部导弹轨迹数据文件进行加载，数据文件为.e类型，文件按照格式显示了弹道在各个时刻的三个坐标轴方向的位置和速度值 [<xref ref-type="bibr" rid="hanspub.36074-ref8">8</xref>]，如图5所示。另外该软件系统的轨迹数据文件可增加导弹状态的协方差，导弹的状态协方差将以误差椭球的形式在场景中动态演化，导弹位置矢量的协方差矩阵实际上是一个三维的实对称矩阵，因此只需要添加其上三角6个数据值即可，数值对应情况如图6所示。同时为方便快速的展示可视化效果，软件增加了加载实验实例按钮，可一键增加导弹所有数据。</p><p>图5. 导弹轨迹数据文件的编写格式</p><p>图6. 协方差数据编写格式</p><p>b) 预警雷达1设置</p><p>预警雷达1作用为通过设置一道搜索屏对穿越搜索屏内的导弹目标进行探测，从而形成预警信息，因此预警雷达的搜索屏设置范围较大，但其探测精度不高。其主要设置参数包括雷达站的经度、纬度、高度，以及雷达搜索屏的仰角、方位角、厚度角以及搜索半径。前置雷达1的作用为进行大区域预警，搜索角度越大则预警能力越强，由于相控阵雷达阵列天线单面的搜索范围一般为左右各60，因此搜索屏的搜索范围参考实际情况默认设置为120。当导弹穿越雷达的搜索屏时，雷达通过短时跟踪可获得导弹目标的状态值，并根据雷达的探测误差得出导弹目标的状态协方差，由此为跟踪雷达2形成引导信息。同时为方便快速的展示可视化效果，软件增加了加载实验实例按钮，可一键增加导弹所有数据。</p><p>c) 跟踪雷达2设置</p><p>将雷达1生成的导弹状态数据值作为引导数据，经前文介绍的算法技术可以计算出雷达2的搜索区域及波束扫描范围，引导雷达2在目标到达交接时刻时根据计算出的搜索区域可快速搜索到目标。因此雷达2的搜索区域为搜索窗，与雷达1的搜索屏有所不同，其主要设置参数包括搜索区域的上下俯仰角、左右方位角和探测距离。另外为确定搜索区域内波束分布和编排，还需要进一步设置波束宽度和扫描速率。由于设置参数较多，为方便快速的展示可视化效果，软件增加了加载实验实例按钮，可一键增加导弹所有数据。</p></sec><sec id="s6_1_4"><title>4.1.4. 图形界面模块功能</title><p>该图形界面窗口位于主界面的右侧，是系统软件的可视化的主要展示窗口，主要包括三维(3D)、二维(2D)内下导弹的运动轨迹、雷达动态监测的过程以及弹道状态和雷达探测数据的变化图。在3D、2D的界面下，用户可以通过工具栏的操作按钮对当前展示的场景进行相应的操作获取更好的观察效果。</p><p>其中，“3D动态显示”可以进入3D动态显示模式，该模式将导弹目标在空间中飞行轨迹实时展示出来，其与雷达站和地球间的空间几何关系一目了然，展示了其视觉优势。另外在该模式下除了使用界面上的操作按钮进行操作外，还可以按住鼠标左键拖动可以观看场景不同的位置，按住鼠标右键拖动可以放大缩小场景。“2D动态显示”可以进入2D动态显示模式。该模式是将地球表面二维化，导弹的运动轨迹在此模式下显示为其在地球表面的投影。“数据分析”可以进入数据分析模式，此模式以图表的形式展示了导弹的状态数据随时间的变换情况、预警雷达对导弹的可见性分析以及跟踪雷达对导弹目标的俯仰方位斜距随时间的变化情况。具体操作界面如图7所示。</p><p>图7. 图形操作界面</p></sec></sec><sec id="s6_2"><title>4.2. 系统功能实现</title><p>使用本文系统进行弹道导弹的雷达预报交接展示的主要操作步骤分为两个方面，首先是通过界面左侧设置栏装订好导弹和雷达的相关参数，参数装订完成之后会在右侧图形界面上显示所装订的导弹及雷达目标。其次是通过右侧的图形操作界面控制对可视化场景进行控制。</p><sec id="s6_2_1"><title>4.2.1 . 参数设置</title><p>打开软件进入主界面后，左侧为参数设置栏，分别对导弹、预警雷达、跟踪雷达进行相关参数装订。</p><p>a) 导弹设置流程如下：</p><p>第一步，点击【导弹设置】进入导弹相关参数设置，在发射参数中输入导弹发射点的经度、维度、高度以及发射时间(UTCG)，在落点参数中输入落点的纬度、经度、高度；</p><p>第二步，点击【弹道计算】可以计算出一条弹道轨迹，并在右侧3D动态显示中显示出导弹轨迹，该弹道轨迹是使用STK内核引擎生成的，弹道数据也可以通过外部文件加载。</p><p>另外用户也可以使用【加载实验数据】按钮，可一键加载导弹所有数据并进行展示。</p><p>b) 预警雷达1设置流程如下：</p><p>第一步，点击【预警雷达1设置】进入前置雷达相关参数设置，在雷达站参数中输入雷达站的经度、纬度、高度；</p><p>第二步，点击【建立雷达站】可在地图上生成前置雷达站；</p><p>第三步，在搜索屏参数设置中输入搜索屏仰角、屏方位角、屏厚度以及屏半径，点击【建立搜索屏】可在该雷达站生成搜索屏，并在3D动态显示中对搜索屏进行直观显示。</p><p>另外用户也可以使用【加载实验数据】按钮可一键加载雷达1的所有数据并进行展示。</p><p>c) 跟踪雷达2设置流程如下：</p><p>第一步，点击【跟踪雷达2设置】进入后置雷达相关参数设置，在雷达站参数中输入雷达站的经度、纬度、高度；</p><p>第二步，点击【建立雷达站】可在地图上生成后置雷达站。因为后置跟踪雷达对目标的搜索为小范围少量波束的区域搜索，其搜索区域为搜索小窗与前置雷达的搜索屏设置不同。根据前置雷达1的获得的导弹的状态值和协方差数据可以获得雷达的交接时刻及交接时刻下导弹的协方差数据和后置雷达的搜索区域。得到雷达搜索区域经换算后在此输入区域上、小、左、右角以及波束宽度、探测距离、扫描速率；</p><p>第三步，点击【建立搜索区域】可在地图上形成雷达站的搜索区域展示。</p><p>另外用户也可以使用【加载实验数据】按钮可一键加载雷达2的所有数据并进行展示。</p></sec><sec id="s6_2_2"><title>4.2.2 . 图像界面展示</title><p>在软件主界面的右侧为图形界面操作，在完成左侧相关目标的参数设置后，可以对3D动态展示和2D动态展示图进行操作以及数据分析图表的切换显示。</p><p>a) 3D动态展示</p><p>点击【3D动态展示】，可以看到一个三维的地球动态场景，场景内显示了在左侧建立的导弹飞行轨迹和雷达探测区域和波束，点击工具栏中的⑤播放按钮，场景会按照设定的场景时间段进行运行，场景时间会显示在整个场景的左下侧，如图8所示。场景的放大缩小可通过按住鼠标右键拖动实现，另外通过按钮(图4所示)可以实现场景播放的加速、慢速、暂停、时间复位，以及场景观看角度的切换，具体每个按钮的功能可参照4.1.2节介绍。这里需要注意的是，导弹的飞行时间和雷达传感器的探测时间必须在场景的时间段内，否则场景播放时无法看到动态过程。</p><p>图8. 场景运行时间</p><p>b) 2D动态展示</p><p>点击【2D动态展示】，可以看到一个二维的全球地图，二维地图与三维动态场景不同，在场景播放时地图是不会随着时间运行而移动，只有目标会在地图上移动，其移动的过程是与3D动态展示同步进行的，同时地图上也展示了导弹目标的地面航迹和雷达探测区域在地球表面上的投影，是对3D动态展示的一种补充，可以很好的展示经纬度信息。2D动态展示操作较少只有通过⑬⑭按钮进行放大缩小操作。</p><p>c) 数据分析</p><p>点击【数据分析】，可以看到一个图表展示，分别为“导弹状态数据”、“雷达1探测数据”、“雷达2探测数据”。点击【导弹状态数据】显示导弹在X轴、Y轴、Z轴的位置及速度6个状态值随飞行时间的变换曲线；点击【雷达1探测数据】显示雷达1对导弹目标的时间可见性分析；点击【雷达2探测数据】显示了雷达2在探测距离内，对导弹目标的方位角、俯仰角、斜距随导弹飞行时间的变化情况；三种数据分析界面如图9所示。</p><p>图9. 数据分析界面</p></sec></sec></sec><sec id="s7"><title>5. 结束语</title><p>本文设计开发了一套弹道导弹雷达预报交接可视化系统。首先概述了系统的设计思想和基本概述；然后介绍了STK/X组件与C#软件集成的相关配置；最后详细介绍了本文软件系统的设计，包括系统界面设计与系统的操作流程。本文系统经运行表明，该系统兼容性好，运行稳定，操作性和直观性较强，具有一定的工程应用价值。</p></sec><sec id="s8"><title>文章引用</title><p>王 彪,程鹏举,韩卓茜,储雪峰. 基于C#与STK的多雷达跟踪弹道导弹系统设计与实现Design and Implementation of Multi-Radar Tracking Ballistic Missile System Based on C# and STK[J]. 计算机科学与应用, 2020, 10(06): 1185-1193. https://doi.org/10.12677/CSA.2020.106123</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.36074-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">许庆, 侯兴明. STK软件在航天装备任务仿真中的应用[J]. 电子技术与软件工程, 2019(2): 60.</mixed-citation></ref><ref id="hanspub.36074-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">张慧娟, 刘海波. STK在飞行器仿真试验与数据分析中的应用[J]. 电子技术与软件工程, 2018(8): 106.</mixed-citation></ref><ref id="hanspub.36074-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">纪录, 吴国东, 王志军, 尹建平, 刘亚昆. 基于STK的弹箭半实物飞行实时可视化仿真[J]. 火力与指挥控制, 2020, 45(2): 170-174+179.</mixed-citation></ref><ref id="hanspub.36074-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">徐鹏, 刘东青, 王振华, 郭淑芬. STK的雷达对抗干扰动态参数建模仿真分析[J]. 现代防御技术, 2019, 47(1): 105-110.</mixed-citation></ref><ref id="hanspub.36074-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">卓硕. 基于Matlab和STK的无人机作战仿真研究[D]: [硕士学位论文]. 杭州: 浙江大学, 2019.</mixed-citation></ref><ref id="hanspub.36074-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">徐鹏, 王振华. 基于STK/Matlab的雷达对抗场景动态可视化仿真研究[J]. 空军预警学院学报, 2019, 33(1): 45-49.</mixed-citation></ref><ref id="hanspub.36074-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">仇谷烽. 基于Visual C++的MFC编程[M]. 北京: 清华大学出版社, 2015.</mixed-citation></ref><ref id="hanspub.36074-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">李刚. 基于STK的综合态势显示与控制系统的研究[D]: [硕士学位论文]. 济南: 山东大学, 2019.</mixed-citation></ref><ref id="hanspub.36074-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">霍烁烁, 刘镇瑜, 陈磊, 等. 基于C# Connect连接的STK远程控制系统设计与实现[J]. 舰船电子工程, 2017, 37(11): 108-111.</mixed-citation></ref><ref id="hanspub.36074-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">杨颖, 王琦. STK在计算机仿真中的应用[M]. 北京: 国防工业出版社, 2005.</mixed-citation></ref></ref-list></back></article>