<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">JISP</journal-id><journal-title-group><journal-title>Journal of Image and Signal Processing</journal-title></journal-title-group><issn pub-type="epub">2325-6753</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/JISP.2017.62010</article-id><article-id pub-id-type="publisher-id">JISP-20215</article-id><article-categories><subj-group subj-group-type="heading"><subject>JISP20170200000_40869114.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  一种利用大气散射模型实现图像去雾的方法
  A Method of Image Dehazing Using Atmospheric Scattering Model
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>段</surname><given-names>立春</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>刘</surname><given-names>超</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>钟</surname><given-names>玮</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>丽清</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>蒋</surname><given-names>慕蓉</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>云南大学，信息学院计算机科学与工程系，云南 昆明</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>DuanLichun11@163.com(段立)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>20</day><month>04</month><year>2017</year></pub-date><volume>06</volume><issue>02</issue><fpage>78</fpage><lpage>88</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对雾天图像清晰度不高的问题，我们采用大气散射模型进行图像去雾处理，利用Curvelet变换提取图像边缘，根据边缘相交的直线先计算灭点值，再由灭点计算景深值，得到含雾图像中入射光的辐射系数，即图像真实的颜色值，达到图像去雾的目的。在景深值计算中，分别对含雾图像的每个像素点都做一次景深计算，在一定程度上可以解决由于单一景深导致部分区域颜色失真的问题，使去雾后图像的颜色更自然。最后，通过实验验证了方法的有效性。 In view of the problem that the image under foggy days is not clear, the atmospheric scattering model is used to process the image dehazing. First, the Curvelet transform extracts the image edge and calculates the vanishing point on the basis of the intersection of straight line edges. Then it calculates the depth of field value according to the vanishing point. The radiation coefficient of incident light in the foggy image is obtained, which means that the real color value of the image is obtained and the image dehazing is finished. When calculating the depth of field value, it respectively calculates the depth of field value of every foggy image’s pixel at the same time, which solves the partial area color distortion problem that is caused by using single depth of field, and makes the processed image look more natural. Finally, the validity of the method is verified by experiments.
    
  
 
</p></abstract><kwd-group><kwd>图像去雾，大气散射模型，灭点，景深, Image Dehazing</kwd><kwd> Atmospheric Scattering Model</kwd><kwd> Vanishing Point</kwd><kwd> Depth of Field</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>一种利用大气散射模型实现图像去雾的方法<sup> </sup></title><p>段立春，刘超，钟玮，陈丽清，蒋慕蓉<sup>*</sup></p><p>云南大学，信息学院计算机科学与工程系，云南 昆明</p><disp-formula id="hanspub.20215-formula1"><graphic xlink:href="http://html.hanspub.org/file/2-2670105x5_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2017年3月25日；录用日期：2017年4月8日；发布日期：2017年4月11日</p><disp-formula id="hanspub.20215-formula2"><graphic xlink:href="http://html.hanspub.org/file/2-2670105x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>针对雾天图像清晰度不高的问题，我们采用大气散射模型进行图像去雾处理，利用Curvelet变换提取图像边缘，根据边缘相交的直线先计算灭点值，再由灭点计算景深值，得到含雾图像中入射光的辐射系数，即图像真实的颜色值，达到图像去雾的目的。在景深值计算中，分别对含雾图像的每个像素点都做一次景深计算，在一定程度上可以解决由于单一景深导致部分区域颜色失真的问题，使去雾后图像的颜色更自然。最后，通过实验验证了方法的有效性。</p><p>关键词 :图像去雾，大气散射模型，灭点，景深</p><disp-formula id="hanspub.20215-formula3"><graphic xlink:href="http://html.hanspub.org/file/2-2670105x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2017 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="http://image.hanspub.org:8080\Html/htmlimages\1-2890033x\e70a10f1-7c93-45ea-9603-062237856e4b.png" /><img src="http://image.hanspub.org:8080\Html\htmlimages\1-2890033x\e898c85e-ffc4-45c9-b817-14224a4d6960.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>由于大雾等恶劣天气的影响，图像设备难以采集到清晰的图像(如图1所示)，对捕捉到的含雾图像进行去雾处理，减轻甚至消除雾天对图像设备所产生的影响是图像复原的主要任务之一。</p><p>目前，较为普遍的去雾算法主要分为两类 [<xref ref-type="bibr" rid="hanspub.20215-ref1">1</xref>] ：第一类是基于物理模型的场景图像复原算法，第二类是基于图像增强处理的去雾算法。第一类大多是从含雾图像降质的物理方面成因入手 [<xref ref-type="bibr" rid="hanspub.20215-ref2">2</xref>] ，Oakley等人提出基于场景几何学方法 [<xref ref-type="bibr" rid="hanspub.20215-ref3">3</xref>] ，建立一个新的物理模型，这个模型含有三个参数，对模型参数进行逆向计算，得出的结果再用来计算含雾图像中的每一个像素点的反射以及散，射通量的相对影响值，但是这种方法只能用于灰度级图像，并不适用于彩色图像，且场景深度是由前置空运相机拍摄得到的。Cozman、Krotkov等人在1997年第一次在含雾图像的去雾处理中使用到了大气散射模、型 [<xref ref-type="bibr" rid="hanspub.20215-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.20215-ref5">5</xref>] ，用晴好条件下景点的颜色值和大气光颜色值线性表示出图像设备采集到的图像颜色值，再拿采集到的图像色度值减去大气光色度值，就能复原出晴好天气下景物的色度值。只是这种算法在去雾处理时，采集到图像的景深很难准确计算，天空的亮度值受到了悬浮颗粒散射影响，现实环境中其他光线往往也能导致这个方法瘫痪。第二类主要从时域、频域这两个方面来选择相应的图像增强算法，Jisha John、Grewe等人提出的基于小波融合的去雾算法 [<xref ref-type="bibr" rid="hanspub.20215-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.20215-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.20215-ref8">8</xref>] ，对多幅含雾图像进行融合来获得一张较好的图像，但是这种方法只能相对地提高图像质量，并不能实现真正意义上的去雾。</p><p>图1. 带雾图像</p></sec><sec id="s4"><title>2. 大气散射模型</title><p>1975年，麦卡特尼(McCartney)等人根据Mie散，射理论，利用入射，光衰减模型和大气光成像模型来描述景物的成像机制，提出了大气散射模型 [<xref ref-type="bibr" rid="hanspub.20215-ref9">9</xref>] ：</p><disp-formula id="hanspub.20215-formula4"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2670105x11_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x12_hanspub.png" xlink:type="simple"/></inline-formula>为入射光的辐射系数(图像真实的颜色值)，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x13_hanspub.png" xlink:type="simple"/></inline-formula>为图像设备所获得的含雾图像的颜色，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x14_hanspub.png" xlink:type="simple"/></inline-formula>为大气光色度，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x15_hanspub.png" xlink:type="simple"/></inline-formula>为大气散射系数，d为景深 [<xref ref-type="bibr" rid="hanspub.20215-ref10">10</xref>] 。</p><p>当已知大气散射系数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x16_hanspub.png" xlink:type="simple"/></inline-formula>时，由公式(1)可知，若要实现退化图像的复原，就要知道景深d与大气光色度<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x17_hanspub.png" xlink:type="simple"/></inline-formula>。通过自左向右对含雾图像的直方图进行扫描，找到直方图中最高峰值点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x18_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x19_hanspub.png" xlink:type="simple"/></inline-formula>就是大气光色度<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x20_hanspub.png" xlink:type="simple"/></inline-formula>。现在，只需计算出退化图像中每一景深d即可。</p><p>沿着图像中深度增加的方向选择一个景物消失的近似位置，称为灭点(Vanishing Point，又叫做消失点)，场景点的深度与它们在图像上对应的像点到灭点的距离成反比 [<xref ref-type="bibr" rid="hanspub.20215-ref11">11</xref>] 。根据图像的灭点，可以找到汇聚在这个灭点的互相平行的直线集合，通过灭点可以确定空间线条的延伸方向。依据这些直线，可以分析出图像方向和景深等立体空间的信息，这样我们就能计算出图像采集点与场景点的距离。</p><p>图像透视一般有两种：平行透视和成角透视。真实场景中的这组平行线与画面成90度，就是平行透视，只有1个灭点，如图2；真实场景中的这组平行线与画面所成的角度只要不是90度，都是成角透视，一般有2个灭点，如图3。</p><p>图2. 平行透视灭点</p><p>图3. 成角透视灭点</p></sec><sec id="s5"><title>3. 基于灭点检测的去雾计算方法</title><p>去雾计算的具体步骤如下：</p><p>步骤1：灭点检测。为了便于实验的理解，利用了图4城市建筑图来做仿真实验，并且得出了每一步的实验图。</p><p>第一步：边缘检测。对原始含雾彩色图转化为灰度图，并染色，如图5，再使用传统边缘检测算法(SOBEL算法)对含雾原图像进行提取，返回低阈值的图，像边缘，如图6。</p><p>第二步：边缘检测稀疏。使用稀疏算法，对图像的高密度边缘进行稀疏，除去无用的边缘，只保留原图像主要框架，如图7。</p><p>第三步：Curvelet变换。对图7使用Curvelet变换 [<xref ref-type="bibr" rid="hanspub.20215-ref12">12</xref>] [<xref ref-type="bibr" rid="hanspub.20215-ref13">13</xref>] [<xref ref-type="bibr" rid="hanspub.20215-ref14">14</xref>] ，如图8，删除任何对灭点检测没有作用的绝对水平、绝对垂直的边缘，只返回又窄又长的最优细尺度边缘，如图9。</p><p>第四步：灭点检测。选择在上个步骤得到的边缘中，把边缘转相交，也就得到了很多交的点，如图10。利用RANSAC算法 [<xref ref-type="bibr" rid="hanspub.20215-ref15">15</xref>] ，从得到的交点样本中，拟合误差范围内包含样本最多的线性模型。再把最优的模型两两相交，即得到图像的灭点坐标(170.9762, 150.1190)，如图11所示，绿色小圆圈就是灭点位置。</p><p>第五步：灭点校验。由于灭点对图像复原至关重要，为了验证RANSAC算法检测到的灭点准确性，</p><p>图4. 待处理原图像</p><p>图5. 染色</p><p>图6. Sobel算法检测的图像边缘</p><p>图7. 稀疏边缘</p><p>图8. Curvelet变换</p><p>在图10中选4条直线并在每条直线上选6个点，如图12所示，量得这24个点的坐标如表1。</p><p>依据最小二乘一，拟合原一，理，拟合出4条直线。如图13所示。</p><p>图9. 灭点的边缘直线</p><p>图10. 边缘直线交叉点</p><p>图11. 灭点</p><disp-formula id="hanspub.20215-formula5"><graphic xlink:href="http://html.hanspub.org/file/2-2670105x31_hanspub.png"  xlink:type="simple"/></disp-formula><p>图12. 自选的24个点</p><p>图13. 拟合的4条直线</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> The 24 intersections of lin</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >点</th><th align="center" valign="middle" >P<sub>1</sub></th><th align="center" valign="middle" >P<sub>2</sub></th><th align="center" valign="middle" >P<sub>3</sub></th><th align="center" valign="middle" >P<sub>4</sub></th><th align="center" valign="middle" >P<sub>5</sub></th><th align="center" valign="middle" >P<sub>6</sub></th></tr></thead><tr><td align="center" valign="middle" >坐标</td><td align="center" valign="middle" >(66,180)</td><td align="center" valign="middle" >(240,30)</td><td align="center" valign="middle" >(208,86)</td><td align="center" valign="middle" >(108,43)</td><td align="center" valign="middle" >(187,122)</td><td align="center" valign="middle" >(158,128)</td></tr><tr><td align="center" valign="middle" >点</td><td align="center" valign="middle" >P<sub>7</sub></td><td align="center" valign="middle" >P<sub>8</sub></td><td align="center" valign="middle" >P<sub>9</sub></td><td align="center" valign="middle" >P<sub>10</sub></td><td align="center" valign="middle" >P<sub>11</sub></td><td align="center" valign="middle" >P<sub>12</sub></td></tr><tr><td align="center" valign="middle" >坐标</td><td align="center" valign="middle" >(180,134)</td><td align="center" valign="middle" >(211,217)</td><td align="center" valign="middle" >(210,164)</td><td align="center" valign="middle" >(122,235)</td><td align="center" valign="middle" >(220,233)</td><td align="center" valign="middle" >(169,146)</td></tr><tr><td align="center" valign="middle" >点</td><td align="center" valign="middle" >P<sub>13</sub></td><td align="center" valign="middle" >P<sub>14</sub></td><td align="center" valign="middle" >P<sub>15</sub></td><td align="center" valign="middle" >P<sub>16</sub></td><td align="center" valign="middle" >P<sub>17</sub></td><td align="center" valign="middle" >P<sub>18</sub></td></tr><tr><td align="center" valign="middle" >坐标</td><td align="center" valign="middle" >(244,23)</td><td align="center" valign="middle" >(172,151)</td><td align="center" valign="middle" >(121,237)</td><td align="center" valign="middle" >(199,198)</td><td align="center" valign="middle" >(70,180)</td><td align="center" valign="middle" >(50,99)</td></tr><tr><td align="center" valign="middle" >点</td><td align="center" valign="middle" >P<sub>19</sub></td><td align="center" valign="middle" >P<sub>20</sub></td><td align="center" valign="middle" >P<sub>21</sub></td><td align="center" valign="middle" >P<sub>22</sub></td><td align="center" valign="middle" >P<sub>23</sub></td><td align="center" valign="middle" >P<sub>24</sub></td></tr><tr><td align="center" valign="middle" >坐标</td><td align="center" valign="middle" >(208,165)</td><td align="center" valign="middle" >(230,250)</td><td align="center" valign="middle" >(123,129)</td><td align="center" valign="middle" >(249,183)</td><td align="center" valign="middle" >(77,110)</td><td align="center" valign="middle" >(180,147)</td></tr></tbody></table></table-wrap><p>表1. 24个直线相交点</p><p>对于拟合的4条直线分别两两相交，求它们相交的点坐标，如表2。</p><p>从表中，可以看出，各条直线交点坐标基本上都和RANSAC算法得出的灭点(170.9762, 150.1190)附近，甚至相当。因此，可以判定坐标(170.9762, 150.1190)就是该雾天图像的精确值。RANSAC算法计算的灭点完全可以用来做景点深度估计。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> The six checked coordinates of vanishing poin</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  rowspan="2"  >坐标</th><th align="center" valign="middle" >(170.9726, 150.0997)</th><th align="center" valign="middle" >(170.9692, 150.1210)</th><th align="center" valign="middle" >(170.9768, 150.1098)</th></tr></thead><tr><td align="center" valign="middle" >(170.9787, 150.1112)</td><td align="center" valign="middle" >(170.9699, 150.1201)</td><td align="center" valign="middle" >(170.9699, 150.1189)</td></tr></tbody></table></table-wrap><p>表2. 校验得到的6个灭点坐标</p><p>图14. 原图像</p><p>图15. 去雾后图像</p><p>步骤2：计算景深d。</p><p>传统景深计算方法是利用求得灭点坐标<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x36_hanspub.png" xlink:type="simple"/></inline-formula>，直接对整幅图像进行景深计算，然后得出一个景深值，再利用这个值对整幅图像做去雾处理。这样做的优点是计算方便，时间复杂度小。但是，如果场景如果多而且复杂，这样一个景深值往往无法代替所有的景深值。本文对原方法进行改进，利用上面</p><p>图16. 去雾后图像</p><p>图17. 去雾后图像</p><p>图18. 去雾后图像</p><p>图19. 去雾后图像</p><p>计算出的灭点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x41_hanspub.png" xlink:type="simple"/></inline-formula>分别对含雾图像的每个像素点都做一次景深计算。</p><p>首先计算出灭点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x42_hanspub.png" xlink:type="simple"/></inline-formula>到图像四个边缘点(1,1)、(1,512)、(512,1)、(512,512)距离：</p><disp-formula id="hanspub.20215-formula6"><graphic xlink:href="http://html.hanspub.org/file/2-2670105x43_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.20215-formula7"><graphic xlink:href="http://html.hanspub.org/file/2-2670105x44_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.20215-formula8"><graphic xlink:href="http://html.hanspub.org/file/2-2670105x45_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.20215-formula9"><graphic xlink:href="http://html.hanspub.org/file/2-2670105x46_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.20215-formula10"><graphic xlink:href="http://html.hanspub.org/file/2-2670105x47_hanspub.png"  xlink:type="simple"/></disp-formula><p>那么，利用景深计算公式，求出图像上每一个像，素点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x48_hanspub.png" xlink:type="simple"/></inline-formula>的景深：</p><disp-formula id="hanspub.20215-formula11"><graphic xlink:href="http://html.hanspub.org/file/2-2670105x49_hanspub.png"  xlink:type="simple"/></disp-formula><p>这样，就会得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x50_hanspub.png" xlink:type="simple"/></inline-formula>个景深距离d的值。</p><p>步骤3：计算散射系数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x51_hanspub.png" xlink:type="simple"/></inline-formula>。如果把雾天空气中散射介质看成均匀介质的话，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x52_hanspub.png" xlink:type="simple"/></inline-formula>则变成已知。</p><p>步骤4：大气光色度<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x53_hanspub.png" xlink:type="simple"/></inline-formula>。周围大气光色度<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x54_hanspub.png" xlink:type="simple"/></inline-formula>的获取可以从直方图中获取。从含雾图像的直方图中选取几个峰值点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x55_hanspub.png" xlink:type="simple"/></inline-formula>。对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x56_hanspub.png" xlink:type="simple"/></inline-formula>就做加权处理，得到的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x57_hanspub.png" xlink:type="simple"/></inline-formula>是需要的含雾图像大气光色度<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x58_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步骤5：图像设备所获得的含雾图像的颜色<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x59_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步骤6：有了这4个变量，对于含雾图像的每个像素，分别都使用公式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x60_hanspub.png" xlink:type="simple"/></inline-formula>还原其原来的颜色，共计算512 &#215; 512次。然后得到512 &#215; 512个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2670105x61_hanspub.png" xlink:type="simple"/></inline-formula>，再合成一副图像，即景物去雾后的图像。</p><p>为了验证方法的有效性，采取了不同观测点、不同场景、不同雾气浓度、不同的天空亮度等3幅随机城市建筑图作为代表。</p><p>图14透视方式：成角透视；雾气大小：浓雾；视觉景深距离：&gt;1000 m；图像亮度：偏暗；图16透视方式：平行透视；雾气大小：中雾；视觉景深距离：0~1000 m；图像亮度：中等；图18透视方式：多点透视；雾气大小：轻雾；视觉景深距离：&gt;1000 m；图像亮度：中等。</p><p>实验结果显示，原图像图14、图16、图18雾气浓度较低，亮度值均匀，使用本文去雾方法后图15、图17、图19效果较好，而且没有颜色失真，图像看起来更自然。</p></sec><sec id="s6"><title>4. 结论</title><p>本文利用大气散射模型进行图像去雾处理，最大的优点是对含雾图像的每个像素点都做一次景深值计算，避免了不同的景深范围差较大的含雾图像对去雾处理的影响，在一定程度上可以解决由于单一景深导致部分区域颜色失真的问题，使去雾后图像的颜色更自然。</p></sec><sec id="s7"><title>基金项目</title><p>论文得到国家自然科学基金(No.11161055)的资助。</p></sec><sec id="s8"><title>文章引用</title><p>段立春,刘超,钟玮,陈丽清,蒋慕蓉. 一种利用大气散射模型实现图像去雾的方法 A Method of Image Dehazing Using Atmospheric Scattering Model[J]. 图像与信号处理, 2017, 06(02): 78-88. http://dx.doi.org/10.12677/JISP.2017.62010</p></sec><sec id="s9"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.20215-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">王一涵. 雾天图像增强方法研究[D]: [硕士学位论文]. 西安: 西安电子科技大学, 2012.</mixed-citation></ref><ref id="hanspub.20215-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Narasimhan, S. and Nayar, S. (2003) Interactive Deweathing of an Image Using Physical Models. Proceeding of IEEE Workshop on Corlor and Photometric Methods in Computer Vision, Chicago, 1-8.</mixed-citation></ref><ref id="hanspub.20215-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Oakley, J.P. and Satherley, B.L. (1998) Improving Image Quality in Poor Visibility Conditions Using a Physical Model for Contrast Degradation. IEEE Transactions on Image Processing, 7, 167-179. &lt;br&gt;https://doi.org/10.1109/83.660994</mixed-citation></ref><ref id="hanspub.20215-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Cozman, F. and Krotkov, E. (1997) Depth from Scattering. Springer, US.</mixed-citation></ref><ref id="hanspub.20215-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Cantor, A. (1977) Optics of the Atmosphere—Scattering by Molecules and Particles. IEEE Journal of Quantum Elec-tronics, 14, 698-699. &lt;br&gt;https://doi.org/10.1109/JQE.1978.1069864</mixed-citation></ref><ref id="hanspub.20215-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">John, J. and Wilscy, M. (2008) Enhancement of Weather Degraded Video Sequences Using Wavelet Fusion. 7th IEEE International Conference on IEEE, Cybernetic Intelligent Systems (CIS), London, 9-10 September 2008, 1-6.  
&lt;br&gt;https://doi.org/10.1109/ukricis.2008.4798926</mixed-citation></ref><ref id="hanspub.20215-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Grewe, L. and Brooks, R. (1998) Atmospheric Attenuation Reduction through Multisensor Fusion. Proceedings of the SPIE International Conference Society for Optical Engineering on Sensor Fusion: Architectures, Algorithms and Applications II, Orlando, 102-109.</mixed-citation></ref><ref id="hanspub.20215-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">杨仁虎. 基于小波分析的数字图像清晰化方法研究[D]: [硕士学位论文]. 成都: 成都理工大学, 2006.</mixed-citation></ref><ref id="hanspub.20215-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">胡学友. 雾天降质图像的增强复原算法研究[D]: [博士学位论文]. 安徽: 安徽大学, 2011.</mixed-citation></ref><ref id="hanspub.20215-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">谷秀平. 基于Curvelet变换的图像去噪和增强[D]: [硕士学位论文]. 天津: 天津理工大学, 2010.</mixed-citation></ref><ref id="hanspub.20215-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, J.L., Gao, B. and Gu, X.P. (2010) Traffic Images Enhancement Based on Vanishing Point Detection and Atmospheric Scattering Model. Proceedings of 3rd International Congress on Image and Signal Processing, Yantai, 16-18 Octorber 2010, 766-770.</mixed-citation></ref><ref id="hanspub.20215-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">袁芳. Curvelet变换在数字图像去噪和压缩中的研究[D]: [硕士学位论文]. 西安: 西安电子科技大学, 2010.</mixed-citation></ref><ref id="hanspub.20215-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Candes, E.J., Demanet, L., Donoho, D.L, et al. (2005) Fast Discrete Curvelet Transforms. Applied and Computational Mathematics, California Institute of Technology, 1-43.</mixed-citation></ref><ref id="hanspub.20215-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Eriksson, B. (2007) Automatic Image De-Weathering Using Curvelet-Based Vanishing Point Detection. Communications on Pure &amp; Applied Mathematics, 2007, 219-232.</mixed-citation></ref><ref id="hanspub.20215-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Candes, E.J. (2000) Curvelets, Multiresolution Representation, and Scaling Laws. Proceedings of SPIE—The International Society for Optical Engineering, 4119, 1-12. &lt;br&gt;https://doi.org/10.1117/12.408568</mixed-citation></ref></ref-list></back></article>