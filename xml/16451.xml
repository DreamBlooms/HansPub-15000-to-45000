<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2015.44049</article-id><article-id pub-id-type="publisher-id">AAM-16451</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20150400000_18805628.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  GF(3
  <sup>n</sup>)椭圆曲线密码体制中标量乘快速算法研究
  Research on Fast Algorithms for Scalar Multiplication of Elliptic Curve Cryptography over GF (3
  <sup>n</sup>)
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>申</surname><given-names>少芳</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>周</surname><given-names>梦</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>null</addr-line></aff><aff id="aff2"><addr-line>北京航空航天大学数学与系统科学学院，LMIB，北京 </addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>zm1613@sina.com(周梦)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>14</day><month>10</month><year>2015</year></pub-date><volume>04</volume><issue>04</issue><fpage>390</fpage><lpage>399</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  本文研究了特征为3的椭圆曲线密码体制中标量乘的快速算法，并针对底层运算和上层运算分别进行改进。在底层运算中，采用递推归纳、乘法代替求逆、立方代替乘法的思想提出在仿射坐标下直接计算3
  <sup>k</sup>P的算法，将求逆运算降至1次；在上层运算中，采用滑动窗口标量乘的方法，既有效减少了非零窗口的长度又减少了算法中3倍点总的运算量。
   In this paper we investigate the fast algorithm of scalar multiplication based on Elliptic Curve Cryptography (ECC) over fields of characteristic three, and make improvements both in underlying operations and upper operations respectively. In the underlying operations, we deduce a formula of calculating 3
  <sup>k</sup>P directly under the affine coordinates based upon the idea of recursion, trading inversion for multiplication and trading multiplication for cube, which reduces the inversion to once; in the upper operations, we adopt the sliding window scalar multiplication method, which reduces the length of the non-zero windows and the total computations of 3P effectively.
   
   
   
   
   
  
 
</p></abstract><kwd-group><kwd>椭圆曲线密码体制，标量乘，递推归纳，滑动窗口, Elliptic Curve Cryptography (ECC)</kwd><kwd> Scalar Multiplication</kwd><kwd> Recursion</kwd><kwd> Sliding Window</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>GF(3<sup>n</sup>)椭圆曲线密码体制中标量乘快速算法研究<sup> </sup></title><p>申少芳，周梦<sup>*</sup></p><p>北京航空航天大学数学与系统科学学院，LMIB，北京</p><disp-formula id="hanspub.16451-formula138"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2015年11月9日；录用日期：2015年11月25日；发布日期：2015年11月30日</p><disp-formula id="hanspub.16451-formula139"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文研究了特征为3的椭圆曲线密码体制中标量乘的快速算法，并针对底层运算和上层运算分别进行改进。在底层运算中，采用递推归纳、乘法代替求逆、立方代替乘法的思想提出在仿射坐标下直接计算3<sup>k</sup>P的算法，将求逆运算降至1次；在上层运算中，采用滑动窗口标量乘的方法，既有效减少了非零窗口的长度又减少了算法中3倍点总的运算量。</p><p>关键词 :椭圆曲线密码体制，标量乘，递推归纳，滑动窗口</p><disp-formula id="hanspub.16451-formula140"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x9_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>自1985年Neal Koblitz和Victor Miller分别独立提出椭圆曲线密码体制(ECC, Elliptic Curve Cryptography)，其安全性和有效实现性就得到了广泛的关注。ECC属于公钥密码体制，它可以提供同RSA密码体制相同的功能。然而它的安全性建立在椭圆曲线离散对数问题(ECDLP)的困难性之上[<xref ref-type="bibr" rid="hanspub.16451-ref1">1</xref>] ，目前求解ECDLP最好的算法具有全指数时间复杂度，与RSA相比，ECC具有如下优良性质：</p><p>1) ECC安全性高。在同样的攻破时间内，ECC需要的密钥比RSA要短得多，如160 bite的ECC和1024 bite的RSA有相同的安全性；</p><p>2) ECC实现性强。密钥短、存储空间占用少、宽带要求低、运算处理时间短等特点均有利于ECC实现；</p><p>3) ECC具有多重选择性。在相同基域下，ECC可以通过改变椭圆曲线方程的系数得到不同的加密算法，拥有更多的选择性，而对于给定的素数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x10_hanspub.png" xlink:type="simple"/></inline-formula>或<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x11_hanspub.png" xlink:type="simple"/></inline-formula>只能对应唯一的一个RSA算法。</p><p>因此，ECC在信息安全中有广泛的应用。目前，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x12_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x13_hanspub.png" xlink:type="simple"/></inline-formula>已经研究得比较充分，而对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x14_hanspub.png" xlink:type="simple"/></inline-formula>的研究工作还很少开展。随着Weil对和Tate对理论的不断进展及基于此而设计的各种安全协议的广泛应用，人们对小素数扩域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x15_hanspub.png" xlink:type="simple"/></inline-formula>的研究产生了浓厚的兴趣。与传统有限域相比，小素数扩域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x16_hanspub.png" xlink:type="simple"/></inline-formula>能提供更多、更灵活的密码方案，且针对其的攻击算法相对较少，因此其安全性也比较高。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x17_hanspub.png" xlink:type="simple"/></inline-formula>作为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x18_hanspub.png" xlink:type="simple"/></inline-formula>的一种特殊类型，其具有类似于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x19_hanspub.png" xlink:type="simple"/></inline-formula>的计算速度快的某些特性，但也有自己的特殊性质，这使得其算术运算效率非常高，极适合作为安全密码算法的载体[<xref ref-type="bibr" rid="hanspub.16451-ref2">2</xref>] -[<xref ref-type="bibr" rid="hanspub.16451-ref5">5</xref>] 。</p><p>在ECC中，核心运算就是椭圆曲线的标量乘<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x20_hanspub.png" xlink:type="simple"/></inline-formula>的运算，它是ECC快速实现的关键，而求逆运算又是标量乘中最耗时的，因此采用数学技巧减少求逆次数，对提高运算效率具有重要意义[<xref ref-type="bibr" rid="hanspub.16451-ref6">6</xref>] 。</p><p>本文首先介绍了ECC的基础知识，包括椭圆曲线的定义及分类以及其上点的运算法则；其次，采用递推归纳、乘法代替求逆、立方代替乘法的思想推导出了仿射坐标系下<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x21_hanspub.png" xlink:type="simple"/></inline-formula>上<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x22_hanspub.png" xlink:type="simple"/></inline-formula>的递推公式；最后基于滑动窗口标量乘对核心标量乘算法进行改进并分析其性能。</p></sec><sec id="s4"><title>2. ECC基础知识</title><sec id="s4_1"><title>2.1. 椭圆曲线的定义及分类</title><p>定义1. 设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x23_hanspub.png" xlink:type="simple"/></inline-formula>为有限域，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x24_hanspub.png" xlink:type="simple"/></inline-formula>上的Weierstrass方程为</p><disp-formula id="hanspub.16451-formula141"><label>(2.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x25_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x26_hanspub.png" xlink:type="simple"/></inline-formula>，称<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x27_hanspub.png" xlink:type="simple"/></inline-formula>是域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x28_hanspub.png" xlink:type="simple"/></inline-formula>上的椭圆曲线。</p><p>有限域上椭圆曲线的分类[<xref ref-type="bibr" rid="hanspub.16451-ref7">7</xref>] ：</p><disp-formula id="hanspub.16451-formula142"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x29_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16451-formula143"><label>(2.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x30_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16451-formula144"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x31_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16451-formula145"><label>(2.3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x32_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16451-formula146"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x33_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16451-formula147"><label>(2.4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x34_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x35_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x36_hanspub.png" xlink:type="simple"/></inline-formula>的不变量。</p></sec><sec id="s4_2"><title>2.2. 椭圆曲线上点的运算法则</title><p>定义在域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x37_hanspub.png" xlink:type="simple"/></inline-formula>上的椭圆曲线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x38_hanspub.png" xlink:type="simple"/></inline-formula>的所有点的集合称为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x39_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x40_hanspub.png" xlink:type="simple"/></inline-formula>并上一个无穷远点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x41_hanspub.png" xlink:type="simple"/></inline-formula>构成一个交换群，群上的运算法则由“弦切律”定义。设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x42_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x43_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x44_hanspub.png" xlink:type="simple"/></inline-formula>上的任意两个非零点，且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x45_hanspub.png" xlink:type="simple"/></inline-formula>，下面给出仿射坐标下点加公式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x46_hanspub.png" xlink:type="simple"/></inline-formula>和倍点公式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x47_hanspub.png" xlink:type="simple"/></inline-formula>：</p><p>(1) 点加</p><disp-formula id="hanspub.16451-formula148"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x48_hanspub.png"  xlink:type="simple"/></disp-formula><p>(2) 倍点</p><disp-formula id="hanspub.16451-formula149"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x49_hanspub.png"  xlink:type="simple"/></disp-formula><p>出于安全性考虑，人们通常选择<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x50_hanspub.png" xlink:type="simple"/></inline-formula>的椭圆曲线来设计椭圆曲线密码系统，故本文我们将对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x51_hanspub.png" xlink:type="simple"/></inline-formula>时，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x52_hanspub.png" xlink:type="simple"/></inline-formula>的椭圆曲线进行讨论，其点加和倍点可分别简化为：</p><p>(1) 点加</p><disp-formula id="hanspub.16451-formula150"><label>(2.5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x53_hanspub.png"  xlink:type="simple"/></disp-formula><p>(2) 倍点</p><disp-formula id="hanspub.16451-formula151"><label>(2.6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x54_hanspub.png"  xlink:type="simple"/></disp-formula><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x55_hanspub.png" xlink:type="simple"/></inline-formula>表示域乘法，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x56_hanspub.png" xlink:type="simple"/></inline-formula>表示域平方，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x57_hanspub.png" xlink:type="simple"/></inline-formula>表示域立方，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x58_hanspub.png" xlink:type="simple"/></inline-formula>表示域逆，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x59_hanspub.png" xlink:type="simple"/></inline-formula>表示点加，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x60_hanspub.png" xlink:type="simple"/></inline-formula>表示计算一次域上<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x61_hanspub.png" xlink:type="simple"/></inline-formula>运算所需的时间，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x62_hanspub.png" xlink:type="simple"/></inline-formula>表示逆乘率。与其他运算时间相比，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x63_hanspub.png" xlink:type="simple"/></inline-formula>可以忽略不计，可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x64_hanspub.png" xlink:type="simple"/></inline-formula>所需的计算复杂度为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x65_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x66_hanspub.png" xlink:type="simple"/></inline-formula>所需的计算复杂度为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x67_hanspub.png" xlink:type="simple"/></inline-formula>。</p></sec></sec><sec id="s5"><title>3. GF(3<sup>n</sup>)上底层域快速算法综述</title><p>标量乘<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x68_hanspub.png" xlink:type="simple"/></inline-formula>的运算分为两个层次来完成，一个是底层运算，主要是执行有限域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x69_hanspub.png" xlink:type="simple"/></inline-formula>中各种点加、倍点运算；另一个是上层运算，即椭圆曲线上的点加和倍点运算构成的有限阿贝尔群上的运算。故研究<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x70_hanspub.png" xlink:type="simple"/></inline-formula>上底层域快速算法应是寻求实现点加、倍点的快速算法。</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x71_hanspub.png" xlink:type="simple"/></inline-formula>上有限域运算[<xref ref-type="bibr" rid="hanspub.16451-ref8">8</xref>] 是其底层运算的基础，设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x72_hanspub.png" xlink:type="simple"/></inline-formula>是定义在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x73_hanspub.png" xlink:type="simple"/></inline-formula>中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x74_hanspub.png" xlink:type="simple"/></inline-formula>次不可约多项式，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x75_hanspub.png" xlink:type="simple"/></inline-formula>可表示为</p><disp-formula id="hanspub.16451-formula152"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x76_hanspub.png"  xlink:type="simple"/></disp-formula><p>而对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x77_hanspub.png" xlink:type="simple"/></inline-formula>可以唯一地表示为</p><disp-formula id="hanspub.16451-formula153"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x78_hanspub.png"  xlink:type="simple"/></disp-formula><p>又因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x79_hanspub.png" xlink:type="simple"/></inline-formula>的特征为3，故对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x80_hanspub.png" xlink:type="simple"/></inline-formula>有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x81_hanspub.png" xlink:type="simple"/></inline-formula>，从而对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x82_hanspub.png" xlink:type="simple"/></inline-formula>有</p><disp-formula id="hanspub.16451-formula154"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x83_hanspub.png"  xlink:type="simple"/></disp-formula><p>因而元素立方运算比较快，通常比乘法运算或平方运算快至少十倍[<xref ref-type="bibr" rid="hanspub.16451-ref8">8</xref>] ，而域逆运算又是最费时的运算，一般而言有</p><disp-formula id="hanspub.16451-formula155"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x84_hanspub.png"  xlink:type="simple"/></disp-formula><p>故本文通过引入多个中间变量，多做乘法运算以减少求逆次数，并尽可能将多项式变换成立方项相加减的形式来提高运算速度。</p></sec><sec id="s6"><title>4. GF(3<sup>n</sup>)上底层域快速算法介绍</title><sec id="s6_1"><title>4.1. 3P、9P的直接计算公式</title><p>为了寻求<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x85_hanspub.png" xlink:type="simple"/></inline-formula>的递推公式，我们先来推导<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x86_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x87_hanspub.png" xlink:type="simple"/></inline-formula>的公式，然后观察、分析，进而推导出直接计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x88_hanspub.png" xlink:type="simple"/></inline-formula>的公式。设椭圆曲线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x89_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x90_hanspub.png" xlink:type="simple"/></inline-formula>为E上一点，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x91_hanspub.png" xlink:type="simple"/></inline-formula>，先利用式(2.6)得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x92_hanspub.png" xlink:type="simple"/></inline-formula>，再利用式(2.5)得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x93_hanspub.png" xlink:type="simple"/></inline-formula>，即</p><disp-formula id="hanspub.16451-formula156"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x94_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16451-formula157"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x95_hanspub.png"  xlink:type="simple"/></disp-formula><p>(将分子上的多项式变换成立方项相加减的形式)</p><disp-formula id="hanspub.16451-formula158"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x96_hanspub.png"  xlink:type="simple"/></disp-formula><p>综上所述可得，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x97_hanspub.png" xlink:type="simple"/></inline-formula>的直接计算公式为</p><disp-formula id="hanspub.16451-formula159"><label>(4.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x98_hanspub.png"  xlink:type="simple"/></disp-formula><p>若令</p><disp-formula id="hanspub.16451-formula160"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x99_hanspub.png"  xlink:type="simple"/></disp-formula><p>则(4.1)式可化为</p><disp-formula id="hanspub.16451-formula161"><label>(4.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x100_hanspub.png"  xlink:type="simple"/></disp-formula><p>其计算复杂度为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x101_hanspub.png" xlink:type="simple"/></inline-formula>，相当于不用计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x102_hanspub.png" xlink:type="simple"/></inline-formula>直接得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x103_hanspub.png" xlink:type="simple"/></inline-formula>，而若先得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x104_hanspub.png" xlink:type="simple"/></inline-formula>再将其代入(2.5)式得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x105_hanspub.png" xlink:type="simple"/></inline-formula>的计算复杂度为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x106_hanspub.png" xlink:type="simple"/></inline-formula>，相比之下，该算法虽然增加了1次乘法操作和6次立方操作，但却减少了1次求逆运算，不仅在逆乘率较大的情况下极大地减少了运算量，而且为下面推导<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x107_hanspub.png" xlink:type="simple"/></inline-formula>的一般算法提供了便利。</p><p>再设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x108_hanspub.png" xlink:type="simple"/></inline-formula>，将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x109_hanspub.png" xlink:type="simple"/></inline-formula>代入(2.6)式得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x110_hanspub.png" xlink:type="simple"/></inline-formula>，再将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x111_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x112_hanspub.png" xlink:type="simple"/></inline-formula>代入(2.5)式得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x113_hanspub.png" xlink:type="simple"/></inline-formula>的直接计算公式，结果如下(为书写方便，将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x114_hanspub.png" xlink:type="simple"/></inline-formula>记为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x115_hanspub.png" xlink:type="simple"/></inline-formula>)：</p><disp-formula id="hanspub.16451-formula162"><label>(4.3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x116_hanspub.png"  xlink:type="simple"/></disp-formula><p>若令</p><disp-formula id="hanspub.16451-formula163"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x117_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16451-formula164"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x118_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16451-formula165"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x119_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16451-formula166"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x120_hanspub.png"  xlink:type="simple"/></disp-formula><p>则(4.3)式可化为</p><disp-formula id="hanspub.16451-formula167"><label>(4.4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x121_hanspub.png"  xlink:type="simple"/></disp-formula><p>其计算复杂度为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x122_hanspub.png" xlink:type="simple"/></inline-formula>，与逐次计算的复杂度<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x123_hanspub.png" xlink:type="simple"/></inline-formula>相比，该算法牺牲了12次立方操作，但却减少了3次求逆运算，而<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x124_hanspub.png" xlink:type="simple"/></inline-formula>，可知该算法极大地提高了运算效率。</p></sec><sec id="s6_2"><title>4.2. 3<sup>k</sup>P的直接计算公式</title><p>根据上一节<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x125_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x126_hanspub.png" xlink:type="simple"/></inline-formula>的计算，以此类推我们可以得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x127_hanspub.png" xlink:type="simple"/></inline-formula>的递推公式。</p><p>设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x128_hanspub.png" xlink:type="simple"/></inline-formula>，令</p><disp-formula id="hanspub.16451-formula168"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x129_hanspub.png"  xlink:type="simple"/></disp-formula><p>则有</p><disp-formula id="hanspub.16451-formula169"><label>(4.5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x130_hanspub.png"  xlink:type="simple"/></disp-formula><p>下面给出仿射坐标下直接计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x131_hanspub.png" xlink:type="simple"/></inline-formula>的算法：</p><p>算法1：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x132_hanspub.png" xlink:type="simple"/></inline-formula></p><disp-formula id="hanspub.16451-formula170"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x133_hanspub.png"  xlink:type="simple"/></disp-formula><p>在此递归过程中，先计算当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x134_hanspub.png" xlink:type="simple"/></inline-formula>时的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x135_hanspub.png" xlink:type="simple"/></inline-formula>，其计算复杂度为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x136_hanspub.png" xlink:type="simple"/></inline-formula>，此后<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x137_hanspub.png" xlink:type="simple"/></inline-formula>步每次需增加<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x138_hanspub.png" xlink:type="simple"/></inline-formula>，最后还需计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x139_hanspub.png" xlink:type="simple"/></inline-formula>，需要<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x140_hanspub.png" xlink:type="simple"/></inline-formula>，故总的计算复杂度为：</p><disp-formula id="hanspub.16451-formula171"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x141_hanspub.png"  xlink:type="simple"/></disp-formula><p>与此同时，直接计算需要<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x142_hanspub.png" xlink:type="simple"/></inline-formula>，虽然增加了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x143_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x144_hanspub.png" xlink:type="simple"/></inline-formula>，但却减少了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x145_hanspub.png" xlink:type="simple"/></inline-formula>，当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x146_hanspub.png" xlink:type="simple"/></inline-formula>很大时，直接计算的运算量将会极大地降低。</p></sec><sec id="s6_3"><title>4.3. 算法性能比较</title><p>根据域中运算量的比较，假设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x147_hanspub.png" xlink:type="simple"/></inline-formula>，如表1。</p><p>通过表1，可以直观地看出：直接计算较逐次计算效率有显著的提升，并且随着<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x148_hanspub.png" xlink:type="simple"/></inline-formula>值的增大提升幅度也越来越大，特别是当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x149_hanspub.png" xlink:type="simple"/></inline-formula>时，提升幅度均可达到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x150_hanspub.png" xlink:type="simple"/></inline-formula>以上。</p></sec></sec><sec id="s7"><title>5. 基于滑动窗口标量乘算法改进</title><sec id="s7_1"><title>5.1. 算法介绍</title><p>利用底域直接计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x151_hanspub.png" xlink:type="simple"/></inline-formula>的优势，对传统滑动窗口算法[<xref ref-type="bibr" rid="hanspub.16451-ref9">9</xref>] [<xref ref-type="bibr" rid="hanspub.16451-ref10">10</xref>] 改进，得到一个新的标量乘法，新算法在赋值阶段比传统算法效率有较大提高。由于新算法预处理栈中存储的都是非零窗口，所以还能抵抗边际信道攻击。</p><p>滑动窗口算法分为三个阶段：①标量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x152_hanspub.png" xlink:type="simple"/></inline-formula>编码阶段，计算出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x153_hanspub.png" xlink:type="simple"/></inline-formula>的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x154_hanspub.png" xlink:type="simple"/></inline-formula>形式，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x155_hanspub.png" xlink:type="simple"/></inline-formula>为窗口宽度；②预计算</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Comparison of different methods in the underlying domai</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >运算对象</th><th align="center" valign="middle" >计算方法</th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x156_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x157_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x158_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x159_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" >近似<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x160_hanspub.png" xlink:type="simple"/></inline-formula>值</th><th align="center" valign="middle" >减少量</th></tr></thead><tr><td align="center" valign="middle"  rowspan="2"  ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x161_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" >逐次计算</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" ></td><td align="center" valign="middle" >21.6</td><td align="center" valign="middle"  rowspan="2"  >39.4%</td></tr><tr><td align="center" valign="middle" >直接计算</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >13.08</td></tr><tr><td align="center" valign="middle"  rowspan="2"  ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x162_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" >逐次计算</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" ></td><td align="center" valign="middle" >43.2</td><td align="center" valign="middle"  rowspan="2"  >53.3%</td></tr><tr><td align="center" valign="middle" >直接计算</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >20.16</td></tr><tr><td align="center" valign="middle"  rowspan="2"  ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x163_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" >逐次计算</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" ></td><td align="center" valign="middle" >64.8</td><td align="center" valign="middle"  rowspan="2"  >58.0%</td></tr><tr><td align="center" valign="middle" >直接计算</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >13</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >18</td><td align="center" valign="middle" >27.24</td></tr><tr><td align="center" valign="middle"  rowspan="2"  ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x164_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" >逐次计算</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" ></td><td align="center" valign="middle" >86.4</td><td align="center" valign="middle"  rowspan="2"  >60.3%</td></tr><tr><td align="center" valign="middle" >直接计算</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >18</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >24</td><td align="center" valign="middle" >34.32</td></tr><tr><td align="center" valign="middle"  rowspan="2"  ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x165_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" >逐次计算</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x166_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x167_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x168_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x169_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle"  rowspan="2"  >67.2%</td></tr><tr><td align="center" valign="middle" >直接计算</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x170_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x171_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x172_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x173_hanspub.png" xlink:type="simple"/></inline-formula></td></tr></tbody></table></table-wrap><p>表1. 不同方法在底层域运算量比较</p><p>阶段，计算出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x174_hanspub.png" xlink:type="simple"/></inline-formula>的值存储在一个表中，供下一阶段查询使用；③赋值阶段，利用预计算表计算出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x175_hanspub.png" xlink:type="simple"/></inline-formula>[<xref ref-type="bibr" rid="hanspub.16451-ref11">11</xref>] [<xref ref-type="bibr" rid="hanspub.16451-ref12">12</xref>] 。</p><p>将标量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x176_hanspub.png" xlink:type="simple"/></inline-formula>改写成(5.1)式：</p><disp-formula id="hanspub.16451-formula172"><label>(5.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x177_hanspub.png"  xlink:type="simple"/></disp-formula><p>那么计算标量乘<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x178_hanspub.png" xlink:type="simple"/></inline-formula>可改写成(5.2)式：</p><disp-formula id="hanspub.16451-formula173"><label>(5.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x179_hanspub.png"  xlink:type="simple"/></disp-formula><p>算法2：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x180_hanspub.png" xlink:type="simple"/></inline-formula></p><disp-formula id="hanspub.16451-formula174"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x181_hanspub.png"  xlink:type="simple"/></disp-formula><p>算法3：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x182_hanspub.png" xlink:type="simple"/></inline-formula></p><disp-formula id="hanspub.16451-formula175"><graphic xlink:href="http://html.hanspub.org/file/12-2620218x183_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s7_2"><title>5.2. 算法性能分析与结论</title><p>算法2是对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x184_hanspub.png" xlink:type="simple"/></inline-formula>进行重新编码，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x185_hanspub.png" xlink:type="simple"/></inline-formula>展开数字集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x186_hanspub.png" xlink:type="simple"/></inline-formula>，且在其展开式中任意<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x187_hanspub.png" xlink:type="simple"/></inline-formula>个邻接数字中最多只有1个非零数字[<xref ref-type="bibr" rid="hanspub.16451-ref10">10</xref>] ，故任意两个非零数字之间至少有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x188_hanspub.png" xlink:type="simple"/></inline-formula>个0，其非零数字密度为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x189_hanspub.png" xlink:type="simple"/></inline-formula>，算法平均需要<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x190_hanspub.png" xlink:type="simple"/></inline-formula>次3倍点和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x191_hanspub.png" xlink:type="simple"/></inline-formula>次点加。</p><p>算法3与传统滑动窗口算法的区别在于赋值阶段，对于固定基点的标量乘法，预计算表不需要频繁更换，故建立预计算表在整个标量乘中所占比例不大[<xref ref-type="bibr" rid="hanspub.16451-ref9">9</xref>] ，而赋值阶段对于提高标量乘的计算复杂度就显得格外重要。赋值阶段的复杂性与非零窗口的个数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x192_hanspub.png" xlink:type="simple"/></inline-formula>有关，文献[<xref ref-type="bibr" rid="hanspub.16451-ref13">13</xref>] 给出非零窗口的密度是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x193_hanspub.png" xlink:type="simple"/></inline-formula>，而在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x194_hanspub.png" xlink:type="simple"/></inline-formula>展开式中任意个非零数字之间至少有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x195_hanspub.png" xlink:type="simple"/></inline-formula>个0，故Step 4最多执行<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x196_hanspub.png" xlink:type="simple"/></inline-formula>次，每次执行一次<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x197_hanspub.png" xlink:type="simple"/></inline-formula>和一次点加，故算法3的计算复杂度为</p><disp-formula id="hanspub.16451-formula176"><label>(5.3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/12-2620218x198_hanspub.png"  xlink:type="simple"/></disp-formula><p>由于滑动窗口可变，因此可以有效地减少非零窗口的长度，从而减少点加运算量；此外，由于在Step 4中采用直接计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x199_hanspub.png" xlink:type="simple"/></inline-formula>的递归算法，在逆乘率较高时有效地减少了算法中3倍点总的计算量。</p></sec></sec><sec id="s8"><title>6. 结束语</title><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x200_hanspub.png" xlink:type="simple"/></inline-formula>作为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x201_hanspub.png" xlink:type="simple"/></inline-formula>的一种特殊类型，具有其他有限域不可比拟的特点，它可提供更多更加灵活的加密方案且具备较高的安全性。本文采用递归思想，研究了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x202_hanspub.png" xlink:type="simple"/></inline-formula>椭圆曲线在仿射坐标下直接计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x203_hanspub.png" xlink:type="simple"/></inline-formula>算法，对底层域进行改进，当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x204_hanspub.png" xlink:type="simple"/></inline-formula>时，相对于逐次计算而言效率提升到了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/12-2620218x205_hanspub.png" xlink:type="simple"/></inline-formula>以上；同时采用滑动窗口标量乘的方法对上层域进行改进，既有效减少了非零窗口的长度又减少了算法中3倍点总的运算量。</p></sec><sec id="s9"><title>基金项目</title><p>国家自然科学基金NSFC11271040资助。</p></sec><sec id="s10"><title>文章引用</title><p>申少芳,周梦. GF(3<sup>n</sup>)椭圆曲线密码体制中标量乘快速算法研究Research on Fast Algorithms for Scalar Multiplication of Elliptic Curve Cryptography over GF (3<sup>n</sup>)[J]. 应用数学进展, 2015, 04(04): 390-399. http://dx.doi.org/10.12677/AAM.2015.44049</p></sec><sec id="s11"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.16451-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Koblitz, N. (1987) Elliptic Curve Cryptosystems. Mathematics of Computation, 48, 203-209.  
&lt;br&gt;http://dx.doi.org/10.1090/S0025-5718-1987-0866109-5</mixed-citation></ref><ref id="hanspub.16451-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">汪宏, 李宝, 于伟. 特征3有限域上椭圆曲线Montgomery算法[J]. 通信学报, 2008, 29(10): 25-29.</mixed-citation></ref><ref id="hanspub.16451-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Kim, K.H., Kim, S.I. and Choe, J.S. (2007) New Fast Algorithms for Arithmetic on Elliptic Curves over Fields of Characteristic Three. Cryptology ePrint Archive: Report 2007/179. http://eprint.iacr.org/2007/179</mixed-citation></ref><ref id="hanspub.16451-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">沈丽敏, 陈恭亮, 游永兴. 特征为3的域上的椭圆曲线点的快速计算[J]. 数学杂志, 2004, 24(5): 557-560.</mixed-citation></ref><ref id="hanspub.16451-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">李超. 特征为3的有限域上用于密码体制的椭圆曲线[J]. 通信保密,1994, 58(2): 42-47.</mixed-citation></ref><ref id="hanspub.16451-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Kim, K.H. (2007) A Note on Point Multiplication on Supersingular Elliptic Curves over Ternary Fields. Cryptology ePrint Archive: Report 2007/310. http://eprint.iacr.org/2007/310</mixed-citation></ref><ref id="hanspub.16451-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Hankerson, D., 等著, 张焕国, 译. 椭圆曲线密码学导论[M]. 北京: 电子工业出版社, 2005.</mixed-citation></ref><ref id="hanspub.16451-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Smart, N.P. and Westwood, E.J. (2003) Point Multiplication on Ordinary Elliptic Curves over Fields of Characteristic Three. Applicable Algebra in Engineering, Communication and Computing, 13, 485-497. 
&lt;br&gt;http://dx.doi.org/10.1007/s00200-002-0114-0</mixed-citation></ref><ref id="hanspub.16451-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Al-Daoud, E., Mahmod, R., Rushdan, M. and Kilicman, A. (2002) A New Addition Formula for Elliptic Curves over GF(2n). IEEE Transactions on Computers, 51, 972-975. &lt;br&gt;http://dx.doi.org/10.1109/TC.2002.1024743</mixed-citation></ref><ref id="hanspub.16451-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Solinas. J.A. (2000) Efficient Arithmetic on Koblitz Curves. Designs, Codes and Cryptography, 19, 195-249.  
&lt;br&gt;http://dx.doi.org/10.1023/A:1008306223194</mixed-citation></ref><ref id="hanspub.16451-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">侯红祥. 椭圆曲线上快速标量乘的研究[D]: [硕士学位论文]. 扬州: 扬州大学, 2008.</mixed-citation></ref><ref id="hanspub.16451-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Takagi, T., Yen, S.M. and Wu, B.C. (2004) Radix-r Non-Adjacent Form. Proceedings of 7th Information Security Conference, ISC 2004, Palo Alto, 27-29 September 2004, 2004, 99-110.  
&lt;br&gt;http://dx.doi.org/10.1007/978-3-540-30144-8_9</mixed-citation></ref><ref id="hanspub.16451-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">刘连浩, 申勇. 椭圆曲线密码体制中标量乘法的快速算法[J]. 计算机应用研究, 2009, 26(3): 1104-1108.</mixed-citation></ref></ref-list></back></article>