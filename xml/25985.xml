<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2018.77102</article-id><article-id pub-id-type="publisher-id">AAM-25985</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20180700000_44664627.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  管道路线的优化设计
  Pipeline Route Optimization Design
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>昊东</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>杜</surname><given-names>家康</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>博瀚</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>任</surname><given-names>庆军</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>孙</surname><given-names>洪春</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>济南大学信息科学与工程学院，山东 济南</addr-line></aff><aff id="aff2"><addr-line>临沂大学数学与统计学院，山东 临沂</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>09</day><month>07</month><year>2018</year></pub-date><volume>07</volume><issue>07</issue><fpage>848</fpage><lpage>856</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  随着工业进程和城市化的加快，在城市建设中对自来水的需求量越来越大，而管道是运输自来水的重要途径。本文，基于Dijkstra算法的思想，针对管网系统中管道路线，进行了最短路线的优化设计，给出了算法步骤，并利用MATLAB编制了优化设计的计算程序，得出了管道铺设的最短路径。最后，通过进行数值试验，进一步的验证了模型的合理性、实用性，模型的建立具有很大的社会经济效益，节约了社会资源。
   With the rapid development of industry and urbanization, the demand for tap water is increasing in urban construction, and pipeline is an important way to transport tap water. The thought of this article, based on the Dijkstra algorithm, in view of the network system of pipeline route, the shortest route optimization design, algorithm steps are given; and by using the MATLAB calculation program of optimal design for the pipeline, the shortest path is obtained. Finally, through the numerical test, the rationality and practicability of the model are further verified. The establish-ment of the model has great social and economic benefits and saves social resources.
 
</p></abstract><kwd-group><kwd>最短路线，优化设计，Dijkstra算法, The Shortest Route</kwd><kwd> Optimal Design</kwd><kwd> Dijkstra’s Algorithm</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>管道路线的优化设计<sup> </sup></title><p>陈昊东<sup>1</sup>，杜家康<sup>1</sup>，张博瀚<sup>2</sup>，任庆军<sup>1</sup>，孙洪春<sup>1</sup></p><p><sup>1</sup>临沂大学数学与统计学院，山东 临沂</p><p><sup>2</sup>济南大学信息科学与工程学院，山东 济南</p><p><img src="//html.hanspub.org/file/14-2620684x1_hanspub.png" /></p><p>收稿日期：2018年6月24日；录用日期：2018年7月13日；发布日期：2018年7月20日</p><disp-formula id="hanspub.25985-formula34"><graphic xlink:href="//html.hanspub.org/file/14-2620684x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>随着工业进程和城市化的加快，在城市建设中对自来水的需求量越来越大，而管道是运输自来水的重要途径。本文，基于Dijkstra算法的思想，针对管网系统中管道路线，进行了最短路线的优化设计，给出了算法步骤，并利用MATLAB编制了优化设计的计算程序，得出了管道铺设的最短路径。最后，通过进行数值试验，进一步的验证了模型的合理性、实用性，模型的建立具有很大的社会经济效益，节约了社会资源。</p><p>关键词 :最短路线，优化设计，Dijkstra算法</p><disp-formula id="hanspub.25985-formula35"><graphic xlink:href="//html.hanspub.org/file/14-2620684x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/14-2620684x7_hanspub.png" /> <img src="//html.hanspub.org/file/14-2620684x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>水是生命之源，是城市发展的基础。近些年来，随着我国经济的迅猛发展，城市化进程和人口迅速扩张，城市用水量也日益剧增，城市供水面临的问题越来越突出，严重限制了城市的进一步发展。而管道是运输水源的重要途径，所以说对管道的铺设进行优化设计显得刻不容缓。管道铺设问题的优化其根本目的在于能够最大限度的缩小管道的铺设长度，其实也就是我们常说的最短路径问题。目前，国内外的专家学者对最短路线问题已经有了很多的研究。比如，王俊珺、夏华丽( [<xref ref-type="bibr" rid="hanspub.25985-ref1">1</xref>] )选择Dijkstra算法作为核心算法；并且针对原始Dijkstra算法的不足，分别对原始Dijkstra算法的数据存储方式、执行效率和数据结构提出了优化方法；施益昌、郑贤斌等( [<xref ref-type="bibr" rid="hanspub.25985-ref2">2</xref>] )应用Floyd算法，借助于MATLAB程序设计语言对动态规划中最短路径进行了有效的设计；赵娟、王建新( [<xref ref-type="bibr" rid="hanspub.25985-ref3">3</xref>] )运用动态规划方法的基本思想求解最短路径问题；张水舰、刘学军等( [<xref ref-type="bibr" rid="hanspub.25985-ref4">4</xref>] )定义了动态随机最短路径，给出了动态随机最短路径优化数学模型，提出了一种动态随机最短路径遗传算法；王树西、吴政学( [<xref ref-type="bibr" rid="hanspub.25985-ref5">5</xref>] )通过对Dijkstra算法进行改进，解决了Dijkstra算法退出机制对不联通的有向图是无效的，会陷入死循环等问题；王荣、江东、韩惠( [<xref ref-type="bibr" rid="hanspub.25985-ref6">6</xref>] )将Floyd与Dijkstra算法结合，优化后的算法在很大程度上减少了运算次数和时间，提高了算法的时间及空间复杂度，算法效率较高。本文主要基于Dijkstra算法的思想并作出了改进，Dijkstra算法是保证源点到各个顶点之间的路程最短，而改进后的算法是在保证经过所有顶点的前提下，使得总的路线最短，这样就提出了管道铺设最短路线的优化设计方案，给出了算法步骤，并编制出了MATLAB程序。</p></sec><sec id="s4"><title>2. 优化设计数学模型</title><p>假设有一个自来水厂为周边的城市进行供水，自来水厂净化的水足够多，完全可以供应周边城市，那我们如何进行管道的铺设可以将自来水厂生产的自来水供应给周边的城市又保证所铺设的管道路线最短呢？下面我们给出两种思路的管道铺设优化方案。</p><sec id="s4_1"><title>2.1. 单条线路的管道铺设方案(附录1)</title><p>假设自来水厂的位置是固定的，它要供给给周边n个城市的自来水，并且我们已知任何一个城市之间的距离以及任何一个城市和自来水厂的距离。因为我们建造的是单条线路的管道，即管道由自来水厂出发经过所有的城市，最终到达最后一个城市，所以我们先固定自来水厂找到和自来水厂距离最近的城市，然后再以该城市为起点找到和它距离最近的城市，进行迭代，每次都选取最近的距离，最终所形成的路线也是最短的。</p><p>例如，在图1所示中，1表示自来水厂，2~6表示自来水厂要供给自来水的五个城市，采用单条线路进行管道铺设，每段路线长度如图1所示，问如何才能使得铺设管道的总路线最短？</p><p>通过计算得知，从自来水厂开始铺设管道先到达3号城市，由3号城市再铺到5号城市，再到2号城市，再由2号城市到4号城市，最后铺到6号城市结束。即：1→3→5→2→4→6。图中红线部分即为</p><p>图1. 单条线路管道铺设图</p><p>管道铺设的分布图(长度单位为km)，总长度为11.3 km。</p><p>下面我们通过矩阵的形式进行解释：</p><p>第一步，构造自来水厂与各个城市之间的距离以及各个城市之间的距离，设 a 1 j 为自来水厂和第j个城市之间的距离， b i j ( i = 1 , 2 , ⋯ , n ; j = 1 , 2 , ⋯ , n ) 表示为第i个城市与第j个城市之间的距离，这样就可以建立一个 n &#215; n 的矩阵A。</p><p>A = ( a 11 a 12 ⋅ ⋅ ⋅ a 1 n b 11 b 12 ⋅ ⋅ ⋅ b 1 n ⋮ ⋮ ⋱ ⋮ b n 1 b n 2 ⋅ ⋅ ⋅ b n n )</p><p>其中，在矩阵A中当 i = j 时， b i j 表示的为自身之间的距离，为避免对数据准确性造成影响，故设为无穷大数。</p><p>第二步，比较矩阵A的第一列，得出第一列的最小值，设为 a 1 k ，其含义为自来水厂与第k个城市之间的距离最短。</p><p>第三步，以第k个城市为起点，找与第k个城市距离最短的城市。我们需要先找到矩阵A的第 k + 1 行，因为第 k + 1 行表示的是第k个城市与其他城市之间的距离。所以我们比较第 k + 1 行中各个元素的大小，可得第 k + 1 行中最小的元素为 b ( k + 1 ) m ，其含义为第k个城市与第m个城市之间距离最短。输出城市m后，将元素 b ( k + 1 ) m 所在的列上所有的元素都变为无穷大值，得到矩阵B。</p><p>B = ( a 11 ⋅ ⋅ ⋅ a 1 ( m − 1 ) ∞ a 1 ( m + 1 ) ⋅ ⋅ ⋅ a 1 n ⋮ ⋱ ⋮ ⋱ ⋮ ⋱ ⋮ b ( k + 1 ) 1 ⋅ ⋅ ⋅ b ( k + 1 ) ( m − 1 ) ∞ b ( k + 1 ) ( m + 1 ) ⋅ ⋅ ⋅ b ( k + 1 ) n ⋮ ⋱ ⋮ ⋱ ⋮ ⋱ ⋮ b n 1 ⋅ ⋅ ⋅ b n ( m − 1 ) ∞ b n ( m + 1 ) ⋅ ⋅ ⋅ b n n )</p><p>第四步，以城市m为起点，找到与城市m距离最近的城市。先找到矩阵B的第 m + 1 行，比较 m + 1 行中所有元素的大小，得出 b ( m + 1 ) p 为最小值。按照第三步的做法将p输出，并将 b ( m + 1 ) p 所在列的所有元素变为无穷大值，得到矩阵C。</p><p>C = ( a 11 ⋅ ⋅ ⋅ a 1 ( p − 1 ) ∞ a 1 ( p + 1 ) ⋅ ⋅ ⋅ a 1 n ⋮ ⋱ ⋮ ⋱ ⋮ ⋱ ⋮ b ( m + 1 ) 1 ⋅ ⋅ ⋅ b ( m + 1 ) ( p − 1 ) ∞ b ( m + 1 ) ( p + 1 ) ⋅ ⋅ ⋅ b ( m + 1 ) n ⋮ ⋱ ⋮ ⋱ ⋮ ⋱ ⋮ b n 1 ⋅ ⋅ ⋅ b n ( p − 1 ) ∞ b n ( p + 1 ) ⋅ ⋅ ⋅ b n n )</p><p>第五步，每次都按照第三步的方法依次进行迭代，每次输出一个值，直到最后输出完所有值，进行完n次迭代，根据依次输出的值就可以知道从自来水厂经过各个城市的最短单条线路的顺序。</p><p>本题是基于迭代思想并且运用矩阵给出的算最短路径的方法，该方法简单易懂，过程相对简单，不过对于计算机要求较高，运算起来较为麻烦，对前期数据要求较为具体，但是也从迭代的方面提出了最短路径的算法。</p></sec><sec id="s4_2"><title>2.2. 树状的管道铺设方案(附录2)</title><p>我们下面运用Dijkstra算法的思想对上述问题进行进一步的优化求解，在我们的日常生活中自来水厂给周围城市进行供水一般来说不会采用单线路的管道运水方案，因为这样来说不能够做到铺设管道总路线最短，现在一般都采用树状形式的管道输水路线，这样既可以做到铺设管道总路线最短，又可以保证使用的管材最省。通过Dijkstra算法求解管道铺设总路线最短的主要思想是每次找到离源点最近的一个点，然后将该点看做源点再寻找离它最近点，通过层层迭代，最终就可以找到铺设管道的最短路线。</p><p>例如，在图2所示中，1表示自来水厂，2~6表示自来水厂要供给自来水的五个城市，现在采用树状的管道铺设方案对管道进行铺设，每段路线长度如图1所示，问如何才能使得铺设管道的总路线最短？</p><p>同样是上面的问题，如果我们采用树状的管道铺设方案，其管道铺设方案如下图所示。</p><p>下面我们具体的进行解释：</p><p>第一步，我们先将源点到各个城市之间的距离和各个城市之间的距离用矩阵的形式表示出来。用0表示自来水厂， 1 − n 表示n个城市， a 0 j ( j = 1 , 2 , ⋅ ⋅ ⋅ , n ) 表示自来水厂到n个城市之间的距离， a i j ( i = 1 , 2 , ⋅ ⋅ ⋅ , n ; j = 1 , 2 , ⋅ ⋅ ⋅ , n ) 表示第i个城市到第j个城市之间的距离， a i 0 ( i = 1 , 2 , ⋅ ⋅ ⋅ , n ) 表示n个城市到自来水厂的距离，则表示上述距离的矩阵A可表示为：</p><p>A = ( a 00 a 01 ⋅ ⋅ ⋅ a 0 n a 10 a 11 ⋅ ⋅ ⋅ a 1 n ⋮ ⋮ ⋱ ⋮ a n 0 a n 1 ⋅ ⋅ ⋅ a n n )</p><p>其中矩阵A中 a i j ( i = j ) 时表示的是自身之间的距离，为避免对数据准确性造成影响，故设为无穷大数。</p><p>第二步，先对矩阵第一行自来水厂与各个城市之间的距离大小进行比较，假设自来水厂和城市k之间的距离最小，即 a 0 k 是第一行所有元素中最小的。先输出k值，然后将矩阵中的 a 0 k 和第 k + 1 行的元素 a k 0 都用无穷大值替换，得到矩阵B。</p><p>B = ( a 00 ⋅ ⋅ ⋅ a 0 ( k − 1 ) ∞ a 0 ( k + 1 ) ⋅ ⋅ ⋅ a 0 n ⋮ ⋱ ⋮ ⋮ ⋮ ⋱ ⋮ a ( k − 1 ) 0 ⋅ ⋅ ⋅ a ( k − 1 ) ( k − 1 ) a ( k − 1 ) k a ( k − 1 ) ( k + 1 ) ⋅ ⋅ ⋅ a ( k − 1 ) n ∞ ⋅ ⋅ ⋅ a k ( k − 1 ) a k k a k ( k + 1 ) ⋅ ⋅ ⋅ a k n a ( k + 1 ) 0 ⋅ ⋅ ⋅ a ( k + 1 ) ( k − 1 ) a ( k + 1 ) k a ( k + 1 ) ( k + 1 ) ⋅ ⋅ ⋅ a ( k + 1 ) n ⋮ ⋱ ⋮ ⋮ ⋮ ⋱ ⋮ a n 0 ⋅ ⋅ ⋅ a n ( k − 1 ) a n k a n ( k + 1 ) ⋅ ⋅ ⋅ a n n )</p><p>图2. 树状管道铺设图</p><p>第三步，比较第1行和第 k + 1 行中所有的元素求出最小值，下面假设几种不同的情况：</p><p>① 若 a 0 m 是其中的最小值，那么表示从自来水厂直接到城市m距离最小；</p><p>② 若 a k p 是其中的最小值，那么表示从第k个城市到第p个城市之间距离最小，我们就可以从城市k直接铺设管道到达城市p，这样就会减少管道铺设的总线路，达到最节约管材。</p><p>第四步，先假设第三步中的②成立，然后将 a k p 以及矩阵B中第 p + 1 行元素 a p k 变为无穷大值，得到新的矩阵C，按照上述的方法再比较矩阵C中的第1行、第 k + 1 行和第 p + 1 行中的所有元素得出最小的元素，下面对最小的元素进行分情况讨论：</p><p>① 若 a 0 q 是最小的元素，即从自来水厂直接铺设管道到城市q会使得总路线最短；</p><p>② 若 a k w 是最小的元素，即从城市k铺设管道到城市w会使得总路线最短；</p><p>③ 若 a p r 是最小的元素，即从城市p铺设管道到城市r会使得总路线最短。</p><p>第五步，根据上述的做法进行层层迭代，就可以求出铺设管道到所有城市总路线最短的方案。</p><p>该方法较为贴合实际，对现实的生活中管道铺设方案有较为重要的指导意义，本算法是基于Dijkstra算法，在此基础上进行的进一步的改进，Dijkstra算法研究的是源点到各个顶点之间的路程最短，而我们这个算法是在保证经过所有顶点的前提下，使得总的路线最短，这样就可以达到铺设管道所用管材最省，节约社会资源。</p></sec></sec><sec id="s5"><title>3. 数值算例</title><p>有一个自来水厂要给周围的5个城市供水，自来水厂和5个城市依次用1~6个数字进行表示，自来水厂和5个城市的分布图如图1所示，自来水厂到各个城市之间的距离以及5个城市之间的距离如表1，求在经过所有城市的前提下，从自来水厂如何铺设管道？</p><p>求解思路：首先，用矩阵形式表示自来水厂和5个城市以及5个城市之间的距离，然后比较第一行中元素的大小，根据第一行元素的位置，找到下一个元素的位置，将两个元素都变为无穷大值，再比较两行的元素的大小得出最小值，再逐次往下计算。具体求解过程：</p><p>Step1：用矩阵形式表示自来水厂和各个城市之间的距离以及5个城市之间的距离：</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Distance between point</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >线段</th><th align="center" valign="middle" >距离(&#180;10<sup>5</sup> m)</th></tr></thead><tr><td align="center" valign="middle" >1~2</td><td align="center" valign="middle" >3.7</td></tr><tr><td align="center" valign="middle" >1~3</td><td align="center" valign="middle" >2.5</td></tr><tr><td align="center" valign="middle" >1~4</td><td align="center" valign="middle" >4.6</td></tr><tr><td align="center" valign="middle" >1~5</td><td align="center" valign="middle" >3.9</td></tr><tr><td align="center" valign="middle" >1~6</td><td align="center" valign="middle" >2.6</td></tr><tr><td align="center" valign="middle" >2~3</td><td align="center" valign="middle" >1.9</td></tr><tr><td align="center" valign="middle" >2~4</td><td align="center" valign="middle" >2.1</td></tr><tr><td align="center" valign="middle" >2~5</td><td align="center" valign="middle" >3.0</td></tr><tr><td align="center" valign="middle" >2~6</td><td align="center" valign="middle" >2.9</td></tr><tr><td align="center" valign="middle" >3~4</td><td align="center" valign="middle" >1.5</td></tr><tr><td align="center" valign="middle" >3~5</td><td align="center" valign="middle" >1.1</td></tr><tr><td align="center" valign="middle" >3~6</td><td align="center" valign="middle" >5.6</td></tr><tr><td align="center" valign="middle" >4~5</td><td align="center" valign="middle" >8.4</td></tr><tr><td align="center" valign="middle" >4~6</td><td align="center" valign="middle" >2.6</td></tr><tr><td align="center" valign="middle" >5~6</td><td align="center" valign="middle" >4.1</td></tr></tbody></table></table-wrap><p>表1. 各个点之间的距离</p><p>A = ( ∞ 3.7 2.5 4.6 3.9 2.6 3.7 ∞ 1.9 2.1 3 2.9 2.5 1.9 ∞ 1.5 1.1 5.6 4.6 2.1 1.5 ∞ 8.4 2.6 3.9 3 1.1 8.4 ∞ 4.1 2.6 2.9 5.6 2.6 4.1 ∞ )</p><p>Step2：先比较第一行元素的大小值，经过比较得出第一行中最小值为 a 13 = 2.5 ，再将矩阵A中的 a 13 和 a 31 都用无穷大值替换，得到矩阵B：</p><p>B = ( ∞ 3.7 ∞ 4.6 3.9 2.6 3.7 ∞ 1.9 2.1 3 2.9 ∞ 1.9 ∞ 1.5 1.1 5.6 4.6 2.1 1.5 ∞ 8.4 2.6 3.9 3 1.1 8.4 ∞ 4.1 2.6 2.9 5.6 2.6 4.1 ∞ )</p><p>即先从自来水厂出发铺设管道到第3个城市。</p><p>Step3：比较矩阵中的第一行和第三行的元素，得最小值 a 35 = 1.1 ，再将矩阵B的 a 35 和 a 53 用无穷大值替换，得到矩阵C：</p><p>C = ( ∞ 3.7 ∞ 4.6 3.9 2.6 3.7 ∞ 1.9 2.1 3 2.9 ∞ 1.9 ∞ 1.5 ∞ 5.6 4.6 2.1 1.5 ∞ 8.4 2.6 3.9 3 ∞ 8.4 ∞ 4.1 2.6 2.9 5.6 2.6 4.1 ∞ )</p><p>图3. 管道铺设图</p><p>即从自来水厂铺设管道到第3个城市，再从第3个城市铺设管道到达第5个城市</p><p>Step4：比较矩阵中的第一行、第三行和第五行元素，得最小值是 a 34 = 1.5 ，再将矩阵C中的 a 34 和 a 43 用无穷大值替换，得到矩阵D：</p><p>D = ( ∞ 3.7 ∞ 4.6 3.9 2.6 3.7 ∞ 1.9 2.1 3 2.9 ∞ 1.9 ∞ ∞ ∞ 5.6 4.6 2.1 ∞ ∞ 8.4 2.6 3.9 3 ∞ 8.4 ∞ 4.1 2.6 2.9 5.6 2.6 4.1 ∞ )</p><p>即从自来水厂铺设管道到第3个城市，再从第3个城市铺设管道到达第5个城市，再由第3个城市铺设管道到第4个城市</p><p>Step5：依次进行下去，就可以得到管道铺设方案为从自来水厂铺设管道到第3个城市，再从第3个城市铺设管道到达第5个城市，再由第3个城市铺设管道到第4个城市，由第3个城市铺设管道到第2个城市，再由第4个城市铺设管道到第6个城市，总长为 9.6 &#215; 10 5 m ，分布图如图3所示。</p><p>如果采用单条线路铺设方案，需要铺设的管道长度为 11.3 &#215; 10 5 m ，而采用树状管道铺设方案只需要铺设 9.6 &#215; 10 5 m ，与单条线路管道铺设方案相比在管道铺设长度上减少了15%，所以说树状管道铺设方案对于缩短管道铺设长度具有重要的意义。</p></sec><sec id="s6"><title>文章引用</title><p>陈昊东,杜家康,张博瀚,任庆军,孙洪春. 管道路线的优化设计 Pipeline Route Optimization Design[J]. 应用数学进展, 2018, 07(07): 848-856. https://doi.org/10.12677/AAM.2018.77102</p></sec><sec id="s7"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.25985-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">王俊珺, 夏华丽, 等. 物流配送路线规划中的最短路径研究[J]. 农业网络信息, 2007(5): 60-62.</mixed-citation></ref><ref id="hanspub.25985-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">施益昌, 郑贤斌, 等. 基于MATLAB动态规划中最短路线的实现程序[J]. 电脑学习, 2003(6): 37-38.</mixed-citation></ref><ref id="hanspub.25985-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">赵娟, 王建新. 用动态规划方法求解最短运输路线问题[J]. 现代电子技术, 2012, 35(17): 120-122.</mixed-citation></ref><ref id="hanspub.25985-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">张水舰, 刘学军, 杨洋. 动态随机最短路径算法研究[J]. 物理学报, 2012, 61(16): 7-16.</mixed-citation></ref><ref id="hanspub.25985-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">王树西, 吴政学. 改进的Dijkstra最短路径算法及其应用研究[J]. 计算机科学, 2012, 5(39): 223-228.</mixed-citation></ref><ref id="hanspub.25985-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">王荣, 江东, 韩惠. 基于Floyd方法的最短路径算法优化算法[J]. 甘肃科学报, 2012, 4(24): 114-118.</mixed-citation></ref></ref-list></back></article>