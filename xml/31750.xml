<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2019.88164</article-id><article-id pub-id-type="publisher-id">AAM-31750</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20190800000_81078765.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  求解线性互补约束问题的一个SQP方法
  A SQP Method for Linear Complementary Constraints Problem
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>黄</surname><given-names>青群</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>河池学院数学与统计学院，广西 宜州</addr-line></aff><pub-date pub-type="epub"><day>07</day><month>08</month><year>2019</year></pub-date><volume>08</volume><issue>08</issue><fpage>1398</fpage><lpage>1409</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    对线性互补约束优化问题，利用一个连续可微的光滑互补函数，光滑系数趋于零时，原问题转化为光滑非线性规划问题，再利用SQP算法来求解该光滑非线性规划问题。在适当的条件下，该算法具有全局收敛性，最后给出了数值实验，也证明了该算法是有效的。
    In this paper, equilibrium problem with linear equilibrium constrains is studied. By using a smoothing complimentarily function which is differentiable everywhere, when smoothing parameter tends to zero, the original problem is equivalently transformed to a smoothing nonlinear optimization, then the smooth nonlinear optimization is solved by SQP algorithm. The algorithm converges globally under certain conditions. Finally, numerical experiments are given to prove the effectiveness of the algorithm. 
  
 
</p></abstract><kwd-group><kwd>均衡问题，罚函数，SQP法，全局收敛, Complentarity Problem</kwd><kwd> Penalty Function</kwd><kwd> SQP Method</kwd><kwd> Global Convergence</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>求解线性互补约束问题的一个SQP方法<sup> </sup></title><p>黄青群</p><p>河池学院数学与统计学院，广西 宜州</p><p><img src="//html.hanspub.org/file/12-2621008x1_hanspub.png" /></p><p>收稿日期：2019年7月25日；录用日期：2019年8月12日；发布日期：2019年8月19日</p><disp-formula id="hanspub.31750-formula16"><graphic xlink:href="//html.hanspub.org/file/12-2621008x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>对线性互补约束优化问题，利用一个连续可微的光滑互补函数，光滑系数趋于零时，原问题转化为光滑非线性规划问题，再利用SQP算法来求解该光滑非线性规划问题。在适当的条件下，该算法具有全局收敛性，最后给出了数值实验，也证明了该算法是有效的。</p><p>关键词 :均衡问题，罚函数，SQP法，全局收敛</p><disp-formula id="hanspub.31750-formula17"><graphic xlink:href="//html.hanspub.org/file/12-2621008x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/12-2621008x7_hanspub.png" /> <img src="//html.hanspub.org/file/12-2621008x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>近年来，带均衡约束的数学规划问题因为在经济、工程技术、对策决策等领域的广泛应用而引起关注 [<xref ref-type="bibr" rid="hanspub.31750-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.31750-ref2">2</xref>] 。本文求解一个线性互补均衡约束问题，可以描写为以下形式：</p><p>min     f ( x , y ) s .t .     A x ≤ b ,             w = N x + M y + q ,             0 ≤ w ⊥ y ≥ 0 , (1.1)</p><p>其中 f : R n + m → R ，是连续可微的函数， A ∈ R p &#215; n , N ∈ R m &#215; n , M ∈ R m &#215; m , b ∈ R p , q ∈ R m 。</p><p>如果将互补条件 w ⊥ y 写成内积的形式： w T y = 0 ，那么均衡约束问题等价于一个光滑的非线性规划问题。但众所周知，对于此类非线性划归问题，即使较弱的MFCQ规格,在任何可行点处都不成立，故传统的优化算法一般不能直接用来求解此类问题。</p><p>对线性互补均衡约束问题，先介绍一些常见的光滑函数：</p><p>广义Fischer-Burmeister互补函数：</p><p>ϕ 1 ( a , b ) = a + b − a 2 + b 2 + μ ,</p><p>Zang在文献 [<xref ref-type="bibr" rid="hanspub.31750-ref3">3</xref>] 提出一个如下形式的光滑函数：</p><p>ϕ 2 ( a , μ ) = { 0 , ​ ​ ​ ​                                             a ≤ − μ 2 , 1 2 μ ( a + μ 2 ) 2 ,         − μ 2 &lt; a &lt; μ 2 , a ,                                             a ≥ − μ 2 .</p><p>Song Xu在文献 [<xref ref-type="bibr" rid="hanspub.31750-ref4">4</xref>] 中提出一个如下形式的新的光滑函数：</p><p>ϕ 3 ( a , μ ) = μ ln ∑ i = 1 m e a i μ .</p><p>本文尝试利用互补函数 ϕ ( y i , w i , μ ) = − μ ln ( 1 + e − y i μ ) − μ ln ( 1 + e − w i μ ) ，将问题(1.1)中的互补约束条件</p><p>w ⊥ y 光滑化，将问题(1.1)转化为一光滑非线性规划的一般约束优化问题，然后借助罚函数型SQP方法思想，通过求解后者逼近前者的解，并证明该算法是全局收敛的.</p><p>为了方便，本文采用如下记号：</p><p>z = ( x , y , w ) ,   s = ( x , y ) ,   t = ( y , w ) ,   z k = ( x k , y k , w k ) ,   s k = ( x k , y k ) ,   t k = ( y k , w k ) , t i = ( y i , w i ) ,   d z = ( d x , d y , d w ) ,   d z k = ( d x k , d y k , d w k ) ,   X = { z ∈ X 0 | 0 ≤ w ⊥ y ≥ 0 } , X 0 = { z | A x ≤ b , w = N x + M y + q } ,   A T = ( a 1 T , ⋯ , a p T ) ,   b T = ( b 1 , ⋯ , b p ) .</p><p>本文主要符号解释如下：</p><p>R n 表示一个实n维Euclide空间。</p><p>e 表示各分量均为1的列向量。</p><p>∇ f ( x ) 表示函数 f ( x ) 的一阶导数或梯度。</p><p>∇ 2 f ( x ) 表示函数 f ( x ) 的二阶导数或 Hessian 矩阵。</p><p>u &gt; 0 表示向量u的每一个分量 u j &gt; 0 。</p><p>u ≥ 0 表示向量u的每一个分量 u j ≥ 0 。</p><p>x T 和 A T 分别表示向量x和矩阵A的转置。</p><p>d i a g ( a j , j = 1 , 2 , ~ , m ) 表示以 a j 为对角元素的m阶对角矩阵。</p></sec><sec id="s4"><title>2. 问题光滑化</title><p>记F是问题(1.1)的可行域，定义在向量 z ∈ F 处F的切锥如下：</p><p>L ( z , F ) = { d = lim k → ∞ z k − z τ : z k ∈ F , lim k → ∞ z k = z , τ k ↓ 0 } ,</p><p>对问题(1.1)，需做如下基本假设：</p><p>H 2.1 问题(1.1)中的矩阵M是一个 P 0 矩阵，即所有的主子式均非负。</p><p>H 2.2 对任意的 z ∈ X 0 ，矩阵A的行向量组 { a j | j ∈ L ( z ) } 线性无关。</p><p>H 2.3 问题(1.1)的可行域非空。</p><p>H 2.4 函数 f ( x , y ) 为二阶连续可微的。</p><p>定义 2.1 如果对于可行点 z ∗ = ( x ∗ , y ∗ , w ∗ ) 满足下面的条件，那么称 z ∗ 是问题(1.1)的稳定点：</p><p>d z = ( d x , d y , d w ) ∈ Γ ( X ; z ∗ ) ⇒ ∇ f ( x ∗ , y ∗ ) T d s ≥ 0 ,</p><p>其中 Γ ( X ; z ∗ ) 为X在 z ∗ 处的切锥。</p><p>问题(1.1)的稳定点与其最优解两者之间存在密切的联系，求解问题(1.1)的算法多半集中在稳定点的求解。</p><p>定理 2.1 [<xref ref-type="bibr" rid="hanspub.31750-ref5">5</xref>] 假设 z ∗ = ( x ∗ , y ∗ , w ∗ ) ∈ X 满足下层非退化条件：</p><p>( y i , w i ) ≠ ( 0 , 0 ) ,     ∀ i = 1 , ⋯ , m ,</p><p>则 z ∗ 为问题(1.1)的一个稳定点的充分必要条件是存在乘子 ( λ ∗ , u ∗ , v ∗ ) ，使得下面的方程组成立：</p><p>( ∇ f x ( x ∗ , y ∗ ) ∇ f y ( x ∗ , y ∗ ) 0 ) + ( A T 0 0 ) λ ∗ + ( N T M T − I ) u ∗ + ( 0 W ∗ Y ∗ ) v ∗ = 0 , ( A x ∗ − b ) T λ ∗ = 0 ,     A x ∗ − b ≥ 0 ,     λ ∗ ≥ 0 , (2.1)</p><p>其中 W ∗ = d i a g ( w i ∗ , i = 1 , ⋯ , m ) , Y ∗ = d i a g ( y i ∗ , i = 1 , ⋯ , m ) 。</p><p>本文为问题(1.1)提出一个新的光滑函数.</p><p>令 φ ( y , w ) = min { y , w } ，其中 min { y , w } 定义为 min { y i , w i } e , i = 1 , ⋯ , m ， e = ( 1 , ⋯ , 1 ) T ∈ R m 。</p><p>有</p><p>y T w = 0 , y ≥ 0 , w ≥ 0 ⇔ φ ( y , w ) = min { y , w } = 0. (2.2)</p><p>定义函数 Φ ∈ R 2 m &#215; [ 0 , + ∞ ) ：</p><p>Φ ( a , b , μ ) = ( ϕ ( a 1 , b 1 , μ ) ⋮ ϕ ( a m , b m , μ ) ) , (2.3)</p><p>其中 ϕ ∈ R 2 m &#215; [ 0 , + ∞ ) ， μ 是一个非负的参数，</p><p>ϕ ( a , b , μ ) = − μ ln ( 1 + e − a μ ) − μ ln ( 1 + e − b μ ) , (2.4)</p><p>易知对于固定的 μ &gt; 0 ，函数 ϕ ( ⋅ , ⋅ , μ ) 处处可微.</p><p>∇ ϕ ( y , w , μ ) = ( ∇ y ϕ ( y , w , μ ) ∇ w ϕ ( y , w , μ ) ) = ( ∂ ϕ ( y 1 , w 1 , μ ) ∂ y 1 , ⋯ , ∂ ϕ ( y m , w m , μ ) ∂ y m , ∂ ϕ ( y 1 , w 1 , μ ) ∂ w 1 , ⋯ , ∂ ϕ ( y m , w m , μ ) ∂ w m ) T = ( e − y 1 μ 1 + e − y 1 μ , ⋯ , e − y m μ 1 + e − y m μ , e − w 1 μ 1 + e − w 1 μ , ⋯ , e − w m μ 1 + e − w m μ ) T . (2.5)</p><p>ϕ ( a , b , μ ) 有一些很好的性质：</p><p>lim μ → 0 ϕ ( a , b , μ ) = lim μ → 0 − μ ln ( 1 + e − a μ ) − μ ln ( 1 + e − b μ ) = 0 ,</p><p>且当 μ = 0 时，</p><p>lim μ → 0 Φ ( y , w , μ ) = φ ( y , w ) = 0. (2.6)</p><p>由上式，做如下定义：</p><p>Φ ( y , w , 0 ) = φ ( y , w ) , (2.7)</p><p>从而有</p><p>lim μ → 0 ϕ ( y , w , μ ) = ϕ ( y , w , 0 ) . (2.8)</p><p>如将问题(1.1)的互补条件转化为线性方程组 ϕ ( y , w , 0 ) = 0 , i = 1 , ⋯ , m 。则提出以下标准非线性规划问题：</p><p>min   f ( x , y ) s .t .     A x ≤ b ,             w = N x + M y + q ,             Φ ( y , w , μ ) = 0 , (2.9)</p><p>当 μ ≥ 0 且充分逼近于0时，问题(2.9)是原问题(1.1)的一个近似逼近；当 μ = 0 时，问题(2.9)是原问题(1.1)的等价；当 μ &gt; 0 时，问题(2.9)是一个一般的可微非线性规划问题。</p><p>对于 z = ( x , y , w ) ∈ R n + 2 m ，可以定义如下罚函数 φ : R n + 2 m &#215; ( 0 , + ∞ ) &#215; ( 0 , + ∞ ) → R ：</p><p>φ ( z , ε , μ ) = f ( x , y ) + ε ∑ i = 1 m | ϕ ( y i , w i , μ ) | , (2.10)</p><p>其中 ε &gt; 0 是罚参数.</p><p>罚函数 φ 在z处沿方向 d z 的方向导数为 φ ′ ( z , ε , μ , d z ) ：</p><p>φ ′ ( z , ε , μ , d z ) = ∇ f ( s ) T d s + ε ∑ i ∈ I + ∇ ϕ ( t i , μ ) T d t i + ε ∑ i ∈ I 0 | ∇ ϕ ( t i , μ ) T d t i | − ε ∑ i ∈ I − | ∇ ϕ ( t i , μ ) T d t i | , (2.11)</p><p>其中下指标集定义如下：</p><p>I + ≡ I + ( y , w , μ ) = { i | ϕ ( y i , w i , μ ) &gt; 0 } , I 0 ≡ I 0 ( y , w , μ ) = { i | ϕ ( y i , w i , μ ) = 0 } , I − ≡ I − ( y , w , μ ) = { i | ϕ ( y i , w i , μ ) &lt; 0 } .</p></sec><sec id="s5"><title>3. 预备知识与算法</title><p>引理3.1 对于任意的 ( a , b , μ ) ∈ R 2 &#215; ( 0 , + ∞ ) ，且 ( a , b , μ ) ≠ ( 0 , 0 , 0 ) ，有</p><p>0 &lt; ∂ a ϕ ( a , b , μ k ) &lt; 1 , 0 &lt; ∂ b ϕ ( a , b , μ k ) &lt; 1 ,     i = 1 , ⋯ , m , (3.1)</p><p>0 &lt; ( ∂ ϕ ( a , b , μ k ) ∂ a ) 2 + ( ∂ ϕ ( a , b , μ k ) ∂ b ) 2 ≤ 2 (3.2)</p><p>成立。</p><p>证明：由(2.5)，有(3.1)成立。</p><p>接下来证明(3.2)式如下：</p><p>( ∂ ϕ ( y , w , μ k ) ∂ y ) 2 + ( ∂ ϕ ( y , w , μ k ) ∂ w ) 2 = ( e − y μ 1 + e − y μ ) 2 + ( e − w μ 1 + e − w μ ) 2 ≤ ( e − y μ e − y μ ) 2 + ( e − w μ e − w μ ) 2 = 2.</p><p>设 z k = ( x k , y k , w k ) ∈ X 0 ，是算法第k步的迭代点， μ &gt; 0 ， B k 是一个 n + 2 m 阶的对称正定矩阵，在算法的第k步迭代中，求解以下二次序列子问题</p><p>min     ∇ f ( x k     y k ) T ( d x d y ) + 1 2 ( d x T     d y T     d w T ) B k ( d x d y d w ) , s .t .         A x k + A d x − b ≤ 0 ,                 d w − N d x − M d y = 0 ,                 Φ ( t k , μ k ) + ∇ t Φ ( t k , μ ) T d t = 0. (3.3)</p><p>求解(3.3)式，得解 d z k = ( d x k     d y k     d w k ) ，及相应的KKT乘子 ( λ k , l k , m k ) ，定义 ∇ Φ ( y k , w k , μ k ) ∈ R 2 m &#215; R m &#215; R → R m 。</p><p>∇ Φ ( y k , w k , μ k ) = ( D y k D w k ) , (3.4)</p><p>其中</p><p>D y k = d i a g ( ∂ y i ϕ ( y i k , w i k , μ k ) ) ,     i = 1 , ⋯ , m D w k = d i a g ( ∂ w i ϕ ( y i k , w i k , μ k ) ) ,     i = 1 , ⋯ , m</p><p>从而QP子问题(3.3)也可以写成如下形式：</p><p>min     ∇ f ( x k     y k ) T ( d x d y ) + 1 2 ( d x T     d y T     d w T ) B k ( d x d y d w ) , s .t .         A x k + A d x − b ≤ 0 ,                 ( N M − I 0 D y k D w k ) ( d x d y d w ) + ( 0 Φ ( y i , w i , μ ) ) = 0. (3.5)</p><p>QP子问题(3.3)是一个带线性约束的凸规划问题，所以问题(3.5)的最优解与KKT点等价，进而其KKT系统可以写成：</p><p>( ∇ f ( x k ) ∇ f ( y k ) 0 ) + B k ( d x d y d w ) + ( N T 0 M T D y k ) ( l m ) + ( A T 0 0 ) λ = 0 , (3.6)</p><p>0 ≤ ( b − A x k − A d x ) ⊥ λ ≥ 0 , (3.7)</p><p>( N M − I 0 D y k D w k ) d z + ( 0 Φ ( y i , w i , μ ) ) = 0 ， (3.8)</p><p>其中 ( λ , l , m ) ∈ R p &#215; R m &#215; R m 是KKT乘子。</p><p>命题3.1 [<xref ref-type="bibr" rid="hanspub.31750-ref6">6</xref>] <sup> </sup>设假设H 2.1成立， z k = ( x k , y k , w k ) ∈ X ，罚参数 μ k 是个给定的正数， B k 是一个对称正定矩阵，那么QP子问题(3.3)有唯一最优解。</p><p>现假设问题(3.3)的唯一最优解为 d z k = ( d x k , d y k , d w k ) ，通过对罚函数 φ 作线搜索，得到下一个迭代点 z k + 1 = ( x k + 1 , y k + 1 , w k + 1 ) ，也就是说对于给定的参数 ρ , σ ，满足 0 &lt; ρ &lt; 1 , 0 &lt; σ &lt; 1 ，第 k + 1 次迭代点 z k + 1 = z k + α k d z k ，其中 α k 是步长因子，令 α k = δ m k ， m k 是使得下列不等式成立的最小的非负整数：</p><p>φ ( z k + δ m k d z k , ε , μ k ) ≤ φ ( z k , ε , μ k ) + σ δ m k φ ′ ( z k , ε , μ k ; d z k ) . (3.9)</p><p>下面给出求解问题(1.1)的SQP算法。</p><p>算法3.1</p><p>步骤0. 选取初始点 z 0 = ( x 0 , y 0 , z 0 ) ∈ X 0 ，参数 ξ , μ 0 , ε − 1 ∈ ( 0 , + ∞ ) ， B 0 ∈ R n + 2 m &#215; R n + 2 m 。</p><p>选取序列 { μ k } k = 0 ∞ 满足 μ k &gt; 0 , μ k + 1 &lt; μ k , lim k → ∞ μ k + 1 μ k ζ = η ，其中 0 &lt; η &lt; 1 , 1 &lt; ζ &lt; 2 ，令 k = 0 。</p><p>步骤1. 求解QP子问题(3.3)得唯一最优解 d z k = ( d x k , d y k , d w k ) 以及相应的乘子 ( λ k , l k , m k ) ，如果 d z k = 0 ，则令 z k + 1 = z k ， ε k = ε k − 1 ，转到步骤4。</p><p>步骤2. 调整罚参数，计算</p><p>ε k = { ε k − 1 ,                                                                   ε k − 1 ≥ ‖ c k ‖ ∞ + ξ , max { ‖ c k ‖ ∞ + ξ , ε k − 1 + 2 ξ } ,         ε k − 1 &lt; ‖ c k ‖ ∞ + ξ , (3.10)</p><p>其中 ‖ c k ‖ ∞ = max 1 ≤ i ≤ m | c i k | 。</p><p>步骤3. 对函数 φ ( ⋅   , ε k , μ k ) 按(3.10)做Armijo先搜索求得步长 α k ,令 z k + 1 = z k + α k d z k 。</p><p>步骤4. 如果 d z k = 0 ，停止；否则，令 μ k + 1 = β μ k ，更新修正 B k ，得新的对称正定阵， B k + 1 ∈ R ( n + 2 m ) &#215; ( n + 2 m ) ，令 k = k + 1 ，返回步骤1。</p><p>引理3.2 若假设H2.1成立， ( x k , y k , w k ) ∈ X 0 ， μ k &gt; 0 ， B k 是对称正定阵，假设 d z k = ( d x k , d y k , d w k ) 是子问题(3.3)的唯一最优解，相应的KKT乘子为 ( λ k , l k , m k ) ，若 ε k ≥ ‖ c k ‖ ∞ ，有</p><p>φ ′ ( z k , ε k , μ k ; d z k ) ≤ ( − d z k ) T B k d z k &lt; 0 (3.11)</p><p>成立，且对任意的 ρ ∈ ( 0 , 1 ) ，存在 ρ &#175; &gt; 0 ，使得对于所有的 ρ ∈ ( 0 , ρ &#175; ) ，有</p><p>φ ( z k + ρ d z , ε , μ k ) ≤ φ ( z k , ε , μ k ) + σ ρ φ ′ ( z k , ε , μ k ; d z k ) . (3.12)</p><p>证明：由(3.5)有</p><p>D y k d y k + D w k d w k + Φ ( y k , w k , μ k ) = 0 ,</p><p>( ∇ y ϕ ( y i , w i , μ ) ∇ w ϕ ( y i , w i , μ ) ) T ( d y i k d w i k ) + Φ ( y i k , w i k , μ ) = 0. (3.13)</p><p>由(2.10)和(2.11)有</p><p>φ ′ ( z k , ε k , μ k ; d z k ) = ∇ f ( x k     y k ) T ( d x k d y k ) − ε k ∑ | ϕ ( y k , w k , μ k ) |   . (3.14)</p><p>由(3.6)得</p><p>∇ f ( x k     y k ) T ( d x k d y k ) + ( λ k ) T A d x k + ( d z k ) T B k d z k + ( l k ) T ( N d x + M d y − d w k ) + ( m k ) T ( D y k d y k + D w k d w k ) = 0 ,</p><p>故</p><p>∇ f ( x k     y k ) T ( d x k d y k ) + ( d z k ) T B k d z k − ( m k ) T Φ ( y k , w k , μ k ) = ( λ k ) T ( A x − b ) ≤ 0. (3.15)</p><p>由(3.14)，(3.15)有</p><p>φ ′ ( z k , ε k , μ k ; d z k ) ≤ − ( d z k ) T B k d z k + ∑ i ∈ I + k ( c i k − ε k ) ϕ ( y i k , w i k , μ k ) + ∑ i ∈ I − k ( c i k + ε k ) ϕ ( y i k , w i k , μ k ) ,</p><p>其中 I + k , I − k 分别定义如下：</p><p>I + k = { i : ϕ ( y i k , w i k , μ k ) &gt; 0 } ,</p><p>I − k = { i : ϕ ( y i k , w i k , μ k ) &lt; 0 } .</p><p>又由(3.10)及 ε k ≥ ‖ c k ‖ ∞ ，有</p><p>φ ′ ( z k , ε k , μ k ; d z k ) ≤ ( − d z k ) T B k d z k &lt; 0.</p><p>由(2.10)，(3.10) (3.11)和(3.14)易得(3.13)成立.</p></sec><sec id="s6"><title>4. 收敛性分析</title><p>本节分析算法的收敛性，为此，我们对对称正定矩阵 B k 以及算法产生的无穷点列 { z k } 作如下基本假设：</p><p>H4.1 无穷点列 { z k } 有界。</p><p>H4.2 若H4.1成立，序列 { z k } 的每个极限点 z ∗ = ( x ∗ , y ∗ , w ∗ ) ，满足下层非退化条件： ( y ∗ , w ∗ ) ≠ ( 0 , 0 ) , i = 1 , ⋯ , m .</p><p>H4.3 存在常数 a , b &gt; 0 ，有</p><p>a ‖ z ‖ 2 ≤ z T B k z ≤ b ‖ z ‖ | 2 ,     ∀ z ∈ R n + 2 m , k = 1 , 2 , ⋯ .</p><p>根据上面的几个假设，有以下引理成立.</p><p>引理4.1 [<xref ref-type="bibr" rid="hanspub.31750-ref5">5</xref>] 如果假设H4.1~H4.3成立，则</p><p>1) 存在一个常数 C &gt; 0 ，有</p><p>‖ ( M − I D y k D W k ) − 1 ‖ ≤ C ,     ∀ k ∈ K .</p><p>2) 序列 { ( λ k , l k , m k ) } ， { d z k } 有界。</p><p>3) 存在一个正整数 k 0 ，使得 ε k = ε k 0 = ε , ∀ k ≥ k 0 。</p><p>命题4.2 [<xref ref-type="bibr" rid="hanspub.31750-ref6">6</xref>] 若数列 { v k } , { γ k } 满足</p><p>v k ≥ 0 ,     ∑ k = 1 ∞ v k &lt; ∞ ,     γ k + 1 ≤ γ k + v k ,     k = 1 , 2 , ⋯ . (4.1)</p><p>则</p><p>1) 数列 { γ k } 有上界。即</p><p>lim k → ∞ _ _ _ _ γ k &lt; + ∞ ;</p><p>2) 数列 { γ k } 整列收敛。</p><p>命题4.3 若H4.1成立，则对任意的 δ 1 &gt; δ 2 &gt; 0 ，点列 ( y k , w k ) ∈ R 2 ，有不等式</p><p>| ϕ ( y k , w k , δ 2 ) | ≤ | ϕ ( y k , w k , δ 1 ) | + 2 ( ln 2 + M ˜ δ 2 ) δ 1</p><p>成立。</p><p>证明：存在一个 δ &#175; &gt; 0 ，且 δ 1 &lt; δ &#175; &lt; δ 2 ，由中值定理，有</p><p>| ϕ ( y k , w k , δ 2 ) | ≤ | ϕ ( y k , w k , δ 1 ) + ϕ ′ μ ( y k , w k , δ &#175; ) ( δ 2 − δ 1 ) | ≤ | ϕ ( y , w , δ 1 ) | + [ ln ( 1 + e − y μ ) + y μ ⋅ e − y μ 1 + e − y μ + ln ( 1 + e − w μ ) + w μ ⋅ e − w μ 1 + e − w μ ] ( δ 2 − δ 1 ) ≤ | ϕ ( y , w , δ 1 ) | + [ 2 ln 2 + 1 μ ( y μ + w μ ) ] ( δ 2 − δ 1 )</p><p>≤ | ϕ ( y , w , δ 1 ) | + [ 2 ln 2 + 2 μ 2 max { y , w } ] ( δ 2 − δ 1 ) ≤ | ϕ ( y , w , δ 1 ) | + 2 [ ln 2 + 1 δ max { y , w } ] ( δ 2 − δ 1 ) ≤ | ϕ ( y k , w k , δ 1 ) | + 2 ( ln 2 + M ˜ δ 2 ) δ 1 .</p><p>由引理3.2，命题4.2及命题4.3易知有以下结论成立.</p><p>引理4.2 若H4.1成立，则</p><p>lim k → ∞ φ ( z k , ε k , μ k ) = lim k → ∞ φ ( z k + 1 , ε k , μ k ) = φ ( z ∗ , ε , 0 ) .</p><p>由引理4.1(2)，不妨做如下假设：</p><p>d z k = d z ∗ = ( d x ∗ , d y ∗ , d w ∗ ) , x k → x ∗ , B k → B ∗ , l k → l ∗ , m k → m ∗ , k ∈ K . (4.2)</p><p>利用上述引理及假设,来证明本文的算法具有全局收敛性。</p><p>引理 4.3 若假设H 4.1-H4.3成立，则序列 { d z k } 收敛到0，即</p><p>lim k ∈ K d z k = d z ∗ = 0. (4.3)</p><p>证明：我们用反证法来证明，假设 d z ∗ ≠ 0 。</p><p>由(3.12)有</p><p>φ ′ ( z ∗ , ε , 0 ; d z k ) = − ( d z ∗ ) T B ∗ d z ∗ &lt; 0.</p><p>当 k → ∞ ，序列 { z k } 收敛于 z ∗ ，记</p><p>lim k ∈ K φ ′ ( z k , ε , μ k ; d z k ) = φ ′ ( z ∗ , ε , 0 ; d z ∗ ) .</p><p>考虑算法步骤3的线搜索，步长 α 在K上有界，且远大于0，设</p><p>α k ≥ α ∗ = inf ( α k , k ∈ K ) &gt; 0 ,     k ∈ K .</p><p>又由序列 { φ ( z k , ε , μ k ) } 为单调递减序列，当 μ k 固定时，由序列 { z k } 是收敛到 z ∗ 的,及函数 φ 的连续性，当 k → ∞ 时，有 φ ( z k , ε , μ k ) → φ ( z ∗ , ε , 0 ) 。</p><p>由(3.9)及引理2.4.1(3)，有</p><p>0 = lim k ∈ K ( φ ( z k + 1 , ε , μ k ) − φ ( z k , ε , μ k ) ) ≤ lim k ∈ K δ α φ ′ ( z k , ε , μ k ; d z k ) ≤ 1 2 δ α ∗ φ ′ ( z k , ε , 0 ; d z k ) ,</p><p>当 k ∈ K , k → ∞ 时。这与(3.12)矛盾，从而假设 d z ∗ ≠ 0 不成立，即(4.3)成立.</p><p>定理4.1 H4.1~H4.3成立，则算法3.1产生的点列 { z k } ，它的每一个聚点 z ∗ = ( x ∗ , y ∗ , w ∗ ) 都是问题(1.1)</p><p>的稳定点，即本文的算法是全局收敛的。</p><p>证明：由已知，序列 { z k } 是个无穷序列， z k → z ∗ ，有 z ∗ ∈ X 0 ,即</p><p>A x ∗ ≤ b ,     w ∗ = N x ∗ + M y ∗ + q ,</p><p>由(2.7)和(3.3)有</p><p>∇ f ( x ∗ , y ∗ ) + A T λ ∗ + N T l ∗ = 0 , M T l ∗ + D y ∗ m ∗ = 0 , l ∗ = D w ∗ m ∗ , 0 ≤ λ ∗ ⊥ ( b − A x ∗ ) ≥ 0 , lim k → ∞ Φ ( a , b , μ k ) = min ( a , b ) = 0 , (4.4)</p><p>其中 D y ∗ ， D w ∗ 定义为</p><p>D y ∗ = d i a g ( ∇ y i ϕ ( y i ∗ , w i ∗ , 0 ) , i = 1 , ⋯ , m ) ,</p><p>D w ∗ = d i a g ( ∇ w i ϕ ( y i ∗ , w i ∗ , 0 ) , i = 1 , ⋯ , m ) .</p><p>由(2.2)和(3.11)有</p><p>0 ≤ w ∗ ⊥ y ∗ ≥ 0 ,</p><p>又 z ∗ ∈ X 0 ，从而有 z ∗ ∈ X 。</p><p>综上所述， z ∗ 是问题(1.1)的稳定点。</p></sec><sec id="s7"><title>5. 数值实验</title><p>本文提出了求解均衡约束优化问题的算法，在这一节我们将对这个算法进行数值试验，利用MATLAB软件算法进行了数值实验，通过实验说明这个算法具有有效性和可行性.</p><p>算法中的矩阵 B k 是Lagrange函数 L ( z , μ ) = f ( z ) + ∑ j = 1 m μ j g j ( z , μ ) 的二阶Hessian阵的近似估计。矩阵</p><p>B k 采用BFGS公式修正：</p><p>B k + 1 = B k − B k s ^ k ( B k s ^ k ) T s ^ k T B k s ^ k + η ^ k η ^ k T s ^ k T η ^ k ,</p><p>其中 s ^ k = z k + 1 − z k ,   η ^ k = θ k γ ^ k + ( 1 − θ ) B k s ^ k ，这里</p><p>γ ^ k = ∇ L z ( z k + s ^ k , μ k ) − ∇ L z ( z k , μ k ) ,</p><p>θ = { 1 ,       s ^ k γ ^ k ≥ 0.2 s ^ k T B k s ^ k 0.8 s ^ k T B k s ^ k s ^ k T B k s ^ k − s ^ k γ ^ k , 否 则 .</p><p>分别选取参数 ξ = 10 ， ε 0 = 10 ， B 0 为 ( n + 2 m ) &#215; ( n + 2 m ) 的单位阵.</p><p>问题1</p><p>min       f ( x ) = 1 2 x 2 + 1 2 x y − 95 x s .t .           0 ≤ x ≤ 200 ,                   0 ≤ w ⊥ y ≥ 0.</p><p>问题2</p><p>min       f ( x ) = 1 2 [ ( x 1 + x 2 + y 1 − 15 ) 2 + ( x 1 + x 2 + y 2 − 15 ) 2 ] s .t .           0 ≤ x ≤ 10 ,                   w = N x + M y + q ,                   0 ≤ w ⊥ y ≥ 0 ,                   ( x , y , w ) ∈ R 2 &#215; R 2 &#215; R 2 .</p><p>其中</p><p>q = ( − 36 − 25 ) ,   M = ( 2 8 / 3 5 / 4 2 ) ,   N = ( 8 / 3 2 2 5 / 4 ) .</p><p>问题3</p><p>min     f ( x , y ) = 1 2 ( x 1 + 3 y 1 − 4 y 2 − 5 ) 2 + ( x 2 − 15 8 y 1 + 3 y 2 − 9 ) 2 s .t .         0 ≤ x 1 ≤ 10 ,                 0 ≤ x 2 ≤ 10 ,                 0 ≤ y ⊥ [ ( 0 − 1 − 1 0 ) T x + ( 3 − 15 8 − 4 3 ) T y + ( 10 6 ) ] ≥ 0.</p><p>问题4</p><p>min       f ( x ) = 1 2 x T x + e T y s .t .           A x ≤ b ,                   w = N x + M y + q ,                   0 ≤ w ⊥ y ≥ 0.</p><p>其中， M ∈ R m &#215; m , N ∈ R m &#215; n , A ∈ R p &#215; n 分别为随机产生的矩阵，矩阵M严格对角占优的，是P矩阵，其非对角线上的非负向量 q ∈ R m , b ∈ R p 是随机产生的，对于单位向量 e ∈ R n , A , b 满足 A e &lt; b 。</p><p>表1和表2是算法3.1的数值实验结果。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> The numerical experiment results of problem 1 - problem </title></caption><table><tbody><thead><tr><th align="center" valign="middle" >NO</th><th align="center" valign="middle" >( x 0 , y 0 )</th><th align="center" valign="middle" >k</th><th align="center" valign="middle" >( x ∗ , y ∗ )</th><th align="center" valign="middle" >f ( x * , y * )</th><th align="center" valign="middle" >‖ d z k ‖</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >(0, 0)</td><td align="center" valign="middle" >13</td><td align="center" valign="middle" >(93.33333333333336, 26.66666666666664)</td><td align="center" valign="middle" >-3.266666666666669e+003</td><td align="center" valign="middle" >9.300000000000003e-012</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >(0, 0)</td><td align="center" valign="middle" >7</td><td align="center" valign="middle" >(5.00000000000006 9.99999999999994, -0.00000000000000 0.00000000000000)</td><td align="center" valign="middle" >1.262177448353619e-029</td><td align="center" valign="middle" >1.010000000000000e-008</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >(0, 0)</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >(5.00000000000000, 9.00000000000000, 0.00000000000000, 0.00000000000000)</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >2.500000000000000e-009</td></tr></tbody></table></table-wrap><p>表1. 问题1~问题3的数值实验结果</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> The numerical experiment results of problem </title></caption><table><tbody><thead><tr><th align="center" valign="middle" >NO.</th><th align="center" valign="middle" >( p , m , n )</th><th align="center" valign="middle" >初始点</th><th align="center" valign="middle" >迭代次数</th><th align="center" valign="middle" >最优值</th><th align="center" valign="middle" >‖ d z k ‖</th></tr></thead><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >(30, 30, 50)</td><td align="center" valign="middle" >(ones, zeros)</td><td align="center" valign="middle" >48</td><td align="center" valign="middle" >6.376485162e-016</td><td align="center" valign="middle" >4.207400000e-8</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >(50, 60, 50)</td><td align="center" valign="middle" >(ones, zeros)</td><td align="center" valign="middle" >56</td><td align="center" valign="middle" >4.721785683e-014</td><td align="center" valign="middle" >1.621502153e-6</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >(100, 60, 60)</td><td align="center" valign="middle" >(ones, zeros)</td><td align="center" valign="middle" >72</td><td align="center" valign="middle" >8.190904715e-016</td><td align="center" valign="middle" >3.100586202e-6</td></tr></tbody></table></table-wrap><p>表2. 问题4的数值实验结果</p><p>在表1和表2中，NO.表示问题的编号， ( p , m , n ) 分别表示x的维数，m表示y的维数，n表示约束的个数。 ‖ d z k ‖ 表示终止时， ‖ d z k ‖ 的对应值。数值实验表明本文的算法3.1是有效的。</p></sec><sec id="s8"><title>基金项目</title><p>河池学院2019年高层次人才科研启动费项目“比例时滞神经网络的周期解与稳定状态研究”(2019GCC005)。</p></sec><sec id="s9"><title>文章引用</title><p>黄青群. 求解线性互补约束问题的一个SQP方法A SQP Method for Linear Complementary Constraints Problem[J]. 应用数学进展, 2019, 08(08): 1398-1409. https://doi.org/10.12677/AAM.2019.88164</p></sec><sec id="s10"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.31750-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Yu, B., Mitchell, J.E. and Pang, J.-S. (2019) Solving Linear Programs with Complementarity Constraints Using Branch-and-Cut. Mathematical Programming Computation, 11, 267-310. &lt;br&gt;https://doi.org/10.1007/s12532-018-0149-2</mixed-citation></ref><ref id="hanspub.31750-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">吴学谦, 李声杰. 随机线性互补问题的无约束优化再定式[J]. 数学年刊A辑(中文版), 2019, 40(1): 43-54.</mixed-citation></ref><ref id="hanspub.31750-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Zang, I. (1980) A Smoothing-Out Technique for Min-Max Optimization. Mathematical Programming, 19, 61-71. 
&lt;br&gt;https://doi.org/10.1007/BF01581628</mixed-citation></ref><ref id="hanspub.31750-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Song, X. (2001) Smoothing Method for Minimax Problems. Computational Optimization and Applications, 20, 267-279. &lt;br&gt;https://doi.org/10.1023/A:1011211101714</mixed-citation></ref><ref id="hanspub.31750-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Luo, Z.Q., Pang, J.S. and Ralph, D. (1996) Mathematical Program with Equilibrium Constraints. Cambridge University Press, Cambridge. &lt;br&gt;https://doi.org/10.1017/CBO9780511983658</mixed-citation></ref><ref id="hanspub.31750-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">简金宝. 光滑约束优化快速算法[M]. 北京: 科学出版社, 2010.</mixed-citation></ref></ref-list></back></article>