<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2017.79101</article-id><article-id pub-id-type="publisher-id">CSA-22139</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20170900000_72822600.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  IAP远程升级技术在空间应用初探
  Research of IAP Remote Upgrade Technology in Space Application System
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>正</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>刘</surname><given-names>晓源</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>曹</surname><given-names>云侠</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>杨</surname><given-names>帆</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>中国科学院沈阳自动化研究所，辽宁 沈阳</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>lizheng@sia.cn(李正)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>31</day><month>08</month><year>2017</year></pub-date><volume>07</volume><issue>09</issue><fpage>886</fpage><lpage>893</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   介绍了在应用编程In-Application Programming (IAP)的工作原理，以LPC2138处理器为工作平台，改变了传统的bootloader升级方式，设计了一种新型的芯片烧写方法，通过通信网络实现远程程序的固件升级，结合我国空间应用系统的快速发展和软件远程升级的需要，给出了空间应用系统环境下的软件远程升级解决方案。 The working principle of In-Application Programming (IAP) is introduced first, and a new method of chip burning is designed that has changed the traditional way of the boot loader upgrade based on LPC2138 processor. As a result, remote program firmware upgrade can be realized through communication network. Meanwhile, the solution of software remote upgrade in the environment of space application is given, combined with the rapid development of space application in our country and the needs of remote software upgrade.
    
  
 
</p></abstract><kwd-group><kwd>ARM，IAP，远程升级，空间应用, ARM</kwd><kwd> IAP</kwd><kwd> Remote Upgrade</kwd><kwd> Space Application</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>IAP远程升级技术在空间应用初探 <sup> </sup></title><p>李正，刘晓源，曹云侠，杨帆</p><p>中国科学院沈阳自动化研究所，辽宁 沈阳</p><p>收稿日期：2017年9月1日；录用日期：2017年9月15日；发布日期：2017年9月22日</p><disp-formula id="hanspub.22139-formula19"><graphic xlink:href="//html.hanspub.org/file/10-1540845x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>介绍了在应用编程In-Application Programming (IAP) [<xref ref-type="bibr" rid="hanspub.22139-ref1">1</xref>] 的工作原理，以LPC2138处理器为工作平台，改变了传统的bootloader升级方式，设计了一种新型的芯片烧写方法，通过通信网络实现远程程序的固件升级，结合我国空间应用系统的快速发展和软件远程升级的需要，给出了空间应用系统环境下的软件远程升级解决方案。</p><p>关键词 :ARM，IAP，远程升级，空间应用</p><disp-formula id="hanspub.22139-formula20"><graphic xlink:href="//html.hanspub.org/file/10-1540845x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2017 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="http://image.hanspub.org:8080\Html/htmlimages\1-2890033x\e70a10f1-7c93-45ea-9603-062237856e4b.png" /><img src="http://image.hanspub.org:8080\Html\htmlimages\1-2890033x\e898c85e-ffc4-45c9-b817-14224a4d6960.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>随着我国空间技术与航天建设发展，特别是近几年受空间站建立和深空探测等多项航天规划影响，越来越多的探测器、卫星载荷等空间飞行器在轨运行。期间，飞行器因功能需要升级、屏蔽故障模块或者因自身软件漏洞等原因，软件需要进行可靠的远程升级 [<xref ref-type="bibr" rid="hanspub.22139-ref2">2</xref>] 。目前，空间应用系统由于受无人在轨运行、通信资源有限，升级可靠性要求高等因素影响，软件远程升级真正应用还不普及，但是已经在我国航天发展过程中提出了强烈的应用需求。</p><p>软件远程升级在地面应用系统目前已经有了很完善的应用，软件系统在线升级，传统的研究方向主要集中在软件系统本身 [<xref ref-type="bibr" rid="hanspub.22139-ref3">3</xref>] ，升级方式也多种多样，如Windows操作系统等平台的软件升级可以通过更新动态链接库(DLL)或者静态库(LIB)即打补丁的方式进行升级。嵌入式系统升级的方式也有很多，主要有ICP (In-Circuit Programming), ISP (In-System Programming)等方式。这些方式通过仿真器或者串行接口下载线进行连接下载程序，都需要额外的辅助设备 [<xref ref-type="bibr" rid="hanspub.22139-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.22139-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.22139-ref6">6</xref>] 。在地面应用中资源丰富，可以额外增加辅助设备，但是在空间应用系统中，设备产品已经无人值守在轨运行，资源上也无法重新配置，即使预先设计考虑到这些升级方式，也要增加原系统额外的硬件资源，对于航天空间应用有一定的弊端。</p><p>IAP可通过专门设计的固件程序来编程内部存储器，不需要硬件支持，所以IAP技术提高了嵌入式系统的可扩展性与可维护性 [<xref ref-type="bibr" rid="hanspub.22139-ref7">7</xref>] ，能在不变的硬件平台上升级其软件版本，提供更多功能及增值服务，适合在轨飞行设备进行软件升级。本文以ARM为核心的LPC2138芯片 [<xref ref-type="bibr" rid="hanspub.22139-ref8">8</xref>] 为平台，设计了基于IAP方式的远程程序升级系统，实现了一种在线软件升级方法和新的解决方案，为我国空间应用系统软件升级提供一种可行可借鉴的方案和初始研究。</p></sec><sec id="s4"><title>2. IAP概述</title><sec id="s4_1"><title>2.1. IAP原理</title><p>LPC2138芯片是基于实时仿真和嵌入式跟踪的32/16位ARM7TDMI微控制器，在网络控制、通信及工业电子等产品中有广泛的应用。它是带有32 KB RAM和512 KB高速Flash存储器的处理器，出厂时在片内固化了一段Boot程序。它可以控制芯片复位后的初始化操作，并提供对Flash编程的方法。Boot程序可以对芯片进行擦除、编程，且提供了IAP 编程接口。该Boot程序在出厂时固化在512KBFlash的顶部12 KB范围内，当芯片上电以后，首先对Boot区执行一次重映射 [<xref ref-type="bibr" rid="hanspub.22139-ref7">7</xref>] ，映射到片内存储器空间的最高处，即接近0x80000000的地方，称之为Boot Block。Boot Block的最低64字节为中断向量表，又被重新映射到芯片的最低地址0x00000000处，最低地址0x00000000开始的64字节则存储用户的有效中断向量。经过这样的地址重新映射后，IAP代码的入口就位于0x7FFFFFF0处 [<xref ref-type="bibr" rid="hanspub.22139-ref8">8</xref>] ，映射过程如图1。</p><p>用户在应用IAP的过程中，可自行对Flash存储系统进行修改。由于IAP程序是Thumb代码，位于地址0x7FFF FFF0，所以需要在ADS编译选项中，选中ARM/Thumb Interworking项。IAP程序会使用</p><p>图1. Boot程序上电后的重映射</p><p>片内RAM 空间的顶部32个字节。因此在应用IAP时，用户程序应该避免使用这部分空间，在启动代码Startup.s文件中InitStack函数内调整堆栈空间位置，修改代码如下：</p><p>InitStack</p><p>MSR CPSR_c, #0xdf；设置系统模式堆栈</p><p>LDR SP, =StackUsr-32；//避免使用片内RAM的顶部32 Byte</p><p>MOV PC, R0</p></sec><sec id="s4_2"><title>2.2. IAP命令格式</title><p>IAP命令格式代码是调用IAP程序时用户指定的方法，IAP程序会根据用户命令码执行相应的操作，并返回各种结果，如下表1。</p></sec><sec id="s4_3"><title>2.3. IAP接口函数</title><p>根据IAP程序入口地址和IAP各种命令码，就可以用C语言实现IAP用户接口函数，方法如下。</p><p>1) 定义IAP用户函数指针</p><p>void (*IAP_Entry)(uint32 param_tab[<xref ref-type="bibr" rid="hanspub.22139-ref"></xref>], uint32 result_tab[<xref ref-type="bibr" rid="hanspub.22139-ref"></xref>]);</p><p>其中param_tab为用户输入缓冲区，result_tab为程序返回结果缓冲区，IAP_Entry为用户函数</p><p>2) 初始化IAP用户函数指针</p><p>IAP_Entry = (void(*)())IAP_ENTER_ADR;//其中IAP_ENTER_ADR为IAP程序入口地址</p><p>3) 调用IAP用户函数</p><p>(*IAP_Entry)(paramin, paramout);</p><p>其中paramin为用户输入IAP命令码缓冲区，paramout为IAP程序执行后返回值缓冲区。通过对paramin传递不同的IAP命令可以实现不同的IAP程序调用，如版本号查询、扇区选择和编程等等。</p></sec><sec id="s4_4"><title>2.4. IAP编程步骤</title><p>使用IAP函数对片内Flash执行编程操作时，需要按步骤进行操作，在对某一个扇区进行擦除/编程操作之前，必须选择扇区，然后才能正常操作。流程为：确定命令参数- &gt; 选择扇区- &gt; 删除扇区- &gt;</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> IAP command tabl</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >IAP命令</th><th align="center" valign="middle" >命令代码</th></tr></thead><tr><td align="center" valign="middle" >准备编程扇区</td><td align="center" valign="middle" >50</td></tr><tr><td align="center" valign="middle" >将RAM内容复制到Flash</td><td align="center" valign="middle" >51</td></tr><tr><td align="center" valign="middle" >擦除扇区</td><td align="center" valign="middle" >52</td></tr><tr><td align="center" valign="middle" >扇区查空</td><td align="center" valign="middle" >53</td></tr><tr><td align="center" valign="middle" >读器件ID</td><td align="center" valign="middle" >54</td></tr><tr><td align="center" valign="middle" >读boot代码版本</td><td align="center" valign="middle" >55</td></tr><tr><td align="center" valign="middle" >比较</td><td align="center" valign="middle" >56</td></tr></tbody></table></table-wrap><p>表1. IAP命令格式表</p><p>查空扇区- &gt; 选择扇区- &gt; 编程扇区- &gt; 校验扇区。需要注意IAP程序在编程时只能写入规定大小的数据字节数，如字节数大小必须是：256、512、1024或者4096。</p></sec></sec><sec id="s5"><title>3. IAP远程升级系统设计</title><sec id="s5_1"><title>3.1. 远程升级总体结构</title><p>为了给出IAP远程升级的通用性与普遍性，设计远程升级模式如下图2所示。具体的网络可以为Internet网络，也可以为星地通信网络。LPC2138通过卫星与地面IAP升级服务器建立通信连接，要升级的程序在地面的IAP升级服务器上。当需要对在轨软件进行更新时，即可把要更新的程序发送到基于LPC2138的在轨载荷产品中，完成软件版本升级。通过该方式便于软件的维护、管理和更新发布，有效解决代码维护、测试等问题，延长软件生命周期，提高试验任务的正确性、可靠性。</p></sec><sec id="s5_2"><title>3.2. 远程升级方式与FLASH扇区分布设计</title><p>LPC2138有500 KB的Flash可用，分布在26个扇区中，不同的扇区其可存储的数据大小不同，在芯片复位时，程序从0x00000000处开始运行。针对这些特点，设计Flash存储分布格式如下图3。本设计采用导出IAP用户程序，实行系统程序在线方式完成软件版本更新。首先，将编写的IAP程序通过ADS编译器中的“分散加载文件”实现代码定位，并将其定位到最后一个扇区。这样，当要IAP远程升级时，待升级的新程序可以覆盖正在运行的系统程序。这是一种很危险的行为，一旦在覆盖过程中出现地址冲突将造成无法悔改的错误，整个软件系统也就崩溃了。而在程序的覆盖过程中只用到了IAP程序，所以把用户的IAP程序与系统程序分离开来并定位到最后一个扇区，当待升级程序区程序覆盖系统运行程序区时就不会出现冲突，从而可完成在线更新的升级方式。</p></sec><sec id="s5_3"><title>3.3. 远程通信协议设计与升级流程</title><p>空间应用系统应提供自动化的数据输送和分配系统，保障安全、可靠的数据交流、翻译、转换、在系统之间的数据和信息的路由选择、应用、数据存储 [<xref ref-type="bibr" rid="hanspub.22139-ref9">9</xref>] ；IAP升级服务程序在升级过程中必须保证升级程序数据传输的正确性，对每次发送的一帧数据都要进行校验以保证数据的正确性。同时，还要保证帧与帧之间的顺序必须正确。只有在完整的程序传输完毕后才能通过IAP对原程序进行覆盖更新，否则将会造成原程序的损坏，导致系统崩溃。设计帧格式如下表2和表3。</p><p>发送帧类型有版本号请求、升级开始、数据注入、升级结束等指令。首先，地面运控中心通过通信网络向在轨载荷发送软件版本号请求，然后通过遥测参数识别在轨载荷软件返回的版本号，若与服务器的版本号不同，IAP服务程序开始升级指令，IAP服务器程序首先将要更新的程序读取，并按1024字节字段形成数据注入帧表。然后，逐帧将更新程序注入到在轨载荷软件中。每注入一帧数据后，通过遥测</p><p>图2. IAP远程升级结构</p><p>图3. Flash扇区分配</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Data format of injectio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >帧头</th><th align="center" valign="middle" >发送帧类型</th><th align="center" valign="middle" >帧号</th><th align="center" valign="middle" >发送帧数据</th><th align="center" valign="middle" >CRC校验</th></tr></thead><tr><td align="center" valign="middle" >2 byte</td><td align="center" valign="middle" >1 byte</td><td align="center" valign="middle" >2 byte</td><td align="center" valign="middle" >1024 byte，不足补FF</td><td align="center" valign="middle" >2 byte</td></tr></tbody></table></table-wrap><p>表2. 数据注入帧格式</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Data format of telemetr</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >帧头</th><th align="center" valign="middle" >遥测帧类型</th><th align="center" valign="middle" >帧长度</th><th align="center" valign="middle" >应答帧数据</th><th align="center" valign="middle" >CRC校验</th></tr></thead><tr><td align="center" valign="middle" >2 byte</td><td align="center" valign="middle" >1 byte</td><td align="center" valign="middle" >2 byte</td><td align="center" valign="middle" >根据帧长度定</td><td align="center" valign="middle" >2 byte</td></tr></tbody></table></table-wrap><p>表3. 数据遥测帧格式</p><p>参数确认注入是否成功，然后再进行下一帧注入。</p><p>遥测帧类型有版本号、校验错误、注入正确、升级成功等类型。应答帧数据中针对不同类型设置相应的参数值，如版本号类型，应答帧数据为版本号，校验错误和注入正确都要返回当前注入的帧号计数。地面在轨中心根据遥测结果决定是否继续注入。通过这种方式，确保了更新程序的顺序正确性。同时，为了保证数据的正确性采用CRC校验。在轨IAP客户程序将接收的正确注入数据存入到待升级程序区∙∙∙∙∙∙直到完整的接收完全部程序，然后将软件版本号更新，最后，将待升级程序区的程序覆盖到系统运行程序区，完成远程升级过程。IAP服务程序和客户程序基本流程如图4，基于普遍性，本系统采用Internet网络进行了在线远程升级测试，效果良好。</p></sec></sec><sec id="s6"><title>4. 远程升级试验</title><p>在地面模拟在轨应用工作流程，进行远程升级试验演练，通过Internet网络进行广义测试升级试验。地面模式远程升级试验如图5所示。首先，利用单位已有的基于LPC2138的通信产品，写好应用程序</p><p>图4. IAP远程升级过程基本流程图</p><p>图5. IAP地面模拟远程升级试验</p><p>A，软件版本V1.00，该软件已经内嵌IAP远程升级客户程序。在IAP远程升级服务器上，开发一个基于Socket的TCP网络服务器，内嵌IAP升级服务器程序。首先，运行IAP升级服务器，让通信产品输入IAP升级服务器的IP地址和端口号，通过Socket网络建立客户端与服务器端的网络连接。通信网络建立后，IAP服务器程序向通信产品发送版本号请求，得知其软件版本号与自身要升级的版本号不同后，发起远程升级指令从而进入升级流程，升级完毕后，重新对通信产品加电，通信产品运行程序为应用程序B，软件版本号为V1.01。基于Internet的网络通信具有普遍意义，通过该地面模拟方式成功验了基于IAP的软件远程升级的正确性，星地软件远程升级过程与之相同，在通信链路上会有一定差别。</p></sec><sec id="s7"><title>5. 结论</title><p>空间应用系统对芯片的等级要求较高，选择IAP升级方式对芯片的选型也有要求。本文提出的在线程序远程升级方式升级便利，有利于程序的版本管理，而且设计简单，升级稳定可靠，对同类或其它单片机的远程升级具有一定的借鉴作用。由于采用IAP方式，用户程序可对Flash存储系统进行修改，也给该芯片留有“后门”的余地，对软件的安全性也要有充分考虑。在远程升级时，要尽可能避免出测控区影响升级过程的情况。IAP技术为软件系统在线远程升级提供了良好的解决方案，也为数据存储和固件的升级带来了极大的灵活性。相信，在未来航天软件技术发展过程中，IAP远程升级平台必将为提高在轨有效载荷软件稳定运行和增值服务创造更大价值，必将得到更广泛的应用。</p></sec><sec id="s8"><title>资助信息</title><p>实验柜系统，课题编号：Y4k3170301。</p></sec><sec id="s9"><title>文章引用</title><p>李 正,刘晓源,曹云侠,杨 帆. IAP远程升级技术在空间应用初探Research of IAP Remote Upgrade Technology in Space Application System[J]. 计算机科学与应用, 2017, 07(09): 886-893. http://dx.doi.org/10.12677/CSA.2017.79101</p></sec><sec id="s10"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.22139-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">周立功, 张华. 深入浅出ARM7[M]. 北京航空航天大学出版社, 2005: 426-438.</mixed-citation></ref><ref id="hanspub.22139-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">王婷, 高玉娥, 董文博. 面向空间应用的嵌入式系统软件重构技术[J]. 测控技术, 2017, 36(2): 111-114.</mixed-citation></ref><ref id="hanspub.22139-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">焦诚, 李英. 卫星导航地面控制系统在线升级与验证方法[J]. 现代导航, 2016, 7(2): 94-98.</mixed-citation></ref><ref id="hanspub.22139-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">顾程华, 林宏飞, 徐文卿. 基于IAP的微控制器程序升级技术[J]. 工业控制计算机, 2017, 30(6): 13-14.</mixed-citation></ref><ref id="hanspub.22139-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">陈亮. 基于STM32处理器的存储器IAP编程技术[J]. 网络与信息工程, 2017(10): 77-78.</mixed-citation></ref><ref id="hanspub.22139-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">周振齐. 单片机IAP在应用软件升级的方法探究[J]. 数码世界, 2015(5): 20-23.</mixed-citation></ref><ref id="hanspub.22139-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">韩兆渊, 王晓东, 黄国勇. 基于IAP 的北斗终端程序远程升级技术的研究[J]. 计算机与数字工程, 2017, 45(5): 844-848.</mixed-citation></ref><ref id="hanspub.22139-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">LPC2131/2132/2138 User Manual. http://www.docin.com/p-88394452.html</mixed-citation></ref><ref id="hanspub.22139-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">廖苹. 国际空间站远程医疗概况与展望[J]. 载人航天信息, 2014(5): 13-19.</mixed-citation></ref></ref-list></back></article>