<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AE</journal-id><journal-title-group><journal-title>Advances in Education</journal-title></journal-title-group><issn pub-type="epub">2160-729X</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AE.2020.105140</article-id><article-id pub-id-type="publisher-id">AE-37741</article-id><article-categories><subj-group subj-group-type="heading"><subject>AE20200500000_21515209.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>人文社科</subject></subj-group></article-categories><title-group><article-title>
 
 
  信号与系统课件中的Flash数学函数引擎
  The Flash Math Function Engine in Signals and Systems Courseware
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郭</surname><given-names>仁春</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>赵</surname><given-names>立杰</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>白</surname><given-names>海军</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>国刚</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>倚天</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>汪</surname><given-names>滢</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>沈阳化工大学信息工程学院，辽宁 沈阳</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>14</day><month>08</month><year>2020</year></pub-date><volume>10</volume><issue>05</issue><fpage>856</fpage><lpage>860</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   在《信号与系统》课件的开发过程中，开发者会遇到大量的数学公式与函数图像，因此需要开发一套数学函数引擎来简化开发过程。本文描述了采用Flash软件制作通用数学函数引擎的方法，采用该方法可以简化数学课件的开发过程。这些函数引擎具有通用性和灵活性，可以根据用户需求进行二次开发。 In the development process of “signals and systems” courseware, developers will encounter a large number of mathematical formulas and function images, so it is necessary to develop a set of mathematical function engine to simplify the development process. This paper describes the method of making general mathematical function engine with Flash software, which can simplify the development process of mathematics courseware. These function engines have generality and flexibility, and can be redeveloped according to user requirements. 
  
 
</p></abstract><kwd-group><kwd>信号与系统，多媒体课件，数学函数引擎，Flash, Signals and Systems</kwd><kwd> Multimedia Courseware</kwd><kwd> Math Function Engine</kwd><kwd> Flash</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>在《信号与系统》课件的开发过程中，开发者会遇到大量的数学公式与函数图像，因此需要开发一套数学函数引擎来简化开发过程。本文描述了采用Flash软件制作通用数学函数引擎的方法，采用该方法可以简化数学课件的开发过程。这些函数引擎具有通用性和灵活性，可以根据用户需求进行二次开发。</p></sec><sec id="s2"><title>关键词</title><p>信号与系统，多媒体课件，数学函数引擎，Flash</p></sec><sec id="s3"><title>The Flash Math Function Engine in Signals and Systems Courseware</title><p>Renchun Guo, Lijie Zhao<sup>*</sup>, Haijun Bai, Guogang Wang, Yitian Wang, Ying Wang</p><p>School of Information Engineering, Shenyang University of Chemical Technology, Shenyang Liaoning</p><p><img src="//html.hanspub.org/file/34-1161329x4_hanspub.png" /></p><p>Received: Sep. 2<sup>nd</sup>, 2020; accepted: Sep. 16<sup>th</sup>, 2020; published: Sep. 23<sup>rd</sup>, 2020</p><p><img src="//html.hanspub.org/file/34-1161329x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>In the development process of “signals and systems” courseware, developers will encounter a large number of mathematical formulas and function images, so it is necessary to develop a set of mathematical function engine to simplify the development process. This paper describes the method of making general mathematical function engine with Flash software, which can simplify the development process of mathematics courseware. These function engines have generality and flexibility, and can be redeveloped according to user requirements.</p><p>Keywords:Signals and Systems, Multimedia Courseware, Math Function Engine, Flash</p><disp-formula id="hanspub.37741-formula33"><graphic xlink:href="//html.hanspub.org/file/34-1161329x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/34-1161329x8_hanspub.png" /> <img src="//html.hanspub.org/file/34-1161329x9_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>采用Flash制作多媒体课件，可以制作具有交互功能的高品质的多媒体课件 [<xref ref-type="bibr" rid="hanspub.37741-ref1">1</xref>]。Flash提供了ActionScript语言 [<xref ref-type="bibr" rid="hanspub.37741-ref2">2</xref>]，使用该语言可以实现各种复杂的功能。“信号与系统”课程有大量的数学公式，要制作信号与系统课程的课件首先要解决如何描述函数与函数图像。如果函数图像只是采用Flash工具手工绘制而成，那么这个图像与函数就没有关系。当需要改变该图像的取值范围、线的粗细、背景等，只有重新一张一张绘制了。因此很多数学课件开发者需要一个通用的数学引擎 [<xref ref-type="bibr" rid="hanspub.37741-ref3">3</xref>]，只要改变函数就可以改变图像，同时还能够修改横纵坐标的取值范围、线的颜色、粗细、背景等，本文将描述一种用Flash开发的数学函数引擎来实现上述目标。</p></sec><sec id="s6"><title>2. 多媒体课件中的函数</title><p>在信号与系统中信号实际上就是自变量为时间变化的函数，即信号可以用函数f(x)来表达。因此信号与函数是同一个概念。一个普通的信号f(x)可以通过变换形成下面的式子：</p><p>y = a ⋅ f ( b ⋅ x + c )</p><p>其中f是函数名，x是自变量，a，b，c分别是参数。例如一个简单的正弦函数可以描述为：</p><p>y = A ⋅ sin ( ω ⋅ x + θ )</p><p>其中A，ω，θ分别是振幅，角频率和相位。</p><p>一般课件中需要观察函数图像随着a，b，c的改变而变化的过程。有时候还需要改变函数名，这就需要有一个函数引擎来支持，这个函数引擎具有很强的通用性。如图1是描述正弦波的一个例子，通过改变振幅，角频率，相位来观察图像的变化。</p><p>图1. 多媒体中的数学函数</p><p>很显然采用传统的Flash手工绘制的方法是很困难的，更不用说要实现交互式了。采用数学函数引擎实现上述动画就容易多了。</p></sec><sec id="s7"><title>3. 数学函数引擎的制作</title><p>为了可移植性更好，需要将数学函数引擎的代码放置在单独的Flash文件中，在Flash CS5中，采用Action Script 3.0程序，新建一个信号类，命名为Signal.as，在该文件中编写如下代码：</p><p>package</p><p>{</p><p>public final class Signal</p><p>{</p><p>public var a,b,c:Number;</p><p>public var name:String;</p><p>public function Fun(name:String=,a:Number=1,b:Number=1,c:Number=0)</p><p>{</p><p>this.a=a;</p><p>this.b=b;</p><p>this.c=c;</p><p>this.name=name;</p><p>}</p><p>//定义f(x)</p><p>public function f(x:Number):Number</p><p>{</p><p>return a*this[name](b*x+c);</p><p>}</p><p>//正弦函数</p><p>public function sin(x:Number):Number</p><p>{</p><p>return Math.sin(x);</p><p>}</p><p>//分段函数</p><p>public function seg(x:Number):Number</p><p>{</p><p>return x&gt;=0&amp;&amp;x&lt;=1?x:0</p><p>}</p><p>}</p><p>}</p><p>代码中this[name]是一种特殊的用法，其中name是字符串，用这种方法可以将字符串转换为函数名，例如this[“sin”]调用的是正弦函数，this[“seg”]调用了分段函数。也就是说本来是sin(x)，现在写成了this[“sin”](x)，这样就可以通过改变字符串来改变函数了。注意本例中提供了两个函数，一个是sin，另一个是seg，这两个函数都是用户自己定义的，如果用户还需要更多的函数可以按例子中的方法补充即可。</p></sec><sec id="s8"><title>4. 通用函数图像类</title><p>按照上述的方法再建立一个Curve.as的文件，该文件用来生成函数图像。其部分代码如下：</p><p>package</p><p>{</p><p>public class Curve extends Sprite</p><p>{</p><p>public var w, h, x1, x2, y1, y2, xn, yn: Number;</p><p>public var f;</p><p>public function draw_curve():void</p><p>{</p><p>//代码略.....</p><p>}</p><p>......</p><p>}</p><p>}</p><p>其中w，h是图像的宽高，x1，x2是横轴的左右端点值，y1，y2是纵轴下和上的取值范围，xn，yn是横纵坐标的刻度份数。这里最值得注意的是变量f，给它赋不同的值，函数图像就会改变。</p></sec><sec id="s9"><title>5. 数学引擎的使用</title><p>有了Signal.as和Curve.as两个文件，建立一个新的文件，后缀名是.fla。在这个文件的第一帧编写代码，如下：</p><p>var A=1; var ω=1; var θ=0;</p><p>var cv=new Curve();</p><p>addChild(cv);</p><p>cv.x1=−6; cv.x2=6; cv.y1=−2; cv.y2=2; cv.xn=12; cv.yn=4;</p><p>cv.w=200; cv.h=150;</p><p>var myfun=new Singal(sin,A,ω,θ);</p><p>cv.f=myfun.f;</p><p>cv.draw_curve();</p><p>所得函数图像，如图1所示。如果将代码中，加粗的语句改写为var myfun=new Signal(seg,A,ω,θ)；则得到分段函数图像如图2所示。</p><p>图2. 分段函数</p><p>至于右边的滑杆控件，只要将它们的值关联到程序中的A，ω，θ即可。</p></sec><sec id="s10"><title>6. 结论</title><p>在多媒体的开发实践中，使用该Flash数学引擎简化了数学函数图像的编写，用户可以在此基础上开发更为强大、功能更多的数学引擎，它将使关于数学多媒体课件的内容更加丰富，用户体验更加友好。</p></sec><sec id="s11"><title>基金项目</title><p>沈阳化工大学教育教学培育工程项目资助。</p></sec><sec id="s12"><title>文章引用</title><p>郭仁春,赵立杰,白海军,王国刚,王倚天,汪 滢. 信号与系统课件中的Flash数学函数引擎The Flash Math Function Engine in Signals and Systems Courseware[J]. 教育进展, 2020, 10(05): 856-860. https://doi.org/10.12677/AE.2020.105140</p></sec><sec id="s13"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.37741-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">石立峰. 基于Adobe Flash多媒体课件制作方法探讨[J]. 计算机产品与流通, 2018(11): 226.</mixed-citation></ref><ref id="hanspub.37741-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">王志岗. 基于Flash ActionScript脚本语言的交互式多媒体教学软件开发研究[J]. 信息系统工程, 2017(3): 166-168.</mixed-citation></ref><ref id="hanspub.37741-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">许丹. Flash在中技数学教学中的运用[J]. 科学咨询(教育科研), 2018(12): 83.</mixed-citation></ref></ref-list></back></article>