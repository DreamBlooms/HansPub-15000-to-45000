<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2021.107248</article-id><article-id pub-id-type="publisher-id">AAM-43880</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20210700000_21624656.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  图论在策略图版游戏“穿越沙漠”中的应用
  The Application of Graph Theory in the Strategy Board Game “Crossing the Desert”
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郑</surname><given-names>睿彦</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>周</surname><given-names>何</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>侯</surname><given-names>宇轩</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>范</surname><given-names>兴奎</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>青岛理工大学信息与控制工程学院，山东 青岛</addr-line></aff><aff id="aff2"><addr-line>青岛理工大学管理工程学院，山东 青岛</addr-line></aff><aff id="aff4"><addr-line>青岛理工大学理学院，山东 青岛</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>01</day><month>07</month><year>2021</year></pub-date><volume>10</volume><issue>07</issue><fpage>2369</fpage><lpage>2377</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  针对“穿越沙漠”游戏的策略求解问题，本文从玩家角度出发，利用数学语言对“穿越沙漠”游戏规则进行详细刻画，以玩家最终抵达终点所剩的资金最多为目标，建立优化模型，并结合Floyd算法对游戏地图进行简化，最终通过随机化贪心算法求解既定条件下的最优游戏策略。
   In order to find out the strategy of “Crossing Desert” game, from the point of view of the players, we described the rules of the game “crossing the desert” in detail by using mathematical language. Then, we took the maximum amount of funds left at the final destination as the goal, established an optimization model, and simplified the game map with Floyd algorithm, and finally we used randomized greedy algorithm (RGA) to solve the optimal game strategy under the given conditions.
 
</p></abstract><kwd-group><kwd>穿越沙漠，单目标优化模型，Floyd算法，随机化贪心算法, Crossing the Desert</kwd><kwd> Single Objective Optimization Model</kwd><kwd> Floyd Algorithm</kwd><kwd> Randomized Greedy Algorithm</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>针对“穿越沙漠”游戏的策略求解问题，本文从玩家角度出发，利用数学语言对“穿越沙漠”游戏规则进行详细刻画，以玩家最终抵达终点所剩的资金最多为目标，建立优化模型，并结合Floyd算法对游戏地图进行简化，最终通过随机化贪心算法求解既定条件下的最优游戏策略。</p></sec><sec id="s2"><title>关键词</title><p>穿越沙漠，单目标优化模型，Floyd算法，随机化贪心算法</p></sec><sec id="s3"><title>The Application of Graph Theory in the Strategy Board Game “Crossing the Desert”<sup> </sup></title><p>Ruiyan Zheng<sup>1</sup>, He Zhou<sup>1</sup>, Yuxuan Hou<sup>2</sup>, Xingkui Fan<sup>3*</sup></p><p><sup>1</sup>College of Management Engineering, Qingdao University of Technology, Qingdao Shandong</p><p><sup>2</sup>College of Information and Control, Qingdao University of Technology, Qingdao Shandong</p><p><sup>3</sup>College of Science, Qingdao University of Technology, Qingdao Shandong</p><p><img src="//html.hanspub.org/file/14-2621688x5_hanspub.png?20210716084031757" /></p><p>Received: Jun. 12<sup>th</sup>, 2021; accepted: Jul. 1<sup>st</sup>, 2021; published: Jul. 15<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/14-2621688x6_hanspub.png?20210716084031757" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>In order to find out the strategy of “Crossing Desert” game, from the point of view of the players, we described the rules of the game “crossing the desert” in detail by using mathematical language. Then, we took the maximum amount of funds left at the final destination as the goal, established an optimization model, and simplified the game map with Floyd algorithm, and finally we used randomized greedy algorithm (RGA) to solve the optimal game strategy under the given conditions.</p><p>Keywords:Crossing the Desert, Single Objective Optimization Model, Floyd Algorithm, Randomized Greedy Algorithm</p><disp-formula id="hanspub.43880-formula6"><graphic xlink:href="//html.hanspub.org/file/14-2621688x7_hanspub.png?20210716084031757"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/14-2621688x8_hanspub.png?20210716084031757" /> <img src="//html.hanspub.org/file/14-2621688x9_hanspub.png?20210716084031757" /></p></sec><sec id="s5"><title>1. 引言</title><p>策略图版游戏是现实情况的抽象和缩影，策略图版游戏求解有利于更复杂现实情况的研究 [<xref ref-type="bibr" rid="hanspub.43880-ref1">1</xref>]。“穿越沙漠”是一款经典的策略图版游戏，游戏中，在起点获得初始资金的玩家通过购买物资、挖矿及合理安排每日行进策略，最终达到成功穿越沙漠并剩余资金较多的目标。由于游戏目标多且涉及领域较多，该游戏一直被众多公司企业用来培养团队在复杂情况下的分析决策能力，以及用在高校以培养学生的战略管理能力，具有很强的教育意义 [<xref ref-type="bibr" rid="hanspub.43880-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.43880-ref3">3</xref>]。对于该游戏的研究目前仍停留在教学培训意义层面，游戏攻略一般由人工计算得出，鲜有相关专家学者对其策略的计算机求解进行研究。本文在详细刻画游戏规则和设定游戏获胜策略的基础上，利用计算机编程求解最优策略，有利于为现实复杂情况的策略求解提供思路。</p></sec><sec id="s6"><title>2. “穿越沙漠”游戏规则的数学刻画</title><p>沙漠掘金游戏中，玩家在起点获得用于购买水、食物等物资的初始资金，备足物资后从起点出发，深入沙漠。若在行走途中经过矿山，玩家可以考虑挖矿以补充资金，经过村庄时玩家可以购买食物和水以满足行走、停留或挖矿的消耗。在游戏时段内，玩家每天都面临着晴天、高温、沙暴等天气变化造成的物资消耗不等的考验。在规定的游戏时间内，玩家可能剩余一定资金顺利抵达终点，也可能因物资耗尽以失败告终，这一切取决于玩家的行进策略。因此，“沙漠掘金”游戏的规则可以从玩家存活、天气影响、物资消耗、物资携带以及资金规则五个方面进行详细刻画：</p><p>1) 玩家存活：玩家必须在游戏规定天数内抵达终点。游戏规定玩家共有n天的探险时间，地图上分布着k个落脚点，仅相邻落脚点之间存在通路，其中村庄、矿山与终点分别用 k c , k s , k z 来表示。用0-1变量 x i j 表示第 i ( i = 1 , 2 , ⋯ , n ) 天到达 j ( j = 1 , ⋯ , k ) 地，若第i天玩家在j处，记 x i j = 1 。玩家存活即在规定的n天中的某一天到达终点，即：</p><p>x i , k z = 1 ,       i = 1 , 2 , ⋯ , n (1)</p><p>2) 天气影响：天气是决定该天行进方案以及物资消耗的重要因素，某一天不同的天气状况影响着玩家整体的行进策略。假设游戏中只有“晴朗”、“高温”及“沙暴”三种天气，而且游戏地图上的所有区域都处于同一种天气，用1代表晴朗，2代表高温，3代表沙暴，第i天的天气记为 t i ，则玩家全部游戏时段的天气向量组T可表示为：</p><p>T = ( t 1 , t 2 , ⋯ , t i , ⋯ , t n ) ,     t i = 1 , 2 , 3 (2)</p><p>在沙暴天气下，玩家只能原地停留而不能移动，若第i天碰上沙暴天气，则玩家有：</p><p>x i , j = x i − 1 , j = 1 ,     t i = 3 (3)</p><p>3) 物资消耗：水和食物是玩家穿越沙漠必需的两种资源，将玩家停留一天消耗的水和食物记为基础消耗量 j w i 、 j f i ，根据游戏规则，不同的天气状况下基础消耗量的取值也不相同。</p><p>玩家行走一天消耗基础物资消耗量的2倍，采矿一天需要3倍，因此每天的物资消耗可以分为两部分表示，基础物资消耗量 j w i 或 j f i 乘以消耗倍数 B i 。规定0-1变量 y i , k s 表示第i天玩家在矿山 k s 是否选择采矿，则消耗倍数 B i 可表示为：</p><p>B i = { 0           x i j − x i − 1 , j = 0 2           | x i j − x i − 1 , j | = 1 3           x i , k s − x i − 1 , k s = 1 , y i , k s = 1 1           其 他 情 况 (4)</p><p>基于此，第i天在j处水的消耗量 w i j ，以及第i天在j处食物的消耗量 f i j 可分别表示为：</p><p>w i j = j w j &#215; B i (5)</p><p>f i j = j f j &#215; B i (6)</p><p>4) 物资携带：玩家只能携带有限重量的物资，用 z w 、 z f 分别表示单位水和食物的重量， W 0 、 F 0 分别表示玩家在起点时水和食物的初始量，为充分发挥α kg的有限携带能力，在起点玩家购入物资可表示为：</p><p>z w W 0 + z f F 0 ≤ α (7)</p><p>在穿越沙漠的过程中，玩家第i天剩下的水 W i 可由前一天剩下的水 W i − 1 、第i天在j处水的消耗量 w i j 以及第i天购买的水的数量 g w i 表示：</p><p>W i = W i − 1 − w i j + g w i (8)</p><p>同样地，玩家第i天剩下的食物 F i 为：</p><p>F i = F i − 1 − f i j + g f i (9)</p><p>确保玩家每天存活的另一重要条件是每天均有剩余的水和食物，即：</p><p>{ W i + F i ≤ α W i ≥ 0 , F i ≥ 0 (10)</p><p>5) 资金规则：玩家的初始资金为 M 0 元，在起点时分别以水和食物的基准价格 P w 、 P f 购进水和食物的初始量 W 0 和 F 0 ，需满足资金条件：</p><p>P w W 0 + P f F 0 ≤ M 0 (11)</p><p>在矿山时玩家可以通过采矿获得基础收益 M i j ，游戏规定玩家到达矿山当天不能直接采矿，从停留的第一天开始才能赚取收益：</p><p>M i j = { 1000           x i , k s = x i − 1 , k s = 1 , y i , k s = 1 0                     其 他 情 况 (12)</p><p>在路途中玩家可能会因为天气突变等原因消耗大量的物资，从而导致不能顺利返回终点或无法使效益最大化，那么玩家可以选择通过地图中的村庄 k c 进行及时补给，但村庄的物资价格是基准价格的两倍。玩家第i天在村庄购买物资的花费 g i 可表示为：</p><p>g i = 2 P w g w i + 2 P f g f i ,     x i , k c = x i − 1 , k c = 1 (13)</p><p>第i天的成本和采矿收入 M i 可表示为：</p><p>M i = M i − 1 + M i j − g i (14)</p><p>若玩家最终返回终点时还有剩余物资，这部分剩余物资会以基准价格的一半进行回收，据此，最终返回终点时的所剩资金 M z 可以表示为：</p><p>M z = M i + 0.5 ( P f F i + P w W i ) ,     x i , k z = 1 (15)</p><p>“穿越沙漠”游戏胜利规则为：玩家在拥有充足物资抵达终点的前提下，保留的资金更多。由于游戏地图上落脚点数量及游戏天数有限，所以该游戏一定存在最优策略。为此，在游戏规则的约束下，以玩家最终抵达终点所剩的资金 M z 最多为目标，建立单目标优化模型，即可求解最佳游戏策略，则有“沙漠掘金”游戏的单目标优化模型：</p><p>目 标 函 数 : max M z { T = { t 1 , t 2 , ⋯ , t i , ⋯ , t n } ,     t i = 1 , 2 , 3 x i , j = x i − 1 , j = 1 ,     t i = 3 w i j = j w j &#215; B i f i j = j f j &#215; B i B i = { 0           x i j − x i − 1 , j = 0 2           | x i j − x i − 1 , j | = 1 3           x i , k s − x i − 1 , k s = 1 , y i , k s = 1 1           其 他 情 况 z w W 0 + z f F 0 ≤ α W i = W i − 1 − w i j + g w i F i = F i − 1 − f i j + g f i W i + F i ≤ α P w W 0 + P f F 0 ≤ M 0 M i = M i − 1 + M i j − g i M z = M i + 0.5 ( P f F i + P w W i ) ,     x i , k z = 1 W i ≥ 0 , F i ≥ 0 i = 1 , 2 , ⋯ , n (16)</p></sec><sec id="s7"><title>3. 基于随机化贪心算法的模型求解</title><p>诸如此类约束条件复杂的优化模型最优解求解问题，一般采用剪枝优化的搜索算法对可能的最优解空间进行遍历得出最优解，但由于每天天气变化的影响，搜索过程中的剪枝优化效果不佳，时间复杂度极高，且容易发生组合爆炸。</p><p>考虑到随机化贪心算法(Randomized Greedy Algorithm, RGA)，即不直接取贪心策略的最优值而是从此最优值附近的一定区间内找到一个目标函数最优值 [<xref ref-type="bibr" rid="hanspub.43880-ref4">4</xref>]，在贪心原则证明正确的前提下，通过足够次数的随机试验，即可得到最优解 [<xref ref-type="bibr" rid="hanspub.43880-ref5">5</xref>]。随机化贪心算法适合动态规划类问题的求解，且其复杂度远小于搜索算法 [<xref ref-type="bibr" rid="hanspub.43880-ref6">6</xref>]，故本文采用随机化贪心算法求解带天气变化因素的优化模型。基于随机化贪心算法的仿真模拟程序流程图：(如图1)</p><p>图1. 基于随机化贪心算法的仿真模拟程序流程图</p></sec><sec id="s8"><title>4. 实验结果和分析</title><p>现给出一套“沙漠掘金”游戏规则(如图2)，已知游戏时间段内全部的基础信息(如表1)和天气情况(如表2)，针对该实际案例对此展开分析。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1"><xref ref-type="table" rid="table">Table </xref>1</xref></label><caption><title> <xref ref-type="table" rid="table">Table </xref>of basic parameter</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  colspan="2"  >负重上限</th><th align="center" valign="middle" >1200千克</th><th align="center" valign="middle" >初始资金</th><th align="center" valign="middle"  colspan="2"  >10,000元</th></tr></thead><tr><td align="center" valign="middle"  colspan="2"  >截止日期</td><td align="center" valign="middle" >第30天</td><td align="center" valign="middle" >基础收益</td><td align="center" valign="middle"  colspan="2"  >1000元</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >资源</td><td align="center" valign="middle"  rowspan="2"  >每箱质量(千克)</td><td align="center" valign="middle"  rowspan="2"  >基准价格 (元/箱)</td><td align="center" valign="middle"  colspan="3"  >基础消耗量(箱)</td></tr><tr><td align="center" valign="middle" >晴朗</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >沙暴</td></tr><tr><td align="center" valign="middle" >水</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >10</td></tr><tr><td align="center" valign="middle" >食物</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >7</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >10</td></tr></tbody></table></table-wrap><p>表1. 参数设定表</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table">Table </xref>2</label><caption><title> The profiles of weather condition</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >日期</th><th align="center" valign="middle" >1</th><th align="center" valign="middle" >2</th><th align="center" valign="middle" >3</th><th align="center" valign="middle" >4</th><th align="center" valign="middle" >5</th><th align="center" valign="middle" >6</th><th align="center" valign="middle" >7</th><th align="center" valign="middle" >8</th><th align="center" valign="middle" >9</th><th align="center" valign="middle" >10</th></tr></thead><tr><td align="center" valign="middle" >天气</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >晴朗</td><td align="center" valign="middle" >沙暴</td><td align="center" valign="middle" >晴朗</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >沙暴</td><td align="center" valign="middle" >晴朗</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >高温</td></tr><tr><td align="center" valign="middle" >日期</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >13</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >17</td><td align="center" valign="middle" >18</td><td align="center" valign="middle" >19</td><td align="center" valign="middle" >20</td></tr><tr><td align="center" valign="middle" >天气</td><td align="center" valign="middle" >沙暴</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >晴朗</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >沙暴</td><td align="center" valign="middle" >沙暴</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >高温</td></tr><tr><td align="center" valign="middle" >日期</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >22</td><td align="center" valign="middle" >23</td><td align="center" valign="middle" >24</td><td align="center" valign="middle" >25</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >27</td><td align="center" valign="middle" >28</td><td align="center" valign="middle" >29</td><td align="center" valign="middle" >30</td></tr><tr><td align="center" valign="middle" >天气</td><td align="center" valign="middle" >晴朗</td><td align="center" valign="middle" >晴朗</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >晴朗</td><td align="center" valign="middle" >沙暴</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >晴朗</td><td align="center" valign="middle" >晴朗</td><td align="center" valign="middle" >高温</td><td align="center" valign="middle" >高温</td></tr></tbody></table></table-wrap><p>表2. 天气状况表</p><p>首先结合实例给出具体的贪心算法及理论证明：</p><p>1) 起点和终点相同的最短路径经过村庄为最优。</p><p>证明1：起点到矿山的最短路径中，蓝色的等效路径经过村庄，可以提供玩家物资供给，而且等效路径与其他最短路径的路程相同，经过村庄的最短路径价值显然更大，因此认为经过村庄的两条最短路为最优(如图3)。</p><p>图2. “穿越沙漠”游戏地图</p><p>图3. Floyd路径优化等效图</p><p>2) 除采矿、沙暴天气外，玩家不会在任何地方停留，一直处于移动状态。</p><p>证明2：给出游戏时段的天气序列 d 1 , ⋯ , d i − 1 , d i , d i + 1 , d i + 2 , ⋯ , d e n d ，其中 d i 表示第i天的天气，假设 d i 为高温天气， d i + 1 为晴朗天气， d i + 2 ~ d e n d 天气相同，假设 d i 天停留， d i + 1 天移动，则其花费为：</p><p>p 21 &#215; p r i c e 21 + p 22 &#215; p r i c e 22 + 2 &#215; ( p 11 &#215; p r i c e 11 + p 12 &#215; p r i c e 12 )</p><p>d i 天移动的花费为：</p><p>2 &#215; ( p 21 &#215; p r i c e 21 + p 22 &#215; p r i c e 22 )</p><p>因为后续天气全部相同，代入数值计算可得，停留的花费为18箱水，20箱食物，移动的花费为16箱水，12箱食物。显然，移动相同的距离，在无后效性的情况下，移动更优。</p><p>3) 若玩家不采矿，则直接走从起点至终点的最短路径；若玩家采矿，则玩家只会走两点间的最短路径。</p><p>证明3：若玩家不采矿，说明玩家的资金在穿越沙漠过程中，只有亏损而没有增加，以m (m &gt; 0)代表玩家在穿越沙漠过程中的花费，用 M 0 表示玩家的初始资金则有：</p><p>M 0 − m &lt; M 0</p><p>所以，玩家如果决定不采矿，直接走起点至终点的最短路径是最优选择。若玩家采矿，那么玩家在采矿路上的花费最低是其最终目标，结合贪心策略1)、2)，玩家不会停留且走规定的最短路径是路途花费最小且具有村庄补给机会的最优选择。</p><p>4) 玩家在起点尽可能多购买物资，且在满足当前方案约束下，尽可能多地购入食物。</p><p>证明4：游戏规定玩家在起点处购入物资，只需花费物资的基准价格，而玩家在补给村庄购买物资时，需花费物资两倍的基准价格。因此玩家在起点会尽可能多地购买物资，在满足当前方案约束的情况下，起点的剩余容量全部购入食物。</p><p>结合模型求解算法即可得出既定条件下的最优行进策略，总共用时24天，剩余资金最多为10,470元(如表3)。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table">Table </xref>3</label><caption><title> Results of the game “Crossing the Desert</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >日期</th><th align="center" valign="middle" >所在区域</th><th align="center" valign="middle" >剩余水(kg)</th><th align="center" valign="middle" >剩余食物(kg)</th><th align="center" valign="middle" >剩余资金</th><th align="center" valign="middle" >动作</th></tr></thead><tr><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >178</td><td align="center" valign="middle" >333</td><td align="center" valign="middle" >5780</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >25</td><td align="center" valign="middle" >162</td><td align="center" valign="middle" >321</td><td align="center" valign="middle" >5780</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >24</td><td align="center" valign="middle" >146</td><td align="center" valign="middle" >309</td><td align="center" valign="middle" >5780</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >23</td><td align="center" valign="middle" >136</td><td align="center" valign="middle" >295</td><td align="center" valign="middle" >5780</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >23</td><td align="center" valign="middle" >126</td><td align="center" valign="middle" >285</td><td align="center" valign="middle" >5780</td><td align="center" valign="middle" >沙暴停留</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >116</td><td align="center" valign="middle" >271</td><td align="center" valign="middle" >5780</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >259</td><td align="center" valign="middle" >5780</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >90</td><td align="center" valign="middle" >249</td><td align="center" valign="middle" >5780</td><td align="center" valign="middle" >沙暴停留</td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >80</td><td align="center" valign="middle" >235</td><td align="center" valign="middle" >5780</td><td align="center" valign="middle" >行走(购买)</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >13</td><td align="center" valign="middle" >227</td><td align="center" valign="middle" >223</td><td align="center" valign="middle" >4150</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >10</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >211</td><td align="center" valign="middle" >211</td><td align="center" valign="middle" >4150</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >11</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >181</td><td align="center" valign="middle" >181</td><td align="center" valign="middle" >5150</td><td align="center" valign="middle" >原地停留</td></tr><tr><td align="center" valign="middle" >12</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >157</td><td align="center" valign="middle" >163</td><td align="center" valign="middle" >6150</td><td align="center" valign="middle" >采矿</td></tr><tr><td align="center" valign="middle" >13</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >142</td><td align="center" valign="middle" >142</td><td align="center" valign="middle" >7150</td><td align="center" valign="middle" >采矿</td></tr><tr><td align="center" valign="middle" >14</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >118</td><td align="center" valign="middle" >124</td><td align="center" valign="middle" >8150</td><td align="center" valign="middle" >采矿</td></tr><tr><td align="center" valign="middle" >15</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >94</td><td align="center" valign="middle" >106</td><td align="center" valign="middle" >9150</td><td align="center" valign="middle" >采矿</td></tr><tr><td align="center" valign="middle" >16</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >70</td><td align="center" valign="middle" >88</td><td align="center" valign="middle" >10,150</td><td align="center" valign="middle" >采矿</td></tr><tr><td align="center" valign="middle" >17</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >60</td><td align="center" valign="middle" >78</td><td align="center" valign="middle" >10,150</td><td align="center" valign="middle" >采矿</td></tr><tr><td align="center" valign="middle" >18</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >50</td><td align="center" valign="middle" >68</td><td align="center" valign="middle" >10,150</td><td align="center" valign="middle" >原地停留</td></tr><tr><td align="center" valign="middle" >19</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >50</td><td align="center" valign="middle" >11,150</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >20</td><td align="center" valign="middle" >13</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >38</td><td align="center" valign="middle" >11,150</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >21</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >38</td><td align="center" valign="middle" >11,150</td><td align="center" valign="middle" >行走(购买)</td></tr><tr><td align="center" valign="middle" >22</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >10,470</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >23</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >10,470</td><td align="center" valign="middle" >行走</td></tr><tr><td align="center" valign="middle" >24</td><td align="center" valign="middle" >27</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >10,470</td><td align="center" valign="middle" >行走</td></tr></tbody></table></table-wrap><p>表3. 游戏求解结果表</p></sec><sec id="s9"><title>5. 结语</title><p>在已知“穿越沙漠”游戏具有最优策略的前提下，本文将游戏细则进行数学刻画，由此建立起“穿越沙漠”游戏的单目标优化模型，将团队协作的管理领域游戏转化为运筹类数学模型，并使用随机化贪心算法对模型进行求解得到最终结果，具有一定的创新性和实际应用能力。此“穿越沙漠”游戏策略研究对有关社会学类、管理类案例的求解问题具有一定的参考价值。</p></sec><sec id="s10"><title>基金项目</title><p>2019年度青岛理工大学教学改革项目(F2019-041)。</p></sec><sec id="s11"><title>文章引用</title><p>郑睿彦,周 何,侯宇轩,范兴奎. 图论在策略图版游戏“穿越沙漠”中的应用The Application of Graph Theory in the Strategy Board Game “Crossing the Desert”[J]. 应用数学进展, 2021, 10(07): 2369-2377. https://doi.org/10.12677/AAM.2021.107248</p></sec><sec id="s12"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.43880-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Witter, R.T. and Lyford, A. (2020) Applications of Graph Theory and Probability in the Board Game Ticket to Ride. International Conference on the Foundations of Digital Games, 1-4. &lt;br&gt;https://doi.org/10.1145/3402942.3402963</mixed-citation></ref><ref id="hanspub.43880-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">王艳武, 谢德先. 沙漠掘金案例在管理学科中的应用效果分析[J]. 科技经济导刊, 2020, 28(32): 12-13.</mixed-citation></ref><ref id="hanspub.43880-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">马晓宇, 李莉, 董珍珍, 张正文. 管理定量方法在企业人力资源开发中的应用[J]. 中国商贸, 2012(29): 112-114.</mixed-citation></ref><ref id="hanspub.43880-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">刘汝佳, 黄亮. 算法艺术与信息学竞赛[M]. 北京: 清华大学出版社, 2003: 16-17.</mixed-citation></ref><ref id="hanspub.43880-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Tang, Z.G., Wu, X. and Zhang, Y. (2020) Towards a Better Understanding of Randomized Greedy Matching. Proceedings of the 52nd Annual ACM SIGACT Symposium on Theory of Computing, 1097-1110.  
&lt;br&gt;https://doi.org/10.1145/3357713.3384265</mixed-citation></ref><ref id="hanspub.43880-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Poloczek, M. and Szegedy, M. (2012) Randomized Greedy Algorithms for the Maximum Matching Problem with New Analysis. 2012 IEEE 53rd Annual Symposium on Foundations of Computer Science, New Brunswick, 20-23 October 2012, 708-717. &lt;br&gt;https://doi.org/10.1109/FOCS.2012.20</mixed-citation></ref></ref-list></back></article>