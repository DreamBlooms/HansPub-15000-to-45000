<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">SEA</journal-id><journal-title-group><journal-title>Software Engineering and Applications</journal-title></journal-title-group><issn pub-type="epub">2325-2286</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/SEA.2020.96054</article-id><article-id pub-id-type="publisher-id">SEA-39244</article-id><article-categories><subj-group subj-group-type="heading"><subject>SEA20200600000_97310005.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  一种基于子问题动态消减的改进多目标蚁群优化算法
  An Improved Multi-Objective Ant Colony Optimization Algorithm Based on Sub-Problems Dynamic Subtraction
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>宁</surname><given-names>佳绪</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>牛</surname><given-names>玥</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>纪</surname><given-names>丹蕾</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>肖</surname><given-names>雨婷</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>杨</surname><given-names>富燕</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>沈阳理工大学，信息科学与工程学院，辽宁 沈阳</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>14</day><month>12</month><year>2020</year></pub-date><volume>09</volume><issue>06</issue><fpage>467</fpage><lpage>474</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  为进一步提高基于分解的多目标蚁群优化算法的性能，提出了一种子问题动态消减方法并将其结合到MOEA/D-ACO算法中，以此提出了一种基于子问题动态消减的改进多目标蚁群优化算法IMOEA/D-ACO。该算法通过在运行早期识别没有前途的子问题并及时抛弃对其进行搜索来提高搜索资源的利用率。从而在搜索资源总量一定的前提下，能够进一步提升算法的性能。为了验证算法性能分别与其他相关算法在不同规模的TSP问题测试用例上进行了实验比较。结果表明IMOEA/D-ACO算法在求解质量上优于被比较算法。
   To further improve the performance of decomposition based multi-objective ant colony algorithm, a dynamic sub-problem reduction method is proposed and combined with the MOEA/D-ACO algo-rithm. Based on this, a sub-problem dynamic reduction improved multi-objective ant colony algo-rithm called IMOEA/D-ACO is designed. Through identifying the unpromising sub-problems during the early optimizing process and giving them up in time for optimizing, the utilization of the searching resource is further increased. Thus the algorithm performance can be improved when the total consumed resources are fixed. To verify its performance, it is tested on some TSP instances with different scale, and compared with some related algorithms. The results show that the proposed algorithm is superior to the compared algorithms.
 
</p></abstract><kwd-group><kwd>群智能，多目标优化，蚁群优化算法，信息素，支配, Swarm Intelligence</kwd><kwd> Multi-Objective Optimization</kwd><kwd> Ant Colony Optimization Algorithm</kwd><kwd> Pheromone</kwd><kwd> Dominance</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>为进一步提高基于分解的多目标蚁群优化算法的性能，提出了一种子问题动态消减方法并将其结合到MOEA/D-ACO算法中，以此提出了一种基于子问题动态消减的改进多目标蚁群优化算法IMOEA/D-ACO。该算法通过在运行早期识别没有前途的子问题并及时抛弃对其进行搜索来提高搜索资源的利用率。从而在搜索资源总量一定的前提下，能够进一步提升算法的性能。为了验证算法性能分别与其他相关算法在不同规模的TSP问题测试用例上进行了实验比较。结果表明IMOEA/D-ACO算法在求解质量上优于被比较算法。</p></sec><sec id="s2"><title>关键词</title><p>群智能，多目标优化，蚁群优化算法，信息素，支配</p></sec><sec id="s3"><title>An Improved Multi-Objective Ant Colony Optimization Algorithm Based on Sub-Problems Dynamic Subtraction</title><p>Jiaxu Ning, Yue Niu, Danlei Ji, Yuting Xiao, Fuyang Yang</p><p>College of Information Science and Engineering, Shenyang Ligong University, Shenyang Liaoning</p><p><img src="//html.hanspub.org/file/3-2690483x4_hanspub.png" /></p><p>Received: Nov. 16<sup>th</sup>, 2020; accepted: Dec. 14<sup>th</sup>, 2020; published: Dec. 21<sup>th</sup>, 2020</p><p><img src="//html.hanspub.org/file/3-2690483x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>To further improve the performance of decomposition based multi-objective ant colony algorithm, a dynamic sub-problem reduction method is proposed and combined with the MOEA/D-ACO algorithm. Based on this, a sub-problem dynamic reduction improved multi-objective ant colony algorithm called IMOEA/D-ACO is designed. Through identifying the unpromising sub-problems during the early optimizing process and giving them up in time for optimizing, the utilization of the searching resource is further increased. Thus the algorithm performance can be improved when the total consumed resources are fixed. To verify its performance, it is tested on some TSP instances with different scale, and compared with some related algorithms. The results show that the proposed algorithm is superior to the compared algorithms.</p><p>Keywords:Swarm Intelligence, Multi-Objective Optimization, Ant Colony Optimization Algorithm, Pheromone, Dominance</p><disp-formula id="hanspub.39244-formula9"><graphic xlink:href="//html.hanspub.org/file/3-2690483x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/3-2690483x7_hanspub.png" /> <img src="//html.hanspub.org/file/3-2690483x8_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>近年来，在解决多目标优化问题尤其是路径优化问题时，多目标蚁群算法(multi-objective ant colony optimization algorithms, MOACOs)相对于其他元启发式算法被更广泛采用 [<xref ref-type="bibr" rid="hanspub.39244-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.39244-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.39244-ref3">3</xref>]，因此对其进行研究具有一定价值。</p><p>目前多目标蚁群算法可分为基于非支配排序和基于分解两类。基于非支配排序的多目标蚁群算法产生解的个数比较多，但分布不均匀，通常集中在某一方向上。根据使用信息素矩阵的个数的不同，这类算法又可分为单信息素矩阵多目标蚁群优化算法如MOAQ [<xref ref-type="bibr" rid="hanspub.39244-ref4">4</xref>] 和MACS算法 [<xref ref-type="bibr" rid="hanspub.39244-ref5">5</xref>]，以及多信息素矩阵多目标蚁群优化算法如PACO [<xref ref-type="bibr" rid="hanspub.39244-ref6">6</xref>]、BicriterionAnt [<xref ref-type="bibr" rid="hanspub.39244-ref7">7</xref>] 和MOACO算法 [<xref ref-type="bibr" rid="hanspub.39244-ref8">8</xref>]。2015年I. D. I. D Ariyasingha等 [<xref ref-type="bibr" rid="hanspub.39244-ref9">9</xref>] 对2012年之前的7个基于非支配排序的多目标蚁群算法在多个TSP测试用例上进行了详细的对比分析。Liangjun Ke等 [<xref ref-type="bibr" rid="hanspub.39244-ref10">10</xref>] 结合了多目标进化算法(EA)，提出了基于进化分解的蚁群算法(MOEA/D-ACO)，该方法中每个子问题对应一个启发式信息和一个历史最优解，将蚂蚁分为若干组，每只蚂蚁只能分配在一个群组中，每组蚂蚁有自己的信息素矩阵，每只蚂蚁解决一个子问题，并通过聚合它所属组的信息素、子问题的启发式信息和历史最优解来构造新解。2018年作者 [<xref ref-type="bibr" rid="hanspub.39244-ref11">11</xref>] 提出了基于分解的多目标蚁群优化算法MOACO/D-ACS，将一个多目标问题分解为多个单目标子问题，蚂蚁分为多个子群，每个子群有各自的信息素矩阵和启发式矩阵，每只蚂蚁可以属于多个子群，也就是说算法每次迭代，在不同组中的同一只蚂蚁都会产生一个解，并用其构造的解更新所在子群的信息素矩阵。</p><p>基于分解的多目标蚁群算法获得的帕累托前沿分布相对比较均匀，而且求解质量和效率都好于已有的基于支配的多目标蚁群优化算法。在已有的基于分解的多目标蚁群算法中，在初始化阶段普遍采用切比雪夫方法对多目标优化问题进行分解，通过生成N个权重向量 ( λ 1 ,   ⋯ ,   λ n ) 将一个多目标问题划分为N个单目标子问题，优化过程中每个子问题与一只蚂蚁相对应并且所有权重向量保持不变。当非支配解在搜索空间分布不均时，最优解不属于帕累托前沿的子问题数量会进一步增加。如果能够在算法优化过程中尽早识别并放弃针对这些子问题的求解能够进一步搜索资源的利用率，从而提高算法优化性能。为此，本文设计了一种子问题动态消减策略并将其结合到MOEA/D-ACO中，从而提出了改进算法IMOEA/D-ACO。为验证其有效性，应用不同规模的测试问题对算法进行了测试并与多种相关算法进行了比较，结果表明，结合动态消减策略的MOEA/D-ACO算法不但收敛速度快而且大部分测试问题上求解质量更佳。</p></sec><sec id="s6"><title>2. IMOEA/D-ACO算法</title><p>IMOEA/D-ACO是在MOEA/D-ACO算法的基础上改进子问题资源分配机制，通过设计的子问题动态削减策略在优化过程中逐步识别并淘汰一些没有前途的子问题，直到子问题的个数等于或小于资源数。以此通过提高资源利用率的方式进一步提升算法性能。</p><p>在MOEA/D-ACO算法中蚂蚁数和子问题数相同，每只蚂蚁固定地解决一个子问题，不存在为子问题分配蚂蚁的情况。由于并不清楚非支配解会出现在哪些子问题上，为尽可能多的识别出有前途的子问题，本文在进行子问题分解时生成的子问题数量Q大于群体中的蚂蚁数量N。在蚂蚁构造解之前，首先要根据每个子问题的概率分配蚂蚁，并且算法前期迭代时，总会有一些子问题没有分配到蚂蚁，随着算法的运行，那些分配到蚂蚁的子问题如果连续几次没有产生非支配解，则将此子问题淘汰子问题，这样子问题的个数越来越接近于资源数，直到剩余的每个子问题每次迭代至少分配到一只蚂蚁。</p><p>为实现以上过程为每个子问题设置了两个属性：count1和count2。count1的值用于记录子问题产生的非支配解的个数，每次产生一个非支配解就增加1，以提高此子问题在下一次算法迭代时被蚂蚁选中的概率，而产生被支配解则保持不变。count2的值用于记录子问题被选中后连续产生被支配解的次数，如果count2值大于给定的阈值U并且子问题的数量大于N的情况下将其直接淘汰，而当产生非支配解时则将其值重置为零。对于当前的未被淘汰的一个子问题a，其被蚂蚁选择的概率计算公式如(1)所示：</p><p>P a = c o u n t 1 a ∑ b ∈ B c o u n t 1 b       ( a ∈ { 1 ,   2 ,   ⋯ ,   Q } ) (1)</p><p>其中，count1a表示子问题a保存的count1的值；B是当前子问题的候选集合，b表示集合B中的一个未被访问的子问题。以此使得子问题产生的非支配解的个数越多即count1的值越大，该子问题下次迭代被蚂蚁选择的概率就越高。</p><p>基于以上描述IMOEA/D-ACO算法的基本过程如下：</p><p>Step 1：采用切比雪夫方法将带求解问题分解为Q个子问题，每个子问题 i ∈ [ 1 ,   Q ] 对应的权重向量为 λ i = ( λ i 1 ,   ⋯ , λ i M   ) ，M为目标函数数量。</p><p>Step 2：初始化，与算法MOEA/D-ACO中Step2步骤一致。</p><p>Step 3：先判断子问题是否已经被淘汰。根据公式(3)计算每个子问题被选中的概率，为每只蚂蚁分配子问题，然后使用轮盘赌的方式为每个蚂蚁分配子问题。</p><p>Step 4：为每只蚂蚁构造路径，同MOEA/D-ACO中Step3步骤一致。</p><p>Step 5：对构建的路径进行评价，方法同算法MOEA/D-ACO中Step4步骤一致。</p><p>Step 6：根据每只蚂蚁产生的解是支配解还是非支配解更新子问题的参数count1和count2的值，并决定是否淘汰该子问题。</p><p>Step 7：利用蚂蚁构造的新解更新信息素矩阵。与MOEA/D-ACO算法中的Step5一致。</p><p>Step 8：更新每个子问题的历史最优解。与MOEA/D-ACO算法中的Step6一致。</p><p>Step 9：判断是否满足结束条件，满足则输出Abf；否则，返回到Step3继续下一次迭代。</p><p>通过自适应的资源分配策略，算法IMOEA/D-ACO能够在更精细的子问题划分情况下，通过逐步淘汰不好的子问题即其对应的PF难以求解，将有限的资源尽可能多的应用到剩余的比较好的子问题上，有效的提高了资源利用率，在同等条件、资源等情况下，有很高的概率可以产生相对于原算法的更多更好的非支配解。</p><p>IMOEA/D-ACO算法的复杂度分析：</p><p>设算法运行过程中产生的最多的子问题总数为Q*ITER (其中ITER为迭代次数)，目标函数运算的时间复杂度为 O ( f ) ，IMOEA/D-ACO算法的时间复杂度为：</p><p>O ( IMOEA / D-ACO ) = ( S ∗ ITER ) ∗ O ( f ) + C 1</p><p>而MOEA/D-ACO算法的时间复杂度为：</p><p>  O ( MOEA / D-ACO ) = ( N ∗ ITER ) ∗ O ( f ) + C 2</p><p>其中 C 1 为IMOEA/D-ACO算法进行额外计算的复杂度， C 2 为MOEA/D-ACO算法进行额外计算的复杂度，算法迭代次数为ITER，则有 C 1 = C 2 + ITER ∗ O ( Q ) ，即 C 1 &gt; C 2 ，又因为 ( S * ITER ) * O ( f ) ≫ ITER * O ( Q ) 且S与N相差为一个常量，其中S &#163; Q为每次迭代过程中待求解的子问题数量。所以可以认为 C 1 &gt; C 2 对整体的运行时间不在一个量级上，可以忽略不计。即，改进后算法的时间复杂度与原算法相同。</p></sec><sec id="s7"><title>3. 实验与结果</title><p>本节将通过在不同规模TSP问题上进行实验测试对IMOEA/D-ACO中的主要参数设置进行探讨，并将其与MOAQ、MACS、PACO、BicriterionAnt、MOACO、MOACO/D-ACS、MOEA/D-ACO等相关算法进行实验比较。实验中采用了4个标准的多目标TSP问题测试用例kroAB100、kroAC100、kroAB150、kroAB200，可以从http://eden.dei.uc.pt~paquete/tsp/下载。实验过程中各算法的终止条件为最大适应度评价次数：N &#180; 300 &#180; (n/100)<sup>2</sup>，其中N代表蚂蚁的数量，n代表城市的规模大小。被比较算法的其它参数均按原论文进行设置，IMOEA/D-ACO算法的参数Q和U的设置将在3.1节进行探讨，其他参数设置与MOEA/D-ACO算法相同。实验过程中采用Hypindicator (H-指标) [<xref ref-type="bibr" rid="hanspub.39244-ref11">11</xref>] 对算法性能进行比较。</p><sec id="s7_1"><title>3.1. 参数调整</title><p>本小节选择了3个不同规模的测试用例kro-AB100、kro-AB150、kro-AB200对IMOEA/D-ACO算法中参数Q和U的设置对算法性能的影响进行分析。为了保证测试的公平性，对每种参数值配置独立运行30次，将实验结果转化为H-指标，然后取它们的平均值；H-指标默认越小越好。为了提高测试效率，采用固定一个参数值同时调整另一个参数的方式。IMOEA/D-ACO算法中Q的取值范围为[125, 150, 175, 200, 225]，U的范围为[30, 40, 50, 60, 70]。先将Q取中间数175，然后调整U的取值。从图1(a)中可以看出在测试用例kroAB100和kroAB150中，U取40时，H值最小；而对于测试用例kroAB200，U取20时H值最小。然后固定U=40，调整组数Q的值。从图1(b)可以看出，在测试用例kroAB100和kroAB150中，参数Q=150时H值最小；而对于测试用例kroAB200，Q = 175时H值最小。</p><p>图1. 参数调整</p></sec><sec id="s7_2"><title>3.2. 与相关算法比较</title><p>本节首先使用H-指标来分析各个算法的性能，每个算法在各测试用例上独立运行30次，并将各个算法的实验结果转换成H-指标。实验过程中在所有测试用例上参数U = 40，Q = 150。</p><p>通过图2可以看出算法IMOEA/D-ACO在个测试问题上的求解质量明显好于其他被比较算法，并且在求解规模大小为150和200的两个测试问题上其优势更佳明显。通过把各个算法在每个问题上运行30次得出的非支配解集转换成H-指标，然后从最大值、最小值、均值、标准差四个方面进行了比较，结果如表1所示。通过表1也可以看出IMOEA/D-ACO算法在各测试问题上H-指标的最大值、最小值和均值都是最小的，最小值也是最好的。在标准差方面，虽然只在kroAB100这个问题上最小，但在其他几个问题上获得的标准差与最小值相差很小。这说明在这些问题上IMOEA/D-ACO算法不但求解质量最佳，稳定性也相对较好。图3给出了各算法独立运行30次得到的近似Pareto Front，可以看出算法IMOEA/D-ACO在各测试用例上获得的解集明显优于其他算法并且分布比较均匀，更加接近PF。</p><p>图2. 基于H指标的盒子图</p><table-wrap-group id="1"><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> The comparative results of related algorith</title></caption><table-wrap id="1_1"><table><tbody><thead><tr><th align="center" valign="middle" >Case</th><th align="center" valign="middle" >Algorithm</th><th align="center" valign="middle" >Max</th><th align="center" valign="middle" >Min</th><th align="center" valign="middle" >Mean</th><th align="center" valign="middle" >Standard</th></tr></thead></tbody></table></table-wrap><table-wrap id="1_2"><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >IMOEA/D-ACO</th><th align="center" valign="middle" >0.0562</th><th align="center" valign="middle" >0.0249</th><th align="center" valign="middle" >0.0353</th><th align="center" valign="middle" >0.0071089</th></tr></thead><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOEA/D-ACO</td><td align="center" valign="middle" >0.1402</td><td align="center" valign="middle" >0.1172</td><td align="center" valign="middle" >0.1270</td><td align="center" valign="middle" >0.0137113</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >BicriterionAnt</td><td align="center" valign="middle" >0.4386</td><td align="center" valign="middle" >0.4031</td><td align="center" valign="middle" >0.4201</td><td align="center" valign="middle" >0.0088096</td></tr><tr><td align="center" valign="middle" >kroAB100</td><td align="center" valign="middle" >MACS</td><td align="center" valign="middle" >0.2230</td><td align="center" valign="middle" >0.1998</td><td align="center" valign="middle" >0.2128</td><td align="center" valign="middle" >0.0052364</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOACO/D-ACS</td><td align="center" valign="middle" >0.3675</td><td align="center" valign="middle" >0.3266</td><td align="center" valign="middle" >0.3546</td><td align="center" valign="middle" >0.0089364</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOACO</td><td align="center" valign="middle" >0.3678</td><td align="center" valign="middle" >0.3313</td><td align="center" valign="middle" >0.3502</td><td align="center" valign="middle" >0.0101488</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOAQ</td><td align="center" valign="middle" >0.4331</td><td align="center" valign="middle" >0.3958</td><td align="center" valign="middle" >0.4160</td><td align="center" valign="middle" >0.0127279</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >PACO</td><td align="center" valign="middle" >0.4309</td><td align="center" valign="middle" >0.3951</td><td align="center" valign="middle" >0.4154</td><td align="center" valign="middle" >0.0106770</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >IMOEA/D-ACO</td><td align="center" valign="middle" >0.0559</td><td align="center" valign="middle" >0.0332</td><td align="center" valign="middle" >0.0416</td><td align="center" valign="middle" >0.0066093</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOEA/D-ACO</td><td align="center" valign="middle" >0.1672</td><td align="center" valign="middle" >0.1049</td><td align="center" valign="middle" >0.1399</td><td align="center" valign="middle" >0.0114455</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >BicriterionAnt</td><td align="center" valign="middle" >0.2742</td><td align="center" valign="middle" >0.2491</td><td align="center" valign="middle" >0.2645</td><td align="center" valign="middle" >0.0052990</td></tr><tr><td align="center" valign="middle" >kroAC100</td><td align="center" valign="middle" >MACS</td><td align="center" valign="middle" >0.2102</td><td align="center" valign="middle" >0.1830</td><td align="center" valign="middle" >0.1984</td><td align="center" valign="middle" >0.0050550</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOACO/D-ACS</td><td align="center" valign="middle" >0.3589</td><td align="center" valign="middle" >0.3287</td><td align="center" valign="middle" >0.3465</td><td align="center" valign="middle" >0.0077633</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOACO</td><td align="center" valign="middle" >0.3586</td><td align="center" valign="middle" >0.3324</td><td align="center" valign="middle" >0.3467</td><td align="center" valign="middle" >0.0062761</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOAQ</td><td align="center" valign="middle" >0.2559</td><td align="center" valign="middle" >0.2371</td><td align="center" valign="middle" >0.2519</td><td align="center" valign="middle" >0.0078809</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >PACO</td><td align="center" valign="middle" >0.2596</td><td align="center" valign="middle" >0.2374</td><td align="center" valign="middle" >0.2506</td><td align="center" valign="middle" >0.0084581</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >IMOEA/D-ACO</td><td align="center" valign="middle" >0.0383</td><td align="center" valign="middle" >0.0122</td><td align="center" valign="middle" >0.0243</td><td align="center" valign="middle" >0.0067922</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOEA/D-ACO</td><td align="center" valign="middle" >0.2661</td><td align="center" valign="middle" >0.1597</td><td align="center" valign="middle" >0.1829</td><td align="center" valign="middle" >0.1555635</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >BicriterionAnt</td><td align="center" valign="middle" >0.3838</td><td align="center" valign="middle" >0.3065</td><td align="center" valign="middle" >0.3172</td><td align="center" valign="middle" >0.0039711</td></tr><tr><td align="center" valign="middle" >kroAB150</td><td align="center" valign="middle" >MACS</td><td align="center" valign="middle" >0.2959</td><td align="center" valign="middle" >0.2758</td><td align="center" valign="middle" >0.2868</td><td align="center" valign="middle" >0.0036208</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOACO/D-ACS</td><td align="center" valign="middle" >0.4149</td><td align="center" valign="middle" >0.3129</td><td align="center" valign="middle" >0.3555</td><td align="center" valign="middle" >0.0309838</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOACO</td><td align="center" valign="middle" >0.5062</td><td align="center" valign="middle" >0.4666</td><td align="center" valign="middle" >0.4877</td><td align="center" valign="middle" >0.0060745</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOAQ</td><td align="center" valign="middle" >0.4539</td><td align="center" valign="middle" >0.4085</td><td align="center" valign="middle" >0.4309</td><td align="center" valign="middle" >0.0114018</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >PACO</td><td align="center" valign="middle" >0.3221</td><td align="center" valign="middle" >0.2932</td><td align="center" valign="middle" >0.3054</td><td align="center" valign="middle" >0.0071204</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >IMOEA/D-ACO</td><td align="center" valign="middle" >0.1890</td><td align="center" valign="middle" >0.0095</td><td align="center" valign="middle" >0.0256</td><td align="center" valign="middle" >0.0249480</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOEA/D-ACO</td><td align="center" valign="middle" >0.2873</td><td align="center" valign="middle" >0.2051</td><td align="center" valign="middle" >0.2585</td><td align="center" valign="middle" >0.0309102</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >BicriterionAnt</td><td align="center" valign="middle" >0.4521</td><td align="center" valign="middle" >0.4046</td><td align="center" valign="middle" >0.4174</td><td align="center" valign="middle" >0.0100000</td></tr><tr><td align="center" valign="middle" >kroAB200</td><td align="center" valign="middle" >MACS</td><td align="center" valign="middle" >0.3951</td><td align="center" valign="middle" >0.3556</td><td align="center" valign="middle" >0.3774</td><td align="center" valign="middle" >0.0057835</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOACO/D-ACS</td><td align="center" valign="middle" >0.5732</td><td align="center" valign="middle" >0.5532</td><td align="center" valign="middle" >0.5642</td><td align="center" valign="middle" >0.0042448</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOACO</td><td align="center" valign="middle" >0.5765</td><td align="center" valign="middle" >0.5555</td><td align="center" valign="middle" >0.4569</td><td align="center" valign="middle" >0.0044351</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >MOAQ</td><td align="center" valign="middle" >0.5106</td><td align="center" valign="middle" >0.4933</td><td align="center" valign="middle" >0.5098</td><td align="center" valign="middle" >0.0097362</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >PACO</td><td align="center" valign="middle" >0.4233</td><td align="center" valign="middle" >0.3759</td><td align="center" valign="middle" >0.3997</td><td align="center" valign="middle" >0.0095473</td></tr></tbody></table></table-wrap></table-wrap-group><p>表1. 相关算法结果比较</p><p>图3. 近似帕累托前沿</p></sec></sec><sec id="s8"><title>4. 总结</title><p>已有的基于分解的多目标蚁群优化算法在初始化时采用切比雪夫方法生成子问题并且在整个优化过程中固定不变。基于以上情况，本文在MOEA/D-ACO算法的基础上提出了子问题动态削减方法使得在资源有限的前提下，每次迭代时能够根据每个子问题的好坏自动地为每只蚂蚁分配子问题。随着迭代次数的增多，逐步地将不好的子问题删除，将更多的资源用在产生非支配解比较多的子问题上，以达到节约资源的目的。实验结果表明，本文提出的方法是有效的，在搜索资源总量一定的情况下，通过提高搜索资源的利用率能够进一步提高算法的性能。</p></sec><sec id="s9"><title>基金项目</title><p>辽宁省博士启动基金项目(2020-BS-152)，沈阳理工大学校级大学生创新训练计划项目(202010144091)。</p></sec><sec id="s10"><title>文章引用</title><p>宁佳绪,牛 玥,纪丹蕾,肖雨婷,杨富燕. 一种基于子问题动态消减的改进多目标蚁群优化算法 An Improved Multi-Objective Ant Colony Optimization Algorithm Based on Sub-Problems Dynamic Subtraction[J]. 软件工程与应用, 2020, 09(06): 467-474. https://doi.org/10.12677/SEA.2020.96054</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.39244-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Zuo, L.Y., Shu, L., et al. (2015) A Multi-Objective Optimization Scheduling Method Based on the Ant Colony Algo-rithm in Cloud Computing, IEEE Access, 3, 2687-2699. &lt;br&gt;https://doi.org/10.1109/ACCESS.2015.2508940</mixed-citation></ref><ref id="hanspub.39244-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Juang, C.-F., Jeng, T.-L. and Chang, Y.-C. (2015) An Inter-pretable Fuzzy System Learned through Online Rule Generation and Multi-Objective ACO with a Mobile Robot Control Application. IEEE Transactions on Cybernetics, 46, 2706-2718. &lt;br&gt;https://doi.org/10.1109/TCYB.2015.2486779</mixed-citation></ref><ref id="hanspub.39244-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Wang, L.J. and Shen, J. (2016) Multi-Phase Ant Colony System for Multi-Party Data-Intensive Service Provision. IEEE Transactions on Services Computing, 9, 264-276. &lt;br&gt;https://doi.org/10.1109/TSC.2014.2358213</mixed-citation></ref><ref id="hanspub.39244-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">García-Martínez, C., Cordón, O. and Herrera, F. (2007) A Tax-onomy and an Empirical Analysis of Multiple Objective Ant Colony Optimization Algorithms for the Bi-Criteria TSP. European Journal of Operational Research, 180, 116-148.  
&lt;br&gt;https://doi.org/10.1016/j.ejor.2006.03.041</mixed-citation></ref><ref id="hanspub.39244-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Barán, B. and Schaerer, M. (2003) A Multiobjective Ant Colony System for Vehicle Routing Problem with Time Windows. The 21st IASTED International Multi-Conference on Applied Informatics, Innsbruck, 10-13 February 2003, 97-102.</mixed-citation></ref><ref id="hanspub.39244-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Doerner, K., Gutjahr, W.J., Hartl, R.F., et al. (2004) Pareto Ant Colony Optimization: A Metaheuristic Approach to Multiobjective Portfolio Selection. Annals of Operations Re-search, 131, 79-99.  
&lt;br&gt;https://doi.org/10.1023/B:ANOR.0000039513.99038.c6</mixed-citation></ref><ref id="hanspub.39244-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Iredi, S., Merkle, D. and Middendorf, M. (2001) Bi-Criterion Optimization with Multi Colony Ant Algorithms. International Conference on Evolutionary Multi-Criterion Optimization, 8, 359-372.  
&lt;br&gt;https://doi.org/10.1007/3-540-44719-9_25</mixed-citation></ref><ref id="hanspub.39244-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">López-Ibánez, M. and Stützle, T. (2012) The Automatic Design of Multiobjective Ant Colony Optimization Algorithms. IEEE Transactions on Evolutionary Computation, 16, 861-875. &lt;br&gt;https://doi.org/10.1109/TEVC.2011.2182651</mixed-citation></ref><ref id="hanspub.39244-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Idid, A. and Tgi, F. (2015) Performance Analysis of the Multi-Objective Ant Colony Optimization Algorithms for the Traveling Salesman Problem. Swarm and Evolutionary Computation, 23, 11-26.  
&lt;br&gt;https://doi.org/10.1016/j.swevo.2015.02.003</mixed-citation></ref><ref id="hanspub.39244-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Ke, L., Zhang, Q.F. and Battiti, R. (2013) MOEA/D-ACO: A Multi-Objective Evolutionary Algorithm Using Decomposition and Ant Colony. IEEE Transactions on Cybernetics, 43, 1845-1859.  
&lt;br&gt;https://doi.org/10.1109/TSMCB.2012.2231860</mixed-citation></ref><ref id="hanspub.39244-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Ning, J.X., Zhang, Q., Zhang, C.S. and Zhang, B. (2018) A Best-Path-Updating Information-Guided Ant Colony Optimization Algorithm. Information Science, 433-434, 142-162. &lt;br&gt;https://doi.org/10.1016/j.ins.2017.12.047</mixed-citation></ref></ref-list></back></article>