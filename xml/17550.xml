<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2016.52029</article-id><article-id pub-id-type="publisher-id">AAM-17550</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20160200000_32297146.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  Fibonacci数列及其推广形式的正整数表示
  Representation of Natural Numbers Using Generalized Fibonacci Sequence
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郭</surname><given-names>婷婷</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>晁</surname><given-names>福刚</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>任</surname><given-names>韩</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>华东师范大学数学系，上海</addr-line></aff><aff id="aff3"><addr-line>华东师范大学数学系，上海；上海市核心数学与实践重点实验室，上海</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>05</day><month>05</month><year>2016</year></pub-date><volume>05</volume><issue>02</issue><fpage>225</fpage><lpage>231</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  正整数表示问题前人多有研究，而基于Fibonacci数列及其推广形式的分析并不多见。本文的主要工作是探讨了该类整数表示的可行性，发现了表示的多样性，从而从最少表示及最多表示的角度来展开分析，分别引入了它们的计数多项式以及0与1的编码形式。起初是只针对Fibonacci数列，之后研究Lucas数列的情况，再接着对一类推广：n代的Fibonacci数列做了猜测。
   Previously, there were many studies about the problem of representation of natural numbers. But it’s comparatively rare to study the problem based on Fibonacci sequence and its extension. This thesis mainly discussed the feasibility and diversity of this kind of representation. Utilizing enu-merating polynomials and binomial codes, we focused on minimal and maximal representations of natural numbers. In addition to Fibonacci sequence, we also studied the situation of Lucas sequence and offered some hypotheses in the case of n-step Fibonacci sequence.
 
</p></abstract><kwd-group><kwd>正整数表示，Fibonacci数列，计数多项式，二项编码, Representation of Natural Numbers</kwd><kwd> Fibonacci Sequence</kwd><kwd> Enumerating Polynomial</kwd><kwd> Binomial Code</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>Fibonacci数列及其推广形式的正整数表示<sup> </sup></title><p>郭婷婷<sup>1</sup>，晁福刚<sup>1</sup>，任 韩<sup>1,2*</sup></p><p><sup>1</sup>华东师范大学数学系，上海</p><p><sup>2</sup>上海市核心数学与实践重点实验室，上海</p><disp-formula id="hanspub.17550-formula516"><graphic xlink:href="http://html.hanspub.org/file/9-2620261x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2016年4月24日；录用日期：2016年5月10日；发布日期：2016年5月13日</p><disp-formula id="hanspub.17550-formula517"><graphic xlink:href="http://html.hanspub.org/file/9-2620261x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>正整数表示问题前人多有研究，而基于Fibonacci数列及其推广形式的分析并不多见。本文的主要工作是探讨了该类整数表示的可行性，发现了表示的多样性，从而从最少表示及最多表示的角度来展开分析，分别引入了它们的计数多项式以及0与1的编码形式。起初是只针对Fibonacci数列，之后研究Lucas数列的情况，再接着对一类推广：n代的Fibonacci数列做了猜测。</p><p>关键词 :正整数表示，Fibonacci数列，计数多项式，二项编码</p><disp-formula id="hanspub.17550-formula518"><graphic xlink:href="http://html.hanspub.org/file/9-2620261x9_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>中世纪意大利数学家Leonardo Fibonacci提出了如下的“兔子问题”：在一年初把一对兔子(雌雄各一)放入围墙内，从第二个月起，雌兔每月生一对兔子(雌雄各一)，而雌小兔长满足两个月后开始生小兔子，也是每月生一对兔子(雌雄各一)，问到了年底墙内共有多少对兔子。这就是著名的Fibonacci数列。</p><p>Fibonacci数列与许多数学概念联系密切，并具有许多漂亮的性质。人们在许多表面上看似没有任何联系的问题中都发现了它们，使得这一数列成为很基本的一个数学对象。例如：上n阶楼梯，每次只能上1阶或2阶，的不同方法数。就是与Fibonacci数列有相同的初始值和递推关系的数列。一个更有趣的事实是这个正整数的序列，它的通项竟然可以用无理数来表示。</p><p>美国数学会专门出版了一份以《Fibonacci Quarterly》为名的数学杂志，来刊载这方面的研究成果。本文所研究的正整数表示问题的很多参考文献也是来源于此。</p></sec><sec id="s4"><title>2. 正整数表示的存在性和最多与最少的表示问题</title><p>为了证明存在性，先引入一个概念：对于一个非负递增数列，若所有正整数都能写成数列中的某些元素的和，且每个元素最多用一次，则该数列是完全数列 [<xref ref-type="bibr" rid="hanspub.17550-ref1">1</xref>] 。</p><p>数列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x10_hanspub.png" xlink:type="simple"/></inline-formula>是完全数列的一个充要条件是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x11_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x12_hanspub.png" xlink:type="simple"/></inline-formula>为数列的和函数。因而可以推知当等号成立时，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x13_hanspub.png" xlink:type="simple"/></inline-formula>是满足条件的最小数列。这也是每个正整数都有二进制表示的理由。</p><p>数列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x14_hanspub.png" xlink:type="simple"/></inline-formula>是完全数列的一个充分条件是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x15_hanspub.png" xlink:type="simple"/></inline-formula>，易验证Fibonacci数列满足该不等式，从而Fibonacci数列是完全数列，任何正整数都可以基于Fibonacci数列表示。</p><p>如果我们将任意正整数写成不同的Fibonacci数的和，且涉及的数字最多用一次，例如：10 = 8 + 2 = 2 + 3 + 5 = 1 + 1 + 3 + 5，可以发现会有很多种表示方法，那不禁要问最多与最少的表示分别是什么 [<xref ref-type="bibr" rid="hanspub.17550-ref2">2</xref>] 。</p><p>若是最少表示的话，相邻的Fibonacci数是不能同时出现的。试想一下，若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x16_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x17_hanspub.png" xlink:type="simple"/></inline-formula>同时出现在表示中，则为了用最少的数字来表示某个整数，它们可以被<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x18_hanspub.png" xlink:type="simple"/></inline-formula>所取代。</p><p>为了更好地分析该问题，我们需要引入一个0与1的纸盒模型。将命题“关于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x19_hanspub.png" xlink:type="simple"/></inline-formula>中不相邻的子集个数是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x20_hanspub.png" xlink:type="simple"/></inline-formula>”，做如下推广。考虑n个盒子，每个盒子里要么装0要么装1，连续的两个盒子里不能都装1，那么这样的装法数为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x21_hanspub.png" xlink:type="simple"/></inline-formula>种。如果再排除全部装0的情况，则只有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x22_hanspub.png" xlink:type="simple"/></inline-formula>种装法。换句话说，由n个不相邻的且不同的Fibonacci数能表示的最大数是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x23_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>回到提出的问题，由于要使用不同的Fibonacci数，则我们必须舍去<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x24_hanspub.png" xlink:type="simple"/></inline-formula>，n个盒子分别按照顺序表示<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x25_hanspub.png" xlink:type="simple"/></inline-formula>，取1则表示使用这个Fibonacci数，取0则表示不使用。</p><p>基于最少表示的限定条件：相邻的Fibonacci数不能出现，那么我们也能很容易得出恒等式即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x26_hanspub.png" xlink:type="simple"/></inline-formula>(有2k个盒子)；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x27_hanspub.png" xlink:type="simple"/></inline-formula> (有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x28_hanspub.png" xlink:type="simple"/></inline-formula>个盒子)。</p><p>对于每一个在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x29_hanspub.png" xlink:type="simple"/></inline-formula>中的整数，我们定义一个最少表示的计数多项式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x30_hanspub.png" xlink:type="simple"/></inline-formula>，多项式中的每一项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x31_hanspub.png" xlink:type="simple"/></inline-formula>表示有a个整数需j用个Fibonacci数表示。例如：对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x32_hanspub.png" xlink:type="simple"/></inline-formula>中的整数的最少表示分别为8 = 8，9 = 8 + 1，10 = 8 + 2，11 = 8 + 3，12 = 8 + 3 + 1，由此可得该段区间内的最少计数多项式为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x33_hanspub.png" xlink:type="simple"/></inline-formula>。从该例子中还能发现一个特点，即：对于每一个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x34_hanspub.png" xlink:type="simple"/></inline-formula>中的整数Fibonacci的最少表示一定会含有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x35_hanspub.png" xlink:type="simple"/></inline-formula>。如果不含有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x36_hanspub.png" xlink:type="simple"/></inline-formula>，那么此区间内的最少表示是不能实现的，否则得取相邻的Fibonacci数了，而这已经不是最少表示了。</p><p>表1罗列了前9个最少计数多项式。</p><p>接下来我们可以简单地推导一下该最少计数多项式的递推公式。</p><p>显然对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x37_hanspub.png" xlink:type="simple"/></inline-formula>的最少计数多项式可以拆成<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x38_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x39_hanspub.png" xlink:type="simple"/></inline-formula>的两个最少计数多项式的和。</p><p>如果我们在每一个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x40_hanspub.png" xlink:type="simple"/></inline-formula>的整数最少表示中加入<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x41_hanspub.png" xlink:type="simple"/></inline-formula>，则我们可以得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x42_hanspub.png" xlink:type="simple"/></inline-formula>，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x43_hanspub.png" xlink:type="simple"/></inline-formula>的最少计数多项式为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x44_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x45_hanspub.png" xlink:type="simple"/></inline-formula>所有整数的最少表示中都会含有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x46_hanspub.png" xlink:type="simple"/></inline-formula>，如果我们将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x47_hanspub.png" xlink:type="simple"/></inline-formula>用<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x48_hanspub.png" xlink:type="simple"/></inline-formula>代替，即可得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x49_hanspub.png" xlink:type="simple"/></inline-formula>的最少计数多项式，也是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x50_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>从而我们能够得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x51_hanspub.png" xlink:type="simple"/></inline-formula>的最少计数多项式，即递推公式：</p><disp-formula id="hanspub.17550-formula519"><graphic xlink:href="http://html.hanspub.org/file/9-2620261x52_hanspub.png"  xlink:type="simple"/></disp-formula><p>另外不难注意到，对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x53_hanspub.png" xlink:type="simple"/></inline-formula>的最少计数多项式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x54_hanspub.png" xlink:type="simple"/></inline-formula>的所有系数的和为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x55_hanspub.png" xlink:type="simple"/></inline-formula>，该值也表示该区间所有整数的个数即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x56_hanspub.png" xlink:type="simple"/></inline-formula>。所以在上述递推关系中若令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x57_hanspub.png" xlink:type="simple"/></inline-formula>，则可得到Fibonacci数列的递推关系。</p><p>此外，如果我们再结合之前提到的盒子问题，用0和1编码的形式来展示上述过程会更简单明了地看出递推关系。需要注意的是最少表示中必须满足任意两个1不能相邻的条件。表2展示了[13,21)至[21,34)的整数Fibonacci最少表示的变化过程。</p></sec><sec id="s5"><title>3. Fibonacci最少表示的唯一性与其最多表示</title><p>由Zeckendorf定理 [<xref ref-type="bibr" rid="hanspub.17550-ref3">3</xref>] 可知，对于每个正整数n有唯一的Fibonacci最少表示，即必须由不相邻的数组成。可以用反证法证明如下，若n有两个不同的表示，即</p><disp-formula id="hanspub.17550-formula520"><graphic xlink:href="http://html.hanspub.org/file/9-2620261x58_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x59_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>令k是满足<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x60_hanspub.png" xlink:type="simple"/></inline-formula>的最大指标，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x61_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x62_hanspub.png" xlink:type="simple"/></inline-formula>中有一个是0有一个是1，不妨设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x63_hanspub.png" xlink:type="simple"/></inline-formula>。因此<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x64_hanspub.png" xlink:type="simple"/></inline-formula>，且由该等式右边能导出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x65_hanspub.png" xlink:type="simple"/></inline-formula>，而左边<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x66_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x67_hanspub.png" xlink:type="simple"/></inline-formula>，与前一导出</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Enumerating minimal polynomials using Fibonacci number</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >m</th><th align="center" valign="middle" >[F(m), F(m + 1))</th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x68_hanspub.png" xlink:type="simple"/></inline-formula></th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >[1, 1)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x69_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >[1, 2)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x70_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >[2, 3)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x71_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >[3, 5)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x72_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >[5, 8)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x73_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >[8, 13)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x74_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >[13, 21)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x75_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >[21, 34)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x76_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >[34, 55)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x77_hanspub.png" xlink:type="simple"/></inline-formula></td></tr></tbody></table></table-wrap><p>表1. Fibonacci的最少计数多项式</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Recurrence relation of the minimal representation using Fibonacci number</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Fibo</th><th align="center" valign="middle" ></th><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Fibo</th><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Fibo</th><th align="center" valign="middle" ></th><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Fibo</th></tr></thead><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1010000</td><td align="center" valign="middle" >29</td><td align="center" valign="middle" >100000</td><td align="center" valign="middle" >13</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1000000</td><td align="center" valign="middle" >21</td></tr><tr><td align="center" valign="middle" >10001</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1010001</td><td align="center" valign="middle" >30</td><td align="center" valign="middle" >100001</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1000001</td><td align="center" valign="middle" >22</td></tr><tr><td align="center" valign="middle" >10010</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1010010</td><td align="center" valign="middle" >31</td><td align="center" valign="middle" >100010</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1000010</td><td align="center" valign="middle" >23</td></tr><tr><td align="center" valign="middle" >10100</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1010100</td><td align="center" valign="middle" >32</td><td align="center" valign="middle" >100100</td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1000100</td><td align="center" valign="middle" >24</td></tr><tr><td align="center" valign="middle" >10101</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1010101</td><td align="center" valign="middle" >33</td><td align="center" valign="middle" >100101</td><td align="center" valign="middle" >17</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1000101</td><td align="center" valign="middle" >25</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" >101000</td><td align="center" valign="middle" >18</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1001000</td><td align="center" valign="middle" >26</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" >101001</td><td align="center" valign="middle" >19</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1001001</td><td align="center" valign="middle" >27</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" >101010</td><td align="center" valign="middle" >20</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1001010</td><td align="center" valign="middle" >28</td></tr></tbody></table></table-wrap><p>表2. Fibonacci最少表示的递推关系</p><p>矛盾，得证。</p><p>反过来，如果我们为了得到最多的表示，则尽可能要用相邻的Fibonacci数。再回到之前提到的装满0和1的盒子，这次我们希望不要出现相邻的0，即n个1中最多插入一个0。在任何一串连续的1中，0可以出现在最左边的1的旁边也可以出现在最右边的1的旁边。</p><p>现在考虑<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x78_hanspub.png" xlink:type="simple"/></inline-formula>中整数的最多计数多项式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x79_hanspub.png" xlink:type="simple"/></inline-formula>。同样的多项式中的每一项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x80_hanspub.png" xlink:type="simple"/></inline-formula>表示有a个整数需用j个Fibonacci数表示。例如：对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x81_hanspub.png" xlink:type="simple"/></inline-formula>中的整数的最多表示分别为7 = 5 + 2, 8 = 5 + 2 + 1, 9 = 5 + 3 + 1, 10 = 5 + 3 + 2, 11 = 5 + 3 + 2 + 1，由此可得该段区间内的最多计数多项式为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x82_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>从该例子中还能发现一个特点，即：对于每一个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x83_hanspub.png" xlink:type="simple"/></inline-formula>中的整数Fibonacci的最多表示一定会含有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x84_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>表3罗列了前8个最多计数多项式。</p><p>参照之前的做法，同样可以得到最多计数多项式的递推关系：</p><disp-formula id="hanspub.17550-formula521"><graphic xlink:href="http://html.hanspub.org/file/9-2620261x85_hanspub.png"  xlink:type="simple"/></disp-formula><p>同样地，我们也可以用编码的形式来直观地看出这个递推关系。表4展示了[7,20)至[20,33)的整数Fibonacci最多表示的变化过程。</p></sec><sec id="s6"><title>4. Fibonacci的表示数</title><p>我们定义<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x86_hanspub.png" xlink:type="simple"/></inline-formula>表示n用Fibonacci数表示的所有可能数目，则可以通过贪婪算法得出前60个正整数的情况表5。</p><p>然而随着n不断变大，计算机的存储空间有限将不能继续运算，为此有些数学家就推导了一些关于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x87_hanspub.png" xlink:type="simple"/></inline-formula>的递推关系，研究了该表示数的一些性质 [<xref ref-type="bibr" rid="hanspub.17550-ref4">4</xref>] 。</p></sec><sec id="s7"><title>5. Lucas的表示</title><p>如果我们将Fibonacci数换成Lucas数，即：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x88_hanspub.png" xlink:type="simple"/></inline-formula>探讨基于此数的正整数表示 [<xref ref-type="bibr" rid="hanspub.17550-ref5">5</xref>] 。同样的，我们对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x89_hanspub.png" xlink:type="simple"/></inline-formula>中的每个整数定义一个最少计数多项式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x90_hanspub.png" xlink:type="simple"/></inline-formula>多项式中的每一项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x91_hanspub.png" xlink:type="simple"/></inline-formula>表示有d个整数需用j个Lucas数表示。例如：对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x92_hanspub.png" xlink:type="simple"/></inline-formula>中的整数的最少表示分别为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x93_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x94_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x95_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x96_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x97_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x98_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x99_hanspub.png" xlink:type="simple"/></inline-formula>，由此可得该段区间内的最少计数多项式为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x100_hanspub.png" xlink:type="simple"/></inline-formula>，从该例子中也能发现一个特点，即：对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x101_hanspub.png" xlink:type="simple"/></inline-formula>每一个中的整数Lucas的最少表示一定会含有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x102_hanspub.png" xlink:type="simple"/></inline-formula>。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Enumerating maximal polynomials using Fibonacci number</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >m</th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x103_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x104_hanspub.png" xlink:type="simple"/></inline-formula></th></tr></thead><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >[0, 1)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x105_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >[1, 2)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x106_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >[2, 4)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x107_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >[4, 7)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x108_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >[7, 12)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x109_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >[12, 20)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x110_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >[20, 33)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x111_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >[33, 54)</td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x112_hanspub.png" xlink:type="simple"/></inline-formula></td></tr></tbody></table></table-wrap><p>表3. Fibonacci的最多计数多项式</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Recurrence relation of the maximal representation using Fibonacci number</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Fibo</th><th align="center" valign="middle" ></th><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Fibo</th><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Fibo</th><th align="center" valign="middle" ></th><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Fibo</th></tr></thead><tr><td align="center" valign="middle" >1010</td><td align="center" valign="middle" >7</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >101010</td><td align="center" valign="middle" >20</td><td align="center" valign="middle" >10101</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >110101</td><td align="center" valign="middle" >25</td></tr><tr><td align="center" valign="middle" >1011</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >101011</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >10110</td><td align="center" valign="middle" >13</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >110110</td><td align="center" valign="middle" >26</td></tr><tr><td align="center" valign="middle" >1101</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >101101</td><td align="center" valign="middle" >22</td><td align="center" valign="middle" >10111</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >110111</td><td align="center" valign="middle" >27</td></tr><tr><td align="center" valign="middle" >1110</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >101110</td><td align="center" valign="middle" >23</td><td align="center" valign="middle" >11010</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >111010</td><td align="center" valign="middle" >28</td></tr><tr><td align="center" valign="middle" >1111</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >101111</td><td align="center" valign="middle" >24</td><td align="center" valign="middle" >11011</td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >111011</td><td align="center" valign="middle" >29</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" >11101</td><td align="center" valign="middle" >17</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >111101</td><td align="center" valign="middle" >30</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" >11110</td><td align="center" valign="middle" >18</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >111110</td><td align="center" valign="middle" >31</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" >11111</td><td align="center" valign="middle" >19</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >111111</td><td align="center" valign="middle" >32</td></tr></tbody></table></table-wrap><p>表4. Fibonacci最多表示的递推关系</p><p>由于Fibonacci和Lucas只是初项不同，两者的递推关系是一样的，从而我们可以推测两者的计数多项式的递推关系应该也是一样的。可以看表6用编码展示的Lucas最少计数多项式的递推关系变化过程。 至于Lucas的最多计数多项式的内容和之前的Fibonacci类似，在此就不再赘述。</p><p>另外Lucas的最少表示是否与Fibonacci一样也是唯一的呢？答案是否定的。例如：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x113_hanspub.png" xlink:type="simple"/></inline-formula>，若仍想保证表示的唯一性，则当同时出现时，只能选择其一。</p></sec><sec id="s8"><title>6. n代Fibonacci数列的表示</title><p>最后我们考虑一下n代的Fibonacci数列是否有上述提及的类似性质 [<xref ref-type="bibr" rid="hanspub.17550-ref6">6</xref>] 。</p><p>我们称数列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x114_hanspub.png" xlink:type="simple"/></inline-formula>为n代的Fibonacci数列，当且仅当</p><table-wrap id="table5" ><label><xref ref-type="table" rid="table5">Table 5</xref></label><caption><title> The number of possibility of representation of n using Fibonacci number</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >n</th><th align="center" valign="middle" >R(n)</th><th align="center" valign="middle" >n</th><th align="center" valign="middle" >R(n)</th><th align="center" valign="middle" >n</th><th align="center" valign="middle" >R(n)</th><th align="center" valign="middle" >n</th><th align="center" valign="middle" >R(n)</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >31</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >46</td><td align="center" valign="middle" >2</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >17</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >32</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >47</td><td align="center" valign="middle" >5</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >18</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >33</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >48</td><td align="center" valign="middle" >5</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >19</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >34</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >49</td><td align="center" valign="middle" >3</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >20</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >35</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >50</td><td align="center" valign="middle" >6</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >36</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >51</td><td align="center" valign="middle" >3</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >22</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >37</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >52</td><td align="center" valign="middle" >4</td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >23</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >38</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >53</td><td align="center" valign="middle" >4</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >24</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >39</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >54</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >10</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >25</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >40</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >55</td><td align="center" valign="middle" >5</td></tr><tr><td align="center" valign="middle" >11</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >41</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >56</td><td align="center" valign="middle" >4</td></tr><tr><td align="center" valign="middle" >12</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >27</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >42</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >57</td><td align="center" valign="middle" >4</td></tr><tr><td align="center" valign="middle" >13</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >28</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >43</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >58</td><td align="center" valign="middle" >7</td></tr><tr><td align="center" valign="middle" >14</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >29</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >44</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >59</td><td align="center" valign="middle" >3</td></tr><tr><td align="center" valign="middle" >15</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >30</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >45</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >60</td><td align="center" valign="middle" >6</td></tr></tbody></table></table-wrap><p>表5. n用Fibonacci数表示的所有可能数目</p><table-wrap id="table6" ><label><xref ref-type="table" rid="table6">Table 6</xref></label><caption><title> Recurrence relation of the minimal representation using Lucas number</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Lucas</th><th align="center" valign="middle" ></th><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Lucas</th><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Lucas</th><th align="center" valign="middle" ></th><th align="center" valign="middle" >编码</th><th align="center" valign="middle" >Lucas</th></tr></thead><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >7</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1010000</td><td align="center" valign="middle" >25</td><td align="center" valign="middle" >100000</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1000000</td><td align="center" valign="middle" >18</td></tr><tr><td align="center" valign="middle" >10010</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1010010</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >100010</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1000010</td><td align="center" valign="middle" >19</td></tr><tr><td align="center" valign="middle" >10001</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1010001</td><td align="center" valign="middle" >27</td><td align="center" valign="middle" >100001</td><td align="center" valign="middle" >13</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1000001</td><td align="center" valign="middle" >20</td></tr><tr><td align="center" valign="middle" >10100</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1010100</td><td align="center" valign="middle" >28</td><td align="center" valign="middle" >100100</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1000100</td><td align="center" valign="middle" >21</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" >101000</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1001000</td><td align="center" valign="middle" >22</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" >101010</td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1001010</td><td align="center" valign="middle" >23</td></tr><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" >101001</td><td align="center" valign="middle" >17</td><td align="center" valign="middle" >→</td><td align="center" valign="middle" >1001001</td><td align="center" valign="middle" >24</td></tr></tbody></table></table-wrap><p>表6. Lucas最少表示的递推关系</p><disp-formula id="hanspub.17550-formula522"><graphic xlink:href="http://html.hanspub.org/file/9-2620261x115_hanspub.png"  xlink:type="simple"/></disp-formula><p>该数列的特征方程是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x116_hanspub.png" xlink:type="simple"/></inline-formula>，将此等式两边同乘以<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x117_hanspub.png" xlink:type="simple"/></inline-formula>，即化成<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x118_hanspub.png" xlink:type="simple"/></inline-formula>，之后再同时除以<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x119_hanspub.png" xlink:type="simple"/></inline-formula>，可得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x120_hanspub.png" xlink:type="simple"/></inline-formula>。所以该数列的特征根也是方程<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x121_hanspub.png" xlink:type="simple"/></inline-formula>的根。由于该方程的极限是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x122_hanspub.png" xlink:type="simple"/></inline-formula>，从而可知n代Fibonacci数列也会收敛到数列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x123_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>从而我们可以推断n代Fibonacci数列也会是完全数列。所以任何正整数也会有n代Fibonacci数列的表示。</p><p>同样的，我们也能够考虑n代Fibonacci数列的计数多项式的递推。如果从编码的角度，需要注意的一个规则是：n代的最少编码是至多<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x124_hanspub.png" xlink:type="simple"/></inline-formula>个1连在一起，n代的最多编码是至多<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/9-2620261x125_hanspub.png" xlink:type="simple"/></inline-formula>个0连在一起，这是由数列的递推关系决定的。</p></sec><sec id="s9"><title>基金项目</title><p>本项研究工作得到了上海市科学技术委员会的资助，资助课题编号为13dz2260400；同时受到中国国家自然科学基金项目资助(项目批准号：11171114)，在此表示感谢。</p></sec><sec id="s10"><title>文章引用</title><p>郭婷婷,晁福刚,任韩. Fibonacci数列及其推广形式的正整数表示 Representation of Natural Numbers Using Generalized Fibonacci Sequence[J]. 应用数学进展, 2016, 05(02): 225-231. http://dx.doi.org/10.12677/AAM.2016.52029</p></sec><sec id="s11"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.17550-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Hoggatt Jr., V.E. and Chow, B. (1972) Some Theorems on Completeness. Fibonacci Quarterly, 10, 551-554.</mixed-citation></ref><ref id="hanspub.17550-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Ferns, H.H. (1965) On the Representation of Integers as Sums of Distinct Fibonacci Numbers. Fibonacci Quarterly, 3, 21-30.</mixed-citation></ref><ref id="hanspub.17550-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Brown Jr., J.L. (1964) Zeckendorf’s Theorem and Some Applications. Fibonacci Quarterly, 2, 163-168.</mixed-citation></ref><ref id="hanspub.17550-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Bicknell-Johnson, M. and Fielder, D.C. (1999) The Number of Representations of n Using Distinct Fibonacci Numbers, Counted by Recursive Formulas. Fibonacci Quarterly, 37, 47-60.</mixed-citation></ref><ref id="hanspub.17550-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Brown Jr., J.L. (1969) Unique Representations of Integers as Sums of Distinct Lucas Numbers. Fibonacci Quarterly, 7, 243-252.</mixed-citation></ref><ref id="hanspub.17550-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Daykin, D.E. (1969) Representations of Natural Numbers as Sums of Generalized Fibonacci Numbers. Fibonacci Quarterly, 7, 494-510.</mixed-citation></ref></ref-list></back></article>