<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2017.71008</article-id><article-id pub-id-type="publisher-id">CSA-19635</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20170100000_70816292.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  一种基于JasperReport的定制报表的实现
  Implementation of Customizable Reports Based on JasperReport
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>刘</surname><given-names>浩波</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>叶</surname><given-names>桦</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>仰</surname><given-names>燕兰</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>东南大学自动化学院，江苏 南京</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>220141386@seu.edu.cn(刘浩)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>17</day><month>01</month><year>2017</year></pub-date><volume>07</volume><issue>01</issue><fpage>58</fpage><lpage>66</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   JasperReport在生成格式相同数据不同的报表时，需要修改报表模板并且重新编译。针对这个问题，选择JavaBean作为数据源，使用IReport设计一个相对通用的报表模板，自动适应数据源的长度。在JavaWeb的基础上，同时配合数据库、后台代码与前端页面的设计。以生产报表为例，通过网页进行机台和日期的选择，实现了报表的定制。 JasperReport needs to modify and recompile the report template when a report with different data is generated. To solve this problem, we select JavaBean as the data source, and use IReport to design a general report template, which is automatically adapted to the length of the data source. On the basis of JavaWeb, we coordinate with the design of the database, the background code and the front page. Taking the production report as an example, a custom report is achieved by using the webpage to choose the machines and the dates.
    
  
 
</p></abstract><kwd-group><kwd>JasperReport IReport，报表模板，生产报表，定制报表, JasperReport IReport</kwd><kwd> Report Template</kwd><kwd> Production Report</kwd><kwd> Custom Report</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>一种基于JasperReport的定制报表的实现<sup> </sup></title><p>刘浩波，叶桦，仰燕兰</p><p>东南大学自动化学院，江苏 南京</p><p>收稿日期：2017年1月4日；录用日期：2017年1月21日；发布日期：2017年1月24日</p><disp-formula id="hanspub.19635-formula5"><graphic xlink:href="http://html.hanspub.org/file/8-1540685x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>JasperReport在生成格式相同数据不同的报表时，需要修改报表模板并且重新编译。针对这个问题，选择JavaBean作为数据源，使用IReport设计一个相对通用的报表模板，自动适应数据源的长度。在JavaWeb的基础上，同时配合数据库、后台代码与前端页面的设计。以生产报表为例，通过网页进行机台和日期的选择，实现了报表的定制。</p><p>关键词 :JasperReport IReport，报表模板，生产报表，定制报表</p><disp-formula id="hanspub.19635-formula6"><graphic xlink:href="http://html.hanspub.org/file/8-1540685x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2017 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="http://image.hanspub.org:8080\Html/htmlimages\1-2890033x\e70a10f1-7c93-45ea-9603-062237856e4b.png" /><img src="http://image.hanspub.org:8080\Html\htmlimages\1-2890033x\e898c85e-ffc4-45c9-b817-14224a4d6960.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>JasperReport是一个强大、灵活的开源报表生成工具，适用于各种Java应用程序，是当前Java开发者最常用的报表工具之一 [<xref ref-type="bibr" rid="hanspub.19635-ref1">1</xref>] 。利用JasperReport生成报表，首先需要设计报表模板，然后对报表模板进行编译、填充等过程，生成最终的报表 [<xref ref-type="bibr" rid="hanspub.19635-ref2">2</xref>] 。如果需要修改报表的数据，一般情况下需要修改报表模板，再重新编译，这种方法有两个缺陷：一是报表模板的修改需要写SQL语句进行数据的查询，因此只有懂数据库的程序员才能够修改报表模板，普通的用户是无法操作的；二是在Web报表的实现中，由于报表的生成是在服务器上进行的，因此需要上传修改后的报表模板到服务器，才能生成报表 [<xref ref-type="bibr" rid="hanspub.19635-ref3">3</xref>] 。虽然已经有一些方法利用网页的二次开发，能够在网页上修改报表模板 [<xref ref-type="bibr" rid="hanspub.19635-ref4">4</xref>] ，但是工作量巨大，仍然要写SQL语句查询数据，普通用户还是无法操作。上述的缺陷主要是由报表模板的变化带来的。针对这一情况，本文利用JavaWeb编程，通过对报表工具JasperReport的定制，设计一个相对通用的报表模板，实现了在网页上定制报表的功能。</p></sec><sec id="s4"><title>2. JasperReport工作方式的选择</title><sec id="s4_1"><title>2.1. 报表生成过程</title><p>JasperReport是用Java开发的报表工具，能够展示丰富的页面内容，并将之转换成PDF、HTML、XLS等格式。IReport是为JasperReport设计的报表可视化设计器，用于生成JasperReport所使用的报表模板 [<xref ref-type="bibr" rid="hanspub.19635-ref5">5</xref>] 。IReport支持可视化、拖拽式的开发方式。因为JasperReport本身并未提供可视化报表设计工具，IReport的出现正好弥补了这个缺陷。</p><p>使用JasperReport生成报表的过程如图1所示，共有以下四个步骤 [<xref ref-type="bibr" rid="hanspub.19635-ref6">6</xref>] ：使用IReport设计报表模板，文件后缀是jrxml；编译并校验报表模板，JasperReport读取jrxml文件，验证格式，输出jasper文件；选择数据源，填充数据，形成有数据的报表，输出实例化的JasperPrint类；输出报表，JasperReport可以输出多种形式的报表，如PDF、HTML、XLS等。</p></sec><sec id="s4_2"><title>2.2. 数据源的选择</title><sec id="s4_2_1"><title>2.2.1. 以数据库作为数据源</title><p>以数据库作为数据源的方式如图2所示，即在报表模板中定义SQL语句，用于直接查询数据库。后台只需要事先提供数据库与报表之间的连接即可 [<xref ref-type="bibr" rid="hanspub.19635-ref1">1</xref>] 。这种方式获取数据效率高，且不需要后台代码的支持，所以被广泛运用。但是由于报表工具对数据的处理不够灵活，所以缺乏一些定制的功能。</p></sec><sec id="s4_2_2"><title>2.2.2. 以JavaBean作为数据源</title><p>以JavaBean作为数据源的方式如图3所示，后台作为数据库与报表之间的媒介。后台先获取数据库的数据，经过拼装打包成需要的数据，以JavaBean的形式传给报表。这种方式效率不高，但是可以通</p><p>图1. 报表生成过程</p><p>图2. 数据库作数据源方式</p><p>图3. JavaBean作数据源方式</p><p>过后台处理数据，因此适用一些需要定制报表的场合。</p><p>当要生成数据不同的报表时，以数据库作为数据源，只需要修改报表模板即可，但是报表模板的修改比较复杂，而且需要写SQL语句，所以只适合程序员修改。而以JavaBean作为数据源，可以让不懂数据库的用户在前端页面配置数据，通过后台拼装数据，完成相同的目标。但是需要一些后台代码和前端页面的配合。本文选择以JavaBean作为数据源。</p></sec></sec></sec><sec id="s5"><title>3. 数据库设计</title><sec id="s5_1"><title>3.1. 生产报表的内容</title><p>生产报表的内容如图4所示。每个报表记录的是若干机台在某几天的产量和利用率的情况，其中：</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/8-1540685x12_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>由于机台的产能是固定的，维护在机台信息中，因此机台利用率就可以通过产量和机台信息计算出来。</p></sec><sec id="s5_2"><title>3.2. 数据库表的设计</title><p>我们使用MySql数据库，设计了表1~表3，分别存储报表信息、机台信息和产量信息。</p><p>由于我们原本就需要对查询所得的数据在后台进行拼装，那么为了减少记录的数量，同时使报表的每条记录的信息更加直观，所以部分的一对多关系我们采用字符串的方式进行存储，如所选机台序列、所选日期序列等。上述的表中，表2机台信息是事先录入在数据库的，表3产量信息是由机台每日上传的。表1则是用户自己定制的，用户可以选择某几个机台和某几个日期，来生成对应的报表。</p><p>图4. 生产报表的内容</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Report information table (t_report</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >列名</th><th align="center" valign="middle" >类型</th><th align="center" valign="middle" >说明</th></tr></thead><tr><td align="center" valign="middle" >ID</td><td align="center" valign="middle" >INT</td><td align="center" valign="middle" >ID</td></tr><tr><td align="center" valign="middle" >TITLE</td><td align="center" valign="middle" >VARCHAR(255)</td><td align="center" valign="middle" >标题</td></tr><tr><td align="center" valign="middle" >MASHINES</td><td align="center" valign="middle" >VARCHAR(255)</td><td align="center" valign="middle" >所选机台序列</td></tr><tr><td align="center" valign="middle" >DATES</td><td align="center" valign="middle" >VARCHAR(255)</td><td align="center" valign="middle" >所选日期序列</td></tr></tbody></table></table-wrap><p>表1. 报表信息表(t_report)</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Machine information table (t_mashine</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >列名</th><th align="center" valign="middle" >类型</th><th align="center" valign="middle" >说明</th></tr></thead><tr><td align="center" valign="middle" >ID</td><td align="center" valign="middle" >INT</td><td align="center" valign="middle" >ID</td></tr><tr><td align="center" valign="middle" >NAME</td><td align="center" valign="middle" >VARCHAR(255)</td><td align="center" valign="middle" >机台编号</td></tr><tr><td align="center" valign="middle" >CAPACITY</td><td align="center" valign="middle" >INT</td><td align="center" valign="middle" >机台产能</td></tr></tbody></table></table-wrap><p>表2. 机台信息表(t_mashine)</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Production information table (t_data</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >列名</th><th align="center" valign="middle" >类型</th><th align="center" valign="middle" >说明</th></tr></thead><tr><td align="center" valign="middle" >ID</td><td align="center" valign="middle" >INT</td><td align="center" valign="middle" >ID</td></tr><tr><td align="center" valign="middle" >MASHINE_ID</td><td align="center" valign="middle" >INT</td><td align="center" valign="middle" >机台ID</td></tr><tr><td align="center" valign="middle" >TIME</td><td align="center" valign="middle" >DATE</td><td align="center" valign="middle" >日期</td></tr><tr><td align="center" valign="middle" >VALUE</td><td align="center" valign="middle" >INT</td><td align="center" valign="middle" >产量</td></tr></tbody></table></table-wrap><p>表3. 产量信息表(t_data)</p></sec></sec><sec id="s6"><title>4.报表实现</title><sec id="s6_1"><title>4.1. 数据包格式</title><p>由2.2.2可知，我们选择JavaBean作为数据源，即后台先获取数据库的数据，经过拼装打包成需要的数据，以JavaBean的形式传给报表。结合3.1生产报表的内容，拼装得到的JavaBean如图5所示。</p><p>其中，有三个对象，分别是ReportBean、ItemBean和ValueBean。一个ReportBean包含若干ItemBean，一个ItemBean包含若干ValueBean。ReportBean是报表类，包含了标题title、日期栏columns、机台信息items和合计栏totals。ItemBean是机台信息类，包含了机台编号mashine、机台产能capacity和产量信息values。ValueBean是产量信息类，包含了日期time和产量value。</p></sec><sec id="s6_2"><title>4.2. 报表模板的设计</title><p>设计一个通用的报表模板是解决问题的关键 [<xref ref-type="bibr" rid="hanspub.19635-ref7">7</xref>] 。这个报表模板应该能自动适应数据包的长度并且将数据填写到正确的位置上。由上述的分析可知，机台信息、日期栏、合计栏、产量信息这几项属于ArrayList，长度是可变的。设计的报表模板如图6所示。</p><p>其中有标题title字段，而日期栏、机台栏、合计栏、机台统计图栏均以子报表的形式存在，每一个子报表都能展示一组循环的数据，通过子报表的嵌套，可以看出类的嵌套关系。我们以机台栏的子报表为例，进行分析。机台信息items的子报表如图7所示。</p><p>它是纵向循环的，其中有mashine字段，而机台产量capacity由于只做计算而并不在报表中显示，因此作为变量传递到产量信息的子报表中。而产量信息的子报表如图8所示。</p><p>它是横向循环的，其中有产量字段，而机台利用率_value则是由value/capacity计算而来。</p><p>从上面的分析，我们可以看出，在报表模板中，利用子报表可以显示循环的数据，利用子报表的嵌套关系可以解析数据包中类的嵌套关系。因此，可以让报表模板适应数据的长度并正确地显示循环数据。</p><p>图5. 拼装得到的JavaBean</p><p>图6. 报表模板</p></sec></sec><sec id="s7"><title>5. 测试</title><sec id="s7_1"><title>5.1. 测试前提</title><p>程序上使用Spring MVC + MyBatis的框架，并且融入了报表工具JasperReport [<xref ref-type="bibr" rid="hanspub.19635-ref8">8</xref>] 。已经完成了下列代码：前端页面可以选择机台和日期。后台从数据库获取数据并拼装成JavaBean，传递给报表。报表模板已经完成，报表模板经过编译和填充，能够生成报表文件。</p><p>机台数据已经存储在数据库中，如表4所示。以第一条数据为例，表示ID为1的机台编号为M1_001，产能为2000。</p><p>产量数据也已经存储在数据库中，如表5所示。同样以第一条数据为例，表示ID为1的记录，其中机台ID为1，日期为2016年7月10日，产量为1840。</p></sec><sec id="s7_2"><title>5.2. 测试目标</title><p>利用同一个报表模板，生成两张格式相同、数据不同的生产报表。第一张报表名为测试报表1，内容为机台M1_001至M1_004在7月10日至7月16日的产量。第二张报表名为测试报表2，内容为机台M1_005至M1_006在7月12日至7月19日的产量。</p><p>图7. 机台信息子报表</p><p>图8. 报表模板</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Data of machin</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >ID</th><th align="center" valign="middle" >MASHINE</th><th align="center" valign="middle" >CAPACITY</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >M1_001</td><td align="center" valign="middle" >2000</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >M1_002</td><td align="center" valign="middle" >2000</td></tr><tr><td align="center" valign="middle" >……</td><td align="center" valign="middle" >……</td><td align="center" valign="middle" >……</td></tr></tbody></table></table-wrap><p>表4. 机台数据</p><table-wrap id="table5" ><label><xref ref-type="table" rid="table5">Table 5</xref></label><caption><title> Data of productio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >ID</th><th align="center" valign="middle" >MASHINE_ID</th><th align="center" valign="middle" >TIME</th><th align="center" valign="middle" >VALUE</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >2016-07-10</td><td align="center" valign="middle" >1840</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >2016-07-10</td><td align="center" valign="middle" >1620</td></tr><tr><td align="center" valign="middle" >……</td><td align="center" valign="middle" >……</td><td align="center" valign="middle" >……</td><td align="center" valign="middle" >……</td></tr></tbody></table></table-wrap><p>表5. 产量数据</p></sec><sec id="s7_3"><title>5.3. 测试过程</title><p>打开报表管理的界面，新增第一张报表，名称为测试报表1，机台选择M1_001至M1_004，日期选择7月10日至7月16日，点击保存，如图9所示。</p><p>类似的方法，在不修改报表模板的情况下，新增第二张报表，名称为测试报表2，机台选择M1_005至M1_006，日期选择7月12日至7月19日，点击保存，如图10所示。</p><p>图9. 新增测试报表1</p><p>图10. 新增测试报表2</p><p>图11. 测试报表1</p><p>分别预览测试报表1、2，得带如图11、图12的两张报表。</p><p>我们通过前端页面上的选择，利用一个通用的报表模板，实现格式相同数据不同的两张报表的生成，实现了测试的目标。</p></sec></sec><sec id="s8"><title>6. 结束语</title><p>本文在报表工具JasperReport的基础上，以设计一个相对通用的报表模板为核心，选择JavaBean作为数据源，通过数据库设计、后台代码实现与前端页面的配合，使用户在不需要修改报表模板的情况下，通过前端页面得到自己想要数据的报表，实现了生产报表的定制。本文是JasperReport的一种改进方式，</p><p>图12. 测试报表2</p><p>也为Web报表的定制提供了一种新的思路。</p></sec><sec id="s9"><title>文章引用</title><p>刘浩波,叶 桦,仰燕兰. 一种基于JasperReport的定制报表的实现 Implementation of Customizable Reports Based on JasperReport[J]. 计算机科学与应用, 2017, 07(01): 58-66. http://dx.doi.org/10.12677/CSA.2017.71008</p></sec><sec id="s10"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.19635-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">孙磊磊. 基于J2EE的施工项目管理系统的设计与实现[D]: [硕士学位论文]. 苏州: 苏州大学, 2014.</mixed-citation></ref><ref id="hanspub.19635-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">谭健欣, 刘宗妹. 基于JasperReports的Web报表设计与实现[J]. 电脑编程技巧与维护, 2014(20): 48-50.</mixed-citation></ref><ref id="hanspub.19635-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">余建成. 基于生产系统使用的Web自定义报表设计[J]. 计算机与数字工程, 2016(6): 1176-1180.</mixed-citation></ref><ref id="hanspub.19635-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">秦涛. 可配置WEB报表二次开发平台的设计与实现[D]: [硕士学位论文]. 北京: 北京邮电大学, 2014.</mixed-citation></ref><ref id="hanspub.19635-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">艾飞. 面向多任务的报表管理系统运行器的设计与实现[D]: [硕士学位论文]. 沈阳: 中国科学院研究生院(沈阳计算技术研究所), 2014.</mixed-citation></ref><ref id="hanspub.19635-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">马志超. 基于J2EE的财务数据报表系统的设计与实现[D]: [硕士学位论文]. 吉林: 吉林大学, 2016.</mixed-citation></ref><ref id="hanspub.19635-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">黄钰. 基于Flex和JasperReport报表工具的设计与实现[D]: [硕士学位论文]. 广州: 华南理工大学, 2010.</mixed-citation></ref><ref id="hanspub.19635-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">夏明星. 基于J2EE框架的电力企业信息系统的报表定制及权限管理模块设计与实现[D]: [硕士学位论文]. 北京: 北京邮电大学, 2014.</mixed-citation></ref></ref-list></back></article>