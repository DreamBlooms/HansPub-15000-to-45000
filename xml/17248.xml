<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2016.63024</article-id><article-id pub-id-type="publisher-id">CSA-17248</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20160300000_67785499.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  操作系统辅助教学平台的设计与实现
  Design and Implementation of Operating System Assisted Teaching Platform
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>金泉</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>倪</surname><given-names>丽娜</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>赵</surname><given-names>华</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>樊</surname><given-names>建聪</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>山东科技大学信息科学与工程学院，山东 青岛；山东科技大学山东省智慧矿山信息技术省级重点实验室，山东 青岛</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>01</day><month>03</month><year>2016</year></pub-date><volume>06</volume><issue>03</issue><fpage>190</fpage><lpage>194</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  操作系统是计算机专业的一门核心专业课程，具有较强的实验性。由于概念多、涉及面广等因素，往往难以很好地理解和掌握，国内外在操作系统实践教学方面所做了大量研究。本文通过构造一个虚拟操作系统运行环境，试图为学习、设计和研究操作系统提供一个简单、易用的平台，为操作系统的教学工作打下了良好基础。
   Operating system is one of the core computer science courses, with a strong experimental feature. It is often difficult to understand and grasp well because the course has many concepts and involves wide aspects of real operating system. A large number of researches have been done in practice teaching of the operating system course at home and abroad. In this paper, we construct a virtual operating system environment to provide a simple, easy to use platform for study, design and research of operating system. The platform has also laid a good foundation for operating system teaching work.
 
</p></abstract><kwd-group><kwd>教学用操作系统，进程生成器，虚拟平台，辅助教学, Operating System for Teaching</kwd><kwd> Process Generator</kwd><kwd> Virtual Platform</kwd><kwd> Assisted Teaching</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>操作系统辅助教学平台的设计与实现<sup> </sup></title><p>张金泉<sup>1,2</sup>，倪丽娜<sup>1,2</sup>，赵华<sup>1,2</sup>，樊建聪<sup>1,2</sup></p><p><sup>1</sup>山东科技大学信息科学与工程学院，山东 青岛</p><p><sup>2</sup>山东科技大学山东省智慧矿山信息技术省级重点实验室，山东 青岛</p><disp-formula id="hanspub.17248-formula170"><graphic xlink:href="http://html.hanspub.org/file/12-1540567x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2016年3月6日；录用日期：2016年3月26日；发布日期：2016年3月29日</p><disp-formula id="hanspub.17248-formula171"><graphic xlink:href="http://html.hanspub.org/file/12-1540567x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>操作系统是计算机专业的一门核心专业课程，具有较强的实验性。由于概念多、涉及面广等因素，往往难以很好地理解和掌握，国内外在操作系统实践教学方面所做了大量研究。本文通过构造一个虚拟操作系统运行环境，试图为学习、设计和研究操作系统提供一个简单、易用的平台，为操作系统的教学工作打下了良好基础。</p><p>关键词 :教学用操作系统，进程生成器，虚拟平台，辅助教学</p><disp-formula id="hanspub.17248-formula172"><graphic xlink:href="http://html.hanspub.org/file/12-1540567x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>计算机操作系统课的教学一直在计算机学科的教学计划中占据重要地位 [<xref ref-type="bibr" rid="hanspub.17248-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.17248-ref2">2</xref>] 。在教学中存在主要问题课程内容枯燥难懂，造成学生对课程学习缺乏兴趣, 最后以死记硬背应付了事。理论与实际脱节、缺少实例分析，实践性环节薄弱 [<xref ref-type="bibr" rid="hanspub.17248-ref3">3</xref>] 。目前国内外学者开发了许多教学用操作系统，MINIX [<xref ref-type="bibr" rid="hanspub.17248-ref4">4</xref>] 是荷兰A.S.Tanenbaum教授所发展的一个类Unix操作系统，包括了进程管理、文件系统管理、存储管理、设备管理以及I/O管理等操作系统的所有重要内容，以及系统启动和Shell等实际操作系统不可缺少的部分。但是MINIX作为教学用操作系统有它的不足之处，移植性并不令人满意。GeekOS [<xref ref-type="bibr" rid="hanspub.17248-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.17248-ref6">6</xref>] 是一个基于X86架构的PC上运行的微操作系统内核，提供了操作系统与硬件之间的所有必备接口，实现了系统引导，实模式到保护模式的转换，中断调用及异常处理,基于段式的内存管理，FIFO进程调度算法以及内核进程，基本的输入输出，以及一个用于存放用户程序的只读文件系统PFAT。OSP 2系统 [<xref ref-type="bibr" rid="hanspub.17248-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.17248-ref8">8</xref>] 的核心是一个模拟器，它使用动态演化的、多程序运行的用户进程集来虚拟计算机系统。由一系列的模块组成，每一模块执行一项操作系统服务。可以按照希望的顺序来组织项目，以便与课堂讲义的内容保持同步。Nachos系统 [<xref ref-type="bibr" rid="hanspub.17248-ref9">9</xref>] 是加州大学伯克莱分校在操作系统课程中已多次使用的操作系统课程设计平台，采用面向对象的通用虚拟机，确定性调试比较方便，简单而易于扩展。但是Nachos是针对RISC结构MIPS处理器，使用其它开发环境的话，需要使用交叉编译器才能把代码编译成MIPS相应的机器代码。Bochs系统 [<xref ref-type="bibr" rid="hanspub.17248-ref10">10</xref>] 由凯文•劳顿编写的，使用c++编写的开源IA-32(x86)电脑模拟器，它仿真英特尔x86 CPU、常见的I/O设备、和定制的BIOS。MOS系统 [<xref ref-type="bibr" rid="hanspub.17248-ref11">11</xref>] MOS操作系统是上海交通大学开发的，主要包括作业调度管理和文件系统管理，建立在一个只包含十几条指令的指令集虚拟机基础之上。MOS的不足是过于简单，不能涵盖操作系统的大部分功能。MOS的虚拟机指令集是自定义的，没有现成的编译器，所以读者必须直接编写汇编程序才能在MOS虚拟机上运行。</p><p>综上所述，作者认为为了使计算机科学与技术及相关相关专业学生学习理解操作系统的诸多概念，直观地看到进程在执行过程中，资源申请中可能出现的死锁，以及同步、互斥等重要问题的解决过程，有必要研究设计一个对于初学者来说使用更加简单和方便的辅助教学平台。</p></sec><sec id="s4"><title>2. 辅助平台结构设计</title><p>作者设计开发的辅助学习系统，包括三个方面的功能：一是模拟操作系统实现过程；二是提交自己的作业到服务器，服务器内核在执行完学生的程序后将结果反馈给学生；三是师生交流论坛，为学生学习操作系统，解答难题提供进一步的支持。</p><p>本文主要描述第一个功能部分，它由由三层结构组成，即硬件模拟层、系统运行模拟层和用户应用层。</p><p>系统硬件层模拟计算机中包括打印机、外存储器、内存等主要资源的管理。</p><p>用户应用层主要包含两个功能：1) 用户程序整合到内核模块。包括进程调度、内存管理、页面置换、设备分配等算法，这些算法用户可以根据操作系统已有算法编写，也可以由用户提出新的算法。然后通过平台提供的接口提交到内核中。2) 系统运行信息查询。主要有系统进程相关信息包括进程号、进程状态、开始时间、已执行时间、已分配内存大小，进程调度顺序，就绪队列，阻塞队列等，系统设备相关信息包括设备请求队列、空设备队列等，以及内存分配情况包括可分配内存、内存中进程分布情况等等用户主要关心信息。</p><p>系统运行模拟层是本平台的主要部分，主要包括进程生成器、进程调度接口、内存分配接口、设备调度接口、磁盘调度接口等。其中每个接口都实现了一种基本算法，用户可以重载这些接口实现操作系统中的各个算法，当然也可以自己编写新的算法，或直接使用本平台提供的算法。</p></sec><sec id="s5"><title>3. 操作系统运行过程模拟</title><sec id="s5_1"><title>3.1. 进程生成器</title><p>在教学过程中，进程管理是学生难以理解和掌握的难点问题。进程状态之间的转换，以及同步问题难以直观看到，因此，希望通过开发一个进程模拟器将进程在生命周期中，各种可能的资源申请过程、出现的各个状态以及发生的事件直观地描述出来。进程生成器生成虚拟操作系统运行过程中所需要的各个进程，它包含的数据结构为：</p><p>1) 进程号，用来区分不同的进程；</p><p>2) 进程状态，包括就绪、阻塞、运行、挂起等基本状态；</p><p>3) 初始优先级，每个进程分配一个运行的优选顺序；</p><p>4) 优先级类型，采用动态优先级；</p><p>5) 内存大小，表示系统需要的初始内存，在使用过程中可以动态申请内存，而且本平台中将进程使用内存分为连续和离散两种类型；</p><p>6) 已装入部分，其结构为：(装入时间1，访问地址1)、(装入时间2、访问地址2)、…、(装入时间k，访问地址k)；初值均为−1。；</p><p>7) 已执行时间，进程使用CPU的时间，用来判断进程是否执行结束；</p><p>8) 已等待时间，处于就绪状态的进程在就绪队列中的时间，用来计算进程的动态优先级；</p><p>9) 用户优先级，分配给用户的初始优先级，为用户进程的调度提供依据；</p><p>10) 进程分段数。由于计算所做的工程可以描述为计算、输入输出、计算、输入输出，…等，因此将进程分成若干段，即：(计算、计算时间1)、((I/O、I/O时间1)、(计算、计算时间2)、(I/O、I/O时间2)、…、(计算、计算时间n)；其中，计算时间i(=k)，结构为：时间、访问的地址(地址1、地址2、…、地址k)；I/O时间i的结构为：时间、输入\输出。</p><p>11) 需要资源，其结构为：(资源名1，使用起始时刻1，使用时间1)、(资源名2，使用起始时刻2，使用时间2)、…、(资源名k，使用起始时刻k，使用时间k)</p><p>在初始化时，预先生成大量的进程存储在备份结构中，在运行时，随机生成新的进程，用来模拟新作业进入系统执行。</p></sec><sec id="s5_2"><title>3.2. 系统运行过程</title><p>当用户运行辅助平台时首先进行初始化工作，然后执行所设计的算法，模拟操作系统的运行过程。初始化过程包括：</p><p>1) 构建空的“就绪”进程队列、“阻塞”进程队列、“挂起”进程队列、“终止”进程队列、I/O请求队列、正在进行I/O的进程队列、I/O空设备队列；初始一个时钟，便于进程的调度。</p><p>2) 进程号初值(PID)、最大进程号(MAXID)。</p><p>3) 选择进程调度算法，初始默认使用先来先服务算法，在用户实现接口后就可以选择不用的算法，主要有①先来先服务、②短作业优先、③优先权调度、④时间片轮转、⑤多级队列和⑥多级反馈队列等算法。正如前面描述的那样，用户还可以增加自己新的算法。</p><p>4) 选择内存分配算法。在平台中默认用户空间大小为1 GB，在生成进程通过一个随机函数生成1~8之间的一个随机数a，分配给进程的初始内存为aMB。然后分成连续内存分配和分页式内存分配方式。在连续内存分配中实现了①首次适应、②循环首次适应、③最佳适应和④最差适应；在采用分页内存方式中实现了①先进先出、②最佳页置换、③最近最久未使用、④二次机会、⑤改进的二次机会、⑥最少使用和⑦最多使用等算法。</p><p>5) 选择设备分配算法，系统中的设备采用先来先服务和优先权服务等两种方式分配。</p><p>6) 创建进程，将预先准备的进程装入内存的过程，包括分配进程号和调用“内存分配算法”接口分配内存。如果允许，则将进程挂入就绪进程队列。否则挂入“挂起”队列。</p><p>初始化过程结束后，执行以下算法模拟操作系统的运行过程：</p><p>Step 1：调用“进程调度算法”从“就绪”队列中选择一个可执行进程，如果存在，则将选中的进程状态改为“执行”。返回值(进程号、执行时间、访问内存地址)</p><p>Step 2：对每一个执行时间单位：</p><p>Step 2.1：检查相应内存地址是否可访问，如果不能访问，则</p><p>1) 将进程的状态改为“阻塞”；</p><p>2) 调用“内存置换算法”；</p><p>3) 调用“I/O设备请求分配算法”，分配设备；</p><p>4) 调度“中断处理算法”，模拟中断的处理过程；</p><p>5) 时钟加1</p><p>6) 转Step 1；</p><p>Step2.2：如果能访问，则</p><p>1) “延长一段时间”模拟程序的执行；</p><p>2) 当前“计算时间”减1；</p><p>3) 已执行时间加1；</p><p>4) 删除所访问的地址；</p><p>5) 时钟加1</p><p>6) 调度“中断处理”算法，模拟中断的处理过程；</p><p>Step 3：检查当前进程：</p><p>如果当前剩余“计算时间”不为0，则将状态改为“就绪”；</p><p>否则，则检查“下一个时段”，如果为空，则将状态改为“终止”，并挂入“终止”队列；</p><p>否则，将状态改为“阻塞”，调用“I/O设备请求分配算法”，分配设备；</p><p>Step 4：返回到Step 1。</p><p>其中进程调度算法、内存置换算法、I/O设备请求分配算法，由用户编写，然后提交到平台，再整合到内核中。在本次实现的平台中，进程调度算法每次运行提交一种调度算法，如果要使用其它调度算法则需要重新提交(自动覆盖原来的算法)，内存置换算法和I/O设备请求分配算法的处理方式与进程调度一样。“中断处理算法”模拟中断的处理过程。首先通过一个随机函数产生一个随机数决定是否要立即响应中断。如果不立即响应中断则继续调度程序执行。否则，处理中断，执行过程如下：</p><p>1) 检查是否有I/O完成的进程，如果有就其挂在“就绪”队列上；</p><p>2) 检查是否有“终止”进程，如果有，则回收资源(主要是内存)，并检查“挂起”队列中是否有等待创建的进程，如果可以则创建。</p><p>3) 通过生成随机数的方式，决定是否要生成一个新进程(模拟用户生成新进程)。</p></sec></sec><sec id="s6"><title>4. 结语</title><p>本文首先讨论了国内外学者在如何提高操作系统的教学效果，尤其是在实践教学环节上的探索。笔者针对在教学过程中，各个层次的学生的学习情况，设计一个辅助教学平台，将抽象的进程申请资源，内存分配等主要问题，直观的展示出来。使该教学辅助平台成为学生学习操作系统的一个重要帮手，为实现操作系统的教学目标提高保障。下一步的研究重点是，探讨在伪代码上实现同步问题的判断。</p></sec><sec id="s7"><title>基金项目</title><p>本文得到山东科技大学教育教学群星计划项目(qx102043)的资助。</p></sec><sec id="s8"><title>文章引用</title><p>张金泉,倪丽娜,赵华,樊建聪. 操作系统辅助教学平台的设计与实现 Design and Implementation of Operating System Assisted Teaching Platform[J]. 计算机科学与应用, 2016, 06(03): 190-194. http://dx.doi.org/10.12677/CSA.2016.63024</p></sec><sec id="s9"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.17248-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">蔡启先. 《CC2001教程》研究与思考[J]. 比较教育研究, 2003(2): 65-70.</mixed-citation></ref><ref id="hanspub.17248-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">袁开榜. 计算机学科教学计划(1993) [J]. 计算机世界报, 1994(39): 1-8.</mixed-citation></ref><ref id="hanspub.17248-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">包向辉, 尚晓丽. 计算机操作系统教学方法的探讨与改进[J]. 硅谷, 2008(22): 145-145.</mixed-citation></ref><ref id="hanspub.17248-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Minix维基百科[EB/OL]. http://zh.wikipedia.org/wiki/Minix</mixed-citation></ref><ref id="hanspub.17248-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">黄廷辉, 王宇英. 计算机操作系统实践教程[M]. 北京: 清华大学出版社, 2007: 1-120.</mixed-citation></ref><ref id="hanspub.17248-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Hovemeyer, D. GeekOS: An Instructional Operating System for Real Hardware.  
http://geekos.sourceforge.net/docs/</mixed-citation></ref><ref id="hanspub.17248-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">William Stallings. 操作系统—精髓与设计原理(第五版) [M]. 北京: 电子工业出版社, 2006: 20-112.</mixed-citation></ref><ref id="hanspub.17248-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Michael Kifer著, 王俊华, 等, 译. 操作系统设计与实现[M]. 北京: 清华大学出版社, 2010: 1-230.</mixed-citation></ref><ref id="hanspub.17248-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">http://www.cs.washington.edu/homes/tom/nachos/</mixed-citation></ref><ref id="hanspub.17248-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">http://baike.baidu.com/view/31379.htm</mixed-citation></ref><ref id="hanspub.17248-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">李红卫, 郭庆军, 殷常鸿. 操作系统原理与实践教程[M]. 北京: 科学出版社, 2008: 1-160.</mixed-citation></ref></ref-list></back></article>