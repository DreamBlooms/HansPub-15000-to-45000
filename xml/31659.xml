<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">SA</journal-id><journal-title-group><journal-title>Statistics and Application</journal-title></journal-title-group><issn pub-type="epub">2325-2251</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/SA.2019.84071</article-id><article-id pub-id-type="publisher-id">SA-31659</article-id><article-categories><subj-group subj-group-type="heading"><subject>SA20190400000_15050214.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于协同过滤算法的电视用户个性化推荐
   Personalized Recommendation of TV Users Based on Collaborative Filtering Algorithm
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>星星</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>瑞涛</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>廖</surname><given-names>军华</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>吴</surname><given-names>延科</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>广东海洋大学数学与计算机学院，广东 湛江</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>02</day><month>08</month><year>2019</year></pub-date><volume>08</volume><issue>04</issue><fpage>522</fpage><lpage>530</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  为了更好地整合和利用现有的数据，提高电视节目产品营销效益，本文通过对广电网络公司电视用户的收看信息数据进行数据处理，建立用户偏好模型，得到各个用户的三个偏好类型，然后使用协同过滤算法进行单个用户的个性化推荐，以及使用K-means算法和KNN算法将用户进行分群，得到用户群的推荐，进而有效地解决了用户个性化推荐的问题。 In order to integrate and utilize existing data better, and improve the marketing effectiveness of TV program products, this paper processes the data of the watching information of TV users and establishes the user preference model to obtain three preference types of each user, and then uses the collaborative filtering algorithm to carry out personalized recommendation of individual users. In addition, we use K-means algorithm as well as the KNN algorithm to divide the users into groups and obtain the recommendation of each user group, thereby effectively solving the problem of personalized recommendation of the users.
 
</p></abstract><kwd-group><kwd>K-means聚类分析，KNN算法，协同过滤，个性化推荐,  K-means</kwd><kwd> KNN</kwd><kwd> Collaborative Filtering</kwd><kwd> Personalized Recommendation</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于协同过滤算法的电视用户个性化推荐<sup> </sup></title><p>陈星星，李瑞涛，廖军华，吴延科<sup>*</sup></p><p>广东海洋大学数学与计算机学院，广东 湛江</p><p><img src="//html.hanspub.org/file/6-2580525x1_hanspub.png" /></p><p>收稿日期：2019年7月19日；录用日期：2019年8月1日；发布日期：2019年8月12日</p><disp-formula id="hanspub.31659-formula33"><graphic xlink:href="//html.hanspub.org/file/6-2580525x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>为了更好地整合和利用现有的数据，提高电视节目产品营销效益，本文通过对广电网络公司电视用户的收看信息数据进行数据处理，建立用户偏好模型，得到各个用户的三个偏好类型，然后使用协同过滤算法进行单个用户的个性化推荐，以及使用K-means算法和KNN算法将用户进行分群，得到用户群的推荐，进而有效地解决了用户个性化推荐的问题。</p><p>关键词 :K-means聚类分析，KNN算法，协同过滤，个性化推荐</p><disp-formula id="hanspub.31659-formula34"><graphic xlink:href="//html.hanspub.org/file/6-2580525x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/6-2580525x8_hanspub.png" /> <img src="//html.hanspub.org/file/6-2580525x9_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>在“数字融合”和“三网融合”引领下，电视产业进入了大数据时代，数据挖掘和数据资料的发现与利用开始为电视行业的多项工作提供更为科学的决策依据，为电视业的题材选择和媒介营销带来了巨大的变革。通过对大量观看数据的整合和利用，可以分析用户的特征和偏好，根据用户的收视偏好为用户贴上合适的“标签”，尽可能精确地勾勒出用户的“画像” [<xref ref-type="bibr" rid="hanspub.31659-ref1">1</xref>] 。继而对产品进行分类，将合适的产品在合适的时间推送给合适的用户，实现市场营销的精准化。</p><p>在现代许多平台，例如淘宝、京东、抖音和快手等等，在进行用户的兴趣分析以及类型推荐的时候，都使用了协同过滤算法。迄今协同过滤算法已经非常成熟，主要包括了基于物品的协同过滤算法和基于用户的协同过滤算法，它们都可以很好地描绘产品的属性以及用户的兴趣爱好，所以其在推荐系统的算法中具有十分重要的研究价值。</p><p>很多学者对于这个问题都做出了一定的研究。例如，林霜梅 [<xref ref-type="bibr" rid="hanspub.31659-ref2">2</xref>] 提出了一种改进的向量空间模型(VSM)用户单兴趣表示法及其动态学习算法，用以捕捉用户最新的兴趣需求。沈建军 [<xref ref-type="bibr" rid="hanspub.31659-ref3">3</xref>] 采用协同过滤算法对电视用户个性化推荐进行研究，对用户产品推荐算法提供了不少创新思想。在高肖俊的《基于用户收视兴趣模型的广电客户分群及精确化营销系统建设》中，作者根据用户以往收看信息建立收视兴趣度和忠诚度，以及电视用户对节目的评分，使用协同过滤算法产生推荐结果。在周虹君的《Spark框架下的受众分群及矩阵分解的推荐算法研究》中通过找到目标用户的最近邻居集，以及通过最近邻居集去计算预测评分，从而解决了评分矩阵过于稀疏和冷启动的问题，提高了推荐结果的准确度。《个性化推荐系统综述》主要介绍了各种推荐算法，包括协同过滤算法、关联规则和深度学习等等的发展历程，更好地了解推荐算法的优缺点以及适用范围。在夏欢的《基于组合策略的IPTV节目推荐》中，其提出了两种组合策略的用户模型更新的方法相结合，并且这两种方法实现了协同过滤部分和基于内容的推荐部分，也很好地解决了评分矩阵过于稀疏和冷启动的问题。在《推荐系统实践》中，作者通过实际的推荐例子，突出了协同过滤算法对比于其他推荐系统的优势，也为协同过滤算法在各大平台上的使用奠定了基础。</p><p>虽然推荐系统的研究都有较为完善的理论，但是给用户推荐的节目被该用户所喜欢的成功率较低，夏欢 [<xref ref-type="bibr" rid="hanspub.31659-ref4">4</xref>] 认为，结合相应节目的评分方法，可以有效地提高用户接受的成功率。</p><p>基于以上研究现状，本文的剩余内容将按以下结构展开：第2部分为对广电网络公司的电视用户收看数据进行数据预处理，第3部分建立了用户偏好模型提取各个用户的偏好类型，第4部分使用了协同过滤算法对各个电视用户进行了节目的推荐，第5部分是使用K-means算法和KNN算法对用户进行分群，在考虑到节目包的总时长和经济效益的基础上，有效地推荐节目。</p></sec><sec id="s4"><title>2. 协同过滤算法</title><p>协同过滤算法是最早诞生、较为著名的推荐算法。其主要的功能为预测和推荐，该算法依据对用户的历史行为数据进行挖掘，发现用户的喜爱偏好，对于偏好不同的用户进行有效地个性化推荐。协同过滤算法主要分为两种，分别是基于用户的协同过滤算法和基于物品的协同过滤算法，可以简单地描述为：人以类聚，物以群分。协同过滤算法的实现过程如图1所示，假设用户1的偏好产品为产品1、产品2、产品3和产品4，用户3的偏好产品为产品2和产品3，若把用户3作为目标用户，则用户1是他的邻居用户，所以把产品1和产品2推荐给用户3，从而实现了协同过滤。</p><p>图1. 电视节目的分类</p><p>在本文中，用到的是基于用户的协同过滤算法，下面主要介绍基于用户的协同过滤算法的步骤：</p><p>1) 建立用户模型</p><p>通过查阅资料和数据，得到各个用户对于各个物品的评分，若某个用户对某个物品无评分，则为0，便得到了用户评分矩阵，构造出用户模型。一般来说，对于评分不为0的产品，评分越高，则代表用户对该产品的偏好度越高，否则越低。</p><p>2) 寻找目标用户的邻居</p><p>根据上面的用户评分矩阵，并使用皮尔逊相关系数、余弦相似度或者修正余弦相似度，可以计算各个目标用户与用户群中其他用户的相似度，取相似度最大的k个用户作为该目标用户的最近邻居集。在本文中我们采用的是修正的余弦相似度公式(1)进行计算。</p><p>S i m ( i , j ) = ∑ q = 1 15 ( R i , q − R i &#175; ) ( R j , q − R j &#175; ) ∑ q = 1 15 ( R i , q − R i &#175; ) R j &#175; ∑ q = 1 15 ( R j , q − R j &#175; ) 2 (1)</p><p>其中：Sim(i,j) 表示用户i和j的余弦相似性； R j , q 表示用户j对q类型的评分。</p><p>3) 产生目标用户的推荐产品</p><p>根据目标用户的最近邻居集，并使用式子(2)计算出目标用户未观看过的产品类型的预测评分，然后把预测评分较高的产品类型，优先推荐给目标用户。</p><p>P i , q = R i &#175; + ∑ j ∈ U s i m ( i , j ) &#215; ( R j , q − R j &#175; ) ∑ j ∈ U ( | s i m ( i , j ) | ) (2)</p><p>其中： P i , q 表示用户i对类型q的预测评分； R j , q 表示用户j对类型q的评分。</p></sec><sec id="s5"><title>3. 数据来源及预处理</title><p>本文采用了第六届泰迪杯数据挖掘挑战赛C题的原始数据，进而对电视用户收看信息的原始数据进行数据清洗、属性规约和数据变换三个步骤。数据清理主要针对以下两个方面进行：</p><p>1) 去除回看信息重复和用户点播信息重复的数据、观看时间为空的记录和观看时长小于一分钟的记录。</p><p>2) 将其中冗余的属性以及与挖掘过程不相关的属性剔除得到处理后的数据，如表1所示。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Form of data processin</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >正题名</th><th align="center" valign="middle" >分类名称</th><th align="center" valign="middle" >时长</th></tr></thead><tr><td align="center" valign="middle" >职场是个技术活(39)</td><td align="center" valign="middle" >电视剧场\大陆剧场</td><td align="center" valign="middle" >38:53.</td></tr><tr><td align="center" valign="middle" >06月28日 自然：猫——隐匿的野性</td><td align="center" valign="middle" >科学教育</td><td align="center" valign="middle" >52:36.</td></tr><tr><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td></tr><tr><td align="center" valign="middle" >小马宝莉特别篇 失控彩虹</td><td align="center" valign="middle" >电视剧场\欧美剧场</td><td align="center" valign="middle" >44:06.</td></tr></tbody></table></table-wrap><p>表1. 数据预处理的形式</p><p>在处理后的数据中，用户收视信息和用户回看信息的统计日期均采用YMD格式。我们发现，每个频道一周的节目表当中，周一至周五的节目表相似，周六与周日的节目表相似。因此将用户收视信息和用户回看信息的统计日期转换为星期的格式，然后将数据按周一至周五、周末分为两类，分别写入两个表格当中。</p></sec><sec id="s6"><title>4. 建立用户偏好模型</title><sec id="s6_1"><title>4.1. 构建用户偏好类型</title><p>首先，我们通过python爬虫技术，爬取各个频道分别在工作日及周末的两个节目表，经过分析和统计得出每个频道节目表中各个节目类型所占时间比例。在此基础上，可以初步确立节目分为综艺、财经、体育、电影、电视剧、科教、新闻、少儿动画、音乐、生活、戏剧、军事、纪录片、法律和广告购物，共15种节目类型，如图2所示。</p><p>图2. 电视节目的分类</p><p>然后把各个电视用户的观看各种类型的时间计算出来，得到“用户–类型–观看时长”矩阵，如表2所示。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Matrix: “user-type-duration</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >综艺</th><th align="center" valign="middle" >财经</th><th align="center" valign="middle" >体育</th><th align="center" valign="middle" >电影</th><th align="center" valign="middle" ></th><th align="center" valign="middle" >广告购物</th></tr></thead><tr><td align="center" valign="middle" >10001</td><td align="center" valign="middle" >15.5</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >10002</td><td align="center" valign="middle" >1396.4</td><td align="center" valign="middle" >4.2</td><td align="center" valign="middle" >263.0</td><td align="center" valign="middle" >300.4</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >72.2</td></tr><tr><td align="center" valign="middle" >10003</td><td align="center" valign="middle" >183.8</td><td align="center" valign="middle" >4.1</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >21.9</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >26.0</td></tr><tr><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td></tr><tr><td align="center" valign="middle" >11329</td><td align="center" valign="middle" >249.9</td><td align="center" valign="middle" >0.3</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >753.1</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >24.9</td></tr></tbody></table></table-wrap><p>表2. “用户–类型–时长”矩阵</p></sec><sec id="s6_2"><title>4.2. 用户类型的偏好度</title><p>引入兴趣度和忠诚度，并且用它们之间的加权和(即用户偏好度)来刻画用户对各种节目类型的喜欢程度和偏好程度 [<xref ref-type="bibr" rid="hanspub.31659-ref1">1</xref>] 。</p><p>兴趣度：用户观看某种节目类型的总时长与该用户观看总时长的关系。代表该用户对某种节目类型的感兴趣程度 [<xref ref-type="bibr" rid="hanspub.31659-ref1">1</xref>] 。</p><p>i n t e r e s t ( i , q ) = ∑ k = 1 n   t l a b e l ( i , q ) [ k ] ∑ q = 1 m ∑ k = 1 n   t l a b e l ( i , q ) [ k ] (3)</p><p>其中： i n t e r e s t ( i , q ) 表示用户i对节目类型q的兴趣度； ∑ k = 1 n   t l a b e l ( i , q ) [ k ] 表示用户i观看节目类型q的时长； ∑ q = 1 m ∑ k = 1 n   t l a b e l ( i , q ) [ k ] 表示用户i观看所有节目类型的总时长。</p><p>忠诚度：用户收看某节目类型的总时长与该节目类型的播放时长的关系。代表该用户对该节目类型的忠诚程度 [<xref ref-type="bibr" rid="hanspub.31659-ref1">1</xref>] 。</p><p>L o y a l t y ( i , q ) = ∑ k = 1 n   t l a b e l ( i , q ) [ k ] ∑ k = 1 n   t p r o g r a m ( i , q ) [ k ] (4)</p><p>其中： L o y a l t y ( i , q ) 表示用户i对节目类型q的忠诚度； ∑ k = 1 n   t l a b e l ( i , q ) [ k ] 表示用户i收看节目类型q的总时长； ∑ k = 1 n   t p r o g r a m ( i , q ) [ k ] 表示节目类型q的播出总时长。</p><p>用户偏好度：描述的是用户对某一类型节目的喜好和偏好程度，一般为兴趣度和忠诚度的加权和 [<xref ref-type="bibr" rid="hanspub.31659-ref5">5</xref>] 。</p><p>L a b e l ( i , q ) = ω 1 L o y a l t y ( i , q ) + ω 2 i n t e r e s t ( i , q ) (5)</p><p>为“用户–标签”偏好集合中不同特征赋予权值，且权值之和等于1，以便区分不同集合中其模型的贡献度。本文假定模型的权值为 ω 1 = 0.7 ， ω 2 = 0.3 。</p><p>然后通过计算每个用户对于各个类型的偏好度，得到“用户–类型–偏好度”矩阵，选取了每个用户的偏好度最高的三个标签作为该用户的偏好标签，如表3所示。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> These preference types for each use</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >设备号</th><th align="center" valign="middle"  colspan="3"  >编好类型</th></tr></thead><tr><td align="center" valign="middle" >10001</td><td align="center" valign="middle" >电视剧</td><td align="center" valign="middle" >新闻</td><td align="center" valign="middle" >综艺</td></tr><tr><td align="center" valign="middle" >10002</td><td align="center" valign="middle" >电视剧</td><td align="center" valign="middle" >少儿动画</td><td align="center" valign="middle" >综艺</td></tr><tr><td align="center" valign="middle" >...</td><td align="center" valign="middle"  colspan="3"  >...</td></tr><tr><td align="center" valign="middle" >11329</td><td align="center" valign="middle" >电视剧</td><td align="center" valign="middle" >新闻</td><td align="center" valign="middle" >电影</td></tr></tbody></table></table-wrap><p>表3. 各个用户的三个偏好类型</p></sec></sec><sec id="s7"><title>5. 协同过滤算法对单个用户的推荐</title><sec id="s7_1"><title>5.1. 建立用户模型</title><p>由于用户偏好度代表的是用户对某一种类型的喜欢和热爱程度，一般来说用户对某一类型的偏好度越高，相应的该用户对这种类型的评分(0~1之间)也会越高，因此我们近似地把“用户–类型–偏好度”矩阵看做用户对节目类型的评分矩阵。</p></sec><sec id="s7_2"><title>5.2. 寻找目标用户的邻居</title><p>在这一阶段，主要完成目标用户的邻居的寻找。将全部用户视为一个用户群U，每一次拿出一个用户作为目标用户，并且在其余的用户中寻找到该目标用户的邻居u [<xref ref-type="bibr" rid="hanspub.31659-ref6">6</xref>] 。然后使用式子(1)计算每两个用户之间的相似度，得出相似度矩阵，在矩阵中找出与目标用户相似度最高的用户作为目标用户的邻居。</p></sec><sec id="s7_3"><title>5.3. 产生目标用户的推荐类型</title><p>对于目标用户，找到了他的邻居之后，使用式子(2)计算该目标用户未观看过的类型的预测评分 [<xref ref-type="bibr" rid="hanspub.31659-ref7">7</xref>] ，然后选取其中目标用户中的预测评分中最高的那一个节目类型作为该目标用户的推荐类型。最后，把目标用户的三个偏好类型加上这一个推荐类型，共为四个电视节目类型，作为目标用户的全部推荐类型。</p></sec><sec id="s7_4"><title>5.4. 实现用户的节目推荐</title><p>推荐指数的定义：某一节目产品的推荐指数等于该用户对这种节目类型的偏好度与这一节目产品的评分的加权和 [<xref ref-type="bibr" rid="hanspub.31659-ref8">8</xref>] 。</p><p>我们通过python爬虫技术，在豆瓣网爬取了各个节目的标签和评分，以便获得更精确的产品营销推荐。每一个用户都有四个推荐类型，对应这四个推荐的节目类型，再结合节目的评分的高低和用户的偏好度的大小，进而将节目精准地推送给各个用户，得到每个用户的节目推荐表，如表4所示。</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Recommended program for individual use</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >设备号</th><th align="center" valign="middle" >节目名</th><th align="center" valign="middle" >推荐指数</th></tr></thead><tr><td align="center" valign="middle" >10001</td><td align="center" valign="middle" >琅琊榜</td><td align="center" valign="middle" >1.00</td></tr><tr><td align="center" valign="middle" >10001</td><td align="center" valign="middle" >西游记续大闹披香殿加防抖</td><td align="center" valign="middle" >1.00</td></tr><tr><td align="center" valign="middle" >10001</td><td align="center" valign="middle" >白夜追凶</td><td align="center" valign="middle" >0.99</td></tr><tr><td align="center" valign="middle" >10002</td><td align="center" valign="middle" >西游记续大闹披香殿加防抖</td><td align="center" valign="middle" >1.00</td></tr><tr><td align="center" valign="middle" >10002</td><td align="center" valign="middle" >秦时明月</td><td align="center" valign="middle" >0.97</td></tr><tr><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td></tr><tr><td align="center" valign="middle" >11329</td><td align="center" valign="middle" >百鸟朝凤</td><td align="center" valign="middle" >0.93</td></tr><tr><td align="center" valign="middle" >11329</td><td align="center" valign="middle" >碟中谍神秘国度调整字幕</td><td align="center" valign="middle" >0.92</td></tr></tbody></table></table-wrap><p>表4. 各个用户的推荐节目</p></sec></sec><sec id="s8"><title>6. 用户的打包推荐</title><sec id="s8_1"><title>6.1. K-means聚类分析与KNN算法进行用户分群</title><p>首先，通过所得到的“用户–类型–观看时长”矩阵，针对全部用户，利用K-means聚类算法，分类得到100个聚类中心，然后运用KNN最近邻分类算法将全部的待测用户找到所隶属的聚簇，将同一个聚簇内的用户归为一个用户群。</p><p>通过K-means聚类分析算法得到100个聚类中心如表5所示。</p><table-wrap id="table5" ><label><xref ref-type="table" rid="table5">Table 5</xref></label><caption><title> Clustering center of K-means algorith</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle"  colspan="6"  >聚类中心</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1156.3</td><td align="center" valign="middle" >29.0</td><td align="center" valign="middle" >304.1</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >210.0</td><td align="center" valign="middle" >31.6</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >2900.2</td><td align="center" valign="middle" >123.8</td><td align="center" valign="middle" >3091.5</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >974.5</td><td align="center" valign="middle" >68.1</td></tr><tr><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td></tr><tr><td align="center" valign="middle" >99</td><td align="center" valign="middle" >4427.7</td><td align="center" valign="middle" >225.2</td><td align="center" valign="middle" >5302.3</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >618.5</td><td align="center" valign="middle" >45.7</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >9520.2</td><td align="center" valign="middle" >310.5</td><td align="center" valign="middle" >2950.1</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >1475.9</td><td align="center" valign="middle" >22.0</td></tr></tbody></table></table-wrap><p>表5. K-means算法的聚类中心</p><p>通过KNN最邻近分类算法，将各个用户都分类到所隶属的聚簇用户群中，所得到的结果，如表6所示。</p><table-wrap id="table6" ><label><xref ref-type="table" rid="table6">Table 6</xref></label><caption><title> User groups of individual use</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >机顶盒号</th><th align="center" valign="middle" >分类用户群</th></tr></thead><tr><td align="center" valign="middle" >10001</td><td align="center" valign="middle" >68</td></tr><tr><td align="center" valign="middle" >10002</td><td align="center" valign="middle" >25</td></tr><tr><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td></tr><tr><td align="center" valign="middle" >11328</td><td align="center" valign="middle" >24</td></tr><tr><td align="center" valign="middle" >11329</td><td align="center" valign="middle" >87</td></tr></tbody></table></table-wrap><p>表6. 各个用户所在的用户群</p><p>找出各聚类中心最近的3个测试变量，分别将这3个测试变量作为该聚簇用户群的三个偏好类型。结果如表7所示。</p><table-wrap id="table7" ><label><xref ref-type="table" rid="table7">Table 7</xref></label><caption><title> Preference types of each user grou</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >用户群</th><th align="center" valign="middle"  colspan="3"  >偏好类型</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >电视剧</td><td align="center" valign="middle" >综艺</td><td align="center" valign="middle" >新闻</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >少儿动画</td><td align="center" valign="middle" >电视剧</td><td align="center" valign="middle" >体育</td></tr><tr><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td><td align="center" valign="middle" >...</td></tr><tr><td align="center" valign="middle" >99</td><td align="center" valign="middle" >体育</td><td align="center" valign="middle" >电视剧</td><td align="center" valign="middle" >综艺</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >电视剧</td><td align="center" valign="middle" >电影</td><td align="center" valign="middle" >新闻</td></tr></tbody></table></table-wrap><p>表7. 各个用户群的偏好类型</p></sec><sec id="s8_2"><title>6.2. 节目产品的打包和推送</title><p>为了便于产商在产品包内植入广告从而获取最大的经济效益，将每一个产品包的节目总时长限制在一个合理的范围内，并且优先考虑到高评分的产品 [<xref ref-type="bibr" rid="hanspub.31659-ref9">9</xref>] ，建立聚类推荐模型，实现了节目的打包推送问题。</p><p>由上述得到的各个用户群的三个偏好类型，匹配到相应类型的电视节目产品，从中选择评分较高的电视节目产品，由于考虑到每个节目产品包的互补性与互斥性 [<xref ref-type="bibr" rid="hanspub.31659-ref10">10</xref>] ，规定每一种类型的节目产品不超过三个。为了便于产商在产品包内植入广告从而获取最大的经济效益 [<xref ref-type="bibr" rid="hanspub.31659-ref11">11</xref>] ，将每一个产品包的节目总时长限制在 200 min ≤ T ≤ 720 min 。</p><p>对电视节目产品打包并且将产品包推送给每一个用户群，并且计算出每个节目包的总时长，推送结果如表8所示。</p><table-wrap id="table8" ><label><xref ref-type="table" rid="table8">Table 8</xref></label><caption><title> Recommended program package for each user grou</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >用户群</th><th align="center" valign="middle" >打包的推送产品</th><th align="center" valign="middle" >产品包总时长/分钟</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >琅琊榜</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >广视新闻</td><td align="center" valign="middle" >524.4</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >艾可魔法少女</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >国际田联砖石联赛奥斯陆站</td><td align="center" valign="middle" >482.3</td></tr><tr><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >琅琊榜</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >广视新闻</td><td align="center" valign="middle" >679.7</td></tr></tbody></table></table-wrap><p>表8. 各个用户群的推荐节目包</p></sec></sec><sec id="s9"><title>7. 结论及展望</title><p>本文通过对用户观看数据进行预处理、挖掘出各个用户的观看偏好，并且通过爬虫技术，爬取得到节目的类型，进而把节目推荐给感兴趣的用户，使得广电网络公司在电视节目的营销上更加有针对性，但是模型主要存在以下两个不足之处：</p><p>1) 各个电视台的节目类型时间比例是根据各个电视台(分周一至周五和周末)的常规播放规律来进行计算的，与准确的节目类型播放规律会有一定的误差。</p><p>2) 评分较高的节目推荐给目标用户，往往会导致推送的不精准和有一大部分评分较低的节目没有用户去收看。</p><p>对于上述的不足，可以通过更精准地利用爬虫技术对电视台的播放节目类型时间比例和节目类型、评分进行爬取，以减低推荐的误差，希望以后的学习可以在这方面做出一定的研究。</p></sec><sec id="s10"><title>文章引用</title><p>陈星星,李瑞涛,廖军华,吴延科. 基于协同过滤算法的电视用户个性化推荐 Personalized Recommendation of TV Users Based on Collaborative Filtering Algorithm[J]. 统计学与应用, 2019, 08(04): 522-530. https://doi.org/10.12677/SA.2019.84071</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.31659-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">周虹君, 殷复莲, 陈怡婷, 周嘉琪, 伊成昱. Spark框架下的受众分群及矩阵分解的推荐算法研究[J]. 互联网 + 健康, 2016, 20(2): 139-141.</mixed-citation></ref><ref id="hanspub.31659-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">张晓阳. 基于受众收视行为分析的电视节目编排策略刍探[J]. 企业家天地, 2011, 3(1): 187-188.</mixed-citation></ref><ref id="hanspub.31659-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">高肖俊, 丁云强. 基于用户收视兴趣模型的广电客户分群及精确化营销系统建设[J]. 视听界, 2016, 3(2): 1-3.</mixed-citation></ref><ref id="hanspub.31659-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">夏欢. 基于组合策略的IPTV节目推荐[D]: [硕士学位论文]. 昆明: 云南大学, 2016.</mixed-citation></ref><ref id="hanspub.31659-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">沈建军. 面向互动电视的影视节目推进系统研究与实现[D]: [硕士学位论文]. 杭州: 复旦大学, 2012.</mixed-citation></ref><ref id="hanspub.31659-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">钟智, 朱曼龙, 张晨, 黄樑昌. 最近邻分类方法的研究[J]. 广西师范学院, 2011, 5(1): 2-3.</mixed-citation></ref><ref id="hanspub.31659-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">赵营. 基于协同过滤算法的习题推荐[J]. 科技经济导刊, 2016, 6(5): 136.</mixed-citation></ref><ref id="hanspub.31659-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">李楚桐, 莫赞. 基于协同过滤算法的推荐系统研究[J]. 信息通信, 2018, 1(2): 38-39.</mixed-citation></ref><ref id="hanspub.31659-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">王国霞, 刘贺平. 个性化推荐系统综述[J]. 计算机工程与应用, 2012, 48(7): 66-67.</mixed-citation></ref><ref id="hanspub.31659-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">于玉龙, 王秀芳. 改进的协同过滤推荐算法[J]. 互联网 + 通信, 2016, 1(1): 12.</mixed-citation></ref><ref id="hanspub.31659-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">张岩. 基于协同过滤的个性推荐算法研究及系统实现[D]: [硕士学位论文]. 北京: 北京化工大学, 2014.</mixed-citation></ref></ref-list></back></article>