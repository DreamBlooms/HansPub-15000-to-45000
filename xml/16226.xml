<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">HJWC</journal-id><journal-title-group><journal-title>Hans Journal of Wireless Communications</journal-title></journal-title-group><issn pub-type="epub">2163-3983</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/HJWC.2015.55013</article-id><article-id pub-id-type="publisher-id">HJWC-16226</article-id><article-categories><subj-group subj-group-type="heading"><subject>HJWC20150500000_37226319.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  不同学习速率下NMF盲源分离算法
  Blind Source Separation Algorithms Based on Nonnegative Matrix Factorization Using Different Learning Rates
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>毛</surname><given-names>翊君</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>赵</surname><given-names>知劲</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>尚</surname><given-names>俊娜</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>杭州电子科技大学通信工程学院，浙江 杭州</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>hdumyj@126.com(毛翊)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>26</day><month>10</month><year>2015</year></pub-date><volume>05</volume><issue>05</issue><fpage>91</fpage><lpage>97</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   基于非负矩阵分解(NMF)的盲源分离算法采用乘性更新规则，但如何选择学习速率以及其对算法性能影响没有详细研究。对此，本文推导给出了选择不同学习速率时各种迭代更新公式，并对各种组合进行了大量计算机仿真实验，通过比较分析发现，有效的迭代更新公式的分母必须包含误差函数信息，分子分母的项数应尽可能平衡。 
   The iterative multipliable update formulas are used in blind source separation algorithms based on non-negative matrix factorization (NMF). However, the methods to select the learning rates and affect algorithms’ performance remain to be researched. This paper gives a derivation of different learning rates when selecting various iterative update formulas. A lot of computer simulations about these combinations are carried, and they show that a denominator of the effective iterative update formulas must contain information of the error function. In addition, its terms of denomi-nator and numerator should be balanced. 
  
 
</p></abstract><kwd-group><kwd>非负矩阵分解，盲分离，学习速率，误差函数, Non-Negative Matrix Factorization (NMF)</kwd><kwd> Blind Source Separation (BSS)</kwd><kwd> Learning Rates</kwd><kwd> Error Function</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>不同学习速率下NMF盲源分离算法<sup> </sup></title><p>毛翊 君，赵知劲，尚俊娜</p><p>杭州电子科技大学通信工程学院，浙江 杭州</p><p>Email: hdumyj@126.com</p><p>收稿日期：2015年9月27日；录用日期：2015年10月19日；发布日期：2015年10月26日</p><disp-formula id="hanspub.16226-formula35"><graphic xlink:href="http://html.hanspub.org/file/1-1730171x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>基于非负矩阵分解(NMF)的盲源分离算法采用乘性更新规则，但如何选择学习速率以及其对算法性能影响没有详细研究。对此，本文推导给出了选择不同学习速率时各种迭代更新公式，并对各种组合进行了大量计算机仿真实验，通过比较分析发现，有效的迭代更新公式的分母必须包含误差函数信息，分子分母的项数应尽可能平衡。</p><p>关键词 :非负矩阵分解，盲分离，学习速率，误差函数</p><disp-formula id="hanspub.16226-formula36"><graphic xlink:href="http://html.hanspub.org/file/1-1730171x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>非负矩阵分解[<xref ref-type="bibr" rid="hanspub.16226-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.16226-ref2">2</xref>] (Nonnegative Matrix Factorization, NMF)是盲源信号[<xref ref-type="bibr" rid="hanspub.16226-ref3">3</xref>] 分离主要理论工具之一，已引起学术界广泛关注和研究 [<xref ref-type="bibr" rid="hanspub.16226-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.16226-ref5">5</xref>] 。为了保证分离唯一性和分离性能，需要在误差函数中添加各种约束条件 [<xref ref-type="bibr" rid="hanspub.16226-ref6">6</xref>] - [<xref ref-type="bibr" rid="hanspub.16226-ref9">9</xref>] ，如：行列式约束、稀疏性约束、正交性约束等。为保证分解矩阵的非负性，一般采用乘性更新规则。由于施加了多种约束条件，利用自然梯度下降法时，可以选择多种不同的学习速率，如何选择合适的学习速率，现有文献没有给出说明。对此本文进行了理论推导和大量实验研究，为基于NMF盲源分离算法的深入研究提供了理论基础。</p></sec><sec id="s4"><title>2. NMF盲分离基本理论</title><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x7_hanspub.png" xlink:type="simple"/></inline-formula>表示采样信号矩阵，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x8_hanspub.png" xlink:type="simple"/></inline-formula>代表混合矩阵，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x9_hanspub.png" xlink:type="simple"/></inline-formula>代表源信号矩阵，且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x10_hanspub.png" xlink:type="simple"/></inline-formula>。盲源信号分离是指在源信号<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x11_hanspub.png" xlink:type="simple"/></inline-formula>和混合过程<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x12_hanspub.png" xlink:type="simple"/></inline-formula>未知的情况下，从观察到的多个混合信号<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x13_hanspub.png" xlink:type="simple"/></inline-formula>中重建出源信号<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x14_hanspub.png" xlink:type="simple"/></inline-formula>的方法。利用NMF进行盲源信号分离，就是要将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x15_hanspub.png" xlink:type="simple"/></inline-formula>分解成两个矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x16_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x17_hanspub.png" xlink:type="simple"/></inline-formula>的乘积，并使分解误</p><p>差尽可能小，采用2范数衡量NMF，其误差函数为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x18_hanspub.png" xlink:type="simple"/></inline-formula>。为了提高盲源分离算法性</p><p>能，对误差函数施加行列式、稀疏性和正交性约束，设计NMF的优化目标函数如式(1)所示：</p><disp-formula id="hanspub.16226-formula37"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x19_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x20_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x21_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x22_hanspub.png" xlink:type="simple"/></inline-formula>分别由式(2)、(3)和(4)给出；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x23_hanspub.png" xlink:type="simple"/></inline-formula>是平衡参数，为了保证NMF算法收敛，取比较小的正数。对于超定盲源分离，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x24_hanspub.png" xlink:type="simple"/></inline-formula>情况，有</p><disp-formula id="hanspub.16226-formula38"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x25_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16226-formula39"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x26_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16226-formula40"><label>(4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x27_hanspub.png"  xlink:type="simple"/></disp-formula><p>利用自然梯度下降法，求矩阵W和矩阵H的更新规则分别如式(5)和(6)所示。</p><disp-formula id="hanspub.16226-formula41"><label>(5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x28_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16226-formula42"><label>(6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x29_hanspub.png"  xlink:type="simple"/></disp-formula><p>目标函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x30_hanspub.png" xlink:type="simple"/></inline-formula>对W和H的偏导分别如式(7)和(8)所示：</p><disp-formula id="hanspub.16226-formula43"><label>(7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x31_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16226-formula44"><label>(8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x32_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s5"><title>3. 迭代更新公式</title><sec id="s5_1"><title>3.1. W迭代公式推导</title><p>由于非负矩阵分解要求得到的分解结果W和H是非负的，所以采用乘性迭代更新公式。为了得到W的乘性迭代更新公式，由式(7)可见，理论上可以选择三种不同的学习速率，从而应该有三种不同的W迭代更新公式。现以第一种学习速率选择为例，具体推导如下。</p><p>W的第一种学习速率可选择为</p><disp-formula id="hanspub.16226-formula45"><label>(9)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x33_hanspub.png"  xlink:type="simple"/></disp-formula><p>将式(7)代入式(5)右边，可得</p><disp-formula id="hanspub.16226-formula46"><label>(10)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x34_hanspub.png"  xlink:type="simple"/></disp-formula><p>将式(12)代入上式可得</p><disp-formula id="hanspub.16226-formula47"><label>(11)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x35_hanspub.png"  xlink:type="simple"/></disp-formula><p>因此可得关于W的第一种迭代更新公式为：</p><disp-formula id="hanspub.16226-formula48"><label>(12)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x36_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x37_hanspub.png" xlink:type="simple"/></inline-formula>是一个很小的正数，是为了防止分母为零。下文其他处不再说明。</p><p>W的第二种学习速率可选择为</p><disp-formula id="hanspub.16226-formula49"><label>(13)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x38_hanspub.png"  xlink:type="simple"/></disp-formula><p>类似上述推导可得W的第二种迭代更新公式为：</p><disp-formula id="hanspub.16226-formula50"><label>(14)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x39_hanspub.png"  xlink:type="simple"/></disp-formula><p>W的第三种学习速率可选择为</p><disp-formula id="hanspub.16226-formula51"><label>(15)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x40_hanspub.png"  xlink:type="simple"/></disp-formula><p>类似上述推导可得W的第三种迭代更新公式为：</p><disp-formula id="hanspub.16226-formula52"><label>(16)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x41_hanspub.png"  xlink:type="simple"/></disp-formula><p>从式(12)、(14)和(16)可以发现，式(12)和(16)分母中包含有误差函数信息项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x42_hanspub.png" xlink:type="simple"/></inline-formula>，可以有效实现对W的更新。</p></sec><sec id="s5_2"><title>3.2. H迭代公式推导</title><p>为了得到H的乘性迭代更新公式，由式(8)可见，理论上有7种不同的学习速率选择，从而应该有7种不同的H迭代更新公式。类似W迭代更新公式推导，分别可得7种不同的学习速率选择和H迭代更新公式如下。</p><p>H的第一种学习速率选择为：</p><disp-formula id="hanspub.16226-formula53"><label>(17)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x43_hanspub.png"  xlink:type="simple"/></disp-formula><p>对应的H第一种乘性迭代更新公式为：</p><disp-formula id="hanspub.16226-formula54"><label>(18)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x44_hanspub.png"  xlink:type="simple"/></disp-formula><p>H的第二种学习速率选择为：</p><disp-formula id="hanspub.16226-formula55"><label>(19)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x45_hanspub.png"  xlink:type="simple"/></disp-formula><p>对应的H第二种乘性迭代更新公式为：</p><disp-formula id="hanspub.16226-formula56"><label>(20)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x46_hanspub.png"  xlink:type="simple"/></disp-formula><p>H的第三种学习速率选择为：</p><disp-formula id="hanspub.16226-formula57"><label>(21)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x47_hanspub.png"  xlink:type="simple"/></disp-formula><p>对应的H的第三种乘性迭代更新公式为：</p><disp-formula id="hanspub.16226-formula58"><label>(22)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x48_hanspub.png"  xlink:type="simple"/></disp-formula><p>H的第四种学习速率选择为：</p><disp-formula id="hanspub.16226-formula59"><label>(23)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x49_hanspub.png"  xlink:type="simple"/></disp-formula><p>对应的H的第四种乘性迭代更新公式为：</p><disp-formula id="hanspub.16226-formula60"><label>(24)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x50_hanspub.png"  xlink:type="simple"/></disp-formula><p>H的第五种学习速率选择为：</p><disp-formula id="hanspub.16226-formula61"><label>(25)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x51_hanspub.png"  xlink:type="simple"/></disp-formula><p>对应的H的第五种乘性迭代更新公式为：</p><disp-formula id="hanspub.16226-formula62"><label>(26)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x52_hanspub.png"  xlink:type="simple"/></disp-formula><p>H的第六种学习速率选择为：</p><disp-formula id="hanspub.16226-formula63"><label>(27)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x53_hanspub.png"  xlink:type="simple"/></disp-formula><p>对应的H的第六种乘性迭代更新公式为：</p><disp-formula id="hanspub.16226-formula64"><label>(28)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x54_hanspub.png"  xlink:type="simple"/></disp-formula><p>H的第七种学习速率选择为：</p><disp-formula id="hanspub.16226-formula65"><label>(29)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x55_hanspub.png"  xlink:type="simple"/></disp-formula><p>对应的H第七种乘性迭代更新公式为：</p><disp-formula id="hanspub.16226-formula66"><label>(30)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/1-1730171x56_hanspub.png"  xlink:type="simple"/></disp-formula><p>从上述迭代更新公式可以发现，只有式(18)、(24)、(26)和(30)含有误差函数信息项。所以W和H的乘性迭代更新公式可行组合形式如表1所示。</p></sec></sec><sec id="s6"><title>4. 算法仿真与性能分析</title><p>源信号图像如图1所示，随机产生非负混合矩阵，经过混合得到混合的图像信号。经过大量的仿真实验得到平衡参数的合适取值分别为：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x57_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x58_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x59_hanspub.png" xlink:type="simple"/></inline-formula>，利用迭代公式更新W和H，迭代30,000次，更新迭代终止，最终得到由混合信号矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/1-1730171x60_hanspub.png" xlink:type="simple"/></inline-formula>分离出的混合矩阵W和源信号H。</p><sec id="s6_1"><title>4.1. 迭代公式组合的有效性分析</title><p>大量的实验表明，分母中不包含有误差函数信息的迭代公式无法有效更新W和H，分离不出源信号，与我们前文判断一致。</p><p>现通过实验验证八种不同的迭代公式组合是否有效。应用上述八种迭代更新公式组合分离上述混合信号，算法能正常运行的用√表示，不能正常运行的用&#215;表示，结果如表1所示。由表可见，即使八种组合分母中都包含了误差函数信息，但也只有三种组合方式是有效的，即组合3、组合4和组合7，所以可以得到三种算法，分别称为算法1、算法2和算法3。分析这三组迭代公式可见，迭代公式的分子分母项数基本平衡。</p></sec><sec id="s6_2"><title>4.2. 三种算法性能分析</title><p>三种算法分离得到的图像信号分别如图2至图4所示。三种算法10次分离得到的源信号重构平均信噪比SNR如表2所示。由表2可见，算法2性能最好，算法1次之，算法3略差；三种算法性能在同一数量级，都能够较好地分离出源信号。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Probability analysis of different iterative formula</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >方法</th><th align="center" valign="middle" >可行性</th></tr></thead><tr><td align="center" valign="middle" >组合1：式(12)和式(18)</td><td align="center" valign="middle" >&#215;</td></tr><tr><td align="center" valign="middle" >组合2：式(12)和式(24)</td><td align="center" valign="middle" >&#215;</td></tr><tr><td align="center" valign="middle" >组合3：式(12)和式(26) (算法1)</td><td align="center" valign="middle" >√</td></tr><tr><td align="center" valign="middle" >组合4：式(12)和式(30) (算法2)</td><td align="center" valign="middle" >√</td></tr><tr><td align="center" valign="middle" >组合5：式(16)和式(18)</td><td align="center" valign="middle" >&#215;</td></tr><tr><td align="center" valign="middle" >组合6：式(16)和式(24)</td><td align="center" valign="middle" >&#215;</td></tr><tr><td align="center" valign="middle" >组合7：式(16)和式(26) (算法3)</td><td align="center" valign="middle" >√</td></tr><tr><td align="center" valign="middle" >组合8：式(16)和式(30)</td><td align="center" valign="middle" >&#215;</td></tr></tbody></table></table-wrap><p>表1. 不同迭代公式组合的可行性分析</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> SNR of three algorithm</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >图像编号</th><th align="center" valign="middle" >图1</th><th align="center" valign="middle" >图2</th><th align="center" valign="middle" >图3</th><th align="center" valign="middle" >图4</th></tr></thead><tr><td align="center" valign="middle" >算法2</td><td align="center" valign="middle" >6.4819</td><td align="center" valign="middle" >13.0446</td><td align="center" valign="middle" >12.0084</td><td align="center" valign="middle" >8.6149</td></tr><tr><td align="center" valign="middle" >算法1</td><td align="center" valign="middle" >6.4619</td><td align="center" valign="middle" >12.7737</td><td align="center" valign="middle" >11.1487</td><td align="center" valign="middle" >8.5825</td></tr><tr><td align="center" valign="middle" >算法3</td><td align="center" valign="middle" >6.3913</td><td align="center" valign="middle" >12.0751</td><td align="center" valign="middle" >10.8859</td><td align="center" valign="middle" >8.8719</td></tr></tbody></table></table-wrap><p>表2. 三种算法的重构平均信噪比(单位：dB)</p><p>图1. 源图像信号</p><p>图2. 算法1分离的图像信号</p><p>图3. 算法2分离的图像信号</p><p>图4. 算法3分离的图像信号</p></sec></sec><sec id="s7"><title>5. 结束语</title><p>本文研究了学习速率选择对NMF的盲源分离算法性能影响。首先推导给出了选择不同学习速率时各种迭代更新公式，然后进行了大量计算机仿真实验，最后通过比较分析发现，有效的迭代更新公式的分母必须包含误差函数信息，分子分母的项数应尽可能平衡。</p></sec><sec id="s8"><title>致谢</title><p>首先，我要感谢我的导 师赵知劲 教授。如果不是 赵 老师的悉心指导，无私地提出宝贵的修改意见，就不会呈现出这样一篇内容详实、推导严谨的论文。紧接着，我要感谢我的家人。在我专注于论文写作的过程中，是他们的鼓励与理解，让我得以全身心地投入我的写作，同时也激励着我去不断完善我的论文。最后，我要感谢所有帮助过我的老师和同学，这篇论文是大家共同智慧的结晶。再次感谢。</p></sec><sec id="s9"><title>文章引用</title><p>毛翊君,赵知劲,尚俊娜. 不同学习速率下NMF盲源分离算法Blind Source Separation Algorithms Based on Nonnegative Matrix Factorization Using Different Learning Rates[J]. 无线通信, 2015, 05(05): 91-97. http://dx.doi.org/10.12677/HJWC.2015.55013</p></sec><sec id="s10"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.16226-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Lee, D.D. and Seung, H.S. (1999) Learning the parts of objects by non-negative matrix factorization. Nature, 401, 788-791.</mixed-citation></ref><ref id="hanspub.16226-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">李乐, 章毓晋 (2008) 非负矩阵分解算法综述. 电子学报, 36, 737-743.</mixed-citation></ref><ref id="hanspub.16226-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">马建仓, 牛奕龙, 陈海洋 (2006) 盲信号处理. 国防工业出版社, 北京.</mixed-citation></ref><ref id="hanspub.16226-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">殷海青, 刘红卫 (2010) 一种基于L1稀疏正则化和非负矩阵分解的盲源信号分离新算法. 西安电子科技大学学报, 37, 835-841.</mixed-citation></ref><ref id="hanspub.16226-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Zdunek, R. and Cichocki, A. (2007) Nonnegative matrix factorization with constrained second-order optimization. Signal Processing, 87, 1904-1916. &lt;br&gt;http://dx.doi.org/10.1016/j.sigpro.2007.01.024</mixed-citation></ref><ref id="hanspub.16226-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">张倩 (2013) 水声信号盲源分离方法研究. 硕士论文, 哈尔滨工业大学, 哈尔滨.</mixed-citation></ref><ref id="hanspub.16226-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">卢宏, 赵知劲, 杨小牛 (2011) 基于行列式和稀疏性约束的NMF的欠定盲分离方法. 计算机应用, 31, 553-555+558.</mixed-citation></ref><ref id="hanspub.16226-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Wang, S., et al. (2014) A K-L divergence constrained sparse NMF for hyperspectral unmixing signal. Proceedings of 2014 IEEE International Conference on Security, Pattern Analysis, and Cybernetics, Wuhan, 18-19 October 2014, 223-228. &lt;br&gt;http://dx.doi.org/10.1109/SPAC.2014.6982689</mixed-citation></ref><ref id="hanspub.16226-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">张宇飞 (2010) 加稀疏约束的非负矩阵分解. 硕士论文, 大连理工大学, 大连.</mixed-citation></ref></ref-list></back></article>