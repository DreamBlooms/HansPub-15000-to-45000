<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2016.51010</article-id><article-id pub-id-type="publisher-id">AAM-17005</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20160100000_14647642.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  水平集方法在医学图像分割中的一个应用
  Application of Level Set Method in Medical Image Segmentation
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>马</surname><given-names>秀</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>浩然</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>汉权</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>云南财经大学统计与数学学院，云南 昆明</addr-line></aff><aff id="aff3"><addr-line>云南财经大学统计与数学学院，云南 昆明 </addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>724491062@qq.com(马秀)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>09</day><month>12</month><year>2015</year></pub-date><volume>05</volume><issue>01</issue><fpage>63</fpage><lpage>73</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  图像分割是目标识别，资源分类等研究的基础。在医学临床诊断，视频监控计算机视觉等多个林谷都有重要的应用。水平集方法以一种紧凑的方式来表达集合主动轮廓曲线的演化，并且为之提供稳定的数值计算。Chan和Vese提出的基于简化的Mumford-Shan模型的主动轮廓模型(C-V方法)，能够很的检查出带有空洞的目标的内部区域，但只能处理两相图片的分割。基于C-V模型，Vese Chan推广到实用多个水平集函数来分割多相图像，即Vese-Chan变分多水平模型。该方法有以下优点：可以自动的避免水平集函数覆盖区域的“重叠”和“真空”问题。本文中，我们基于C-V模型以及Vese-Chan变分水平集模型，实现了如何利用单个水平集函数以及两个水平集函数来进行医学图像分割；讨论了这两种方法的优缺点。我们的图像分割数值实验结果验证了理论结果。
   Image segmentation is the basic of object detection and resource classification, and it has an im-portant application in the field of medical diagnosis, video monitoring and computer vision. Level set method describes the evolution of geometric active contour in a compact way and provides a stable numerical algorithm. Chan and Vese first introduced the active contour model based sim-plified Mumford-Shah model, which could well detect the vacuum of object, but could represent only two phases or segments in the image. Vese-Chan variational level set model was proposed by Vese-Chan as the generalization of C-V model, which needed multiple level set functions for n phases image segmentation; it can represent boundaries with complex topologies. In this paper, based on the C-V model and Vese-Chan variational level set model, we show how to do medical image segmentation through one level set function and two-level set functions respectively. We discuss the advantages and disadvantages of both methods. Our numerical results validate our theoretical predication.
 
</p></abstract><kwd-group><kwd>Vese-Chan模型，变分水平集法，多相图像分割, Vese-Chan Model</kwd><kwd> Variational Level Set Method</kwd><kwd> Multiple Image Segmentation</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>水平集方法在医学图像分割中的一个应用<sup> </sup></title><p>马秀，张浩然，王汉权</p><p>云南财经大学统计与数学学院，云南 昆明</p><disp-formula id="hanspub.17005-formula100"><graphic xlink:href="http://html.hanspub.org/file/10-2620227x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2016年2月4日；录用日期：2016年2月23日；发布日期：2016年2月26日</p><disp-formula id="hanspub.17005-formula101"><graphic xlink:href="http://html.hanspub.org/file/10-2620227x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>图像分割是目标识别，资源分类等研究的基础。在医学临床诊断，视频监控计算机视觉等多个林谷都有重要的应用。水平集方法以一种紧凑的方式来表达集合主动轮廓曲线的演化，并且为之提供稳定的数值计算。Chan和Vese提出的基于简化的Mumford-Shan模型的主动轮廓模型(C-V方法)，能够很的检查出带有空洞的目标的内部区域，但只能处理两相图片的分割。基于C-V模型，Vese Chan推广到实用多个水平集函数来分割多相图像，即Vese-Chan变分多水平模型。该方法有以下优点：可以自动的避免水平集函数覆盖区域的“重叠”和“真空”问题。本文中，我们基于C-V模型以及Vese-Chan变分水平集模型，实现了如何利用单个水平集函数以及两个水平集函数来进行医学图像分割；讨论了这两种方法的优缺点。我们的图像分割数值实验结果验证了理论结果。</p><p>关键词 :Vese-Chan模型，变分水平集法，多相图像分割</p><disp-formula id="hanspub.17005-formula102"><graphic xlink:href="http://html.hanspub.org/file/10-2620227x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>图像分割是计算机图像识别与理解领域非常活跃的一个分支，是图像处理，图像分析等领域最重要的研究领域[<xref ref-type="bibr" rid="hanspub.17005-ref1">1</xref>] -[<xref ref-type="bibr" rid="hanspub.17005-ref4">4</xref>] 。人们在对图像的研究和应用中，往往仅对图像中的某些部分感兴趣，为了识别这些具有特殊性质的区域，需要将他们呢分离提取出来，在此基础上才有可能对目标进行更深层次的处理。图像分割就是指把图像分成各具有特征的区域并提取出感兴趣目标的技术和过程。一方面，它是目标表达的基础，对特征的测量有重要的影响。另一方面，图像分割及其基于分割的目标表达，特征的测量有重要的影响；另一方面，图像分割及其基于分割的目标表达，特征提取和参数测量可以将原始图像信息转化为更抽象，更紧凑的形式，使得更高层次的图像分析和理解成为可能。因此图像分割是图像分析和图像识别前期处理的一个重要步骤。</p><p>今年来，活动轮廓模型在图像分割中得到广泛的研究与应用 [<xref ref-type="bibr" rid="hanspub.17005-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.17005-ref6">6</xref>] ，该类模型在分割图像是以能量泛函的形式来反映分割区域的位置、大小、形状、等先验知识，确保了曲线在演化过程能够保持连续性和平滑性。</p><p>2000年，Chan和Vese提出了梯度无关活动轮廓模型(C-V方法) [<xref ref-type="bibr" rid="hanspub.17005-ref7">7</xref>] ，该模型具有自动检测内部轮廓、初始曲线位置选择保持鲁棒形、与梯度无关等优点。C-V方法基于简化的Mumford-Shan模型(简称M-S模型) [<xref ref-type="bibr" rid="hanspub.17005-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.17005-ref9">9</xref>] ，由于该模型是基于图像区域星系的，因此使用与边缘模糊或者是不连续的情况，且对曲线初始位置不敏感。但此方法适用于边缘模糊或者是不连续的情况，且假定图像中仅存在目标和背景两类同质区域。传统的单水平集函数只局限在描述两个相，而描述多相图像分割通常需要用多个水平集函数。多相分割始于1996年Zhao等关于多项运动的研究 [<xref ref-type="bibr" rid="hanspub.17005-ref10">10</xref>] ，该方法用m个区域设定m个水平集函数，这样可以表达<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x9_hanspub.png" xlink:type="simple"/></inline-formula>相图像，并且可避免水平集函数覆盖区域的“重叠”和“真空(漏盖)”问题 [<xref ref-type="bibr" rid="hanspub.17005-ref11">11</xref>] [<xref ref-type="bibr" rid="hanspub.17005-ref12">12</xref>] 。</p><p>本文将C-V方法以及Vese-Chan多相水平集法分别应用于多相医学图像的分割，通过对比数值试验结果，显示出多个水平集函数(本文取2个水平集函数)在图像分割中所具有的明显优势。本文主要研究以下几个方面：概述了水平集方法的基本原理及其应用；介绍了简化的C-V模型的基本原理，并且由单水平集函数推广到两个水平集函数，引入了改进的Vese-Chan变分多水平集模型。最后通过一系列的实验，表明两个水平集函数在处理多相图像时的明显优于单水平函数。本文是按照如下方式安排的。第2节主要介绍了水平集方法的基本原理以及C-V模型。第3节在研究多相图像分割的需求上介绍了Vese-Chan变分水平集模型。第4节通过一系列的实验，分别展示了C-V模型以及Vese-Chan变分水平集法处理图像的结果，并且对比了图像分割处理结果的优异。第5节展望了以后研究重点以及多相分割算法。</p></sec><sec id="s4"><title>2. 水平集算法在图像分割中的应用原理</title><p>图像分割问题可以用多种数学方法来描述。我们下面介绍其中一种较为实用的方法(由Mumford以及Shah 1989年提出)。设一个观察到的电子图像可以用函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x10_hanspub.png" xlink:type="simple"/></inline-formula>来表示，并且该函数定义的区域是</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x11_hanspub.png" xlink:type="simple"/></inline-formula>。我们并设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x12_hanspub.png" xlink:type="simple"/></inline-formula>，这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x13_hanspub.png" xlink:type="simple"/></inline-formula>是区域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x14_hanspub.png" xlink:type="simple"/></inline-formula>的边界组成的曲线，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x15_hanspub.png" xlink:type="simple"/></inline-formula>是一个正整数。那么图像分割问</p><p>题可以表述为下面一个最小值问题：我们要找到一个光滑函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x16_hanspub.png" xlink:type="simple"/></inline-formula>，使得下面的函数</p><disp-formula id="hanspub.17005-formula103"><graphic xlink:href="http://html.hanspub.org/file/10-2620227x17_hanspub.png"  xlink:type="simple"/></disp-formula><p>达到最小值。这里|C|表示曲线C的长度，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x18_hanspub.png" xlink:type="simple"/></inline-formula>是给定的常数。上述问题还是难于求解，我们把图像分割问题可以表述为另外一个最小值问题：我们要找到一个分段单值函数，也就是，在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x19_hanspub.png" xlink:type="simple"/></inline-formula>上<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x20_hanspub.png" xlink:type="simple"/></inline-formula>为常值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x21_hanspub.png" xlink:type="simple"/></inline-formula>，使得下面的函数</p><disp-formula id="hanspub.17005-formula104"><label>(2.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x22_hanspub.png"  xlink:type="simple"/></disp-formula><p>达到最小值。在下面2.1节讨论的C-V模型中n = 2，它是最简单的一种情形，此时图像函数的定义区域只分为两个区域；在下面2.2节讨论的Vese-Chan变分多水平集模型中我们只考虑了n = 4，此时假定图像函数的定义区域只分为四个区域。</p><sec id="s4_1"><title>2.1. C-V模型</title><p>C-V方法中，假设图像区域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x23_hanspub.png" xlink:type="simple"/></inline-formula>上的演化曲线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x24_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x25_hanspub.png" xlink:type="simple"/></inline-formula>的一个子集ω的边界，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x26_hanspub.png" xlink:type="simple"/></inline-formula>。设原图像<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x27_hanspub.png" xlink:type="simple"/></inline-formula>被任意闭合主动轮廓线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x28_hanspub.png" xlink:type="simple"/></inline-formula>划分为内部区域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x29_hanspub.png" xlink:type="simple"/></inline-formula>(用inside (C)表示)和外部区域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x30_hanspub.png" xlink:type="simple"/></inline-formula>(用outside (C)表示)两个同质区域，则能量泛函可写成：</p><disp-formula id="hanspub.17005-formula105"><label>(2.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x31_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x32_hanspub.png" xlink:type="simple"/></inline-formula>为各个能量项权重参数，一般取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x33_hanspub.png" xlink:type="simple"/></inline-formula>。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x34_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x35_hanspub.png" xlink:type="simple"/></inline-formula>是常值，分别表示曲线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x36_hanspub.png" xlink:type="simple"/></inline-formula>内部区域和外部区域的所有像素灰度的平均值。用水平集函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x37_hanspub.png" xlink:type="simple"/></inline-formula>来表示闭合轮廓线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x38_hanspub.png" xlink:type="simple"/></inline-formula>，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x39_hanspub.png" xlink:type="simple"/></inline-formula>为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x40_hanspub.png" xlink:type="simple"/></inline-formula>的零水平集。关于水平集函数的详细介绍，参见文献 [<xref ref-type="bibr" rid="hanspub.17005-ref13">13</xref>] 。</p><p>考虑到Heaviside函数和Dirac函数的形式为：</p><disp-formula id="hanspub.17005-formula106"><label>(2.3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x41_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula107"><label>(2.4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x42_hanspub.png"  xlink:type="simple"/></disp-formula><p>则能量泛函中的各项可以改写成：</p><disp-formula id="hanspub.17005-formula108"><label>(2.5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x43_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula109"><label>(2.6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x44_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula110"><label>(2.7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x45_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula111"><label>(2.8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x46_hanspub.png"  xlink:type="simple"/></disp-formula><p>从而Mumford-Shah模型中的能量泛函(2.2)用水平集函数表示可改写为：</p><disp-formula id="hanspub.17005-formula112"><label>(2.9)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x47_hanspub.png"  xlink:type="simple"/></disp-formula><p>为求出(2.9)中的能量泛函的最小值时，我们根据变分法发现函数必须满足方程</p><disp-formula id="hanspub.17005-formula113"><label>(2.10)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x48_hanspub.png"  xlink:type="simple"/></disp-formula><p>这里函数写成：</p><disp-formula id="hanspub.17005-formula114"><label>(2.11)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x49_hanspub.png"  xlink:type="simple"/></disp-formula><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x50_hanspub.png" xlink:type="simple"/></inline-formula>不变，最小化能量函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x51_hanspub.png" xlink:type="simple"/></inline-formula>，可得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x52_hanspub.png" xlink:type="simple"/></inline-formula>的表达式：</p><disp-formula id="hanspub.17005-formula115"><label>(2.12)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x53_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula116"><label>(2.13)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x54_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x55_hanspub.png" xlink:type="simple"/></inline-formula>为轮廓内像素的平均灰度值；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x56_hanspub.png" xlink:type="simple"/></inline-formula>为轮廓外像素的平均灰度值。在实际求解时，Heaviside函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x57_hanspub.png" xlink:type="simple"/></inline-formula>通常用一个函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x58_hanspub.png" xlink:type="simple"/></inline-formula>来代替：</p><disp-formula id="hanspub.17005-formula117"><label>(2.14)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x59_hanspub.png"  xlink:type="simple"/></disp-formula><p>同样的，对Dirac函数也通常用一个函数来代替：</p><disp-formula id="hanspub.17005-formula118"><label>(2.15)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x60_hanspub.png"  xlink:type="simple"/></disp-formula><p>因为一般较难直接求解静态的偏微分方程(2.10)，我们转向求出下面动态的偏微分方程的稳态解：</p><disp-formula id="hanspub.17005-formula119"><label>(2.16)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x61_hanspub.png"  xlink:type="simple"/></disp-formula><p>理论可以证明(2.16)的稳态解就是静态的偏微分方程2-(10)的解。</p><p>我们利用通常的有限差分法来离散(2.16)，设空间步长为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x62_hanspub.png" xlink:type="simple"/></inline-formula>，时间步长为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x63_hanspub.png" xlink:type="simple"/></inline-formula>，有如下方程：</p><disp-formula id="hanspub.17005-formula120"><label>(2.17)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x64_hanspub.png"  xlink:type="simple"/></disp-formula><p>这里的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x65_hanspub.png" xlink:type="simple"/></inline-formula>代表图像函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x66_hanspub.png" xlink:type="simple"/></inline-formula>的值，在MATLAB中很容易得到它。</p></sec><sec id="s4_2"><title>2.2. 计算步骤</title><p>1) 初始化：定义初始轮廓曲线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x67_hanspub.png" xlink:type="simple"/></inline-formula>，并根据<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x68_hanspub.png" xlink:type="simple"/></inline-formula>计算初始的符号距离函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x69_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>2) 根据当前的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x70_hanspub.png" xlink:type="simple"/></inline-formula>，计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x71_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x72_hanspub.png" xlink:type="simple"/></inline-formula>，以及轮廓线曲率的值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x73_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>3) 根据方程(2.17)，求得该点下一时刻的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x74_hanspub.png" xlink:type="simple"/></inline-formula>值，并且更新轮廓线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x75_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>4) 检测迭代是否满足收敛条件，如果收敛，则停止计算，输出最终轮廓线。否则，重复步骤2)；</p></sec><sec id="s4_3"><title>2.3. 小结</title><p>本节首先介绍了C-V模型的基本理论以及数值实现方法。C-V模型将图像的分割为目标和背景两个部分，所有与目标平均灰度值接近的像素被划入目标中；而与背景平均灰度相接近的像素则被划入背景中。这样便忽略了目标或背景可能存在的内部亮度的变化，而现实中要处理的图像往往存在着复杂的亮度变化，导致分割失败。因此，接下来我们将引入Vese-Chan变分多水平集模型，该模型含有m个水平集函数，可以用来识别复杂的图像。</p></sec></sec><sec id="s5"><title>3. Vese-Chan变分多水平集模型</title><sec id="s5_1"><title>3.1. Vese-Chan变分多水平模型的提出</title><p>Vese -Chan对C-V模型进行了扩展 [<xref ref-type="bibr" rid="hanspub.17005-ref6">6</xref>] ，提出了一种新的基于M-S模型的多相图像分割的Vese-Chan变分水平集模型。在该模型中，用个水平集函数划分图像为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x76_hanspub.png" xlink:type="simple"/></inline-formula>个相，水平集函数的个数可以减少为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x77_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x78_hanspub.png" xlink:type="simple"/></inline-formula>个水平集函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x79_hanspub.png" xlink:type="simple"/></inline-formula>，引入水平集函数向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x80_hanspub.png" xlink:type="simple"/></inline-formula>和Heaviside函数向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x81_hanspub.png" xlink:type="simple"/></inline-formula>，则相可以定义成：两像素点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x82_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x83_hanspub.png" xlink:type="simple"/></inline-formula>属于同一相中，当且仅当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x84_hanspub.png" xlink:type="simple"/></inline-formula>。即决定了每一个分割部分或相。一幅图像的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x85_hanspub.png" xlink:type="simple"/></inline-formula>有个可能值，在一个区域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x86_hanspub.png" xlink:type="simple"/></inline-formula>中就可以定义个相。因此，被分成不相交的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x87_hanspub.png" xlink:type="simple"/></inline-formula>的部分，每个像素<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x88_hanspub.png" xlink:type="simple"/></inline-formula>都只属于其中一部分，从而避免了重叠(overlap)或真空(vacuum)问题。用I来表示图像的相，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x89_hanspub.png" xlink:type="simple"/></inline-formula>，设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x90_hanspub.png" xlink:type="simple"/></inline-formula>，这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x91_hanspub.png" xlink:type="simple"/></inline-formula>为第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x92_hanspub.png" xlink:type="simple"/></inline-formula>相中的平均值，设为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x93_hanspub.png" xlink:type="simple"/></inline-formula>每一相的特征函数，则可以改写能量泛函数为：</p><disp-formula id="hanspub.17005-formula121"><label>(3.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x94_hanspub.png"  xlink:type="simple"/></disp-formula><p>如图1所示 [<xref ref-type="bibr" rid="hanspub.17005-ref6">6</xref>] ，左边的图使用了两个水平集函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x95_hanspub.png" xlink:type="simple"/></inline-formula>实现了4-相分割，曲线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x96_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x97_hanspub.png" xlink:type="simple"/></inline-formula>将整个区域分为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x98_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x99_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x100_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x101_hanspub.png" xlink:type="simple"/></inline-formula>四个子区域。右边的图用三个</p><p>图1. Vese-Chan变分水平集模型区域划分原理</p><p>水平集函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x104_hanspub.png" xlink:type="simple"/></inline-formula>实现了8-相分割，曲线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x105_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x106_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x107_hanspub.png" xlink:type="simple"/></inline-formula>将整个区域分为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x108_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x109_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x110_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x111_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x112_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x113_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x114_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x115_hanspub.png" xlink:type="simple"/></inline-formula>八个子区域。</p><p>这样，Vese-Chan变分水平集模型的能量泛函用水平集函数表示可写成：</p><disp-formula id="hanspub.17005-formula122"><label>(3.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x116_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x117_hanspub.png" xlink:type="simple"/></inline-formula>是一个常向量，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x118_hanspub.png" xlink:type="simple"/></inline-formula>。函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x119_hanspub.png" xlink:type="simple"/></inline-formula>可以写成：</p><disp-formula id="hanspub.17005-formula123"><label>(3.3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x120_hanspub.png"  xlink:type="simple"/></disp-formula><p>给定初始条件<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x121_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x122_hanspub.png" xlink:type="simple"/></inline-formula>，于是能量泛函(3.2)的Euler-Lagrange方程写成：</p><disp-formula id="hanspub.17005-formula124"><label>(3.4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x123_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula125"><label>(3.5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x124_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula126"><label>(3.6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x125_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula127"><label>(3.7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x126_hanspub.png"  xlink:type="simple"/></disp-formula><p>为求出(3.2)中的能量泛函的最小值时，我们根据变分法发现函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x127_hanspub.png" xlink:type="simple"/></inline-formula>必须满足方程</p><disp-formula id="hanspub.17005-formula128"><label>(3.8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x128_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula129"><label>(3.9)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x129_hanspub.png"  xlink:type="simple"/></disp-formula><p>为了求出上面的函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x130_hanspub.png" xlink:type="simple"/></inline-formula>，我们转向求出下面动态的偏微分方程组的稳态解：</p><disp-formula id="hanspub.17005-formula130"><label>(3.10)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x131_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula131"><label>(3.11)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x132_hanspub.png"  xlink:type="simple"/></disp-formula><p>理论可以证明偏微分方程组(3.10)以及(3.11)的稳态解就是静态的偏微分方程(3.8)以及(3.9)的解。</p></sec><sec id="s5_2"><title>3.2. Vese-Chan变分多水平集模型的数值算法步骤</title><p>1) 设定初始值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x133_hanspub.png" xlink:type="simple"/></inline-formula>，初始水平集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x134_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x135_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>2) 按照公式(3.4)，(3.5)，(3.6)，(3.7)，计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x136_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x137_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x138_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x139_hanspub.png" xlink:type="simple"/></inline-formula>；再计算<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x140_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x141_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>3) 若达到稳定的状态，停止迭代；否则，转到步骤2)。</p></sec><sec id="s5_3"><title>3.3. Vese-Chan变分多水平集模型的差分格式</title><p>在3.2中步骤(2)计算时，采用以下有限差分格式来处理，设</p><disp-formula id="hanspub.17005-formula132"><label>(3.12)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x142_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula133"><label>(3.13)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x143_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula134"><label>(3.14)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x144_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula135"><label>(3.15)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x145_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula136"><label>(3.16)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x146_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula137"><label>(3.17)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x147_hanspub.png"  xlink:type="simple"/></disp-formula><p>则</p><disp-formula id="hanspub.17005-formula138"><label>(3.18)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x148_hanspub.png"  xlink:type="simple"/></disp-formula><p>相似的，设</p><disp-formula id="hanspub.17005-formula139"><label>(3.19)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x149_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula140"><label>(3.20)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x150_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula141"><label>(3.21)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x151_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula142"><label>(3.22)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x152_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula143"><label>(3.23)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x153_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.17005-formula144"><label>(3.24)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x154_hanspub.png"  xlink:type="simple"/></disp-formula><p>对于第二个水平集函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x155_hanspub.png" xlink:type="simple"/></inline-formula>：</p><disp-formula id="hanspub.17005-formula145"><label>(3.25)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-2620227x156_hanspub.png"  xlink:type="simple"/></disp-formula><p>以上即为Vese-Chan变分多水平集模型的数值实现过程。这里我们采用标准的有限差分法，在下一节中，我们即通过数值试验分割的结果来具体的分析两种模型在分割复杂的多相图片，从而对比判别两种模型的优劣。</p></sec></sec><sec id="s6"><title>4. 数值实验结果与分析</title><sec id="s6_1"><title>4.1. 实验一</title><p>文中的实验平台为IBM Thinkpad T41：Intel Pentium M 1.6GHz，1GB内存，显卡为ATI 7500。运行环境为MatlAB7.0。</p><p>采用图像fourblock_gray.bmp，图像大小为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x157_hanspub.png" xlink:type="simple"/></inline-formula>，其中三个分割目标灰度值不同。首先采用传统的C-V模型。给定参数如下：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x158_hanspub.png" xlink:type="simple"/></inline-formula>，面积权系数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x159_hanspub.png" xlink:type="simple"/></inline-formula>，轮廓线长度权系数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x160_hanspub.png" xlink:type="simple"/></inline-formula>，时间步长<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x161_hanspub.png" xlink:type="simple"/></inline-formula>，空间离散步长<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x162_hanspub.png" xlink:type="simple"/></inline-formula>，规整化Dirac函数和Heaviside函数所用参数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x163_hanspub.png" xlink:type="simple"/></inline-formula>。为了得到较好的分隔效果，我们循环1000次，由图2分割结果来看，分割效果很不理想，在只有一个水平集函数的条件下，只能识别出两相图像轮廓，而此次实验图片为四相图片，只能勾勒出黑色矩形的边框，效果不大好。</p><p>而我们再次采用改进的Vese-Chan变分多水平集模型，参数设计如上，循环500次，由图3可以看到，该方法非常有效。</p></sec><sec id="s6_2"><title>4.2. 实验二</title><p>采用的是图像knee1.jpg四相图片。图4为传统的C-V模型分割效果，实验参数：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x164_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x165_hanspub.png" xlink:type="simple"/></inline-formula>，轮廓线长度权系数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x166_hanspub.png" xlink:type="simple"/></inline-formula>，时间步长<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x167_hanspub.png" xlink:type="simple"/></inline-formula>，空间离散步长<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x168_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-2620227x169_hanspub.png" xlink:type="simple"/></inline-formula>。循环次数为200次。</p><p>观察分割效果，可以看出C-V模型分割出来了膝关节外围的大体轮廓；但是在膝关节内侧，以及关节接触点没有被分割识别出来。为此我们采用改进的Vese-Chan变分水平集模型。参数同上，同样循环200次，得到结果图5可以看出，分割效果较好。</p><p>可以看出，内侧的轮廓以及膝关节接触处轮廓都被很好的识别分割出来。</p><p>图2. C-V模型处理四相图片</p><p>图3. 两个水平集模型处理四相图片</p><p>图4. C-V模型处理四相图片</p><p>图5. 两个水平集函数模型处理四相图片</p></sec></sec><sec id="s7"><title>5. 总结与展望</title><p>本论文针对多相图像分割的变分水平集法及其相关数学模型进行了系统的研究，并以实例说明其优势。得出如下结论：</p><p>1) 简单的C-V方法只有一个水平集函数，在处理两相图像时，效果是很好的，甚至分割精度比多个水平集函数分割效果要好得多。但是多相(大于2相)图像分割中，单个水平集函数只能识别其中的两相，而自动忽略了其他的相。多个水平集函数由于计算量大，在试验中，耗费时间要大一些。</p><p>2) 实验参数的选取对于实验的时间以及结果有着决定性的作用。C-V模型参数的选取中，初始水平集函数为一个圆，当圆心的位置为图像的正中间的那个点时，效果最优。Vese-Chan多相水平集法的初始水平集函数为两个圆，圆的大小需要依照图像的大小作相应的调整，而且当实验图像格式比较大时，异常耗时。</p><p>3) 从Vese-Chan多水平集法的表达式可以看出，尽管只是使用两个水平集函数实现四相分割，其表达式的形式已经很复杂，若要实现大于四相的图像分割，单单是推导表达式就相当繁重，因而迫切的需要找出一个通用的表达式，以清晰明了的表达分割。这也将是下一步研究的重点。</p></sec><sec id="s8"><title>致谢</title><p>本文从选题到完成，都是在王汉权老师的指导下完成的。倾注了老师大量的心血，再次致以衷心的感谢与真挚的敬意。同时感谢支持以及给予帮助的同学和朋友们，感恩，谢谢！</p></sec><sec id="s9"><title>基金项目</title><p>本文受到云南省科技厅中青年学术带头人后备人才基金、国家自然科学基金(11261065)等资助。</p></sec><sec id="s10"><title>文章引用</title><p>马秀,张浩然,王汉权. 水平集方法在医学图像分割中的一个应用Application of Level Set Method in Medical Image Segmentation[J]. 应用数学进展, 2016, 05(01): 63-73. http://dx.doi.org/10.12677/AAM.2016.51010</p></sec><sec id="s11"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.17005-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Koepfler, G., Lopez, C. and Morel, J.M. (1995) A Multiscale Algorithm for Image Segmentation by Variational Method. Journal de Mathématiques Pures et Appliquées, 74, 483-548.</mixed-citation></ref><ref id="hanspub.17005-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Bourdin, B. (1999) Image Segmentation with a Finite Element Method. Mathematical Modelling and Numerical Analysis, 33, 229-244.</mixed-citation></ref><ref id="hanspub.17005-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">朱付平, 田捷, 林瑶, 葛行飞. 基于Level Set方法的图像分割[J]. 软件学报, 2002, 13(9): 1866-1872.</mixed-citation></ref><ref id="hanspub.17005-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">章毓晋. 图像处理和分析[M]. 北京: 清华大学出版社, 1999.</mixed-citation></ref><ref id="hanspub.17005-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Chan, T. and Vese, L. (2000) Image Segmentation Using Level Sets and the Piecewise-Constant Mumford-Shah Model. UCLA CAM Report 00-14, Submitted to IJCV.</mixed-citation></ref><ref id="hanspub.17005-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Chan, T., Sandberg, B.Y. and Vese, L. (2000) Active Contours without Edges for Vector-Valued Imagines. JVCIR, 11, 130-141.</mixed-citation></ref><ref id="hanspub.17005-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Chan, T. and Vese, L. (2001) Active Contours without Edges. IEEE Transactions on Image Processing, 10, 266-277.  
&lt;br&gt;http://dx.doi.org/10.1109/83.902291</mixed-citation></ref><ref id="hanspub.17005-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Shah, J. (1996) A Common Framework for Curve Evolution, Segmen-tation and Anisotropic Diffusion. IEEE Conference on Computer Vision and Pattern Recognition.</mixed-citation></ref><ref id="hanspub.17005-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Mumford, D. and Shah, J. (1989) Optimal Approximation by Piecewise Smooth Functions and Associated Variational Problems. Communications on Pure and Applied Mathematics, 42, 577-685. &lt;br&gt;http://dx.doi.org/10.1002/cpa.3160420503</mixed-citation></ref><ref id="hanspub.17005-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Zhao, H.K., Chan, T., Merriman, B. and Osher, S. (1996) A Vari-ational Level Set Approach to Multiphase Motio. Journal of Computational Physics, 127, 179-195. &lt;br&gt;http://dx.doi.org/10.1006/jcph.1996.0167</mixed-citation></ref><ref id="hanspub.17005-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Vese, L. (2003) Multiphase Object Detection and Image Segmen-tation. Geometric Level Set Methods in Imaging, Vision, and Grahics, Springer, 175-194. &lt;br&gt;http://dx.doi.org/10.1007/0-387-21810-6_10</mixed-citation></ref><ref id="hanspub.17005-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">石洁, 潘振宽, 魏伟波, 李华, 崔丽娜. 基于变分水平集方法的多相图像分割模型[D]: [硕士学位论文]. 青岛大学信息工程学院硕士论文, 青岛.</mixed-citation></ref><ref id="hanspub.17005-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Osher, S. and Fedkiw, J. (2002) Level Set Methods and Dynamic Implicit Surfaces. Springer-Verlag.</mixed-citation></ref></ref-list></back></article>