<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">HJWC</journal-id><journal-title-group><journal-title>Hans Journal of Wireless Communications</journal-title></journal-title-group><issn pub-type="epub">2163-3983</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/HJWC.2015.56018</article-id><article-id pub-id-type="publisher-id">HJWC-16544</article-id><article-categories><subj-group subj-group-type="heading"><subject>HJWC20150600000_48452248.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  网络编码的安全性综述
  Survey on Security of Network Coding
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>宇阳</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>高</surname><given-names>媛媛</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>杨</surname><given-names>保峰</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>倩倩</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>顾</surname><given-names>耀坤</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff4"><sup>4</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>解放军理工大学通信工程学院，江苏 南京</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><aff id="aff4"><addr-line>65040部队，辽宁 沈阳</addr-line></aff><aff id="aff3"><addr-line>南京邮电大学，江苏 南京</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>yuyangzhang1991@126.com(张宇)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>08</day><month>12</month><year>2015</year></pub-date><volume>05</volume><issue>06</issue><fpage>126</fpage><lpage>137</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   本文是针对网络编码的安全性问题的综述性文章，首先对现有的针对网络编码系统的恶意攻击进行了细致的定义和分类，总结了各类恶意攻击之间的联系和区别，说明了它们的基本防御思想；其次针对各类恶意攻击，阐述了一些经典的网络编码防御方案，并分析其优缺点；最后对现有的网络编码防御方案进行了总结并提出了改进思路。 In this paper, we mainly summarize secure problems of network coding. Firstly, existing malicious attacks are discussed in detailed definition and classification, and then we describe the relationship and difference among them and point out the basic defense thought of all kinds of malicious attacks. Secondly, aiming at all kinds of malicious attacks, we introduce some classic network coding defense schemes and analyze their advantages and disadvantages. Finally, we summarize existing network coding defense schemes and propose some improvement ideas. 
  
 
</p></abstract><kwd-group><kwd>网络编码，安全，熵攻击，拜占庭攻击，污染攻击，窃听攻击，万能攻击，信息论，密码学, Network Coding</kwd><kwd> Security</kwd><kwd> Entropy Attack</kwd><kwd> Byzantine Attack</kwd><kwd> Pollution Attack</kwd><kwd> Eavesdropping Attack</kwd><kwd> Universal Attack</kwd><kwd> Informationism</kwd><kwd> Cryptology</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>网络编码的安全性综述<sup> </sup></title><p>张宇阳<sup>1</sup>，高媛媛<sup>2</sup>，杨保峰<sup>1</sup>，张倩倩<sup>1</sup>，顾耀坤<sup>3</sup></p><p><sup>1</sup>解放军理工大学通信工程学院，江苏 南京</p><p><sup>2</sup>南京邮电大学，江苏 南京</p><p><sup>3</sup>65040部队，辽宁 沈阳</p><disp-formula id="hanspub.16544-formula319"><graphic xlink:href="http://html.hanspub.org/file/4-1730186x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2015年11月17日；录用日期：2015年12月2日；发布日期：2015年12月16日</p><disp-formula id="hanspub.16544-formula320"><graphic xlink:href="http://html.hanspub.org/file/4-1730186x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文是针对网络编码的安全性问题的综述性文章，首先对现有的针对网络编码系统的恶意攻击进行了细致的定义和分类，总结了各类恶意攻击之间的联系和区别，说明了它们的基本防御思想；其次针对各类恶意攻击，阐述了一些经典的网络编码防御方案，并分析其优缺点；最后对现有的网络编码防御方案进行了总结并提出了改进思路。</p><p>关键词 :网络编码，安全，熵攻击，拜占庭攻击，污染攻击，窃听攻击，万能攻击，信息论，密码学</p><disp-formula id="hanspub.16544-formula321"><graphic xlink:href="http://html.hanspub.org/file/4-1730186x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>网络编码在2000年被Ahlswede等人[<xref ref-type="bibr" rid="hanspub.16544-ref1">1</xref>] 首次提出后便凭借其巧妙的思想、广阔的前景，立刻成为业内的研究热点。网络编码最大的优势就是通过大幅提升网络吞吐量来提高有效性，这是传统的存储-转发中继模式所不具备的。并且，网络编码还能提高网络的鲁棒性和安全性，在一些特殊领域，比如军事和商业领域，安全性是至关重要的。虽然中间节点网络编码后的数据不是直接的有用数据，信宿需要进行译码，这在一定程度上提高了安全性，但是这只是指网络编码在防窃听方面具有得天独厚的优势，而从另一角度看，由于中间节点网络编码后各输入链路的数据组合在了一起，致使一条链路的错误可迅速向整个网络蔓延，这不仅浪费了网络资源，而且会导致信宿译码出错，得不到有用数据，所以网络编码系统的安全性对于主动攻击来说又是非常脆弱的。</p><p>本文主要的贡献是：一是对现有的恶意攻击进行了细致的分类和定义，并总结了它们之间的区别与联系，能够帮助读者准确理解概念性问题；二是针对每类恶意攻击，重点介绍了现有的经典网络编码防御方案，能够帮助读者掌握其基本防御思想；三是对现有的网络编码防御方案提出了一些改进思路，可供下一步研究参考。</p></sec><sec id="s4"><title>2. 基本概念</title><p>恶意攻击的分类标准有很多，但最常用的是以主动攻击和被动攻击进行区分，其次也有以外部攻击和内部攻击进行区分。主动攻击是指恶意节点主动发送伪造的错误数据来干扰正常通信；被动攻击是指恶意节点并不主动产生并发送数据，只是通过窃听来获取有用数据，该类攻击又称之为窃听攻击。内部攻击是指发动攻击的恶意节点原本是网络内部的合法节点，但是被攻击者利用各种手段进行了策反；外部攻击是指发动攻击的恶意节点是网络外部的非法节点。</p><p>根据主动攻击和被动攻击的分类标准，我们将恶意攻击大致分为了熵攻击、广义污染攻击和窃听攻击，再根据内部攻击和外部攻击的分类标准，我们又将广义污染攻击细分为拜占庭攻击和污染攻击。因此，现有的对网络编码系统的恶意攻击可较为细致地分为熵攻击、拜占庭攻击、污染攻击和窃听攻击四类[<xref ref-type="bibr" rid="hanspub.16544-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.16544-ref3">3</xref>] ，四类恶意攻击的分类见表1。</p><p>熵攻击：熵攻击是以降低网络编码后数据的差异性为手段，来加长信宿的解码时间，降低网络吞吐</p><p>量，而在信息论中，信息的差异性就是用信息熵来表示，所以命名此类攻击为熵攻击。熵攻击既可以从网络内部的恶意节点发起，又可以从网络外部的恶意节点发起，所以其既可以是内部攻击，又可以是外部攻击，但它一定是主动攻击。熵攻击可以看作是一种特殊的重放攻击，恶意节点把前时隙接收到的或者非法窃听到的旧数据在新时隙按合法的网络编码规则进行编码后发出(我们将发出的数据称之为非创新数据)，而不对当前时隙发送的新数据进行编码并发送。又因为非创新数据是旧的数据按照合法网络编码规则编码产生的，所以具有很强的隐蔽性。</p><p>见图1所示，若熵攻击为内部攻击，A在时隙<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x9_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x10_hanspub.png" xlink:type="simple"/></inline-formula>向下游节点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x11_hanspub.png" xlink:type="simple"/></inline-formula>分别发送了数据<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x12_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x13_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x14_hanspub.png" xlink:type="simple"/></inline-formula>在接收到后立刻向B转发，在时隙<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x15_hanspub.png" xlink:type="simple"/></inline-formula>，A向<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x16_hanspub.png" xlink:type="simple"/></inline-formula>发送了新数据<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x17_hanspub.png" xlink:type="simple"/></inline-formula>但<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x18_hanspub.png" xlink:type="simple"/></inline-formula>没有立刻向B转发，而是利用旧数据按照合法网络编码规则产生了非创新数据<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x19_hanspub.png" xlink:type="simple"/></inline-formula>并向B转发，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x20_hanspub.png" xlink:type="simple"/></inline-formula> (a和b是随机选取的编码系数)，这样就会导致B得不到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x21_hanspub.png" xlink:type="simple"/></inline-formula>但系统又难以检测；若为外部攻击，同理，外部攻击者C在非法窃听到A发送给下游节点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x22_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x23_hanspub.png" xlink:type="simple"/></inline-formula>的数据<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x24_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x25_hanspub.png" xlink:type="simple"/></inline-formula>后，在时隙<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x26_hanspub.png" xlink:type="simple"/></inline-formula>按照合法网络编码规则产生了非创新数据<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x27_hanspub.png" xlink:type="simple"/></inline-formula>并发送给B，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x28_hanspub.png" xlink:type="simple"/></inline-formula>(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x29_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x30_hanspub.png" xlink:type="simple"/></inline-formula>是随机选取的编码系数)，这样就会干扰B得到时隙<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x31_hanspub.png" xlink:type="simple"/></inline-formula>的新数据。</p><p>拜占庭攻击：拜占庭攻击是从网络内部发起的，所以其是内部攻击，也正因此，内部恶意节点既有能力窃取到网络传输的有用数据，又有能力主动发送伪造的错误数据来污染有用数据，达到干扰信宿译码，降低网络吞吐量的目的。虽然恶意节点既有窃听又有污染的能力，但是其危害性主要源于主动污染，所以我们将其归为主动攻击一类。因为拜占庭攻击是内部攻击，所以其很难察觉且危害巨大。</p><p>污染攻击：污染攻击是指网络外部攻击者向网络主动发送伪造的错误数据来污染有用数据，达到类似于拜占庭攻击的目的，所以其既是外部攻击，又是主动攻击。它和拜占庭攻击的区别除了一个是外部攻击，一个是内部攻击外，还在于一个不具有窃听的能力，而一个具有窃听的能力。图2描述了污染攻击在随机线性网络编码中的一个实例。</p><p>窃听攻击：对窃听攻击的理解就非常简单了，顾名思义，窃听攻击就是指外部攻击者非法地窃听到网络传输的有用数据。对于有线网络来说，外部攻击者是采用搭线窃听的手段，对于无线网络来说，外</p><p>部攻击者则是利用高频天线等手段进行窃听。也因为窃听攻击者不会主动发起攻击，所以其是被动攻击，也因此具有隐蔽性。并且人们通常说的被动攻击一般就是特指窃听攻击，见图3。</p><p>四类恶意攻击的联系与区别见表2。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Classification of four malicious attack</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >名称</th><th align="center" valign="middle" >内部攻击</th><th align="center" valign="middle" >外部攻击</th><th align="center" valign="middle" >主动攻击</th><th align="center" valign="middle" >被动攻击</th></tr></thead><tr><td align="center" valign="middle" >熵攻击</td><td align="center" valign="middle" >√</td><td align="center" valign="middle" >√</td><td align="center" valign="middle" >√</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >拜占庭攻击</td><td align="center" valign="middle" >√</td><td align="center" valign="middle" ></td><td align="center" valign="middle" >√</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >狭义污染攻击</td><td align="center" valign="middle" ></td><td align="center" valign="middle" >√</td><td align="center" valign="middle" >√</td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >窃听攻击</td><td align="center" valign="middle" ></td><td align="center" valign="middle" >√</td><td align="center" valign="middle" ></td><td align="center" valign="middle" >√</td></tr></tbody></table></table-wrap><p>表1. 四类恶意攻击的分类</p><p>图1. 熵攻击</p></sec><sec id="s5"><title>3. 防御方案</title><p>目前，针对这四类恶意攻击，现有的网络编码防御方案主要是基于信息论和密码学。</p><p>对广义污染攻击来说，现有的网络编码防御方案可大致分为三类：污染纠错、污染检测和污染源定位，其中污染纠错主要是基于信息论，通过构建网络纠错码，而污染检测和污染源定位主要是基于密码学，通过利用同态哈希函数、同态签名、线性子空间签名和认证码等手段。</p><p>图2. 污染攻击</p><p>图3. 窃听攻击</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Relationship and differenc</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >联系</th><th align="center" valign="middle" >区别</th></tr></thead><tr><td align="center" valign="middle" >熵攻击、拜占庭攻击和污染攻击的目的都是主动干扰信宿译码出有用数据，降低网络吞吐量。所以它们都是主动攻击。</td><td align="center" valign="middle" >窃听攻击的目的是窃听到有用数据，但不主动干扰通信网络。所以它是被动攻击，并且人们常说的被动攻击一般都特指窃听攻击。</td></tr><tr><td align="center" valign="middle" >拜占庭攻击和污染攻击属于广义污染攻击这一大类，攻击手段都以发送伪造的错误数据来污染有用数据为主。</td><td align="center" valign="middle" >拜占庭攻击因其为内部攻击，所以内部恶意节点还有窃取网络传输的有用数据这一次要攻击手段。而污染攻击因其为外部攻击，所以不能窃取。</td></tr><tr><td align="center" valign="middle" >拜占庭攻击和污染攻击发送的是伪造的错误数据， 所以发送的数据是非法数据。</td><td align="center" valign="middle" >熵攻击把前时隙的旧数据在当前时隙按合法的网络编码规则进行编码后发出，所以发送的数据是“合法”数据。</td></tr><tr><td align="center" valign="middle" >熵攻击因其发送的是“合法”数据，拜占庭攻击因其发动攻击的是“合法”内部节点，窃听攻击因其不主动攻击通信网络，所以都具有隐蔽性。</td><td align="center" valign="middle" >污染攻击不具有隐蔽性。</td></tr></tbody></table></table-wrap><p>表2. 联系与区别</p><p>对于窃听攻击来说，基于信息论的网络编码防御方案一般是通过限制窃听者的窃听能力来设计网络编码规则，使窃听者译码不出有用数据，从而达到弱安全。而基于密码学的网络编码防御方案一般是对信源数据或编码系数进行加密，使窃听者不能解出有用数据，从而达到弱安全。</p><sec id="s5_1"><title>3.1. 熵攻击</title><p>熵攻击的基本防御思想是通过各种手段来检测接收到的数据是否为非创新数据，若是则舍弃，若不是则进行译码得到有用数据。</p><p>Gkantsidis等人[<xref ref-type="bibr" rid="hanspub.16544-ref4">4</xref>] 首次提出了熵攻击的概念，并设计了一种防御熵攻击的方案，即检测已编码数据间的线性相关性来判断哪个已编码数据为非创新数据，然后舍弃。但该防御方案的缺点是在一个很大的有限域内进行，所以其计算量很大，耗时很长，大幅降低了网络吞吐量。</p><p>Jiang等人[<xref ref-type="bibr" rid="hanspub.16544-ref5">5</xref>] 基于自适应概率子集的线性相关性检测算法(S-PSLD)，设计了一种高效的非创新数据过滤方案来防御熵攻击，此方案改进了文献[<xref ref-type="bibr" rid="hanspub.16544-ref4">4</xref>] 提出的防御方案，大幅降低了计算量。</p><p>缓冲监视(BM) [<xref ref-type="bibr" rid="hanspub.16544-ref6">6</xref>] 的防御思想见图4所示，X是被怀疑需要监视的节点，W是监视节点，A，B，C是X的上游邻节点。实线表示用于数据传输的无线信道，虚线表示监视节点接收数据的信道。由于无线通信的广播性，W会接收到A，B，C三节点发给X的数据和X发给下游节点的数据，若W发现X发出的数据是非创新数据的话，就可以判定X为恶意节点。</p></sec><sec id="s5_2"><title>3.2. 拜占庭攻击</title><p>针对拜占庭攻击的网络编码防御方案主要分为基于信息论和基于密码学两类。</p><sec id="s5_2_1"><title>3.2.1. 基于信息论的防御方案</title><p>Cai等人[<xref ref-type="bibr" rid="hanspub.16544-ref7">7</xref>] 将经典纠错码的思想引入到网络编码系统中，提出了网络纠错编码这一概念，即在某一时刻通信网络中发生符号错误的链路数没有超出纠错能力范围时，信宿可以通过译码将错误进行纠正。</p><p>文献[<xref ref-type="bibr" rid="hanspub.16544-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.16544-ref9">9</xref>] 给出了当信道存在噪声时网络纠错编码的具体编译码算法。</p><p>Jaggi等人[<xref ref-type="bibr" rid="hanspub.16544-ref10">10</xref>] 设计了一种分布式随机网络编码防御方案对拜占庭攻击进行纠错。根据恶意节点攻击能力的不同，作者提出了三种算法，但三种算法的基本思想都是将恶意节点视为第二信源。因为信宿接收到的数据是来自信源和恶意节点数据的线性组合，所以只要信宿接收到足够多线性独立的编码数据，就可以译码出来自信源和来自恶意节点的数据，并根据一些限制条件判断出来哪些是来自信源的有用数据，哪些是来自恶意节点的污染数据。</p><p>基于信息论的防御方案的纠错或检错效率往往比较高，但是普遍都存在一些局限性：一是都是以攻</p><p>图4. BM防御</p><p>击者的攻击能力受限为前提；二是攻击者的攻击能力越强，需要用来纠检错的冗余数据就越多，而冗余数据越多会导致编码率越低，消耗的网络资源越多；三是这些方案只能使信宿被动地对接收到的数据进行纠错或检测，而不能主动地定位、丢弃恶意节点，这样就加长了信宿的译码时间，降低了网络吞吐量。</p></sec><sec id="s5_2_2"><title>3.2.2. 基于密码学的防御方案</title><p>两不相邻的监视方案[<xref ref-type="bibr" rid="hanspub.16544-ref11">11</xref>] 假设信源和信宿是可信的，而其他任何中间节点都可能是恶意节点，但只有相邻节点可以共谋。见图5所示是两个X型的网络拓扑结构，从信源到信宿的数据流有两条：S<sub>1</sub>到T<sub>1</sub>，S<sub>2</sub>到T<sub>2</sub>。C<sub>1</sub>和C<sub>2</sub>是进行网络编码的中间节点。每条数据流被两个监视节点监视，因为两个监视节点不相邻，所以它们不能共谋。</p><p>以S<sub>1</sub>到T<sub>1</sub>这一数据流为例，R<sub>1</sub>是被怀疑节点，S<sub>1</sub>和R<sub>2</sub>是两个不相邻监视节点，所以R<sub>1</sub>和R<sub>2</sub>，S<sub>1</sub>和R<sub>2</sub>之间都不能交流。在第一时隙，S<sub>1</sub>将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x36_hanspub.png" xlink:type="simple"/></inline-formula>传输至R<sub>1</sub>和C<sub>1</sub>。在第二时隙，R<sub>1</sub>将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x37_hanspub.png" xlink:type="simple"/></inline-formula>传输至T<sub>1</sub>和C<sub>2</sub>。在第三时隙，R<sub>2</sub>从C<sub>1</sub>接收到网络编码后的数据(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x38_hanspub.png" xlink:type="simple"/></inline-formula>)，此时R<sub>2</sub>利用第一时隙从S<sub>2</sub>得到的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x39_hanspub.png" xlink:type="simple"/></inline-formula>即可解码得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x40_hanspub.png" xlink:type="simple"/></inline-formula>。在第四时隙，R<sub>2</sub>从C<sub>2</sub>接收到网络编码后的数据(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x41_hanspub.png" xlink:type="simple"/></inline-formula>)，此时R<sub>2</sub>利用第二时隙它传输的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x42_hanspub.png" xlink:type="simple"/></inline-formula>即可解码得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x43_hanspub.png" xlink:type="simple"/></inline-formula>。接下来进行判断，若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x44_hanspub.png" xlink:type="simple"/></inline-formula>，那么R<sub>1</sub>就不是恶意节点，反之则是。</p></sec></sec><sec id="s5_3"><title>3.3. 污染攻击</title><p>由于污染攻击和拜占庭攻击同属于广义污染攻击，所以针对污染攻击的网络编码防御方案也主要分为基于信息论和基于密码学两类。</p><sec id="s5_3_1"><title>3.3.1. 基于信息论的防御方案</title><p>防御拜占庭攻击的基于信息论的方案对于污染攻击来说同样适用。</p></sec><sec id="s5_3_2"><title>3.3.2. 基于密码学的防御方案</title><p>利用同态哈希函数的防御方案：Li等人[<xref ref-type="bibr" rid="hanspub.16544-ref12">12</xref>] 利用同态哈希函数来检测污染攻击。在此方案中，见图6</p><p>图5. 两个X型网络拓扑结构</p><p>图6. 利用同态哈希函数的防御方案</p><p>所示，数据x被分为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x47_hanspub.png" xlink:type="simple"/></inline-formula>这n块数据块，每块<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x48_hanspub.png" xlink:type="simple"/></inline-formula>又被进一步分为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x49_hanspub.png" xlink:type="simple"/></inline-formula>这m块子数据块。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x50_hanspub.png" xlink:type="simple"/></inline-formula>。将哈希函数H(x)应用于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x51_hanspub.png" xlink:type="simple"/></inline-formula>上得到相应哈希值的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x52_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x53_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x54_hanspub.png" xlink:type="simple"/></inline-formula>，并且哈希函数H(x)具有同态性质即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x55_hanspub.png" xlink:type="simple"/></inline-formula>。这n个哈希值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x56_hanspub.png" xlink:type="simple"/></inline-formula>被提前发至各个节点。因为网络编码后的x应该是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x57_hanspub.png" xlink:type="simple"/></inline-formula>的线性组合，编码系数为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x58_hanspub.png" xlink:type="simple"/></inline-formula>，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x59_hanspub.png" xlink:type="simple"/></inline-formula>，所以根据哈希函数的同态性，如果中间节点或信宿接收到的数据的哈希值等于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x60_hanspub.png" xlink:type="simple"/></inline-formula>，那么消息没被污染，反之则已被污染。</p><p>利用线性子空间签名的防御方案：基于正交向量检测污染攻击的网络编码防御方案[<xref ref-type="bibr" rid="hanspub.16544-ref13">13</xref>] 的基本思想是计算出子空间的正交向量并将其发送给中间节点和信宿，这些节点可以利用正交向量检测接收到的数据向量是否被污染。比如，信源发送h个数据，每个数据是N维向量，那么信源发送的消息矩阵就是：</p><disp-formula id="hanspub.16544-formula322"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1730186x61_hanspub.png"  xlink:type="simple"/></disp-formula><p>消息矩阵中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x62_hanspub.png" xlink:type="simple"/></inline-formula>，网络中边e上传输的数据是 的线性组合，记为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x63_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x64_hanspub.png" xlink:type="simple"/></inline-formula>是全局编码向量，所以<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x65_hanspub.png" xlink:type="simple"/></inline-formula>。因为向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x66_hanspub.png" xlink:type="simple"/></inline-formula>且线性独立，所以它们可以构成一子空间X，由于y(e)是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x67_hanspub.png" xlink:type="simple"/></inline-formula>线性组合，所以<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x68_hanspub.png" xlink:type="simple"/></inline-formula>。子空间X中的每一个向量都可以视为合法数据，那么求出满足<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x69_hanspub.png" xlink:type="simple"/></inline-formula>的子空间X的正交向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x70_hanspub.png" xlink:type="simple"/></inline-formula>。将正交向量v提前发给网络中的其它节点，若中间节点或信宿接收到的数据向量点乘v等于0则数据没有被污染，反之则已被污染。并且可以根据上游节点的点乘值来判断恶意节点的具体位置。</p></sec></sec><sec id="s5_4"><title>3.4. 窃听攻击</title><p>针对窃听攻击的网络编码防御方案也主要分为基于信息论和基于密码学两类。</p><sec id="s5_4_1"><title>3.4.1. 基于信息论的防御方案</title><p>Cai等人[<xref ref-type="bibr" rid="hanspub.16544-ref14">14</xref>] 提出了搭线窃听的网络通信模型GSTW，并构造了在信息论意义下的安全网络编码防御方案，即窃听者无论窃听所给定窃听集内的哪个窃听子集都无法恢复出原始数据。随后，他们进一步提出了r-安全网络编码防御方案[<xref ref-type="bibr" rid="hanspub.16544-ref15">15</xref>] [<xref ref-type="bibr" rid="hanspub.16544-ref16">16</xref>] ，该方案也需限制窃听者的窃听能力，即窃听信道数小于加入的随机数个数r。</p><p>Bhattad等人[<xref ref-type="bibr" rid="hanspub.16544-ref17">17</xref>] 适当合理地降低了安全条件，提出了弱安全网络编码的概念，只要窃听者无法获得任何有用数据即可。当窃听者不能获得信源发送的任何原始数据时，我们称之为信息论安全网络编码；当窃听者不能获得信源发送的任何有用数据时，我们称之为弱安全网络编码。由于弱安全网络编码放宽了安全条件，但又很好地保护了有用数据，相对于信息论安全网络编码来说，又提高编码的最大多播速率，因此，现在人们研究的防窃听网络编码防御方案基本上都是追求达到弱安全。</p><p>文献[<xref ref-type="bibr" rid="hanspub.16544-ref18">18</xref>] 已知网络的拓扑结构，设计了防窃听的网络编码防御方案。图7是窃听者位置已知的简单双向通信防御方案：s为信源，d为信宿，e为窃听节点，假设e的窃听能力受限，因为e在靠近s的sd直线上，所以s广播给d的数据会被e窃听到，而d广播s的数据则不会。因此，根据此网络拓扑结构设计的网络编码防御方案是：第一步，d产生一个随机数k并发送给s，第二步，s利用接收到的k对有用数据x进行网络编码如c = x♁k，然后发送给d。则d有c和k即可解码出x，而e只有c而没有k则解码不出x。</p><p>图8是两个窃听者位置已知但不共谋的防御方案：s，d，a，b是合法节点，e<sub>1</sub>，e<sub>2</sub>是两个位置已知但不共谋的窃听节点，e<sub>1</sub>在s到a的传输路线上，e<sub>2</sub>在s到b的传输路线上。根据此网络拓扑结构设计的</p><p>网络编码防御方案是：a，b分别生成随机数k<sub>1</sub>和k<sub>2</sub>并发送给s和d，然后s将进行网络编码c = x♁k<sub>1</sub>♁k<sub>2</sub>并将c发送给a和b，最后由a或者b将c发送给d。d由于接收到c，k<sub>1</sub>，k<sub>2</sub>就可以解码出x，而e<sub>1</sub>由于只窃听到c和k<sub>1</sub>，e<sub>2</sub>由于只窃听到c和k<sub>2</sub>，所以都不能解码出x。</p><p>图9是两个窃听者位置未知但不共谋的防御方案：s，d，r<sub>1</sub>，r<sub>2</sub>，r<sub>3</sub>，r<sub>4</sub>是合法节点，e<sub>1</sub>，e<sub>2</sub>是两个位置未知但不共谋的窃听节点，并且窃听节点位置不会与合法节点位置相重。在此，我们假设两个窃听节点位于最好的窃听位置(见图9所示分别位于两个方格拓扑结构中央，这样就可以窃听到最大量的数据)。根据此拓扑结构设计的网络编码防御方案是：第一步，r<sub>1</sub>，r<sub>2</sub>分别生成随机数k<sub>1</sub>，k<sub>2</sub>并沿发送路径发送，第二步，s利用k<sub>1</sub>，k<sub>2</sub>进行网络编码c = x♁k<sub>1</sub>♁k<sub>2</sub>并沿发送路径发送。各路径传输完毕后可知，d由于接收到c，k<sub>1</sub>，k<sub>2</sub>所以可以解码出x，而e<sub>1</sub>和e<sub>2</sub>由于分别缺少k<sub>2</sub>和k<sub>1</sub>所以解码不出x。</p></sec><sec id="s5_4_2"><title>3.4.2. 基于密码学的防御方案</title><p>基于信息论的防御方案以限制窃听者的窃听能力为前提，当它们面对窃听能力更强的窃听者时便不能保证网络的安全性。因此，用密码学手段来设计防窃听的网络编码防御方案受到了广泛的关注。</p><p>通过对编码后数据及编码向量进行排列加密操作的防窃听的网络编码方案，称之为P-Coding [<xref ref-type="bibr" rid="hanspub.16544-ref19">19</xref>] 。其基本思想见图10所示，经过排列加密操作后，编码后数据和其编码向量可以混合和重新排序。由于在随机网络编码中的编码后数据是源数据的组合，要恢复出源数据就需要利用编码向量对其进行解码。而排列加密函数将编码向量的元素和编码后数据的元素随机混合后，窃听者很难定位到哪些是编码向量的</p><p>图7. 简单双向通信防御方案</p><p>图8. 两个窃听者位置已知但不共谋防御方</p><p>图9. 两个窃听者位置未知但不共谋防御方案</p><p>图10. 在已编码数据上进行排列加密</p><p>元素，哪些是编码后数据的元素，也就无法解码出源数据。</p><p>防窃听的VSWNC方案[<xref ref-type="bibr" rid="hanspub.16544-ref20">20</xref>] 要求信源信宿共享一个随机数生成器，其次信源可用随机数r在随机数生成器上生成一个范德蒙行列式P，随后用P对信源数据进行预编码处理，最后信宿可通过r得到P从而能够正确解码。把VSWNC方案应用于随机网络编码中，在牺牲少量带宽的情况下能保证以概率1达到弱安全。</p><p>信源编码：</p><p>信源在有限域Μ中选取一个随机数r，然后用r在随机数生成器上生成n − 1个随机数。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x75_hanspub.png" xlink:type="simple"/></inline-formula>这n − 1个数构成了范德蒙行列式。r是对窃听者绝对保密的。</p><disp-formula id="hanspub.16544-formula323"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1730186x76_hanspub.png"  xlink:type="simple"/></disp-formula><p>X左乘P可得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x77_hanspub.png" xlink:type="simple"/></inline-formula>。</p><disp-formula id="hanspub.16544-formula324"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1730186x78_hanspub.png"  xlink:type="simple"/></disp-formula><p>在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x79_hanspub.png" xlink:type="simple"/></inline-formula>后加入单位冗余得到Y，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x80_hanspub.png" xlink:type="simple"/></inline-formula>为M上的随机数。</p><disp-formula id="hanspub.16544-formula325"><label>(4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1730186x81_hanspub.png"  xlink:type="simple"/></disp-formula><p>经过以上变换，信源就把Y发送出去。Y在网络中进行网络编码，即Z = FY。</p><p>信宿解码：</p><p>信宿收到Z后可用公式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x82_hanspub.png" xlink:type="simple"/></inline-formula>获得Y，然后得到r和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x83_hanspub.png" xlink:type="simple"/></inline-formula>。信宿再利用r访问随机数生成器，来获得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x84_hanspub.png" xlink:type="simple"/></inline-formula>，进而得到P。又因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x85_hanspub.png" xlink:type="simple"/></inline-formula>，所以信宿就可以获得信源数据X了。</p></sec></sec><sec id="s5_5"><title>3.5. 万能攻击</title><p>就像我们会想方设法地保护网络的安全性一样，攻击者也会采取各种手段来达成他们的目的。在现实中，攻击者往往会采用多类恶意攻击来同时攻击网络，因此，设计出能同时防御多类恶意攻击的网络编码防御方案是大势所趋，我们称此类防御方案为抗万能攻击方案。</p><p>文献[<xref ref-type="bibr" rid="hanspub.16544-ref21">21</xref>] 利用哈希函数和安全信道对随机单跳网络编码进行改进，采用一个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x86_hanspub.png" xlink:type="simple"/></inline-formula>维随机向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x87_hanspub.png" xlink:type="simple"/></inline-formula>和两个哈希函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x88_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x89_hanspub.png" xlink:type="simple"/></inline-formula>来同时防御窃听攻击和广义污染攻击。该方案仅改变了信源和信宿的编解码方式，而未改变中间节点的网络编码方式。</p><p>信源编码：</p><p>信源产生的原始数据M要经过2次变换：</p><disp-formula id="hanspub.16544-formula326"><label>(5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1730186x90_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x91_hanspub.png" xlink:type="simple"/></inline-formula>为原始数据向量，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x92_hanspub.png" xlink:type="simple"/></inline-formula>。在有限域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x93_hanspub.png" xlink:type="simple"/></inline-formula>上选取随机向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x94_hanspub.png" xlink:type="simple"/></inline-formula>，且服从均匀分布。使用哈希函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x95_hanspub.png" xlink:type="simple"/></inline-formula>使得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x96_hanspub.png" xlink:type="simple"/></inline-formula>。我们通过<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x97_hanspub.png" xlink:type="simple"/></inline-formula>构建新的数据向量：</p><disp-formula id="hanspub.16544-formula327"><label>(6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1730186x98_hanspub.png"  xlink:type="simple"/></disp-formula><p>经过第一次变换，得到了新的数据矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x99_hanspub.png" xlink:type="simple"/></inline-formula>。使用哈希函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x100_hanspub.png" xlink:type="simple"/></inline-formula>：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x101_hanspub.png" xlink:type="simple"/></inline-formula>，得到哈希值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x102_hanspub.png" xlink:type="simple"/></inline-formula>并附加在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x103_hanspub.png" xlink:type="simple"/></inline-formula>数据向量之后，使之形成新的向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x104_hanspub.png" xlink:type="simple"/></inline-formula>。</p><disp-formula id="hanspub.16544-formula328"><label>(7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1730186x105_hanspub.png"  xlink:type="simple"/></disp-formula><p>经过第二次变换后，信源形成了新的数据向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x106_hanspub.png" xlink:type="simple"/></inline-formula>，每个数据向量由k + l位符号组成，前k位符号为数据消息<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x107_hanspub.png" xlink:type="simple"/></inline-formula>，后l位符号由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x108_hanspub.png" xlink:type="simple"/></inline-formula>的哈希函数值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x109_hanspub.png" xlink:type="simple"/></inline-formula>构成。</p><p>信宿译码：</p><p>信宿收到一个消息矩阵D，其由n个线性独立的数据组成。</p><disp-formula id="hanspub.16544-formula329"><label>(8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/4-1730186x110_hanspub.png"  xlink:type="simple"/></disp-formula><p>T为n个数据系数组成的系数矩阵，求出逆矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x111_hanspub.png" xlink:type="simple"/></inline-formula>，解码出数据矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x112_hanspub.png" xlink:type="simple"/></inline-formula>。数据向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x113_hanspub.png" xlink:type="simple"/></inline-formula>的前k位是数据消息<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x114_hanspub.png" xlink:type="simple"/></inline-formula>，通过安全信道接受到随机向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x115_hanspub.png" xlink:type="simple"/></inline-formula>，信宿可以从<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x116_hanspub.png" xlink:type="simple"/></inline-formula>中解出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x117_hanspub.png" xlink:type="simple"/></inline-formula>。稍后信宿通过哈希函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x118_hanspub.png" xlink:type="simple"/></inline-formula>计算出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x119_hanspub.png" xlink:type="simple"/></inline-formula>，与收到的矩阵对比，如果值相同，则说明没有受到污染攻击。反之则受到，那么就丢弃此数据矩阵D。</p><p>对于窃听攻击，由于随机向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x120_hanspub.png" xlink:type="simple"/></inline-formula>是由安全信道传输的，攻击者无法窃听到，即使攻击者窃听到n个线性独立的数据，解码出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x121_hanspub.png" xlink:type="simple"/></inline-formula>，但由于没有得到随机向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x122_hanspub.png" xlink:type="simple"/></inline-formula>，因此无法解码出M，所以该方案防窃听攻击。并且，攻击者虽然知道了哈希函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x123_hanspub.png" xlink:type="simple"/></inline-formula>，但是没有解码出M，因而无法得到正确的哈希值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/4-1730186x124_hanspub.png" xlink:type="simple"/></inline-formula>，所以该方案也防广义污染攻击。然而，信宿只能检测出污染并丢弃整个数据矩阵，而不能进行纠错，这样就延长了传输时间，降低了网络吞吐量。Xu等人[<xref ref-type="bibr" rid="hanspub.16544-ref22">22</xref>] 先是利用稀疏矩阵对信源数据进行矩阵变换达到了防窃听的目的，再利用列表译码法在信宿处进行译码，有效地进行了纠错，也达到了防广义污染攻击的目的，并进一步缩短了传输时间。</p><p>在文献[<xref ref-type="bibr" rid="hanspub.16544-ref5">5</xref>] 的基础上出现了一种增强型的抗万能攻击方案[<xref ref-type="bibr" rid="hanspub.16544-ref23">23</xref>] 。该方案通过计算信宿接收到的数据的线性相关性来判断其是否为非创新数据，再检测其是否为污染数据，只要有一样是，就将其过滤掉，达到了既防熵攻击又防广义污染攻击的目的。</p></sec></sec><sec id="s6"><title>4. 总结</title><p>网络编码从根本上改变了通信网络的中继转发模式，具有巨大的潜力，而安全性作为限制其发展应用的一大制约指标，设计网络编码防御方案已成为一个研究热点。分析总结现有的网络编码防御方案，我们提出了一些改进思路，供读者参考：</p><p>1) 网络编码的最大优势是提高通信网络的有效性，而信道编码是提高可靠性，研究怎样将网络编码和信道编码完美结合则可以同时提高通信网络的有效性和可靠性。</p><p>2) 在防御广义污染攻击时，可以考虑建立集检错和纠错于一体的网络编码防御方案。</p><p>3) 大多数现有的网络编码防御方案只针对一类或两类恶意攻击，或者限制了攻击者的攻击能力。例如，针对拓扑结构设计的NC方案来防御窃听者们也是假设窃听者们不共谋罢了。随着攻击技术的快速发展，我们的防御方案也需要在深度上和广度上快速发展，最好能实现深度和广度的完美结合，达到真正意义上的抗万能攻击。</p><p>4) 一些防御方案需要特殊的网络拓扑结构或额外的安全信道，如方格网络拓扑结构、两个X型网络拓扑结构等。在现实的无线网络系统中，这些拓扑环境都很难满足，所以适用性更强的网络编码防御方案是未来的趋势。</p></sec><sec id="s7"><title>文章引用</title><p>张宇阳,高媛媛,杨保峰,张倩倩,顾耀坤. 网络编码的安全性综述Survey on Security of Network Coding[J]. 无线通信, 2015, 05(06): 126-137. http://dx.doi.org/10.12677/HJWC.2015.56018</p></sec><sec id="s8"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.16544-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Ahlswede, R., Cai, N. and Yeung, R.W. (2000) Network Information Flow. IEEE Transactions on Information Theory, 46, 1204-1216. &lt;br&gt;http://dx.doi.org/10.1109/18.850663</mixed-citation></ref><ref id="hanspub.16544-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Yao, S.X., Chen, J., et al. (2014) A Survey of Security Network Coding toward Various Attacks. 2014 IEEE 13th International Conference on Trust, Security and Privacy in Computing and Communications, Beijing, 24-26 September 2014, 252-259. &lt;br&gt;http://dx.doi.org/10.1109/TrustCom.2014.35</mixed-citation></ref><ref id="hanspub.16544-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">He, M., Chen, L., et al. (2012) Survey on Secure Transmission of Network Coding in Wireless Networks. 2012 International Conference on Computer Science and Service System, Nanjing, 11-13 August 2012, 1216-1219.  
&lt;br&gt;http://dx.doi.org/10.1109/CSSS.2012.308</mixed-citation></ref><ref id="hanspub.16544-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Christos, G. and Pablo, R. (2006) Cooperative Security for Net-work Coding File Distribution. Infocom, 3, 5.</mixed-citation></ref><ref id="hanspub.16544-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Jiang, Y.-X., Fan, Y.-F., Xue, M., et al. (2009) A Self-Adaptive Probabilistic Packet Filter Scheme against Entropy Attacks in Network Coding. Computer Networks, 53, 3089-3101. &lt;br&gt;http://dx.doi.org/10.1016/j.comnet.2009.08.002</mixed-citation></ref><ref id="hanspub.16544-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Newell, A.J., Curtmola, R. and Nita-Rotaru, C. (2012) En-tropy Attacks and Countermeasures in Wireless Network Coding. Proceedings of the Fifth ACM Conference on Security and Privacy in Wireless and Mobile Networks, New York, 16-18 April 2012, 185-196. &lt;br&gt;http://dx.doi.org/10.1145/2185448.2185473</mixed-citation></ref><ref id="hanspub.16544-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Cai, N. and Yeung, R.W. (2002) Network Coding and Error Correction. IEEE Information Theory Workshop, Bangalore, 20-25 October 2002, 119-122.</mixed-citation></ref><ref id="hanspub.16544-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, Z. (2006) Network Error Correction Coding in Packetized Networks. IEEE Information Theory Workshop, Chengdu, 433-437. &lt;br&gt;http://dx.doi.org/10.1109/itw2.2006.323836</mixed-citation></ref><ref id="hanspub.16544-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, Z. (2008) Linear Network Error Correction Codes in Packet Networks. IEEE Transactions on Information Theory, 54, 209-218. &lt;br&gt;http://dx.doi.org/10.1109/TIT.2007.909139</mixed-citation></ref><ref id="hanspub.16544-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Jaggi, S., Langberg, M., Katti, S., Ho, T., Katabi, D. and Medard, M. (2007) Resilient Network Coding in the Presence of Byzantine Adversaries. 26th IEEE International Conference on Computer Communications, Anchorage, 6-12 May 2007, 616-624. &lt;br&gt;http://dx.doi.org/10.1109/INFCOM.2007.78</mixed-citation></ref><ref id="hanspub.16544-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Pandit, V., Jun, J.H. and Agrawal, D.P. (2011) Inherent Security Benefits of Analog Network Coding for the Detection of Byzantine Attacks in Multi-Hop Wireless Networks. Pro-ceedings of the 2011 IEEE 8th International Conference on Mobile Ad Hoc and Sensor Systems (MASS), Valencia, 17-21 October 2011, 697-702.</mixed-citation></ref><ref id="hanspub.16544-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Li, Q., Lui, J.C.S. and Chiu, D.-M. (2012) On the Security and Efficiency of Content Distribution via Network Coding. IEEE Transactions on Dependable and Secure Computing, 9, 211-221.</mixed-citation></ref><ref id="hanspub.16544-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Bin, D., Zhang, S., Qu, Y., Yang, J. and Wang, F. (2010) Orthogonal Vector Based Network Coding against Pollution Attacks in n-Layer Combination Networks. Proceedings of the 5th International ICST Conference on Communications and Networking in China (CHINACOM), Beijing, 22-25 August 2010, 1-5.</mixed-citation></ref><ref id="hanspub.16544-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Cai, N. and Yeung, R.W. (2002) Secure Network Coding. Proceedings of the IEEE International Symposium on Information Theory, Lausanne, 30 June-5 July 2002, 323.</mixed-citation></ref><ref id="hanspub.16544-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Cai, N. and Yeung, R.W. (2011) Secure Network Coding on a Wiretap Network. IEEE Transactions on Information Theory, 57, 424-435. &lt;br&gt;http://dx.doi.org/10.1109/TIT.2010.2090197</mixed-citation></ref><ref id="hanspub.16544-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Cai, N. and Chan, T. (2011) Theory of Secure Network Coding. Proceedings of the IEEE, 99, 421-437. 
&lt;br&gt;http://dx.doi.org/10.1109/JPROC.2010.2094592</mixed-citation></ref><ref id="hanspub.16544-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Bhattad, K. and Narayanan, K.R. (2005) Weakly Secure Network Coding. Proceedings of the First Workshop on Network Coding, Theory, and Applications, Riva del Garda, 7 April 2005, 281-285.</mixed-citation></ref><ref id="hanspub.16544-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">Capar, C. and Goeckel, D. (2012) Network Coding for Facilitating Secrecy in Large Wireless Networks. Proceedings of the 46th Annual Conference on Information Sciences and Systems (CISS), Princeton, 21-23 March 2012, 1-6.</mixed-citation></ref><ref id="hanspub.16544-ref19"><label>19</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, P., Jiang, Y., Lin, C., Fan, Y. and Shen, X. (2010) P-Coding: Secure Network Coding against Eavesdropping Attacks. Proceedings of the IEEE INFOCOM, San Diego, 14-19 March 2010, 1-9.</mixed-citation></ref><ref id="hanspub.16544-ref20"><label>20</label><mixed-citation publication-type="other" xlink:type="simple">武萌, 吴蒙. 防窃听的弱安全网络编码[J]. 计算机技术与发展, 2014, 24(10): 167-169.</mixed-citation></ref><ref id="hanspub.16544-ref21"><label>21</label><mixed-citation publication-type="other" xlink:type="simple">赵佳佳, 任平安. 基于抗窃听和拜占庭攻击的随机网络编码[J]. 计算机科学, 2014, 41(9): 174-177.</mixed-citation></ref><ref id="hanspub.16544-ref22"><label>22</label><mixed-citation publication-type="other" xlink:type="simple">徐光宪, 付晓. 抗万能攻击的安全网络编码[J]. 计算机科学, 2012, 39(8): 88-91.</mixed-citation></ref><ref id="hanspub.16544-ref23"><label>23</label><mixed-citation publication-type="other" xlink:type="simple">杨柳, 钟诚. 一种高效的安全数据包过滤算法[J]. 兰州大学学报(自然科学版), 2012, 48(4): 105-108.</mixed-citation></ref></ref-list></back></article>