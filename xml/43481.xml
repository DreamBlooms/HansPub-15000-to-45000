<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">SEA</journal-id><journal-title-group><journal-title>Software Engineering and Applications</journal-title></journal-title-group><issn pub-type="epub">2325-2286</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/SEA.2021.103044</article-id><article-id pub-id-type="publisher-id">SEA-43481</article-id><article-categories><subj-group subj-group-type="heading"><subject>SEA20210300000_54431214.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  GDGA-BP模型及其在干熄焦烧损控制中的应用
  GDGA-BP Model and Its Application in Control of Dry Quenching Loss
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>汤</surname><given-names>瑞</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>雪健</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>许</surname><given-names>智</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>黄</surname><given-names>斌</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>合肥工业大学，仪器科学与光电工程学院，测量理论与精密仪器安徽省重点实验室，安徽 合肥</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>07</day><month>06</month><year>2021</year></pub-date><volume>10</volume><issue>03</issue><fpage>396</fpage><lpage>405</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  文章提出了一种基于决策基因的改进遗传算法(Gene-Decision Genetic Algorithms, GDGA)，同时优化BP神经网络的隐含层节点数及初始权值、阈值，构建了GDGA-BP模型。首先，在进行遗传算法编码时采取了两种不同的编码方式，设计了决策算子以解决隐含层节点数对编码染色体长度的影响；然后在遗传算法流程中增加了染色体的锁存及调用，保证在迭代时遗传信息不会丢失，并对该算法做出自适应改进；最后通过对干熄焦烧损率的仿真及工艺实验，验证了该模型的优良性能及实用性。
   In this paper, an improved gene-decision genetic algorithm (GDGA) based on Decision Gene is proposed, the number of hidden layer nodes, initial weights and thresholds of BP neural network is optimized, and the GDGA-BP model is constructed. Firstly, two different encoding methods were adopted in the genetic algorithm encoding, and decision operators were designed to solve the in-fluence of the number of hidden layer nodes on the length of encoding chromosomes. Then, the latch and call of chromosome are added to the genetic algorithm process to ensure that the genetic information will not be lost during iteration, and the algorithm is improved adaptatively. Finally, the simulation and technological experiment on the loss rate of dry quenching coke prove the ex-cellent performance and practicability of the model.
 
</p></abstract><kwd-group><kwd>神经网络，遗传算法，决策基因，干熄焦烧损, Neural Network</kwd><kwd> Genetic Algorithm</kwd><kwd> Decision Gene</kwd><kwd> Dry Quenching Loss Rate</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>文章提出了一种基于决策基因的改进遗传算法(Gene-Decision Genetic Algorithms, GDGA)，同时优化BP神经网络的隐含层节点数及初始权值、阈值，构建了GDGA-BP模型。首先，在进行遗传算法编码时采取了两种不同的编码方式，设计了决策算子以解决隐含层节点数对编码染色体长度的影响；然后在遗传算法流程中增加了染色体的锁存及调用，保证在迭代时遗传信息不会丢失，并对该算法做出自适应改进；最后通过对干熄焦烧损率的仿真及工艺实验，验证了该模型的优良性能及实用性。</p></sec><sec id="s2"><title>关键词</title><p>神经网络，遗传算法，决策基因，干熄焦烧损</p></sec><sec id="s3"><title>GDGA-BP Model and Its Application in Control of Dry Quenching Loss<sup> </sup></title><p>Rui Tang, Xuejian Wang, Zhi Xu, Bin Huang<sup>*</sup></p><p>Anhui Province Key Laboratory of Measuring Theory and Precision Instrument, School of instrument Science and Optoelectronics Engineering, Hefei University of Technology, Hefei Anhui</p><p><img src="//html.hanspub.org/file/20-2690533x5_hanspub.png" /></p><p>Received: May 8<sup>th</sup>, 2021; accepted: Jun. 21<sup>st</sup>, 2021; published: Jun. 28<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/20-2690533x6_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>In this paper, an improved gene-decision genetic algorithm (GDGA) based on Decision Gene is proposed, the number of hidden layer nodes, initial weights and thresholds of BP neural network is optimized, and the GDGA-BP model is constructed. Firstly, two different encoding methods were adopted in the genetic algorithm encoding, and decision operators were designed to solve the influence of the number of hidden layer nodes on the length of encoding chromosomes. Then, the latch and call of chromosome are added to the genetic algorithm process to ensure that the genetic information will not be lost during iteration, and the algorithm is improved adaptatively. Finally, the simulation and technological experiment on the loss rate of dry quenching coke prove the excellent performance and practicability of the model.</p><p>Keywords:Neural Network, Genetic Algorithm, Decision Gene, Dry Quenching Loss Rate</p><disp-formula id="hanspub.43481-formula29"><graphic xlink:href="//html.hanspub.org/file/20-2690533x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/20-2690533x8_hanspub.png" /> <img src="//html.hanspub.org/file/20-2690533x9_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>BP神经网络是一种多层前馈网络，算法以梯度下降为基础，主要特点是信号的前向传递及误差的反向传播，其拓扑结构由通过权值、阈值相关联的输入层、隐含层、输出层构建。随着模型预测应用的发展，BP神经网络开始用来解决越来越复杂的工业数据拟合问题，算法局限性也越来越凸显。因此必须设计一种高效的优化方法，来代替经验操作，以找到网络结构及关联参数的最优组合。</p><p>作为人工智能领域的一个重要分支，遗传算法在整体搜索和优化计算方面不依赖于梯度信息，其高度的全局寻优能力更适用于大规模并行分布处理场景。但需注意的是，在与BP神经网络有机结合中，必须对传统遗传算法的编码及解码规则进行改进，以应对在同时优化网络结构及初始参数时，权值及阈值个数因为隐含层节点数发生改变而造成的编码染色体长度变化的问题 [<xref ref-type="bibr" rid="hanspub.43481-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.43481-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.43481-ref3">3</xref>]。</p></sec><sec id="s6"><title>2. BP神经网络及遗传算法概述</title><sec id="s6_1"><title>2.1. BP神经网络相关概述</title><p>根据映射定理可知，单隐含层BP神经网络可以通过调整各设定参数在任意 ε 平方误差范围内对目标函数进行逼近。所以在处理实际问题时，设计单隐含层的BP神经网络在理论上便可以满足应用需求，其空间结构最终只与隐含层节点数相关。</p><p>如图1所示为典型的单隐含层BP神经网络拓扑结构图，其中n为输入层节点数， X 1 , X 2 , ⋯ , X n 是神经网络的输入；m为输出层节点数， Y 1 , Y 2 , ⋯ , Y m 是神经网络的预测输出； w i j 和 c j k 为神经网络的权值， h r 和 o s 为隐含层及输出层的阈值。</p><p>图1. 单隐含层BP神经网络拓扑结构图</p><p>设 为初始设定的最大隐含层节点数，则有表1所示权值、阈值个数关系。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> The number of weights and threshold</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >分类</th><th align="center" valign="middle" >个数</th><th align="center" valign="middle" >符号表示</th></tr></thead><tr><td align="center" valign="middle" >输入层至隐含层权值</td><td align="center" valign="middle" >l ∗ n</td><td align="center" valign="middle" >w 11 w 12 ⋯ w l 1 ⋯ w l n</td></tr><tr><td align="center" valign="middle" >隐含层至输出层权值</td><td align="center" valign="middle" >l ∗ m</td><td align="center" valign="middle" >c 11 c 12 ⋯ c l 1 ⋯ c l m</td></tr><tr><td align="center" valign="middle" >隐含层阈值</td><td align="center" valign="middle" >l</td><td align="center" valign="middle" >h 1 h 2 ⋯ h l</td></tr><tr><td align="center" valign="middle" >输出层阈值</td><td align="center" valign="middle" >m</td><td align="center" valign="middle" >o 1 o 2 ⋯ o m</td></tr></tbody></table></table-wrap><p>表1. 权值、阈值个数</p></sec><sec id="s6_2"><title>2.2. GA遗传算法相关概述</title><p>遗传算法是对自然进化过程的模拟，它的基本原理是将问题的解映射到遗传空间的染色体基因上进行操作，进而寻求问题的解 [<xref ref-type="bibr" rid="hanspub.43481-ref4">4</xref>]，由此整理出GA算法的数学模型为式(1)所示：</p><p>G A = ( c , f , P 0 , P , s , j , b , t ) (1)</p><p>式中，c为编码及解码规则；f为适应度函数，是遗传算法在进化搜索中的唯一依据，用以评价一个解的好坏；P<sub>0</sub>为初始总群，初始化种群为随机产生的种群规模为P的初始个体，既P个染色体；s为选择操作、j为交叉操作、b为变异操作；t为停机条件。既根据设定的条件终止算法的运行并输出最终的结果，可以是迭代次数，也可以是个体适应度值等其它设定条件。</p></sec></sec><sec id="s7"><title>3. 决策基因式遗传算法建模</title><sec id="s7_1"><title>3.1. GDGA的编码及解码</title><p>在编码及解码时，需将表1所示关系考虑在内 [<xref ref-type="bibr" rid="hanspub.43481-ref5">5</xref>]。本课题中GDGA构建的染色体编码第一部分由二进制字符串构成，其包含的遗传信息就是隐含层节点数，称之为决策基因；对于权值、阈值取值如果使用二进制编码，会显得十分冗长，且其解码后在步进区间、精度很低 [<xref ref-type="bibr" rid="hanspub.43481-ref6">6</xref>]，所以第二部分包含权值、阈值取值遗传信息的编码由实数字符串构成，如图2所示。</p><p>图2. 混合编码规则示意图</p><p>为方便编码，此时可令式(2)成立：</p><p>p 1 = log 2 ( l + 1 ) (2)</p><p>p1取正整数，p2、p3、p4、p5的取值与p1相关，关系参考表1。设隐含层节点数解码后值为 l ′ ，则有：</p><p>l ′ = ( δ 1 δ 2 ⋯ δ p 1 ) ( 2 p 1 − 1 ⋮ 2 1 1 ) (3)</p><p>在进行最终的解码前，必须按照一个映射关系进行预解码，以克服隐含层节点数对染色体长度的影响。本课题引入决策算子的概念，来对这种映射关系进行建模。</p><p>根据式(3)进行决策基因解码后得到 l ′ ，可知区间 [ l ′ + 1 , l ] 内的隐含层节点不参与建模，结合图2，染色体中的基因有式(4)所示映射关系，即为决策算子。</p><p>{ x p 1 + l ′ ∗ n + 1 , x p 1 + l ′ ∗ n + 1 , ⋯ , x p 2 = 0 x p 2 + l ′ ∗ m + 1 , x p 2 + l ′ ∗ m + 1 , ⋯ , x p 3 = 0 x p 4 + l ′ + 1 , x p 4 + l ′ + 1 , ⋯ , x p 5 = 0 (4)</p></sec><sec id="s7_2"><title>3.2. 染色体的锁存及调用</title><p>在一个遗传算法流程内，染色体在进行决策算子操作后，其表征权值及阈值部分的基因会根据决策算子置零无用的遗传信息，在满足停机条件前的每一次循环迭代内，被归零的遗传信息都需复原以遗传给下一迭代个体，所以对这些染色体都需进行一次“备份”，目的是在下一次可以方便的进行调用。</p><p>图3. 决策基因式遗传算法流程图</p><p>针对此问题，本文在传统GA算法流程上增加染色体的锁存及调用操作。假设进行交叉、变异操作后的个体为A，则令个体 A ′ = A ， A ′ 即为锁存的染色体，在下一次迭代前，调用 A ′ 即可复原所有被置零的遗传信息，而个体A的遗传信息则会在决策算子操作后被个体 A &#175; 所覆盖，如图3所示。</p></sec><sec id="s7_3"><title>3.3. 算法自适应改进</title><p>1) 适应度函数</p><p>在一般遗传算法中，适应度函数可以取误差平凡和的倒数，如式(5)：</p><p>F = 1 S E = 1 ∑ i = 1 r ( t ˙ i − t i ) 2 (5)</p><p>其中r为测试集的样本个数； t ˙ i 为模型输出的预测值； t i 为测试集的期望值。显然误差平凡和越小，适应度值越大。对于隐含层节点数多的网络，其前期进化较快，且在相同的约束条件下，本课题更期望获得一个结构简单的网络，所以对适应度函数增加指数系数，如式(6)所示：</p><p>F ′ = e − β F = e − l ′ l F (6)</p><p>其中， β 为当前隐含层节点数与最大隐含层节点数的比值，作为强制系数，当适应度值F差不多大小时，当前隐含层节点数越小， β 越小， F ′ 就越大，该个体被选择的可能性亦随之增大。</p><p>2) 交叉、变异操作</p><p>假设种群中两个配对个体为a、b，易知决策基因部分只需采用单点交叉及变异即可，而实数编码部分的初始权值及阈值则可做自适应改进。</p><p>A、交叉操作。采用非一致交叉，并引入自适应参数，如式(7)、(8)所示。对参数 λ 进行了指数变化， f a 、 f b 分别为个体a、b的适应度值，在进化初期， f A 较小，参数值 λ 较大，算法的搜索空间也相应较大；在进化后期， f A 较大，参数值 λ 较小，则可以驱使种群在最优点附近聚集 [<xref ref-type="bibr" rid="hanspub.43481-ref7">7</xref>]。</p><p>{ f A = max ( f a , f b ) λ = e − f A (7)</p><p>{ a ′ j = λ a j + ( 1 − λ ) b j b ′ j = λ b j + ( 1 − λ ) a j         p 1 &lt; j ≤ p 5 (8)</p><p>B、变异操作。其变异率如式(9)：</p><p>P m n = k ( f max − f a ) / ( f max − f min ) (9)</p><p>式中 P m n 为要变异个体 a n 的变异率， p 1 &lt; n ≤ p 5 ；k为 [ 0 , 1 ] 之间的常数， f max 为种群中最大的适应度， f a 是要变异个体的适应度， f min 是种群的平均适应度。规定区间 [ X 1 , X 2 ] ， X 1 、 X 2 取值如式(10)、(11)所示：</p><p>X 1 = x min + x max + x min 2 ∗ e − p m n (10)</p><p>X 2 = x max − x max + x min 2 ∗ e − p m n (11)</p><p>在区间 [ X 1 , X 2 ] 中任意取 A n 代替 a n 完成变异操作， x max 、 x min 为该基因编码时规定的取值上下限。</p></sec></sec><sec id="s8"><title>4. 工程应用</title><sec id="s8_1"><title>4.1. 干熄焦烧损率及数据获取</title><p>干熄焦(coke dry quenching)是一种通过循环气体的换热作用将进入干熄炉的炽热焦炭冷却后排出的系统，烧损率作为评价该系统的一个重要经济参数，是焦炭在干熄炉内因氧化、碳溶等反应造成的质量损失的量化数据 [<xref ref-type="bibr" rid="hanspub.43481-ref8">8</xref>]。若能准确的预测烧损率的数值并做相应的工艺控制，可以创造巨大的效益。干熄焦烧损率定义公式如式(12)所示，其中 ϕ h 为统计时间内平均烧损率，%； K I 为统计时间内入干熄炉前焦炭计量值； K 0 为统计时间内干熄炉排出焦炭累计值。</p><p>ϕ h = ( K I − K 0 ) / K I ∗ 100 % (12)</p><p>根据工艺原理挑选18组输入数据如表2所示。本课题的数据采集自铜陵某焦化厂190 t/h干熄焦现场，剔除失真数据后，选取1000组作为训练集数据，200组作为测试集数据。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Input paramete</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >序号</th><th align="center" valign="middle" >变量</th><th align="center" valign="middle" >工艺约束区间</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >H<sub>2 </sub>(%)</td><td align="center" valign="middle" >0~3</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >O<sub>2 </sub>(%)</td><td align="center" valign="middle" >0~1</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >CO (%)</td><td align="center" valign="middle" >3~5</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >CO<sub>2 </sub>(%)</td><td align="center" valign="middle" >12~18</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >导入空气阀开度(%)</td><td align="center" valign="middle" >0~100</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >导入空气流量(m<sup>3</sup>/h)</td><td align="center" valign="middle" >18,000~25,000</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >循环风量(m<sup>3</sup>/h)</td><td align="center" valign="middle" >≤285,000</td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >排焦温度(℃)</td><td align="center" valign="middle" >≤200</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >锅炉入口气体(℃)</td><td align="center" valign="middle" >880~960</td></tr><tr><td align="center" valign="middle" >10</td><td align="center" valign="middle" >锅炉出口气体(℃)</td><td align="center" valign="middle" >160~180</td></tr><tr><td align="center" valign="middle" >11</td><td align="center" valign="middle" >干熄炉入口气体(℃)</td><td align="center" valign="middle" >150~170</td></tr><tr><td align="center" valign="middle" >12</td><td align="center" valign="middle" >T3温度平均(℃)</td><td align="center" valign="middle" >160~180</td></tr><tr><td align="center" valign="middle" >13</td><td align="center" valign="middle" >T4温度平均(℃)</td><td align="center" valign="middle" >120~140</td></tr><tr><td align="center" valign="middle" >14</td><td align="center" valign="middle" >给水流量(t/h)</td><td align="center" valign="middle" >100~120</td></tr><tr><td align="center" valign="middle" >15</td><td align="center" valign="middle" >蒸汽温度(℃)</td><td align="center" valign="middle" >440~455</td></tr><tr><td align="center" valign="middle" >16</td><td align="center" valign="middle" >蒸发流量(t/h)</td><td align="center" valign="middle" >100~120</td></tr><tr><td align="center" valign="middle" >17</td><td align="center" valign="middle" >料位(m)</td><td align="center" valign="middle" >&lt;16</td></tr><tr><td align="center" valign="middle" >18</td><td align="center" valign="middle" >排焦量(t/h)</td><td align="center" valign="middle" >60~190</td></tr></tbody></table></table-wrap><p>表2. 输入参数</p></sec><sec id="s8_2"><title>4.2. 仿真对比</title><p>输入输出层参数已确定，根据经验公式，一般在区间[4, 15]内取隐含层节点数建立单隐含层BP神经网络，考虑到GDGA的编码方式，结合式(2)，取隐含层最大节点数15，GDGA优化后节点数为9。为了对比突出算法优化的有效性，取隐含层节点数2、9、14分别建立BP神经网络进行训练，设定迭代次数500，目标误差0.001，训练周期如表3所示，其中BP-2模型在迭代500次后未收敛至误差范围之内，未统计。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Training period of different network model</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >网络模型</th><th align="center" valign="middle" >BP-4</th><th align="center" valign="middle" >BP-9</th><th align="center" valign="middle" >BP-14</th><th align="center" valign="middle" >GDGA-BP</th></tr></thead><tr><td align="center" valign="middle" >隐层节点数</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >9</td></tr><tr><td align="center" valign="middle" >训练周期</td><td align="center" valign="middle" >347</td><td align="center" valign="middle" >125</td><td align="center" valign="middle" >214</td><td align="center" valign="middle" >72</td></tr></tbody></table></table-wrap><p>表3. 不同网络模型的训练周期</p><p>从表中可以看出，GDGA-BP模型训练周期最短，其次是具有相同网络结构的BP-9模型。以测试集分别对BP-4、BP-9、BP-14、GDGA-BP模型进行测试，其预测结果如图(4)所示，可见GDGA-BP模型的输出最贴近期望输出，误差最小。</p><p>图4. MATLAB仿真验证</p><p>为了更直观的展示几个模型的拟合能力，选择预测输出与期望的平均绝对误差、均方误差、均方根误差和平均百分比误差来评价模型，评价结果见表4。</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Simulation error calculation result</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >预测模型</th><th align="center" valign="middle" >BP-4</th><th align="center" valign="middle" >BP-9</th><th align="center" valign="middle" >BP-14</th><th align="center" valign="middle" >GDGA-BP</th></tr></thead><tr><td align="center" valign="middle" >E<sub>MAE</sub></td><td align="center" valign="middle" >0.274</td><td align="center" valign="middle" >0.245</td><td align="center" valign="middle" >0.255</td><td align="center" valign="middle" >0.239</td></tr><tr><td align="center" valign="middle" >E<sub>MSE</sub></td><td align="center" valign="middle" >0.114</td><td align="center" valign="middle" >0.115</td><td align="center" valign="middle" >0.104</td><td align="center" valign="middle" >0.079</td></tr><tr><td align="center" valign="middle" >E<sub>RMSE</sub></td><td align="center" valign="middle" >0.338</td><td align="center" valign="middle" >0.339</td><td align="center" valign="middle" >0.323</td><td align="center" valign="middle" >0.281</td></tr><tr><td align="center" valign="middle" >E<sub>MAPE</sub></td><td align="center" valign="middle" >0.131</td><td align="center" valign="middle" >0.121</td><td align="center" valign="middle" >0.122</td><td align="center" valign="middle" >0.110</td></tr></tbody></table></table-wrap><p>表4. 仿真误差计算结果</p><p>通过仿真误差计算结果对比可以看出，GDGA-BP模型具有更快的收敛速率及预测精度，算法性能更加优越。</p></sec><sec id="s8_3"><title>4.3. 工艺试验</title><p>图5. 硬件实现示意图</p><p>为验证建立的GDGA-BP模型对生产工艺的指导作用，搭建硬件实验平台如图5所示。图中①为干熄焦集中控制系统，②为烧损率测算系统，其由上位机及服务器构成，储存、运算预测模型，③为数据交互设施。实验平台实物如图6所示：</p><p>图6. 硬件平台实物图</p><p>实验平台搭建完成后，通过数据交互，将预测值显示在干熄焦中控上位机画面上，提供给操作人员参考。为验证模型的实用性，使用两组数据进行对比，对比结果见图7(a)：第一组为红色数据，既观测到但未进行工艺调整的数据，均值为2.06%；第二组为绿色数据，既观测到且进行工艺调整的数据，均值为1.63%。两组数据都为每分钟记录一次，共240组。</p><p>图7. 模型应用数据对比图</p><p>由图可见，调整过后的烧损率数值明显低于未调整的观测值，绿色线的波动更加频繁便是工艺调整带来的影响。图7(b)为调整值与观测值的差值曲线，其平均值为−0.43，既在该统计对比时段内烧损率平均降低了0.43%。</p></sec></sec><sec id="s9"><title>5. 结论</title><p>通过对BP神经网络隐含层节点数及权值、阈值关系的分析，提出了基于决策基因的遗传算法并构建了GAGD-BP神经网络模型。仿真实验结果表明，该算法可同时优化BP神经网络的结构及初始权值、阈值，有效提高BP算法的性能。在干熄焦烧损率测算的硬件实验中，该模型亦实时、准确的测算出了烧损率的数值并指导工艺操作降低了焦炭燃烧损失。</p><p>另外在模型的训练过程中，有过拟合的现象出现，这是因为在输入层变量的选择中，只参考了工艺原理，不可避免的引入了一些无关变量，且变量之间不相互独立。如何有效的对输入变量进行筛选，并应用到GDGA-BP模型中亦是下一个研究方向。</p></sec><sec id="s10"><title>基金项目</title><p>国家重点研发计划：2019YFC1908004。</p></sec><sec id="s11"><title>文章引用</title><p>汤 瑞,王雪健,许 智,黄 斌. GDGA-BP模型及其在干熄焦烧损控制中的应用GDGA-BP Model and Its Application in Control of Dry Quenching Loss[J]. 软件工程与应用, 2021, 10(03): 396-405. https://doi.org/10.12677/SEA.2021.103044</p></sec><sec id="s12"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.43481-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">张代磊, 黄大年, 张冲. 基于遗传算法优化的BP神经网络在密度界面反演中的应用[J]. 吉林大学学报(地球科学版), 2017, 47(2): 580-588.</mixed-citation></ref><ref id="hanspub.43481-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">刘亚丽, 李英娜, 李川. 基于遗传算法优化BP神经网络的线损计算研究[J]. 计算机应用与软件, 2019, 36(3): 72-75.</mixed-citation></ref><ref id="hanspub.43481-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">曾小华, 李广含, 宋大凤, 李胜, 朱志成. 基于遗传算法优化的BP神经网络侧翻预警算法[J]. 华南理工大学学报(自然科学版), 2017, 45(2): 30-38.</mixed-citation></ref><ref id="hanspub.43481-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Duan, X.C. (2019) Automatic Generation and Evolution of Personalized Curriculum Based on Genetic Algorithm. International Journal of Emerging Technologies in Learning (iJET), 14, 15-28. 
&lt;br&gt;https://doi.org/10.3991/ijet.v14i12.10812</mixed-citation></ref><ref id="hanspub.43481-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Yan, C., et al. (2020) Improved Adaptive Genetic Algorithm for the Vehicle Insurance Fraud Identification Model Based on a BP Neural Network. Theoretical Computer Science, 817, 12-23. &lt;br&gt;https://doi.org/10.1016/j.tcs.2019.06.025</mixed-citation></ref><ref id="hanspub.43481-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">韩明红, 李凡, 邓家禔. 一种优化神经网络拓扑结构的主从式遗传算法[J]. 航空制造技术, 2004(2): 68-70+77.</mixed-citation></ref><ref id="hanspub.43481-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Song, Y.Y., et al. (2020) The Method of BP Algorithm for Genetic Simulated Annealing Algorithm in Fault Line Selection. Journal of Physics: Conference Series, 1650, Article ID: 032187.  
&lt;br&gt;https://doi.org/10.1088/1742-6596/1650/3/032187</mixed-citation></ref><ref id="hanspub.43481-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">吕锐, 李庆奎. 焦炭烧损率测定及降低烧损率措施[J]. 燃料与化工, 2018, 49(3): 22-24.</mixed-citation></ref></ref-list></back></article>