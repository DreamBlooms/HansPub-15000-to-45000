<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2020.98158</article-id><article-id pub-id-type="publisher-id">AAM-37272</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20200800000_86602782.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  跳–扩散模型参数校准的极大似然法
  The Maximum Likelihood Method for the Calibration of Parameter under Jump-Diffusion Models
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>贾</surname><given-names>翔宇</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>唐山学院基础教学部，河北 唐山</addr-line></aff><pub-date pub-type="epub"><day>04</day><month>08</month><year>2020</year></pub-date><volume>09</volume><issue>08</issue><fpage>1338</fpage><lpage>1345</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    首先用蒙特卡洛罗法模拟生成股票的价格路径，然后对生成的路径建立对数似然函数。假设跳–扩散模型的股票市场价格与模型价格之间存在高斯误差，构造权重函数，通过线性搜索的方法求解加权极大似然函数的最大化，从而得到波动率的校准。最后给出数值模拟实验，实验结果表明了该算法的可行性。
    First, the Monte Carlo method is given to simulate the generation of the stock price path, and then the logarithmic likelihood function is established for the generated path. Assuming that there is a Gauss error between the stock market price and the model price, we construct the weight function and maximize the weighted maximum likelihood function using the linear search method, thus the calibration of volatility is obtained. At last, the numerical simulation experiments are given, the experimental results show the feasibility of the algorithm. 
  
 
</p></abstract><kwd-group><kwd>跳–扩散模型，蒙特卡罗法，加权极大似然法, Jump-Diffusion Models</kwd><kwd> Monte Carlo Method</kwd><kwd> Weighted Maximum Likelihood Method</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>跳–扩散模型参数校准的极大似然法</title><p>贾翔宇</p><p>唐山学院基础教学部，河北 唐山</p><p>收稿日期：2020年8月3日；录用日期：2020年8月19日；发布日期：2020年8月26日</p><disp-formula id="hanspub.37272-formula78"><graphic xlink:href="//html.hanspub.org/file/28-2621278x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>首先用蒙特卡洛罗法模拟生成股票的价格路径，然后对生成的路径建立对数似然函数。假设跳–扩散模型的股票市场价格与模型价格之间存在高斯误差，构造权重函数，通过线性搜索的方法求解加权极大似然函数的最大化，从而得到波动率的校准。最后给出数值模拟实验，实验结果表明了该算法的可行性。</p><p>关键词 :跳–扩散模型，蒙特卡罗法，加权极大似然法</p><disp-formula id="hanspub.37272-formula79"><graphic xlink:href="//html.hanspub.org/file/28-2621278x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/28-2621278x7_hanspub.png" /> <img src="//html.hanspub.org/file/28-2621278x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>随着计量经济理论的发展，各种参数估计方法不断涌现出来，极大似然法是求估计的一种方法，这一方法首先由德国数学家Gauss于1821年提出，但未得到足够的重视。英国的统计学家Fisher在1922年的论文“On the mathematical foundations of theoretical statistics, reprinted in Contributions to Mathematical Statistics” [<xref ref-type="bibr" rid="hanspub.37272-ref1">1</xref>] 中再次提出了极大似然法的思想，并且首先探讨了这种方法的一些性质，如一致性，渐进正态性，渐进有效性和不变性等。极大似然估计这一名称也是Fisher命名的，这是一种目前仍然得到广泛应用的方法。</p><p>人们常用极大似然法来估计跳–扩散模型，这也是统计学里很经典的方法。但在实现操作过程中，极大似然法会有很大难度，因为只有少数扩散过程的似然函数具有封闭形式，如Black-Scholes-Merton (1973) [<xref ref-type="bibr" rid="hanspub.37272-ref2">2</xref>]、Vasicek (1977) [<xref ref-type="bibr" rid="hanspub.37272-ref3">3</xref>]、CIR (1985) [<xref ref-type="bibr" rid="hanspub.37272-ref4">4</xref>] 等模型，而只有具有封闭形式的似然函数才可用来估计，这就引发了扩散模型的转移密度函数的研究。求解转移密度函数的方法一般分为两类，一类是直接将扩散模型离散化并假设模型的参差符合正态分布，在这种假设条件下，模型的参数估计可以直接通过求解非线性计量经济模型参数的方法求得，如Euler法、Nowman法等。另一类是从扩散模型满足的偏微分方程入手，通过数值方法求解偏微分方程来获得转移密度函数的近似解，如SMLE法、Crank-Nicoslon法等。</p><p>本文中，我们讨论了跳–扩散模型参数校准问题的极大似然法。首先模拟股票价格路径的生成，然后对生成的路径建立对数似然函数，并构造权重函数，利用加权极大似然法校准模型中的波动率，最后数值模拟试验表明了该算法的可行性。</p></sec><sec id="s4"><title>2. 模型的建立</title><p>在风险中性测度下，假设股票价格 S t 满足如下随机微分方程</p><p>d S t S t = ( μ − λ κ ) d t + σ d W t + ( η − 1 ) d Q t , (1)</p><p>其中 μ 是漂移率， σ 是股票的波动率， W t 是标准布朗运动， d Q t 是一个强度为 λ 的泊松过程， η − 1 是股票发生跳跃时的相对跳跃高度， κ = E [ η − 1 ] ，其中 E [ ⋅ ] 表示期望算子。</p><p>在Merton跳–扩散模型下， η 服从对数正态分布，若用 g ( η ) 表示 η 的概率密度函数，则有</p><p>g ( η ) = 1 2 π σ J η exp ( − ( log η − ν ) 2 2 σ J 2 ) , (2)</p><p>其中 κ = E [ η − 1 ] = exp ( ν + σ J 2 2 ) − 1 ， ν 和 σ J 表示跳跃的均值和方差。</p><p>而在Kou跳–扩散模型下， g ( η ) 满足对数双指数分布</p><p>g ( η ) = p α 1 e − α 1 η H ( η ) + q α 2 e α 2 η H ( − η ) , (3)</p><p>其中 α 1 &gt; 1 ， α 2 , p , q &gt; 0 ， p + q = 1 ， H ( η ) 是赫维赛德阶跃函数。</p><p>随机微分方程(1)的解为</p><p>S ( t ) = S ( 0 ) e ( a − 1 2 σ 2 ) t + σ W ( t ) ∏ j = 1 Q ( t ) η j , (4)</p><p>其中令 a = μ − λ κ 。</p></sec><sec id="s5"><title>3. 模拟样本路径的蒙特卡洛方法</title><p>固定时间 0 = t 0 &lt; t 1 &lt; ⋯ &lt; t n ，并令 Δ t i = t i + 1 − t i , i = 0 , 1 , ⋯ , n − 1 。Glasserman (2004) [<xref ref-type="bibr" rid="hanspub.37272-ref5">5</xref>] 给出了模拟带跳的几何布朗扩散过程的方法。</p><p>假设Q是一个泊松过程， η 1 , η 2 , ⋯ 独立同分布， Q , W 和 { η 1 , η 2 , ⋯ } 相互独立。为了模拟 S t 在时刻 t 1 , ⋯ , t n 的值，我们推广(4)式为</p><p>S ( t i + 1 ) = S ( t i ) e ( a − 1 2 σ 2 ) Δ t i + σ [ W ( t i + 1 ) − W ( t i ) ] ∏ j = Q ( t i ) + 1 Q ( t i + 1 ) η j , (5)</p><p>若 Q ( t i + 1 ) = Q ( t i ) ，则乘积项 ∏ j = Q ( t i ) + 1 Q ( t i + 1 ) η j = 1 ，即退化为几何布朗运动。令 x ( t ) = log S ( t ) ，则有</p><p>x i + 1 = x i + ( a − 1 2 σ 2 ) Δ t i + σ ( W i + 1 − W i ) + ∑ j = Q i + 1 Q i + 1 log η j , (6)</p><p>其中 x i = x ( t i ) ， W i = W ( t i ) ， Q i = Q ( t i ) 。</p><p>Merton跳–扩散模型，一般模拟(6)式从时刻 t i 到 t i + 1 的方法有以下步骤：</p><p>1) 生成服从标准正态分布的随机变量 Z ( Z ~ N ( 0 , 1 ) ) ；</p><p>2) 生成服从参数为 λ Δ t i 的泊松分布的随机变量Q；如果 Q = 0 ，则令 M = 0 ，并跳到第4步；</p><p>3) 按照 η 的分布生成 log η 1 , log η 2 , ⋯ , log η Q ，令 M = log η 1 + log η 2 + ⋯ + log η Q ；</p><p>4) 令</p><p>x i + 1 = x i + ( a − 1 2 σ 2 ) Δ t i + σ Δ t i Z + M . (7)</p><p>这种方法充分依赖于泊松过程的两个性质：一是增量 Q i + 1 − Q i 服从均值为 λ Δ t 的泊松过程；二是具有独立增量，即 Q i + 1 − Q i 与 Q i 独立。作进一步的假设，设 η j 服从对数正态分布 L N ( ν , σ J 2 ) ，那么 log η j ~ N ( ν , σ J 2 ) ，则有</p><p>∑ j = 1 n log η j ~ N ( n ν , n σ J 2 ) = n ν + σ J n N ( 0 , 1 ) . (8)</p><p>则可以替换第3步为</p><p>3’) 生成 Z 2 ~ N ( 0 , 1 ) ，设定 M = ν Q + σ J Q Z 2 。</p><p>参考Ait-Sahalia (2002) [<xref ref-type="bibr" rid="hanspub.37272-ref6">6</xref>]，我们模拟Merton跳–扩散模型的路径生成时，选取参数为 a = 0.2 , σ = 0.3 , λ = 1 / 3 , ν = 0 , σ J = 0.2 , x 0 = 0 ，我们对该过程进行一次样本路径的模拟，并令 n = 1000 , Δ t = 1 / 52 ，见图1。</p><p>图1. 一次样本路径的模拟实现</p><p>而对于Kou跳–扩散模型， log η j 满足伽马分布(实际上是指数分布)，且 log η j 大于零的概率为p，小于零的概率为q。在这种情况下，当泊松随机变量 Q = n 时， log η j 取正值的个数满足参数为n和p的二项分布。因此第3步应改为</p><p>3a’) 生成 K ~ b ( Q , p ) ，其中 b ( Q , p ) 表示以n和p为参数的二项分布；</p><p>3b’) 生成 R 1 ~ G a ( K α 1 , α 2 ) ， R 2 ~ G a ( ( Q − K ) α 1 , α 2 ) ，令 M = R 1 − R 2 。</p><p>在第3b’步中，若 K = 0 ，则令 R 1 = 0 ；若 K = Q ，则令 R 2 = 0 。在第3a’步中，当 Q = n 时，二项分布K的密度函数为</p><p>P ( K = k ) = n ! k ! ( n − k ) ! p k q n − k ,     k = 0 , 1 , ⋯ , n (9)</p></sec><sec id="s6"><title>4. 跳–扩散模型参数校准的加权极大似然法</title><p>Press (1967) [<xref ref-type="bibr" rid="hanspub.37272-ref7">7</xref>] 已经证明，对于Merton跳–扩散模型， x t 的转移概率密度函数是一个独立的泊松过程和一个正态概率密度函数的合成，即为</p><p>f M ( x i + 1 | x i , σ ) = ∑ j = 0 ∞ ( λ Δ t ) j e − λ Δ t j ! ⋅ 1 2 π ( σ 2 Δ t + j σ J 2 ) ⋅ exp { − ( x i + 1 − x i − a Δ t + 1 2 σ 2 Δ t − j ν ) 2 2 ( σ 2 Δ t + j σ J 2 ) } , (10)</p><p>其中j表示发生跳跃的次数。对于 { x i } , i = 1 , ⋯ , n ，可得对数似然函数为</p><p>L M e r t o n ( σ ) = log f M ( x 0 , σ ) + ∑ i = 0 n − 1 log f M ( x i + 1 | x i , σ ) . (11)</p><p>而对于Kou跳–扩散模型， x t 的转移概率密度函数为</p><p>f K ( x i + 1 | x i , σ ) = ∑ j = 0 L L ! j ! ( L − j ) ! p j q L − j 1 2 π ( σ 2 Δ t − j ( Q − K ) α 1 α 2 2 + j K α 1 α 2 2 )     ⋅ exp { − ( x i + 1 − x i − a Δ t + 1 2 σ 2 Δ t + j ( Q − K ) α 1 α 2 − j K α 1 α 2 ) 2 2 ( σ 2 Δ t − j ( Q − K ) α 1 α 2 2 + j K α 1 α 2 2 ) } , (12)</p><p>其中 L = 0 , 1 , ⋯ 。对于 { x i } , i = 1 , ⋯ , n ，可得对数似然函数为</p><p>L K o u ( σ ) = log f K ( x 0 , σ ) + ∑ i = 0 n − 1 log f K ( x i + 1 | x i , σ ) . (13)</p><p>由于当观察次数足够多时，似然函数中第一项 log f ( x 0 , σ ) 的权重很小，因此在实际的估计过程中往往省略。求似然函数 L ( σ ) 的最大化，即可得到参数的估计值。对于j的取值，Ball和Torous (1985) [<xref ref-type="bibr" rid="hanspub.37272-ref8">8</xref>] 发现：在 j = 10 处截断可以得到精确的极大似然估计量。</p><p>由于在实际情况中，我们获取的时间序列数据都包含着观测误差和市场噪音，因此我们假设股票的市场观测值 S i M 与模型所得价格<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/28-2621278x100_hanspub.png" xlink:type="simple"/></inline-formula>之间存在一定的高斯误差，即</p><p>S ( t i , σ ) = S i M + u i ,     i = 0 , 1 , … , n (14)</p><p>其中 S ( t i , σ ) 是在参数 σ 已知的条件下，通过模拟路径生成的值， u i ~ N ( 0 , ϕ i ) ， ϕ i 是已知的。</p><p>因此，为了使得估计得到的参数能更好地拟合市场的动态过程，构造如下权重函数</p><p>g ( x i + 1 | x i , σ ) = 1 2 π ϕ i + 1 ⋅ exp { − ( S i + 1 − S i + 1 M ) 2 2 ϕ i + 1 } ,     i = 0 , 1 , ⋯ , n − 1 (15)</p><p>综合(11)和(15)式，并省略常数项，我们得到Merton跳–扩散模型的加权对数似然函数为</p><p>F M e r t o n ( σ ) = ∑ i = 0 n − 1 log f M ( x i + 1 | x i , σ ) ⋅ g ( x i + 1 | x i , σ ) = ∑ i = 0 n − 1 log { ∑ j = 0 ∞ ( λ Δ t ) j e − λ Δ t j ! ⋅ 1 2 π ( σ 2 Δ t + j σ J 2 ) ⋅ exp { − ( x i + 1 − x i − a Δ t + 1 2 σ 2 Δ t − j ν ) 2 2 ( σ 2 Δ t + j σ J 2 ) } }         ⋅ 1 2 π ϕ i + 1 ⋅ exp { − ( S i + 1 − S i + 1 M ) 2 2 ϕ i + 1 } . (16)</p><p>综合(13)和(15)式，并省略常数项，我们得到Kou跳–扩散模型的加权对数似然函数为</p><p>F K o u ( σ ) = ∑ i = 0 n − 1 log f K ( x i + 1 | x i , σ ) ⋅ g ( x i + 1 | x i , σ ) = ∑ i = 0 n − 1 log { ∑ j = 0 L L ! j ! ( L − j ) ! p j q L − j 1 2 π ( σ 2 Δ t − j ( Q − K ) α 1 α 2 2 + j K α 1 α 2 2 ) }         ⋅ exp { − ( x i + 1 − x i − a Δ t + 1 2 σ 2 Δ t + j ( Q − K ) α 1 α 2 − j K α 1 α 2 ) 2 2 ( σ 2 Δ t − j ( Q − K ) α 1 α 2 2 + j K α 1 α 2 2 ) }         ⋅ 1 2 π ϕ i + 1 ⋅ exp { − ( S i + 1 − S i + 1 M ) 2 2 ϕ i + 1 } . (17)</p><p>通过求解 F ( σ ) 的最大化( F ( σ ) 表示 F M e r t o n ( σ ) 和 F K o u ( σ ) )，便可以得到参数 σ 的估计，即</p><p>σ * = arg max F ( σ ) . (18)</p><p>从 F ( σ ) 的表达式可以看出，加入权重函数(15)的目的是对于能够较好拟合市场期权价格的点，赋予的权重大一些，而对于那些与市场期权价格观测值差距较大的点，则赋予的权重要小一些。</p></sec><sec id="s7"><title>5. 数值实验</title><p>下面给出算法的具体过程。</p><p>首先由第三节的算法步骤生成一条样本路径，即生成 x i , i = 1 , 2 , ⋯ , n 的值，同时算得 S i 和 S i M 的值，然后通过线性搜索的方法求解(18)式，并得到参数 σ ^ 的估计值。由于生成 x i 和 S i M 时都有随机项的存在，因此我们引入蒙特卡洛方法进行H次模拟，最终得到 σ 的平均估计值 σ &#175; ，并定义均方根误差为</p><p>RMSE ( σ ) = ∑ i = 1 H ( σ ^ i − σ 0 ) 2 / H ,</p><p>其中 σ ^ i 为校准所得到的数值解。</p><p>对于Merton跳–扩散模型，我们选取参数 a = 0.2 , λ = 1 3 , ν = 0 , σ J = 0.2 , x 0 = 0 ，选取等距的离散时间点，令 Δ t = 0.01 ，并假设参数 σ 的真实值为 σ 0 = 0.3 。</p><p>从表1可以看出，当 ϕ = 10 − 3 S 时，波动率估计值 σ ^ 的平均值 σ &#175; 在 n = 10 时得到的波动率估计值的均值有一定的误差，并且均方根误差(RMSE)较大，而在 n = 50 , 100 , 200 三种情况下都能得到较好的估计，其中n表示模拟生成路径上点的个数。在这四种情况下，波动率估计值的均方根误差(RMSE)会随着n的增大而减小，并且减小到一定程度后，就只会缓慢减小。这表明随着路径上点的个数的增加，我们估计得到的波动率的值更稳定趋于真实值，但增加到一定程度，效果就会减慢。</p><p>表2表明，当 n = 100 时，在 ϕ = 10 − 2 S , 10 − 3 S , 10 − 4 S 三种情况下波动率估计值 σ ^ 的平均值 σ &#175; 与均方根误差的数值结果。实验结果表明，三种情况下得到的均值和均方根误差相差不大，都能得到较好的估计，且均方根误差都较小。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> The mean and root mean square error of volatility calibration under Merton jump-diffusion model with different </title></caption><table><tbody><thead><tr><th align="center" valign="middle"  colspan="2"   rowspan="2"  >ϕ = 10 − 3 S</th><th align="center" valign="middle"  colspan="4"  >n</th></tr></thead><tr><td align="center" valign="middle" >10</td><td align="center" valign="middle" >50</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >200</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >σ</td><td align="center" valign="middle" >Mean</td><td align="center" valign="middle" >0.3125</td><td align="center" valign="middle" >0.2967</td><td align="center" valign="middle" >0.3027</td><td align="center" valign="middle" >0.2980</td></tr><tr><td align="center" valign="middle" >RMSE</td><td align="center" valign="middle" >0.0787</td><td align="center" valign="middle" >0.0342</td><td align="center" valign="middle" >0.0238</td><td align="center" valign="middle" >0.0161</td></tr></tbody></table></table-wrap><p>表1. 不同n下，Merton跳–扩散模型波动率校准均值及均方根误差</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> The mean and root mean square error of volatility calibration under Merton jump-diffusion model with different </title></caption><table><tbody><thead><tr><th align="center" valign="middle"  colspan="2"   rowspan="2"  >n = 100</th><th align="center" valign="middle"  colspan="3"  >ϕ</th></tr></thead><tr><td align="center" valign="middle" >ϕ = 10 − 2 S</td><td align="center" valign="middle" >ϕ = 10 − 3 S</td><td align="center" valign="middle" >ϕ = 10 − 4 S</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >σ</td><td align="center" valign="middle" >Mean</td><td align="center" valign="middle" >0.3048</td><td align="center" valign="middle" >0.3027</td><td align="center" valign="middle" >0.2978</td></tr><tr><td align="center" valign="middle" >RMSE</td><td align="center" valign="middle" >0.0241</td><td align="center" valign="middle" >0.0238</td><td align="center" valign="middle" >0.0219</td></tr></tbody></table></table-wrap><p>表2. 不同f下，Merton跳–扩散模型波动率校准均值及均方根误差</p><p>对于Kou跳–扩散模型，我们选取参数 a = 0.2 , λ = 1 3 , α 1 = 3.0456 , α 2 = 3.0775 , p = 0.3445 , x 0 = 0 ，选取等距的离散时间点，令 Δ t = 0.01 ，并假设参数 σ 的真实值为 σ 0 = 0.3 。</p><p>从表3可以看出，当 ϕ = 10 − 3 S 时，波动率估计值 σ ^ 的平均值 σ &#175; 在 n = 10 时，得到的估计会有一定的误差，并且均方根误差(RMSE)较大，而当 n = 50 , 100 , 200 时，能得到波动率 σ 的较好估计，且其均方根误差(RMSE)会随着n的增大而减小，并且减小到一定程度后，就只会缓慢减小。这表明随着路径上点的个数的增加，我们估计得到的波动率的值更稳定趋于真实值，但增加到一定程度，效果就会减慢。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> The mean and root mean square error of volatility calibration under Kou jump-diffusion model with different </title></caption><table><tbody><thead><tr><th align="center" valign="middle"  colspan="2"   rowspan="2"  >ϕ = 10 − 3 S</th><th align="center" valign="middle"  colspan="4"  >n</th></tr></thead><tr><td align="center" valign="middle" >10</td><td align="center" valign="middle" >50</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >200</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >σ</td><td align="center" valign="middle" >Mean</td><td align="center" valign="middle" >0.2881</td><td align="center" valign="middle" >0.2997</td><td align="center" valign="middle" >0.2985</td><td align="center" valign="middle" >0.3012</td></tr><tr><td align="center" valign="middle" >RMSE</td><td align="center" valign="middle" >0.0682</td><td align="center" valign="middle" >0.0298</td><td align="center" valign="middle" >0.0246</td><td align="center" valign="middle" >0.0242</td></tr></tbody></table></table-wrap><p>表3. 不同n下，Kou跳–扩散模型波动率校准均值及均方根误差</p><p>表4表明，当 n = 100 时，在 ϕ = 10 − 2 S , 10 − 3 S , 10 − 4 S 三种情况下波动率估计值 σ ^ 的平均值 σ &#175; 与均方根误差的数值结果。实验结果表明，三种情况下得到的均值和均方根误差相差不大，都能得到较好的估计，并且每次的估计值基本都稳定在真值附近。</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> The mean and root mean square error of volatility calibration under Kou jump-diffusion model with different </title></caption><table><tbody><thead><tr><th align="center" valign="middle"  colspan="2"   rowspan="2"  >n = 100</th><th align="center" valign="middle"  colspan="3"  >ϕ</th></tr></thead><tr><td align="center" valign="middle" >ϕ = 10 − 2 S</td><td align="center" valign="middle" >ϕ = 10 − 3 S</td><td align="center" valign="middle" >ϕ = 10 − 4 S</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >σ</td><td align="center" valign="middle" >Mean</td><td align="center" valign="middle" >0.3021</td><td align="center" valign="middle" >0.2985</td><td align="center" valign="middle" >0.3013</td></tr><tr><td align="center" valign="middle" >RMSE</td><td align="center" valign="middle" >0.0250</td><td align="center" valign="middle" >0.0246</td><td align="center" valign="middle" >0.0238</td></tr></tbody></table></table-wrap><p>表4. 不同f下，Kou跳–扩散模型波动率校准均值及均方根误差</p><p>我们对Merton跳–扩散模型和Kou跳–扩散模型波动率校准进行比较。表5表示在其余参数相同的情况下，当 n = 10 , 50 , 100 , 200 时的计算结果。可以看出，当n较小时，两种模型得到的估计值都会有一定的偏差，并且Kou模型得到的结果要比Merton模型得到的更精确且稳定一些，而随着n的增加，两种模型都能得到比较精确且稳定的估计值，且n较大时，Merton模型得到的估计值更稳定一些。对于我们所举的数值算例，若路径上的点较少时，我们使用Kou跳–扩散模型进行波动率的校准，而当路径上的点较多时，我们采用Merton模型进行校准。</p><table-wrap id="table5" ><label><xref ref-type="table" rid="table5">Table 5</xref></label><caption><title> The comparison of volatility calibration between Merton jump-diffusion model and Kou jump-diffusion mode</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  colspan="2"   rowspan="2"  >ϕ = 10 − 3 S</th><th align="center" valign="middle"  colspan="4"  >n</th></tr></thead><tr><td align="center" valign="middle" >10</td><td align="center" valign="middle" >50</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >200</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >Merton</td><td align="center" valign="middle" >Mean</td><td align="center" valign="middle" >0.3125</td><td align="center" valign="middle" >0.2967</td><td align="center" valign="middle" >0.3027</td><td align="center" valign="middle" >0.2980</td></tr><tr><td align="center" valign="middle" >RMSE</td><td align="center" valign="middle" >0.0787</td><td align="center" valign="middle" >0.0342</td><td align="center" valign="middle" >0.0238</td><td align="center" valign="middle" >0.0161</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >Kou</td><td align="center" valign="middle" >Mean</td><td align="center" valign="middle" >0.2881</td><td align="center" valign="middle" >0.2997</td><td align="center" valign="middle" >0.2985</td><td align="center" valign="middle" >0.3012</td></tr><tr><td align="center" valign="middle" >RMSE</td><td align="center" valign="middle" >0.0682</td><td align="center" valign="middle" >0.0298</td><td align="center" valign="middle" >0.0246</td><td align="center" valign="middle" >0.0242</td></tr></tbody></table></table-wrap><p>表5. Merton跳–扩散模型和Kou跳–扩散模型波动率校准的比较</p></sec><sec id="s8"><title>6. 结论</title><p>本文中，我们讨论了Merton跳–扩散模型和Kou跳–扩散模型参数校准问题的极大似然法。首先用蒙特卡洛罗法模拟股票价格路径的生成，然后找到生成的路径的转移概率密度函数，并建立对数似然函数。令跳–扩散模型的股票市场价格与模型价格之间的误差为高斯误差，并构造权重函数，通过线性搜索的方法求解加权极大似然函数的最大化，从而得到波动率的校准。最后给出数值模拟实验，实验结果表明了该算法的有效性和可行性。</p></sec><sec id="s9"><title>基金项目</title><p>由唐山学院博创基金“金融中的反问题及其数值计算”资助。</p></sec><sec id="s10"><title>文章引用</title><p>贾翔宇. 跳–扩散模型参数校准的极大似然法The Maximum Likelihood Method for the Calibration of Parameter under Jump-Diffusion Models[J]. 应用数学进展, 2020, 09(08): 1338-1345. https://doi.org/10.12677/AAM.2020.98158</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.37272-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Fisher, R.A. (1950) On the Mathematical Foundations of Theoretical Statistics, Reprinted in Contributions to Mathematical Statistics. J. Wiley &amp; Sons, New York.</mixed-citation></ref><ref id="hanspub.37272-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Black, F. and Scholes, M. (1973) The Pricing of Options and Corporate Liabilities. Journal of Political Economy, 81, 637-659. &lt;br&gt;https://doi.org/10.1086/260062</mixed-citation></ref><ref id="hanspub.37272-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Vasicek, O. (1977) An Equilibrium Characterization of the Term Structure. Journal of Financial Economics, 5, 177-188. &lt;br&gt;https://doi.org/10.1016/0304-405X(77)90016-2</mixed-citation></ref><ref id="hanspub.37272-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Cox, J.C., Ingersoll, J.E. and Ross, S.A. (1985) A Theory of the Term Structure of Interest Rates. Econometrica, 53, 385-407. &lt;br&gt;https://doi.org/10.2307/1911242</mixed-citation></ref><ref id="hanspub.37272-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Glasserman, P. (2004) Monte Carlo Methods in Financial Engineering. Spring Verlag, New York.  
&lt;br&gt;https://doi.org/10.1007/978-0-387-21617-1</mixed-citation></ref><ref id="hanspub.37272-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Ait-Sahalia, Y. (2002) Maximum Likelihood Estimation of Discretely Sampled Diffusions: A Closed-Form Approximation Approach. Econometrica, 70, 223-262. &lt;br&gt;https://doi.org/10.1111/1468-0262.00274</mixed-citation></ref><ref id="hanspub.37272-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Press, S.J. (1967) A Compound Events Model for Security Prices. Journal of Business, 40, 317-335.  
&lt;br&gt;https://doi.org/10.1086/294980</mixed-citation></ref><ref id="hanspub.37272-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Ball, C.A. and Torous, W.N. (1985) On Jumps in Common Stock Prices and Their Impact on Call Option Pricing. Journal of Finance, 40, 155-173. &lt;br&gt;https://doi.org/10.1111/j.1540-6261.1985.tb04942.x</mixed-citation></ref></ref-list></back></article>