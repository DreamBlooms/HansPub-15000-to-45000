<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2016.69068</article-id><article-id pub-id-type="publisher-id">CSA-18634</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20160900000_65995597.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  推理规则链的确定性构建
  Creating a Reasoning Chain Determinately
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>亦舜</given-names></name><xref ref-type="aff" rid="aff1"><sub>1</sub></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>浙江工商大学计算机与信息工程学院，浙江 杭州</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>zys64@sina.com</email></corresp></author-notes><pub-date pub-type="epub"><day>22</day><month>09</month><year>2016</year></pub-date><volume>06</volume><issue>09</issue><fpage>545</fpage><lpage>550</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  推理是人工智能领域研究的重点。推理过程一般是非确定的，会产生许多冗余的推理分支。本文针对专家系统中常用的产生式规则，提出了一种确定性构造推理链的方法。方法运用逻辑代数理论，首先确立了规则集与逻辑函数的对应关系，证明推理规则链中的所有规则对应构成逻辑函数质蕴含集中的一个特定最小子集，给出了确定该子集的基本算法。子集中质蕴含对应的规则按逻辑顺序排列即构成了一条合理的推理规则链。
   Reasoning is a research focus of artificial intelligence. Uncertainty in reasoning process generally produces many redundant reasoning branches. Based on production rule commonly used in expert system, this paper proposes a method to build the reasoning chain determinately. The method uses the theory of logic algebra. First we establish correspondence between a set of production rules and a logical function, and then prove that rules in a reasoning chain corresponding to a special minimal subset of the prime implication set that consists of the logical function, finally give out the basic algorithm to determine the subset. A sound reasoning chain is formed by arranging rules corresponding to prime implications in subset according to the logical order.
 
</p></abstract><kwd-group><kwd>专家系统，推理，规则，逻辑代数，质蕴含, Expert System</kwd><kwd> Reasoning</kwd><kwd> Production Rule</kwd><kwd> Logic Algebra</kwd><kwd> Prime Implication</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>推理规则链的确定性构建<sup> </sup></title><p>张亦舜</p><p>浙江工商大学计算机与信息工程学院，浙江 杭州</p><disp-formula id="hanspub.18634-formula262"><graphic xlink:href="http://html.hanspub.org/file/5-1540627x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2016年9月5日；录用日期：2016年9月22日；发布日期：2016年9月29日</p><disp-formula id="hanspub.18634-formula263"><graphic xlink:href="http://html.hanspub.org/file/5-1540627x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>推理是人工智能领域研究的重点。推理过程一般是非确定的，会产生许多冗余的推理分支。本文针对专家系统中常用的产生式规则，提出了一种确定性构造推理链的方法。方法运用逻辑代数理论，首先确立了规则集与逻辑函数的对应关系，证明推理规则链中的所有规则对应构成逻辑函数质蕴含集中的一个特定最小子集，给出了确定该子集的基本算法。子集中质蕴含对应的规则按逻辑顺序排列即构成了一条合理的推理规则链。</p><p>关键词 :专家系统，推理，规则，逻辑代数，质蕴含</p><disp-formula id="hanspub.18634-formula264"><graphic xlink:href="http://html.hanspub.org/file/5-1540627x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>推理是人工智能领域的一个研究重点。无论是建立在经典逻辑基础上的结论确定的推理，如自然演绎推理，归结演绎推理 [<xref ref-type="bibr" rid="hanspub.18634-ref1">1</xref>] ，还是基于模糊性的知识导致结论不确定的推理 [<xref ref-type="bibr" rid="hanspub.18634-ref2">2</xref>] ，如近似推理 [<xref ref-type="bibr" rid="hanspub.18634-ref3">3</xref>] ，模糊推理 [<xref ref-type="bibr" rid="hanspub.18634-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.18634-ref5">5</xref>] ，正向推理 [<xref ref-type="bibr" rid="hanspub.18634-ref6">6</xref>] ，反向推理 [<xref ref-type="bibr" rid="hanspub.18634-ref7">7</xref>] ，推理过程都是非确定性的，需要试探前行，难免会产生各种多余的推理分支，影响推理效率。</p><p>本文提出的基于逻辑代数理论构建推理链的方法，构建过程不必模拟实际的推理过程，不会产生冗余的推理分支，因此能确定性地构建从初始条件到最终结论的所有推理链。本文仅在理论上针对产生式规则集做了初步探讨，且采用产生式规则(以下简称规则)最简单直观的一种类型或形式，记为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x9_hanspub.png" xlink:type="simple"/></inline-formula>，意思是“若P则Q”。</p><p>此方法首先建立规则集与逻辑函数的对应。运用逻辑代数方法化简对应逻辑函数，最简逻辑函数对应最简规则集。化简过程中，构造两个集合P1和P2，P1是构成最简逻辑函数的所有质蕴含，对应最简规则集，P2是所有包含初始条件和最终结论的质蕴含，对应从初始条件出发运用最简规则集中的规则可推导出的最终结论。给定初始条件，在P2中找出仅包含给定初始条件和最终结论的质蕴含p，再在P1中确定一个覆盖p的最简子集，一个最简子集对应的规则即是一条最简推理链上使用的所有规则，最后将这些规则按逻辑顺序排列便得到了一条合理的最简推理规则链，最简子集可能有多个，对应多条最简推理规则链。</p></sec><sec id="s4"><title>2. 预备知识</title><p>2.1节简略列出了涉及到的逻辑代数的有关基本知识，详细内容可参考有关教材 [<xref ref-type="bibr" rid="hanspub.18634-ref8">8</xref>] 。2.2讨论了规则集与逻辑函数的关系。</p><sec id="s4_1"><title>2.1. 逻辑代数</title><p>逻辑代数用字母代表变量，逻辑变量及逻辑代数的运算结果只有0和1两个取值。0和1不表示数量的大小，只表示对立的两种逻辑状态，如真与假、对与错。</p><p>定义1逻辑代数中基本运算类型有三种：与(.)、或(+)、非(−)，定义见表1。其他的运算皆可等价地转化为这三种运算。</p><p>变量x，y之间的“与”运算表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x10_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x11_hanspub.png" xlink:type="simple"/></inline-formula>通常省略，简写为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x12_hanspub.png" xlink:type="simple"/></inline-formula>，即“积”的形式。多个变量的“与”构成一个与项，如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x13_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>变量x，y之间的“或”运算表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x14_hanspub.png" xlink:type="simple"/></inline-formula>，即“和”的形式。多个变量的“或”构成一个或项，如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x15_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>“非”是单目运算，变量x的“非”运算表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x16_hanspub.png" xlink:type="simple"/></inline-formula>。称x与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x17_hanspub.png" xlink:type="simple"/></inline-formula>为互反的。</p><p>定义2若逻辑变量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x18_hanspub.png" xlink:type="simple"/></inline-formula>的取值确定以后，变量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x19_hanspub.png" xlink:type="simple"/></inline-formula>的值也唯一地确定了，那么就称<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x20_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x21_hanspub.png" xlink:type="simple"/></inline-formula>的逻辑函数，记作<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x22_hanspub.png" xlink:type="simple"/></inline-formula>。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Definition of and, or, no</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >x</th><th align="center" valign="middle" >y</th><th align="center" valign="middle" >xy</th><th align="center" valign="middle" >x+y</th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x23_hanspub.png" xlink:type="simple"/></inline-formula></th></tr></thead><tr><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td></tr></tbody></table></table-wrap><p>表1. 与，或，非定义</p><p>定义3对于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x24_hanspub.png" xlink:type="simple"/></inline-formula>个变量的逻辑函数，如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x25_hanspub.png" xlink:type="simple"/></inline-formula>是一个含有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x26_hanspub.png" xlink:type="simple"/></inline-formula>个变量的与项，每个变量都以原变量或反变量的形式出现一次，且仅出现一次，则称<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x27_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x28_hanspub.png" xlink:type="simple"/></inline-formula>个变量的一个最小项，也称标准积。因为每个变量都以原变量和反变量两种可能的形式出现，所以n个变量可构成<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x29_hanspub.png" xlink:type="simple"/></inline-formula>个最小项。</p><p>定义4两个相同变量的逻辑函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x30_hanspub.png" xlink:type="simple"/></inline-formula>，如果对于各种不同的变量取值组合，它们的结果都相同，则称这两个逻辑函数等价，记作啊<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x31_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>定理1常用等价式有：</p><disp-formula id="hanspub.18634-formula265"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/5-1540627x32_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.18634-formula266"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/5-1540627x33_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.18634-formula267"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/5-1540627x34_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.18634-formula268"><label>(4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/5-1540627x35_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.18634-formula269"><label>(5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/5-1540627x36_hanspub.png"  xlink:type="simple"/></disp-formula><p>依据等价式(1) (4) (5)每个逻辑函数都可化为等价的与或式，即“积之和”的形式。以下讨论默认逻辑函数具有此种形式。由(3)，每个与项可化为等价的最小项之和，这些最小项被与项和逻辑函数所包含或覆盖，因此“积之和”可化为等价的最小项之和，即“标准积之和”。</p><p>定理2每个逻辑函数的“标准积之和”有且仅有一个。等价的逻辑函数有相同的“标准积之和”。</p><p>如设有三个变量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x37_hanspub.png" xlink:type="simple"/></inline-formula>，与逻辑函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x38_hanspub.png" xlink:type="simple"/></inline-formula>等价的“标准积之和”为：</p><disp-formula id="hanspub.18634-formula270"><graphic xlink:href="http://html.hanspub.org/file/5-1540627x39_hanspub.png"  xlink:type="simple"/></disp-formula><p>反之，由(3)两个仅有一个变量互反，其余变量相同的与项可消去互反变量，合并为一个与项。</p><p>定义5逻辑函数的“标准积之和”中，每个最小项以及所有运用(3)合并化简得到的与项都称为该函数的蕴含项。不能再合并化简的蕴含项称为质蕴含项，如上式的质蕴含项为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x40_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>定理3两个包含互反变量的蕴含项没有共同的最小项。两个蕴含项共同包含的蕴含项是这两个蕴含项相与并消去重复。如：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x41_hanspub.png" xlink:type="simple"/></inline-formula>，其共同蕴含项为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x42_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>定理4一个蕴含项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x43_hanspub.png" xlink:type="simple"/></inline-formula>除去其覆盖的一个蕴含项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x44_hanspub.png" xlink:type="simple"/></inline-formula>后，剩余部分写成最简逻辑函数为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x45_hanspub.png" xlink:type="simple"/></inline-formula></p><p>上面每个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x46_hanspub.png" xlink:type="simple"/></inline-formula>表示不同变量或变量的反。</p><p>定义6最简逻辑函数指函数式中没有冗余的与项且每个与项都是质蕴含项。</p><p>化简给定逻辑函数可得到等价的最简逻辑函数，等价的最简逻辑函数可能有多个。</p><p>定义7一个最简逻辑函数的蕴含项包含的所有最小项若只被最简逻辑函数中的一个质蕴含覆盖，称此蕴含项为单属蕴含项。</p><p>定理5若逻辑函数的一个最小项是单属蕴含项，则包含它的质蕴含必出现在最简逻辑函数中。</p><p>定义8将逻辑函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x47_hanspub.png" xlink:type="simple"/></inline-formula>中的+换成<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x48_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x49_hanspub.png" xlink:type="simple"/></inline-formula>换成+，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x50_hanspub.png" xlink:type="simple"/></inline-formula>换成<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x51_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x52_hanspub.png" xlink:type="simple"/></inline-formula>换成<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x53_hanspub.png" xlink:type="simple"/></inline-formula>得到的式子<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x54_hanspub.png" xlink:type="simple"/></inline-formula>称为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x55_hanspub.png" xlink:type="simple"/></inline-formula>的对偶，显然<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x56_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x57_hanspub.png" xlink:type="simple"/></inline-formula>互为对偶。</p><p>由等价式(4) (5)，对偶函数之间存在等价关系<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x58_hanspub.png" xlink:type="simple"/></inline-formula>。因此一个逻辑函数可方便地转换成其对偶函数来处理。</p></sec><sec id="s4_2"><title>2.2. 规则与规则集</title><p>形如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x59_hanspub.png" xlink:type="simple"/></inline-formula>的规则，左部x为条件，右部y为结论。其运算定义等价于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x60_hanspub.png" xlink:type="simple"/></inline-formula>，见表2，为了书写和处理方便，以下讨论采用<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x61_hanspub.png" xlink:type="simple"/></inline-formula>的对偶项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x62_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>定义9类似<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x63_hanspub.png" xlink:type="simple"/></inline-formula>的规则，因有等价关系<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x64_hanspub.png" xlink:type="simple"/></inline-formula>，可以将其等价分解为几条规则，使得每条规则的左部是一个与项，右部是一个或项。这种形式的规则称为原子规则。</p><p>原子规则和与项之间存在一一对应。若非特别声明，以下出现的规则皆是原子规则。</p><p>一条规则可等价地写成不同形式，但它们都对应同一个与项。如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x65_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x66_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x67_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x68_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x69_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x70_hanspub.png" xlink:type="simple"/></inline-formula>，等相互等价，都对应与项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x71_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>定义10一个推理系统如果基于一个规则集，则集中不出现在任何规则右部的条件称为初始条件，不出现在任何规则左部的结论称为最终结论。</p><p>定义11给定一个规则集，将其中每条规则对应的与项用或运算连接得到的式子称为规则集的逻辑函数。</p><p>定理6规则集A的逻辑函数的任一蕴含项皆对应一条被A蕴含的规则，即能够由A推导出的规则。</p><p>证明：设集中有规则R：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x72_hanspub.png" xlink:type="simple"/></inline-formula>，其对应的与项为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x73_hanspub.png" xlink:type="simple"/></inline-formula>，此与项包含的每个最小项必含有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x74_hanspub.png" xlink:type="simple"/></inline-formula>，设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x75_hanspub.png" xlink:type="simple"/></inline-formula>是其中任意一个最小项，解释为规则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x76_hanspub.png" xlink:type="simple"/></inline-formula>：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x77_hanspub.png" xlink:type="simple"/></inline-formula>，显然由规则R可以导出规则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x78_hanspub.png" xlink:type="simple"/></inline-formula>，故A的逻辑函数包含的所有最小项皆对应一条被A蕴含的规则。</p><p>逻辑函数的一个蕴含项是从最小项开始，逐次利用等价式(3)合并两个与项得到的。由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x79_hanspub.png" xlink:type="simple"/></inline-formula>，解释为规则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x80_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x81_hanspub.png" xlink:type="simple"/></inline-formula>等价于规则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x82_hanspub.png" xlink:type="simple"/></inline-formula>，此显然成立。故A的逻辑函数的任意蕴含项皆对应一条被A蕴含的规则。</p><p>定义12一个规则集中若不存在冗余规则且每条规则最简(没有多余的条件和结论)，则称其为最简规则集。</p><p>定理7最简规则集的逻辑函数是最简逻辑函数。</p><p>证明：设最简规则集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x83_hanspub.png" xlink:type="simple"/></inline-formula>的逻辑函数f不是最简的，则或者：</p><p>1) f中有冗余与项p，f除去p后，p仍然是f的蕴含项，由定理6，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x84_hanspub.png" xlink:type="simple"/></inline-formula>中除去p对应的规则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x85_hanspub.png" xlink:type="simple"/></inline-formula>后，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x86_hanspub.png" xlink:type="simple"/></inline-formula>仍可由规则集推导出来。故<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x87_hanspub.png" xlink:type="simple"/></inline-formula>不是最简规则集。</p><p>2) f中有非质蕴含项q，q对应规则r，q化简为质蕴含<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x88_hanspub.png" xlink:type="simple"/></inline-formula>，由定理6，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x89_hanspub.png" xlink:type="simple"/></inline-formula>对应的规则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x90_hanspub.png" xlink:type="simple"/></inline-formula>可由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x91_hanspub.png" xlink:type="simple"/></inline-formula>导出。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Definition of → &amp; equivalent for</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >x</th><th align="center" valign="middle" >y</th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x92_hanspub.png" xlink:type="simple"/></inline-formula></th><th align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x93_hanspub.png" xlink:type="simple"/></inline-formula></th></tr></thead><tr><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td></tr></tbody></table></table-wrap><p>表2. →的定义及等价式</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x94_hanspub.png" xlink:type="simple"/></inline-formula>中除去r，加入<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x95_hanspub.png" xlink:type="simple"/></inline-formula>，得到规则集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x96_hanspub.png" xlink:type="simple"/></inline-formula>，显然<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x97_hanspub.png" xlink:type="simple"/></inline-formula>可推出r，因此<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x98_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x99_hanspub.png" xlink:type="simple"/></inline-formula>等价，但<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x100_hanspub.png" xlink:type="simple"/></inline-formula>中的r不是最简规则，故<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x101_hanspub.png" xlink:type="simple"/></inline-formula>不是最简规则集。</p><p>综上，f是最简逻辑函数。</p><p>规则集的化简对应规则集逻辑函数f的化简。逻辑函数的化简常运用Quine-McCluskey方法。该方法先求出f所有的质蕴含，再从其中确定构成最简逻辑函数的质蕴含。在化简过程求出的所有质蕴含中，设确定构成最简逻辑函数的质蕴含集合记为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x102_hanspub.png" xlink:type="simple"/></inline-formula>，仅包含初始条件和最终结论的质蕴含集合记为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x103_hanspub.png" xlink:type="simple"/></inline-formula>。</p></sec></sec><sec id="s5"><title>3. 构建推理链</title><p>有最简规则集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x104_hanspub.png" xlink:type="simple"/></inline-formula>，若初始条件<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x105_hanspub.png" xlink:type="simple"/></inline-formula>恰好可推出最终结论<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x106_hanspub.png" xlink:type="simple"/></inline-formula>，则规则集的逻辑函数包含质蕴含<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x107_hanspub.png" xlink:type="simple"/></inline-formula>，简写为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x108_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x109_hanspub.png" xlink:type="simple"/></inline-formula>属于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x110_hanspub.png" xlink:type="simple"/></inline-formula>。若初始条件不充分，则可从<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x111_hanspub.png" xlink:type="simple"/></inline-formula>中找出初始条件与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x112_hanspub.png" xlink:type="simple"/></inline-formula>相近的质蕴含，并判断能否补充缺失的初始条件。在实际应用中，就此可以有针对性地提问，补充实事和条件。</p><p>如何构造从<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x113_hanspub.png" xlink:type="simple"/></inline-formula>到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x114_hanspub.png" xlink:type="simple"/></inline-formula>的推理链？由定理6，推理链上的规则对应的质蕴含一定覆盖了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x115_hanspub.png" xlink:type="simple"/></inline-formula>，据此在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x116_hanspub.png" xlink:type="simple"/></inline-formula>中先确定这些质蕴含，再将质蕴含对应的规则按逻辑顺序先后排列便构成了推理规则链。下面给出基本算法。</p><p>1) 确定<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x117_hanspub.png" xlink:type="simple"/></inline-formula>中每个质蕴含包含的所有最小项。</p><p>2) 构造两张表格：单属蕴含项表，记录<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x118_hanspub.png" xlink:type="simple"/></inline-formula>中每个质蕴含包含的所有单属蕴含项。质蕴含表，记录规则集的逻辑函数的每个非单属最小项及<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x119_hanspub.png" xlink:type="simple"/></inline-formula>中包含它的所有质蕴含。</p><p>3) 初始化，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x120_hanspub.png" xlink:type="simple"/></inline-formula>是已确定的质蕴含的集合，初始为空。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x121_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x122_hanspub.png" xlink:type="simple"/></inline-formula>包含的尚未被<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x123_hanspub.png" xlink:type="simple"/></inline-formula>中质蕴含所覆盖的蕴含项集合，初始为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x124_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>4) 扫描单属蕴含项表，确定所有这样的质蕴含，其单属蕴含项与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x125_hanspub.png" xlink:type="simple"/></inline-formula>包含有相同的最小项。这些质蕴含对应的规则必出现在推理规则链中。因此将这些质蕴含加入<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x126_hanspub.png" xlink:type="simple"/></inline-formula>中。修改<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x127_hanspub.png" xlink:type="simple"/></inline-formula>，从<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x128_hanspub.png" xlink:type="simple"/></inline-formula>删去被<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x129_hanspub.png" xlink:type="simple"/></inline-formula>中质蕴含包含的蕴含项。</p><p>5) 经过步骤4，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x130_hanspub.png" xlink:type="simple"/></inline-formula>中的蕴含项包含的所有最小项都被<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x131_hanspub.png" xlink:type="simple"/></inline-formula>中的两个或两个以上质蕴含所覆盖。查询质蕴含表，对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x132_hanspub.png" xlink:type="simple"/></inline-formula>中每个最小项将包含它的所有质蕴含相或，最后将每个或项相与，构成一个或与式，然后展开化简得到与或式，对与或式中每个与项，其代表的质蕴含加入<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x133_hanspub.png" xlink:type="simple"/></inline-formula>即构成一个最终结果，因此与或式中的与项数就决定了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x134_hanspub.png" xlink:type="simple"/></inline-formula>的最终结果数。</p><p>6) 将最终结果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x135_hanspub.png" xlink:type="simple"/></inline-formula>中的所有质蕴含对应的规则按逻辑顺序排列即构成了一条合理的推理规则链。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x136_hanspub.png" xlink:type="simple"/></inline-formula>的最终结果数就是最终推理链的数目。</p><p>显然，算法中单属蕴含项表和质蕴含表可事先构造完成。因算法中的运算操作较繁琐复杂，限于篇幅，下面只给出一个简单的实例</p><p>例：最简规则集为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x137_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x138_hanspub.png" xlink:type="simple"/></inline-formula>是初始条件，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x139_hanspub.png" xlink:type="simple"/></inline-formula>是最终结论。</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x140_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x141_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>给出初始条件<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x142_hanspub.png" xlink:type="simple"/></inline-formula>，在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x143_hanspub.png" xlink:type="simple"/></inline-formula>中确定符合初始条件的质蕴含有</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x144_hanspub.png" xlink:type="simple"/></inline-formula>，因此，可推导两个结论<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x145_hanspub.png" xlink:type="simple"/></inline-formula>。仅以<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x146_hanspub.png" xlink:type="simple"/></inline-formula>为例。</p><p>确定<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x147_hanspub.png" xlink:type="simple"/></inline-formula>中每个质蕴含包含的所有最小项如下：</p><disp-formula id="hanspub.18634-formula271"><graphic xlink:href="http://html.hanspub.org/file/5-1540627x148_hanspub.png"  xlink:type="simple"/></disp-formula><p>构造单属蕴含项表，质蕴含表分别见表3，表4。</p><p>初始化：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x149_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x150_hanspub.png" xlink:type="simple"/></inline-formula></p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Implications contained by only one prime implicatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >质蕴含</th><th align="center" valign="middle" >单属蕴含项</th></tr></thead><tr><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x151_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x152_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x153_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x154_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x155_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x156_hanspub.png" xlink:type="simple"/></inline-formula></td></tr></tbody></table></table-wrap><p>表3. 单属蕴含项</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Prime implication</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >最小项</th><th align="center" valign="middle" >质蕴含</th></tr></thead><tr><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x157_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x158_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x159_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x160_hanspub.png" xlink:type="simple"/></inline-formula></td></tr><tr><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x161_hanspub.png" xlink:type="simple"/></inline-formula></td><td align="center" valign="middle" ><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x162_hanspub.png" xlink:type="simple"/></inline-formula></td></tr></tbody></table></table-wrap><p>表4. 质蕴含</p><p>扫描表3，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x163_hanspub.png" xlink:type="simple"/></inline-formula>的单属蕴含项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x164_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x165_hanspub.png" xlink:type="simple"/></inline-formula>有相同的最小项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x166_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p>将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x167_hanspub.png" xlink:type="simple"/></inline-formula>加入<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x168_hanspub.png" xlink:type="simple"/></inline-formula>，得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x169_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x170_hanspub.png" xlink:type="simple"/></inline-formula>修改为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x171_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x172_hanspub.png" xlink:type="simple"/></inline-formula>的单属蕴含项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x173_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x174_hanspub.png" xlink:type="simple"/></inline-formula>有相同的最小项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x175_hanspub.png" xlink:type="simple"/></inline-formula>，将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x176_hanspub.png" xlink:type="simple"/></inline-formula>加入<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x177_hanspub.png" xlink:type="simple"/></inline-formula>，得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x178_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x179_hanspub.png" xlink:type="simple"/></inline-formula>修改为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x180_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>因<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x181_hanspub.png" xlink:type="simple"/></inline-formula>为空，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x182_hanspub.png" xlink:type="simple"/></inline-formula>已得到最后结果，不必继续判断表3中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x183_hanspub.png" xlink:type="simple"/></inline-formula>，即使先考察<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x184_hanspub.png" xlink:type="simple"/></inline-formula>，会发现<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x185_hanspub.png" xlink:type="simple"/></inline-formula>的单属蕴含项与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x186_hanspub.png" xlink:type="simple"/></inline-formula>没有共同的最小项。</p><p>将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x187_hanspub.png" xlink:type="simple"/></inline-formula>中质蕴含对应的规则按逻辑先后顺序排列即有规则链<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/5-1540627x188_hanspub.png" xlink:type="simple"/></inline-formula>。</p></sec><sec id="s6"><title>4. 结论</title><p>本文针对简单形式的产生式规则集提出了一种非试探性的确定性地构造推理规则链的方法。该方法将规则集转化为逻辑函数，利用规则集蕴含的规则与逻辑函数的蕴含项之间的等价对应，从构成最简逻辑函数的质蕴含集中确定一个特定的最简子集，其中的元素对应规则链中的规则，这些对应规则依逻辑顺序排列即构成了一条合理的最简推理规则链。</p><p>本文仅是理论上的初步探讨，所述方法只适用于规则为命题逻辑中条件命题这一简单形式的规则集，难以推广到一般情形。限于篇幅，文中许多细节未深入讨论，如表格的构造，查询的方法和效率，逻辑表达式的快速展开和化简等。</p></sec><sec id="s7"><title>文章引用</title><p>张亦舜. 推理规则链的确定性构建Creating a Reasoning Chain Determinately[J]. 计算机科学与应用, 2016, 06(09): 545-550. http://dx.doi.org/10.12677/CSA.2016.69068</p></sec><sec id="s8"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.18634-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">王永庆. 人工智能原理与方法[M]. 西安: 西安交通大学出版社, 1998.</mixed-citation></ref><ref id="hanspub.18634-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">宋光雄, 何永勇, 褚福磊. 基于双参数方法的故障诊断不确定性推理问题[J]. 清华大学学报, 2006, 46(8): 1397-1400.</mixed-citation></ref><ref id="hanspub.18634-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">王永县, 朱涛, 李飞. 基于相似关系的广义近似推理方法[J]. 清华大学学报, 2002, 42(10): 1285-1288.</mixed-citation></ref><ref id="hanspub.18634-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">陈晨, 周勇. 一种基于置信规则的模糊推理算法[J]. 电子科技, 2013, 26(4): 82-85.</mixed-citation></ref><ref id="hanspub.18634-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Yeung, D.S., Wang, X.Z. and Tsang, E.C. (2004) Handling Interaction in Fuzzy Production Rule Reasoning. IEEE Transactions on Systems, Man, &amp; Cybernetics. Part B: Cyber-netics, 34, 1979-1987.</mixed-citation></ref><ref id="hanspub.18634-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">崔奇明. 基于WEB的非精确正向推理专家系统的研究与应用[J]. 电脑与信息技术, 2006, 14(3):46-49.</mixed-citation></ref><ref id="hanspub.18634-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">孙臣良, 孙福玉, 梁宏友. 基于规则的非精确反向推理专家系统[J]. 辽宁工程技术大学学报, 2003, 22(s1): 145-147.</mixed-citation></ref><ref id="hanspub.18634-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">陈光梦. 数字逻辑基础[M]. 上海: 复旦大学出版社, 2007.</mixed-citation></ref></ref-list></back></article>