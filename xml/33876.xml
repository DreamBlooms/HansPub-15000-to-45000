<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">HJDM</journal-id><journal-title-group><journal-title>Hans Journal of Data Mining</journal-title></journal-title-group><issn pub-type="epub">2163-145X</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/HJDM.2020.101005</article-id><article-id pub-id-type="publisher-id">HJDM-33876</article-id><article-categories><subj-group subj-group-type="heading"><subject>HJDM20200100000_60248975.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于电子病历的疾病风险预测
  Disease Risk Prediction Based on EHR
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>宁宁</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陆</surname><given-names>迁</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>梁</surname><given-names>敏</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>林</surname><given-names>栋</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>莫</surname><given-names>毓昌</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>华侨大学，数学科学学院，计算科学福建省高校重点实验室，福建 泉州</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><aff id="aff3"><addr-line>福建中医药大学，针灸学院，福建 福州</addr-line></aff><pub-date pub-type="epub"><day>11</day><month>12</month><year>2019</year></pub-date><volume>10</volume><issue>01</issue><fpage>47</fpage><lpage>55</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  数据驱动的医疗保健(data driven healthcare)作为可用的大型医疗数据的使用，以提供最好的和最个性化的护理，正成为医疗行业革命成功的主要趋势之一。电子病历是推动这一数据驱动的医疗革命成功的主要载体。本文运用深度学习的方法，基于词嵌入模型实现对电子病历信息的表示，利用长短期记忆(LSTM)网络模型特性，实现对电子病历信息时间上的无规律性和疾病信息长期依赖挑战的解决，实现对疾病风险的预测，通过与卷积神经网络(CNN)模型进行比对，实验结果显示本文方法的有效性。&lt;br/&gt;Data driven health care, as the use of available large-scale medical data, to provide the best and most personalized care, is becoming one of the main trends of the success of the revolution in the medical industry. Electronic health record is the main carrier to promote the success of this da-ta-driven medical revolution. In this paper, we use the method of deep learning, based on the word embedding model to express the EHR information, and use the characteristics of the long-term memory network model to solve the irregular time of EHR information and the long-term depend-ence of disease information, so as to achieve the prediction of disease risk. Compared with the con-volution neural network model, the results show the effectiveness of this method.
 
</p></abstract><kwd-group><kwd>深度学习，电子病历，词嵌入，长短期记忆网络, Deep Learning</kwd><kwd> Electronic Health Records</kwd><kwd> Word Embedding</kwd><kwd> Long Short-Term Memory Network</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于电子病历的疾病风险预测<sup> </sup></title><p>李宁宁<sup>1</sup>，陆迁<sup>1</sup>，梁 敏<sup>1</sup>，林栋<sup>2</sup>，莫毓昌<sup>1</sup></p><p><sup>1</sup>华侨大学，数学科学学院，计算科学福建省高校重点实验室，福建 泉州</p><p><sup>2</sup>福建中医药大学，针灸学院，福建 福州</p><p>收稿日期：2019年12月23日；录用日期：2020年1月1日；发布日期：2020年1月8日</p><disp-formula id="hanspub.33876-formula70"><graphic xlink:href="//html.hanspub.org/file/5-1760195x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>数据驱动的医疗保健(data driven healthcare)作为可用的大型医疗数据的使用，以提供最好的和最个性化的护理，正成为医疗行业革命成功的主要趋势之一。电子病历是推动这一数据驱动的医疗革命成功的主要载体。本文运用深度学习的方法，基于词嵌入模型实现对电子病历信息的表示，利用长短期记忆(LSTM)网络模型特性，实现对电子病历信息时间上的无规律性和疾病信息长期依赖挑战的解决，实现对疾病风险的预测，通过与卷积神经网络(CNN)模型进行比对，实验结果显示本文方法的有效性。</p><p>关键词 :深度学习，电子病历，词嵌入，长短期记忆网络</p><disp-formula id="hanspub.33876-formula71"><graphic xlink:href="//html.hanspub.org/file/5-1760195x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/5-1760195x7_hanspub.png" /> <img src="//html.hanspub.org/file/5-1760195x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>全球医疗保健系统正在迅速采用电子病历(EHR)，它是在任何护理交付环境 [<xref ref-type="bibr" rid="hanspub.33876-ref1">1</xref>] 中由一个或多个相遇产生的纵向患者健康信息的系统集合(例如，诊断、药物、实验室测试、程序等)。这将极大地增加有效的电子临床数据。因此，数据驱动的医疗保健作为可用的大型医疗数据的使用，以提供最好的和最个性化的护理，正成为医疗行业革命成功的主要趋势之一 [<xref ref-type="bibr" rid="hanspub.33876-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.33876-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.33876-ref4">4</xref>]。由于患者EHR是进行数据驱动的医疗研究的主要载体，了解EHR中包含的信息并对其信息有效提取是至关重要的。</p></sec><sec id="s4"><title>2. 相关工作</title><p>近年来，病历中表型的提取和表示的现有方法包括：基于向量的表示。这种方法针对每个病人构建了一个向量，它的维度等于在HER中出现的不同事件的数量，每个维度上的值是在特定时间段内相应医疗事件的汇总统计(例如，总和、平均值、最大值、最小值等)。使用基于向量的表示，每个表型通常被假定为这些原始医疗事件的线性组合，组合系数是通过一些优化过程获得的，这种表示的局限性在于它忽略了这些事件之间的时间关系。Ho等人 [<xref ref-type="bibr" rid="hanspub.33876-ref5">5</xref>] 提出了一种基于非负张量因子分解的EHR张量表型提取方法。该方法探索了不同医学实体之间的相互作用；其局限性是，他们仍然没有考虑事件–时间关系。基于序列的表示，该方法根据每个事件的时间戳为每个患者构建EHR序列，然后，运用频繁模式挖掘方法将时间模式识别为表型，一个问题在于，患者EHR之间的高度可变性，这种方法通常会返回大量的模式(也称为“模式爆炸”现象)。基于时间矩阵的表示 [<xref ref-type="bibr" rid="hanspub.33876-ref6">6</xref>]，这种方法表示患者EHR作为时间矩阵，其中一维对应于时间，另一维对应于医疗事件。Zhou等人 [<xref ref-type="bibr" rid="hanspub.33876-ref7">7</xref>] 提出了将相似时态趋势的医疗事件分组在一起的表型分型方法。然而，他们没有考虑不同事件之间的时间关系。Wang等人 [<xref ref-type="bibr" rid="hanspub.33876-ref8">8</xref>] 提出了一种卷积矩阵分解方法，用于检测患者EHR矩阵上的移位不变模式，但不能确定最优模式长度，需要枚举所有可能的值。</p><p>为了克服上述电子病历信息的稀疏性、时间上无规律性和疾病信息的长期依赖性挑战，本文将基于自然语言处理 [<xref ref-type="bibr" rid="hanspub.33876-ref9">9</xref>] 中的词嵌入模型将EHR中离散的元素嵌入到连续向量空间中，将相同类型的向量合并为单个向量，把向量经过特定池化类型处理表示为一次入院，以这种方式，可变大小的输入被嵌入到连续分布的向量空间中，作为LSTM的输入特征，通过LSTM对时序信息的有效处理，实现对疾病风险的预测。因为嵌入是从数据中学习的，所以模型不依赖于人工特征工程。实验结果表明，该模型具有有效性。</p></sec><sec id="s5"><title>3. 基本概念</title><sec id="s5_1"><title>3.1. 词表示</title><p>用“词”来指一个大的上下文中的离散元素(例如，文档中的一个词或一次入院的一种诊断)，输入到许多机器学习模型中通常被表示为固定长度的特征向量。对于文本，通常使用词袋模型。词W用一个独</p><p>热向量 V w ∈ R | V | 表示，其中 V w = [ v w 1 , ⋯ , v w | V | ] ， | V | 是词典中词的数量： V w = [ 0 , ⋯ , 0 , 1 , 0 , ⋯ , 0 ] (如果 w = i ，则 v w i = 1 ，表示w是词典中的第i个词，否则 v w i = 0 )。在“词袋”的表示法下，一个句子 w 0 , ⋯ , w n 的向量是其词向量的总和： u = v w 0 + v w 1 + ⋯ + v w n 。然而，“词袋法”无法捕获单词的顺序和语义。</p></sec><sec id="s5_2"><title>3.2. 学习词嵌入矩阵</title><p>一种强有力的词袋替代方法是将单词嵌入到M维的向量空间中，其中 M ≪ | V | 。每一个词都映射到一个唯一的向量，该向量是矩阵 E ∈ R M &#215; | V | <sup>|</sup>中的一列。词嵌入有几个好处：首先，维数大大减少，不依赖于新词的出现。第二，一个单词的语义是以分布式的方式表示的，也就是说，有多个元素对单词的意思进行编码。第三，使用诸如加法和矩阵乘法等现有代数工具，连续向量的操作要容易得多，这在最近的工作中得到了证明。例如，两个词之间的相似性只是两个向量之间的余弦。更重要的是，嵌入矩阵E可以从数据中学习。</p><p>学习嵌入矩阵E的方法有很多种，最流行的方法可能是连续的词袋模型。对于词序列中的一个词w<sub>i</sub>，模型使用w<sub>i</sub>周围的词预测w<sub>i</sub>。输入上下文大小为C时， w i − C , ⋯ , w i − 1 , w i + 1 , ⋯ , w i + C 被称为w<sub>i</sub>的上下文词。利用嵌入矩阵E将所有上下文词嵌入向量中，然后求平均值得到平均向量h</p><p>h = E w i − C + ⋯ + E w i − 1 + E w i + 1 + ⋯ + E w i + C 2 C (1)</p><p>其中E<sup>t</sup>是矩阵E的第t列。然后模型生成输出 a = E &#175; h ，其中 E &#175; ∈ R | V | &#215; M ，中心词w<sub>i</sub>预测使用softmax函数</p><p>P ( w i | w i − C , ⋯ , w i − 1 , w i + 1 , ⋯ , w i + C ) = softmax ( a ) (2)</p><p>参数E和 E &#175; 通过最小化损失函数来学习</p><p>L = 1 T ∑ i = 1 T log P ( w i | w i − C , ⋯ , w i − 1 , w i + 1 , ⋯ , w i + C ) (3)</p><p>通过随机梯度下降的反向传播。</p></sec><sec id="s5_3"><title>3.3. 长短期记忆网络(LSTM)</title><p>长短时记忆网络 [<xref ref-type="bibr" rid="hanspub.33876-ref10">10</xref>] 是一种有效解决梯度消失问题的循环神经网络(RNN) [<xref ref-type="bibr" rid="hanspub.33876-ref11">11</xref>]。LSTM的中心是一个线性自循环记忆细胞，允许记忆通过长序列流动。记忆细胞被封闭来调节信息流向或来自细胞的信息。LSTM在许多应用中都是成功的，例如机器翻译、手写识别和语音识别。</p><p>一个LSTM单元在时间t有一个状态 c t ∈ R K 的记忆细胞，通过记忆细胞的信息流被3个门控制：输入门，遗忘门和输出门。输入门<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/5-1760195x28_hanspub.png" xlink:type="simple"/></inline-formula>流入到细胞的输入，遗忘门 f t ∈ R K 控制记忆细胞的遗忘且输出门 o t ∈ R K 调节来自记忆细胞的输出流。在技术细节处理之前，我们用 σ 表示矢量逐元素的sigmoid函数， ∗ 表示两个矢量的乘积。</p><p>三个门都是sigmoid单元，它将门的每个元素的值设置为0到1之间：</p><p>i t = σ ( W i x t + U i h t − 1 + b i ) (4)</p><p>f t = σ ( W f x t + U f h t − 1 + b f ) (5)</p><p>o t = σ ( W o x t + U o h t − 1 + b 0 ) (6)</p><p>其中 W { i , f , o } , U { i , f , o } , b { i , f , o } 是参数门控制通过的信息量：当值为1时满值，当值为0时完全阻塞。在每一个时间步长t，通过输入 x t ∈ R M 第一次计算输入特征，先前的隐藏层 h t − 1 ∈ R K 通过一个挤压tanh函数：</p><p>g t = tanh ( W c x t + U c h t − 1 + b c ) (7)</p><p>通过部分遗忘先前的记忆细胞和调节输入特征来更新记忆细胞，如下所示</p><p>c t = f t ∗ c t − 1 + i t ∗ g t (8)</p><p>记忆细胞序列是相加的，因此梯度也通过链式法则以线性方式更新。这有效地防止梯度消失或爆炸。记忆细胞在通过可学习的遗忘门f<sub>t</sub>记忆过去的经验中起着至关重要的作用。相反， f t → 1 ，所有的过去记忆被保存，且随着新的输入新的记忆不断更新。如果 f t → 0 ，只有新的经验被更新，系统变得无记忆。</p><p>最后，根据记忆c<sub>t</sub>计算隐藏的输出状态h<sub>t</sub>，由输出门o<sub>t</sub>控制如下：</p><p>h t = o t ∗ tanh ( c t ) (9)</p><p>注意，由于系统动态是确定性的，h<sub>t</sub>是所有先前输入的一个函数： h t = LSTM ( x 1 : t ) 然后，输出状态用来产生输出。</p></sec><sec id="s5_4"><title>3.4. 模型复杂性</title><p>模型参数个数为 M &#215; | V | + M &#215; K + K &#215; K + K &#215; D ，由以下部分组成：</p><p>LSTM层的参数：</p><p>对于入院嵌入，使用嵌入矩阵 A ∈ R M &#215; | V | 。</p><p>输入门：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/5-1760195x47_hanspub.png" xlink:type="simple"/></inline-formula>， U i ∈ R K &#215; K 和 b i ∈ R K &#215; 1 。</p><p>输出门： W o ∈ R M &#215; | V | ， U o ∈ R K &#215; K 和 b o ∈ R K &#215; 1 。</p><p>遗忘门： W f ∈ R M &#215; | V | ，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/5-1760195x54_hanspub.png" xlink:type="simple"/></inline-formula>和 b f ∈ R K &#215; 1 。</p><p>记忆细胞： W i ∈ R M &#215; | V | ， U i ∈ R K &#215; K 和 b i ∈ R K &#215; 1 。</p></sec></sec><sec id="s6"><title>4. 基于电子病历的风险预测模型</title><p>本节我们具体描述对EHR信息的处理，利用LSTM对序列中的长期依赖性进行建模的能力，解决了可变大小的离散输入和无规律时间的挑战，实现对疾病风险的预测。</p><sec id="s6_1"><title>4.1. 可变大小的入院信息的表示</title><p>一次入院包含多个诊断。诊断、手术和药物是使用编码方案编码的。我们观察到NLP和EHR之间有相当大的相似性，EHR类似于句子，所以基于NLP中的词嵌入模型，我们的方法是将入院嵌入到向量中。一次入院是一个可变大小的代码集(诊断或干预)。设D是诊断代码集。这个集合索引从1到D。用 A ∈ R M &#215; | D | 表示一次诊断嵌入矩阵。设 A j 是第j列的元素， A i j 是矩阵A的第i行第j列元素。每次入院t</p><p>包含h次诊断： d 1 , d 2 , ⋯ , d h ∈ { 1 , 2 , ⋯ , | D | } 。代码首先被嵌入到向量中，将相同类型的向量合并为单个向</p><p>图1. 编码嵌入</p><p>量，方式如图1所示。诊断与干预代码的嵌入向量是 A d 1 , ⋯ , A d k 。然后，我们汇集所有当前诊断向量得到 x t ∈ R M ，但是得到的向量仍是稀疏的，我们通过引入池化，进一步处理电子病历的稀疏问题。最后，多次入院嵌入是一个矩阵，对其进行随机初始化，然后通过训练预测任务来学习。</p></sec><sec id="s6_2"><title>4.2. 池化</title><p>设 x t i 是向量 x t 的第i个元素，入院采用最大池化、合并池化或平均池化，合并方式如下：</p><p>最大池化admssion(max adm)。按元素池化如下：</p><p>x t i = max ( A i d 1 , A i d 2 , ⋯ , A i d h )</p><p>i = 1 , 2 , ⋯ , M 。这类似于选择性注意诊断和干预之间的影响最大的因素。它也类似于通常的编码实践，即选择一个诊断作为入院的主要原因。</p><p>归一化和池(sum adm)。患有多种疾病(多并发症)的患者比单病症患者更容易发生危险。我们提出了下面的归一化和池：</p><p>x t i = A i d 1 + A i d 2 + ⋯ + A i d h | A i d 1 + A i d 2 + ⋯ + A i d h |</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/5-1760195x71_hanspub.png" xlink:type="simple"/></inline-formula>。归一化降低了大量的诊断和干预的影响。</p><p>平均池化admission(mean adm.)。在缺乏主要条件的情况下，平均池可能是一个合理的选择：</p><p>x t = A d 1 + A d 2 + ⋯ + A d h h</p></sec><sec id="s6_3"><title>4.3. LSTM预测模型</title><p>深度学习推动基于电子病历特征提取的疾病诊断预测 [<xref ref-type="bibr" rid="hanspub.33876-ref12">12</xref>] [<xref ref-type="bibr" rid="hanspub.33876-ref13">13</xref>] [<xref ref-type="bibr" rid="hanspub.33876-ref14">14</xref>]，风险预测 [<xref ref-type="bibr" rid="hanspub.33876-ref15">15</xref>] [<xref ref-type="bibr" rid="hanspub.33876-ref16">16</xref>] [<xref ref-type="bibr" rid="hanspub.33876-ref17">17</xref>] 不断发展。本文疾病风险预测模型中，我们使用基本的LSTM单元，其行为由三个门控机制控制：输入门、输出门和遗忘门。基于门值记忆单元在时间t累计从输入vt输入的有用的信息，并将该信息存储在其内部状态。最终从LSTM输出Z(p)是病人P的向量表示。一个全连接softmax层被用于产生预测概率，数学表达如下：</p><p>y ^ p = softmax ( W y z ( p ) + b y ) (10)</p><p>设 θ 为LSTM模型中所有参数的集合，预测概率向量 y ^ p 也可用模型后验分布 P ( y p | X p ; θ ) 表示，其中 y p 是真值。利用真值 y p 与预测概率 y ^ p 之间的交叉熵来计算损失，因此，风险预测的目标函数是交叉熵的平均值：</p><p>L ( θ ) = − 1 | P | ∑ p = 1 | P | ( y p T log ( y ^ p ) + ( 1 − y p ) T log ( 1 − y ^ p ) ) (11)</p></sec></sec><sec id="s7"><title>5. 实验</title><p>电子病历信息经过词嵌入模型处理，将离散的元素嵌入到连续向量空间中，将相同类型的向量合并为单个向量，然后经过上述特定类型的池化操作将其表示为一次入院。</p><p>本文针对疾病风险预测的研究，因此主要考察模型在慢性病上的性能。实验选取基线为，传统机器学习方法随机森林(RF)和深度学习方法的卷积神经网络(CNN)，通过不同模型性能评估方法与本文提出的基于深度学习方法长短期记忆网络(LSTM)形成比对。实验数据选取现有的心脏疾病真实医疗数据集。实验设置医疗代码总数为 | c | = 1016 ，数据集按0.75:0.10:0.15的比例随机划分为训练集、验证集和测试集。将基于NLP中词嵌入模型处理的数据作为上述疾病风险预测模型的输入，通过上述三种模型进行疾病风险的预测，通过对不同模型的性能评估数据进行比对，分析本文提出基于LSTM模型的优势。</p><p>在深度学习模型中，因为引入了参数矩阵，可能会导致过拟合。因此，引入L2范数和Dropout = 0.5来防止过拟合。L2范数正则化，也称为“权重衰减”，用于防止权重参数出现极值。引入一个常数λ来控制正则化的大小。Dropout是DNN的一种正则化方法。训练期间，使用预先定义的概率1 − p (Dropout率)删除单元，其余部分像往常一样通过反向传播进行训练。这就阻止了各单元之间的相互适应，从而防止过拟合。</p><sec id="s7_1"><title>5.1. 实验设置</title><p>实验在windows10操作系统，python3.7.3，基于pytorch框架，运用能够处理长时间依赖性的LSTM模型，参数设置如下表1所示和参数设置如下表2所示的普通卷积神经网络(CNN)模型上运行。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Parameter settings on the prediction model LST</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >Bitch_size</th><th align="center" valign="middle" >32</th><th align="center" valign="middle" >Visit_size</th><th align="center" valign="middle" >256</th></tr></thead><tr><td align="center" valign="middle" >L2_reg</td><td align="center" valign="middle" >0.01</td><td align="center" valign="middle" >Hidden_size</td><td align="center" valign="middle" >128</td></tr><tr><td align="center" valign="middle" >Droupout_rate</td><td align="center" valign="middle" >0.05</td><td align="center" valign="middle" >Cuda_id</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >Log_eps</td><td align="center" valign="middle" >1e-8</td><td align="center" valign="middle" >Use_gpu</td><td align="center" valign="middle" >False</td></tr></tbody></table></table-wrap><p>表1. 预测模型LSTM上的参数设置</p><p>其中，LSTM采用Hidden_size即隐层为128。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Parameter settings on prediction model CN</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >参数名称</th><th align="center" valign="middle" >参数值</th><th align="center" valign="middle" >参数名称</th><th align="center" valign="middle" >参数值</th></tr></thead><tr><td align="center" valign="middle" >Bitch_size</td><td align="center" valign="middle" >32</td><td align="center" valign="middle" >N_filter</td><td align="center" valign="middle" >16</td></tr><tr><td align="center" valign="middle" >L2_reg</td><td align="center" valign="middle" >0.01</td><td align="center" valign="middle" >Fiter_hs</td><td align="center" valign="middle" >[2,3,4,5]</td></tr><tr><td align="center" valign="middle" >Droupout_rate</td><td align="center" valign="middle" >0.05</td><td align="center" valign="middle" >Cuda_id</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >Log_eps</td><td align="center" valign="middle" >1e-8</td><td align="center" valign="middle" >Use_gpu</td><td align="center" valign="middle" >False</td></tr></tbody></table></table-wrap><p>表2. 预测模型CNN上的参数设置</p><p>其中，对于CNN采用N_filter即滤波器的数量为16，Filter_hs即滤波的大小采用大小不等的2，3，4，5进行特征提取。</p></sec><sec id="s7_2"><title>5.2. 实验结果与分析</title><p>对模型运行N_epoch = 10即迭代10次如表3所示。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Experimental result</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >n_epoch</th><th align="center" valign="middle" >mean_cost</th><th align="center" valign="middle" >test_cnn_loss</th><th align="center" valign="middle" >mean_cost</th><th align="center" valign="middle" >test_lstm_loss</th></tr></thead><tr><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0.700642</td><td align="center" valign="middle" >0.664165</td><td align="center" valign="middle" >0.697237</td><td align="center" valign="middle" >0.694940</td></tr><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0.691573</td><td align="center" valign="middle" >0.659424</td><td align="center" valign="middle" >0.693990</td><td align="center" valign="middle" >0.688363</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0.686926</td><td align="center" valign="middle" >0.659424</td><td align="center" valign="middle" >0.687902</td><td align="center" valign="middle" >0.688363</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >0.671121</td><td align="center" valign="middle" >0.659425</td><td align="center" valign="middle" >0.685048</td><td align="center" valign="middle" >0.671891</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >0.656447</td><td align="center" valign="middle" >0.659425</td><td align="center" valign="middle" >0.683142</td><td align="center" valign="middle" >0.659692</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >0.655964</td><td align="center" valign="middle" >0.659957</td><td align="center" valign="middle" >0.682925</td><td align="center" valign="middle" >0.649857</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >0.620882</td><td align="center" valign="middle" >0.659957</td><td align="center" valign="middle" >0.676765</td><td align="center" valign="middle" >0.641257</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >0.614401</td><td align="center" valign="middle" >0.657919</td><td align="center" valign="middle" >0.674915</td><td align="center" valign="middle" >0.641257</td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >0.567315</td><td align="center" valign="middle" >0.643577</td><td align="center" valign="middle" >0.662062</td><td align="center" valign="middle" >0.627468</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >0.583820</td><td align="center" valign="middle" >0.648483</td><td align="center" valign="middle" >0.663815</td><td align="center" valign="middle" >0.608677</td></tr></tbody></table></table-wrap><p>表3. 实验结果</p><p>表3所示，mean_cost分别为CNN模型和LSTM模型的训练集的平均损失，通过交叉熵函数得到CNN和LSTM模型的测试损失如上表所示，选取两模型最小损失值进行比对，LSTM模型明显优于CNN；此外，CNN模型随着epoch的增大，mean_cost减小但测试损失并未明显减小，而LSTM模型表现良好。</p><p>图2. CCN和LSTM模型的损失图像</p><p>图2显示了CNN和LSTM模型的损失变化图像。从图2中，我们看到，LSTM模型的损失相比较于CNN模型在前一阶段下降的更快，在后一阶段相比较于自身前一阶段虽然有减小，但是下降的速度还是明细优于CNN模型，是表3数据的可视化显示，进一步说明本文方法的优势。</p><p>表4呈现三种模型使用精确度、F1分数和AUC作为模型评估指标的结果。我们可以观察到，与两种基线相比，所提出的方法在所有度量值方面都取得了最佳性能。</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Performance evaluation of the three model</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  rowspan="2"  >模型</th><th align="center" valign="middle"  colspan="3"  >性能评估指标</th></tr></thead><tr><td align="center" valign="middle" >Accuracy</td><td align="center" valign="middle" >F1分数</td><td align="center" valign="middle" >AUC</td></tr><tr><td align="center" valign="middle" >RF</td><td align="center" valign="middle" >0.9137</td><td align="center" valign="middle" >0.8444</td><td align="center" valign="middle" >0.8755</td></tr><tr><td align="center" valign="middle" >CNN</td><td align="center" valign="middle" >0.8712</td><td align="center" valign="middle" >0.9260</td><td align="center" valign="middle" >0.8994</td></tr><tr><td align="center" valign="middle" >LSTM</td><td align="center" valign="middle" >0.9339</td><td align="center" valign="middle" >0.8827</td><td align="center" valign="middle" >0.9034</td></tr></tbody></table></table-wrap><p>表4. 三种模型的性能评估</p></sec></sec><sec id="s8"><title>6. 结论与展望</title><p>本文通过对电子病历的处理，实现了入院信息的表示，解决了电子病历时间不规律性，通过LSTM模型对时序信息的处理特征实现了对电子病历信息的长时间依赖性的处理，通过与基线模型，传统机器学习方法随机森林和深度学习方法CNN进行实验比对，结果显示了本文方法的有效性。</p><p>未来，我们将继续针对疾病风险预测进行进一步的研究，努力克服LSTM在处理长久未来方面的缺陷，更好的实现对疾病风险的预测。</p></sec><sec id="s9"><title>基金项目</title><p>国家自然科学基金项目(61972165)；福建省高校创新团队发展计划，福建省研究生导师团队，泉州市高层次人才团队项目(2017ZT012)。</p></sec><sec id="s10"><title>文章引用</title><p>李宁宁,陆 迁,梁 敏,林 栋,莫毓昌. 基于电子病历的疾病风险预测Disease Risk Prediction Based on EHR[J]. 数据挖掘, 2020, 10(01): 47-55. https://doi.org/10.12677/HJDM.2020.101005</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.33876-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Jensen, P.B., Jensen, L.J. and Brunak, S. (2012) Mining Electronic Health Records: Towards Better Research Applica-tions and Clinical Care. Nature Reviews Genetics, 13, 395-405. https://doi.org/10.1038/nrg3208</mixed-citation></ref><ref id="hanspub.33876-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Caroprese, L., Veltri, P., Vocaturo, E. and Zumpano, E. (2018) Deep Learning Techniques for Electronic Health Record Analysis. 2018 9th International Conference on Information, Intelligence, Systems and Applications, Zakynthos, Greece, 23-25 July 2018, 1-4. https://doi.org/10.1109/IISA.2018.8633647</mixed-citation></ref><ref id="hanspub.33876-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Madsen, L.B. (2014) Data-Driven Healthcare: How Analytics and BI Are Transforming the Industry. MIT Technology Review Business Report, 117, 1-19.</mixed-citation></ref><ref id="hanspub.33876-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Madsen, L.B. (2014) Data-Driven Healthcare: How Analytics and BI Are Transforming the Industry. Wiley, New York.</mixed-citation></ref><ref id="hanspub.33876-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Ho, J.C., Ghosh, J. and Sun, J.M. (2014) Marble: High-Throughput Phenotyping from Electronic Health Records via Sparse Nonnegative Tensor Factorization. In: Proceedings of the 20th ACM SIGKDD International Conference on Knowledge Discovery and Data Dining (KDD’14), 115-124.</mixed-citation></ref><ref id="hanspub.33876-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Cheng, Y., Wang, F., Zhang, P. and Hu, J.Y. (2016) Risk Pre-diction with Electronic Health Records: A Deep Learning Approach. Proceedings of the 2016 SIAM International Con-ference on Data Mining (SDM’ 16), Miami, FL, 5-7 May 2016, 432-440. https://doi.org/10.1137/1.9781611974348.49</mixed-citation></ref><ref id="hanspub.33876-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Zhou, J., Wang, F., Hu, J. and Ye, J. (2014) From Micro to Macro: Data Driven Phenotyping by Densification Longitudinal Electronic Medical Records. In: Proceedings of the 20th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, ACM, New York, 135-144. https://doi.org/10.1145/2623330.2623711</mixed-citation></ref><ref id="hanspub.33876-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Wang, F., Zhang, P., Qian, B., Wang, X. and Davidson, I. (2014) Clinical Risk Prediction with Multilinear Sparse Logistic Regression. In: Proceedings of the 20th ACM SIGKDD Inter-national Conference on Knowledge Discovery and Data mining, ACM, New York, 145-154. https://doi.org/10.1145/2623330.2623755</mixed-citation></ref><ref id="hanspub.33876-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Chen, L. (2019) Assertion Detection in Clinical Natural Language Pro-cessing: A Knowledge-Poor Machine Learning Approach. 2019 IEEE 2nd International Conference on Information and Computer Technologies, Kahului, HI, 14-17 March 2019, 37-40. https://doi.org/10.1109/INFOCT.2019.8710921</mixed-citation></ref><ref id="hanspub.33876-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Hochreiter, S. and Schmidhuber, J. (1997) Long Short-Term Memory. Neural Computation, 9, 1735-1780. 
https://doi.org/10.1162/neco.1997.9.8.1735</mixed-citation></ref><ref id="hanspub.33876-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Rumelhart, D.E. (1986) Learning Representations by Back-Propagating Errors. Nature, 323, 533-536. 
https://doi.org/10.1038/323533a0</mixed-citation></ref><ref id="hanspub.33876-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Choi, E., Bahadori, M.T., Searles, E., et al. (2016) Multi-Layer Representa-tion Learning for Medical Concepts. Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, August 2016, 1495-1504. https://doi.org/10.1145/2939672.2939823</mixed-citation></ref><ref id="hanspub.33876-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Choi, E., Bahadori, M., Song, L., et al. (2016) GRAM: Graph-Based Attention Model for Healthcare Representation Learning. Computer Science, 787-795.</mixed-citation></ref><ref id="hanspub.33876-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Ma, F.L., Radha, C. and Zhou, J. (2017) Dipole: Diagnosis Prediction in Healthcare via Attention-based Bidirectional Recurrent Neural Networks. Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, August 2017, 1903-1911. https://doi.org/10.1145/3097983.3098088</mixed-citation></ref><ref id="hanspub.33876-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Che, Z., Cheng, Y., Zhai, S., Sun, Z. and Liu, Y. (2017) Boosting Deep Learning Risk Prediction with Generative Adversarial Networks for Electronic Health Records. 2017 IEEE Inter-national Conference on Data Mining, New Orleans, LA, 18-21 November 2017, 787-792. https://doi.org/10.1109/ICDM.2017.93</mixed-citation></ref><ref id="hanspub.33876-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Choi, E., Bahadori, M.T., Kulas, J.A., Schuetz, A. and Stewart, W.F. (2016) RETAIN: An Interpretable Predictive Model for Healthcare Using Reverse Time Attention Mechanism. Computer Science, 3504-3512.</mixed-citation></ref><ref id="hanspub.33876-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Suo, Q., Ma, F., Yuan, Y., et al. (2017) Personalized Disease Prediction Using a CNN-Based Similarity Learning Method. 2017 IEEE International Conference on Bioinformatics and Biomedicine, Kansas City, MO, 13-16 November 2017, 811-816. https://doi.org/10.1109/BIBM.2017.8217759</mixed-citation></ref></ref-list></back></article>