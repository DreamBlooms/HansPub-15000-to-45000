<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2019.89180</article-id><article-id pub-id-type="publisher-id">AAM-32022</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20190900000_19140384.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  具有可控和依赖位置负荷处理时间的资源约束单机排序问题
  Single Machine Scheduling Problem with Controllable Job Processing Times and Position-Dependent Workloads
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>罗</surname><given-names>成新</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>广东科技学院基础课部，广东 东莞</addr-line></aff><pub-date pub-type="epub"><day>03</day><month>09</month><year>2019</year></pub-date><volume>08</volume><issue>09</issue><fpage>1539</fpage><lpage>1543</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   本文研究具有与任务和位置有关的可控处理时间的凸资源单机排序问题。任务的实际加工时间是所获得的资源量、与任务所在位置有关负荷的函数。考虑两个问题。第一个问题是在资源总量有上界限制条件下，确定任务排序、资源分配方案，使得时间表长最小。第二个问题中资源总量没有限制，目标是求出最小资源总量、任务排序和资源分配方案，使得由时间表长和资源总量加权和取最小值。分别证明了上述问题可以在多项式时间内求出最优解，并给出了求解相应问题的多项式时间最优算法。 This paper concerns with a single-machine scheduling problem in which each processing time of jobs is controllable by allocating a continuously nonrenewable resource. We assume each pro-cessing time of jobs has a workload that is both job and position-dependent. Two problems are investigated. In the first problem, the total amount of resource for processing times does not exceed an upper bound. The objective is to determine the job sequence and the resource allocation scheme to minimize makespan; while in the second problem, the total amount of resource is not limited, the aim is to determine the amount of resource used, the job sequence and the resource allocation scheme to minimize a total weighted cost of makespan and resource amount. We show that the problems can be solved in polynomial time and present optimal algorithms, respectively. 
  
 
</p></abstract><kwd-group><kwd>排序，位置负荷，时间表长，资源分配, Scheduling</kwd><kwd> Position-Dependent Workload</kwd><kwd> Makespan</kwd><kwd> Resource Allocation</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>具有可控和依赖位置负荷处理时间的 资源约束单机排序问题<sup> </sup></title><p>罗成新<sup>1,2</sup></p><p><sup>1</sup>广东科技学院基础课部，广东 东莞</p><p><sup>2</sup>沈阳师范大学数学与系统科学学院，辽宁 沈阳</p><p><img src="//html.hanspub.org/file/5-2621028x1_hanspub.png" /></p><p>收稿日期：2019年8月13日；录用日期：2019年8月28日；发布日期：2019年9月4日</p><disp-formula id="hanspub.32022-formula41"><graphic xlink:href="//html.hanspub.org/file/5-2621028x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文研究具有与任务和位置有关的可控处理时间的凸资源单机排序问题。任务的实际加工时间是所获得的资源量、与任务所在位置有关负荷的函数。考虑两个问题。第一个问题是在资源总量有上界限制条件下，确定任务排序、资源分配方案，使得时间表长最小。第二个问题中资源总量没有限制，目标是求出最小资源总量、任务排序和资源分配方案，使得由时间表长和资源总量加权和取最小值。分别证明了上述问题可以在多项式时间内求出最优解，并给出了求解相应问题的多项式时间最优算法。</p><p>关键词 :排序，位置负荷，时间表长，资源分配</p><disp-formula id="hanspub.32022-formula42"><graphic xlink:href="//html.hanspub.org/file/5-2621028x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/5-2621028x7_hanspub.png" /> <img src="//html.hanspub.org/file/5-2621028x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>排序问题是一类重要的组合最优化问题，在运筹学、计算机科学、管理科学与工业生产等领域中有广泛的应用。在经典排序模型中，工件(任务)的加工时间是固定的，是与加工位置和资源分配无关的常数。不过在实际生产过程中，工件的加工时间可能会在分配给工件一定的资源(如人力，电力，催化剂等)后相应缩短，或者由于操作人员经过多次重复加工而提高了技术后，工作效率提高，加工时间缩短。这一现象称为学习效应。相反的，由于机器在加工大量任务后速度变低，一个任务排在后边加工时间变长。这是所谓的退货效应。总之，这时任务加工时间除了与任务本身有关，还与所处位置有关。这类排序问题在工业生产加工等实际环境中有广泛应用，近年来受到了广泛研究。文 [<xref ref-type="bibr" rid="hanspub.32022-ref1">1</xref>] 研究具有学习效应和资源分配的工期指派单机排序问题；文 [<xref ref-type="bibr" rid="hanspub.32022-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.32022-ref3">3</xref>] 分别在公共流和公共窗口假设下研究具有学习效应和资源分配的单机工期窗口指派排序问题；文 [<xref ref-type="bibr" rid="hanspub.32022-ref4">4</xref>] 在可控加工时间条件下研究具有退化效应的单机排序问题。分别给出了多项式时间的最优算法。</p><p>具有资源分配的排序问题近年来得到了高度的重视。一般资源消费函数有两种：线性资源消费函数和凸资源消费函数。后者能够很好地反映边际效益递减这一广泛存在的经济现象，因而受到学者的重视，有关的研究论文十分丰富。其中文 [<xref ref-type="bibr" rid="hanspub.32022-ref5">5</xref>] 比较全面地介绍了关于可控处理时间的研究论文，包括近期的绝大多数研究成果。</p><p>本文研究具有与任务和位置有关的可控处理时间的凸资源单机排序问题。假定任务的实际加工时间是所获得的资源量、与任务位置有关的负荷的函数。主要考虑两个问题。第一个问题是在资源总量有上界的条件下，确定任务排序、资源分配方案，使得时间表长最小。第二个问题中资源总量没有限制，目标是求出最小资源总量、任务排序和资源分配方案，使得由时间表长和资源总量加权和取最小值。证明了上述问题都可以在多项式时间内求出最优解，并分别给出了求解相应问题的多项式时间最优算法。</p></sec><sec id="s4"><title>2. 问题描述</title><p>设有n个独立的任务(工件) J = { J 1 , J 2 , ⋯ , J n } 需要在一台机器上加工，所有任务在零时刻都已到达。机器在同一时刻最多只能加工一个工件，工件加工不允许中断。用 p j r ( u j ) 表示任务 J j 排在位置r时的实际加工时间，它是资源消耗量 u j 的凸函数</p><p>p j r ( u j ) = ( w j r / u j ) k   ,   u j &gt; 0 ,   j ,   r = 1 , 2 , ⋯ , n</p><p>其中 w j r 为工件 J j 的负荷， u j 是分配给工件 J j 的资源量，k是正常数。定义 π = ( J 1 , J 2 , ⋯ , J n ) 为在一个资源分配 u = ( u 1 , u 2 , ⋯ , u n ) 下所确定的工件排序， C j = C j ( π ) 表示 J j 的完工时间， C max = max { C j | j = 1 , ⋯ , n } 表示时间表长。</p><p>本文研究的第一个问题是在资源总量有上界限制，即 ∑ j = 1 n u j ≤ U 的前提下，决定最优资源分配方案 u = ( u 1 , u 2 , ⋯ , u n ) 及最优排序 π ，使得时间表长</p><p>Z 1 = Z 1 ( π , u ) = C max ( π , u )</p><p>最小，其中 U &gt; 0 是可使用资源总量的上限。用三参数表示法 [<xref ref-type="bibr" rid="hanspub.32022-ref6">6</xref>] 表示如下</p><p>1 | p j r ( u j ) = ( w j r / u j ) k , ∑ j = 1 n u j ≤ U | Z 1 (1)</p><p>在研究的第二个问题中资源总量U没有限制，目标是求出最小资源总量U、任务排序和资源分配方案，使得由时间表长和资源总量确定的目标函数</p><p>Z 2 = Z 2 ( π , u ) = α C max ( π , u ) + β U</p><p>取最小，其中 α ,   β 是已知正常数。用三参数表示法表示如下</p><p>1 | p j r ( u j ) = ( w j r u j ) k | Z 2 (2)</p></sec><sec id="s5"><title>3. 问题(1)的最优解</title><p>下述几个重要结论给出了最优解所具有的性质，它们对于得到最优算法是必不可少的。首先，由于 C max ( π , u ) 是完工时间 C j 的非减函数，从而引理1的结论是显然的。</p><p>引理1 存在最优排序，其中首个任务开始加工时间为0，且两个相邻任务之间无空余时间。</p><p>引入 0 − 1 变量 { x j r : j , r = 1 , 2 , ⋯ , n } ， x j r = 1 ，如果工件 J j 排在位置r上； x j r = 0 ，如果工件 J j 没有排在位置r上。给定 { x j r : j , r = 1 , 2 , ⋯ , n } 后，任务的排序 π 就随之确定了。于是有</p><p>Z 1 ( π , u ) = C max ( π , u ) = ∑ r = 1 n ∑ j = 1 n p j r ( u j ) x j r = ∑ r = 1 n ∑ j = 1 n ( w j r / u j ) k x j r (3)</p><p>引理2 对于固定的 { x j r : j , r = 1 , 2 , ⋯ , n } ，最优资源分配方案 u * = ( u 1 * , u 2 * , ⋯ , u n * ) 由下式给出</p><p>u j ∗ = ( ∑ r = 1 n w j r k x j r ) 1 / ( k + 1 ) ∑ j = 1 n ( ∑ r = 1 n w j r k x j r ) 1 / ( k + 1 ) U ,     j = 1 , 2 , ⋯ , n (4)</p><p>证明 由于(3)式给出的目标函数是关于 u j 的凸函数，并且约束函数 g ( u ) = ∑ j = 1 n u j − U 也是关于 u j 的凸函数，利用凸规划理论，可知最优资源 u 必使 ∑ j = 1 n u j = U ，从而可使用拉格朗日乘子法求解。对于任意给定排序 π ，拉格朗日函数为</p><p>L ( u , λ ) = ∑ r = 1 n ∑ j = 1 n ( w j r / u j ) k x j r + λ { ∑ j = 1 n u j − U } (5)</p><p>其中 λ 为拉格朗日乘子。对(5)式中的所有变量分别求偏导，并令其为零，得到最优资源 u 满足的充分必要条件</p><p>∂ L ( u , λ ) / ∂ λ = ∑ j = 1 n u j − U = 0 (6)</p><p>∂ L ( u , λ ) / ∂ u j = ∂ C max ( u , λ ) / ∂ u j + λ = 0 ,   j = 1 , 2 , ⋯ , n (7)</p><p>由(7)可得</p><p>∂ C max ( u , λ ) / ∂ u j = ∂ C max ( u , λ ) / ∂ u 1 ,   j = 2 , 3 , ⋯ , n</p><p>由此得到</p><p>u j = u 1 ( ∑ r = 1 n w j r k x j r ) 1 / ( k + 1 ) ( ∑ r = 1 n w 1 r k x 1 r ) 1 / ( k + 1 ) ,   j = 2 , ⋯ , n (8)</p><p>将(8)带入(6)，得</p><p>u 1 = ( ∑ r = 1 n w 1 r k x 1 r ) 1 / ( k + 1 ) ∑ j = 1 n ( ∑ r = 1 n w j r k x j r ) 1 / ( k + 1 ) U ,   j = 2 , ⋯ , n (9)</p><p>将(9)带入(8)可得(4)。定理证毕。</p><p>现在将(4)带入(3)中 Z 1 的表达式，得</p><p>Z 1 = U − k ( ∑ j = 1 n ( ∑ r = 1 n w j r k x j r ) 1 / ( k + 1 ) ) k + 1 (10)</p><p>注意到 U &gt; 0 ,   k &gt; 0 都是已知常数，于是上述问题等价于最小化下述函数</p><p>f = ∑ j = 1 n ( ∑ r = 1 n w j r k x j r ) 1 / ( k + 1 ) = ∑ j = 1 n ( ∑ r = 1 n w j r k / ( k + 1 ) x j r )</p><p>其中最后一个等号是利用 { x j r : j , r = 1 , 2 , ⋯ , n } 的性质得到的。于是问题(1)可以转化为下述的指派问题：</p><p>{ Min     ∑ j = 1 n ∑ r = 1 n w j r k / ( k + 1 ) x j r                                           ( 11 ) s .t .   { ∑ r = 1 n x j r = 1 ,   j = 1 , ⋯ , n ∑ j = 1 n x j r = 1 ,     r = 1 , 2 , ⋯ , n ;                                   ( 12 ) x j r ∈ { 1 , 0 } ,   j ,   r = 1 , 2 , ⋯ , n</p><p>因此，对于问题(1)，可以给出如下最优算法。</p><p>算法1</p><p>第1步 解指派问题(11)~(12)求出最优排序 π * ；</p><p>第2步 根据(4)，求出排序 π * 下的最优资源分配 u * = ( u 1 * , u 2 * , ⋯ , u n * ) ；</p><p>第3步 由(10)式，确定最优目标函数值 Z 1 = U − k ( ∑ j = 1 n ( ∑ r = 1 n w j r k x j r ) 1 / ( k + 1 ) ) k + 1 。</p><p>定理1 对于问题(1)，利用算法1可以通过求解指派问题在 O ( n 3 ) 时间内求得最优解。</p><p>证明 上面的分析保证了定理1结论的正确性。第一步可在 O ( n 3 ) 时间内完成，第二步可在 O ( n ) 时间内完成，第三步需要 O ( 1 ) 时间，因此算法总的时间复杂性为 O ( n 3 ) 。定理证毕。</p></sec><sec id="s6"><title>4. 问题(2)的最优解</title><p>本节中目标是在资源总量不受限制的前提下，确定最优资源总量U及其分配方案 u = ( u 1 , u 2 , ⋯ , u n ) 、最优排序 π ，使得时间表长和总资源消耗量组成的目标函数 Z 2 ( π , u ) 取最小值。</p><p>类似于上一节的推导，我们有</p><p>Z 2 ( π , u ) = α C max ( π , u ) + β U = α U − k B k + 1 + β U (13)</p><p>其中 B = ∑ j = 1 n ( ∑ r = 1 n w j r k / ( k + 1 ) x j r ) 与U无关。因此有</p><p>引理3 对于固定的 { x j r : j , r = 1 , 2 , ⋯ , n } ，最优资源总量U由下式给出</p><p>U * = B ( k α / β ) 1 / ( k + 1 ) (14)</p><p>证明 由于对 U &gt; 0 无约束，故U满足</p><p>∂ Z 2 ( π , u ) / ∂ U = β − k α B k + 1 / U k + 1 = 0 ,   ∂ 2 Z 2 ( π , u ) / ∂ U 2 = α k ( k + 1 ) B ( k + 1 ) U − ( k + 2 ) &gt; 0</p><p>由此可得(14)。引理证毕。</p><p>将(14)带入(13)中目标的函数 Z 2 ，可得</p><p>Z 2 ∗ = [ ( β α 1 / k / k ) k / ( k + 1 ) + ( k α β k ) 1 / ( k + 1 ) ] B = L B</p><p>其中 L = ( β α 1 / k / k ) k / ( k + 1 ) + ( k α β k ) 1 / ( k + 1 ) &gt; 0 。注意到L是已知常数，因此，对于问题(2)，可以给出如下最优算法。</p><p>算法2</p><p>第1步 解指派问题(11)~(12)求出最优排序 π * ；</p><p>第2步 根据(14)，求出排序 π * 下的最优资源总量 U * ；</p><p>第3步 根据(4)，求出排序 π * 下的最优资源分配 u * = ( u 1 * , u 2 * , ⋯ , u n * ) 。</p><p>定理2 利用算法2可以通过求解指派问题在 O ( n 3 ) 时间内求得问题(2)的最优解。</p><p>证明 上面的分析保证了定理2结论的正确性。因为求解指派问题(11)~(12)需要 O ( n 3 ) 时间，第2步可在 O ( 1 ) 时间内完成，第3步需要 O ( n ) 时间，于是求解问题(2)的时间复杂度为 O ( n 3 ) 。定理证毕。</p></sec><sec id="s7"><title>基金项目</title><p>国家自然科学基金(11171050)。</p></sec><sec id="s8"><title>文章引用</title><p>罗成新. 具有可控和依赖位置负荷处理时间的资源约束单机排序问题Single Machine Scheduling Problem with Controllable Job Processing Times and Position-Dependent Workloads[J]. 应用数学进展, 2019, 08(09): 1539-1543. https://doi.org/10.12677/AAM.2019.89180</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.32022-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Lu, Y.Y, Li, G., Wu, Y.B. and Ji, P. (2014) Optimal Due-Date Assignment Problem with Learning Effect and Re-source-Dependent Processing Times. Optimization Letters, 8,113-127. &lt;br&gt;https://doi.org/10.1007/s11590-012-0467-7</mixed-citation></ref><ref id="hanspub.32022-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Li, G., Luo, M.L., Zhang, W.J. and Wang, X.Y. (2015) Sin-gle-Machine Due-Window Assignment Scheduling Based on Common Flow Allowance, Learning Effect and Resource Allocation. International Journal of Production Research, 4, 1228-1241. &lt;br&gt;https://doi.org/10.1080/00207543.2014.954057</mixed-citation></ref><ref id="hanspub.32022-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Wang, J.B. and Wang, M.Z. (2014) Single-Machine Due-Window Assignment and Scheduling with Learning Effect and Resource-Dependent Processing Times. Asia-Pacific Journal of Operational Research, 31, Article ID: 1450036.  
&lt;br&gt;https://doi.org/10.1142/S0217595914500365</mixed-citation></ref><ref id="hanspub.32022-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Oron, D. (2014) Scheduling Controllable Processing Time Jobs in a Deteriorating Environment. Journal of the Operational Research Society, 65, 49-56. &lt;br&gt;https://doi.org/10.1057/jors.2013.5</mixed-citation></ref><ref id="hanspub.32022-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Shabtay, D. and Steiner G. (2007) A Survey of Scheduling with Control-lable Processing Times. Discrete Applied Mathematics, 155, 1643-1666. &lt;br&gt;https://doi.org/10.1016/j.dam.2007.02.003</mixed-citation></ref><ref id="hanspub.32022-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Graham, R.L., Lawler, E.L., Lenstra, J.K. and Rinnooy Kan, A.H.G. (1979) Optimization and Approximation in Deterministic Sequencing and Scheduling: A Survey. Annals of Discrete Mathematics, 3, 287-326. 
&lt;br&gt;https://doi.org/10.1016/S0167-5060(08)70356-X</mixed-citation></ref></ref-list></back></article>