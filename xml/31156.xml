<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">JISP</journal-id><journal-title-group><journal-title>Journal of Image and Signal Processing</journal-title></journal-title-group><issn pub-type="epub">2325-6753</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/JISP.2019.83018</article-id><article-id pub-id-type="publisher-id">JISP-31156</article-id><article-categories><subj-group subj-group-type="heading"><subject>JISP20190300000_20429730.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于FPGA的静脉图像双边滤波算法
  Bilateral Filter Algorithm of Vein Image Based on FPGA
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>梁</surname><given-names>岳青</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>崔</surname><given-names>笑宇</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>东北大学，中荷生物医学与信息工程学院，辽宁 沈阳</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>02</day><month>07</month><year>2019</year></pub-date><volume>08</volume><issue>03</issue><fpage>130</fpage><lpage>135</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    双边滤波算法在给手背静脉图像进行去噪、平滑的同时可以保持静脉血管的边缘细节。基于FPGA的双边滤波算法，可以利用FPGA的并行和流水线计算的特点，加快算法的计算速度，在满足手背静脉显像系统对于实时性要求的同时，增强手背静脉图像，为后续的血管分割和提取奠定基础。
    The bilateral filter algorithm reduces noise in hand vein image while preserving edge details of vein. By implementing the bilateral filter algorithm on FPGA, features of FPGA such as parallel and pipeline processing can boost the calculation speed of the algorithm. While satisfying the real-time requirements of hand vein imaging system, this implementation can enhance the hand vein image for subsequent segmentation and extraction of vein. 
  
 
</p></abstract><kwd-group><kwd>双边滤波，FPGA，手背静脉，图像处理, Bilateral Filter</kwd><kwd> FPGA</kwd><kwd> Hand Vein</kwd><kwd> Image Processing</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于FPGA的静脉图像双边滤波算法<sup> </sup></title><p>梁岳青，崔笑宇<sup>*</sup></p><p>东北大学，中荷生物医学与信息工程学院，辽宁 沈阳</p><p><img src="//html.hanspub.org/file/4-2670187x1_hanspub.png" /></p><p>收稿日期：2019年6月12日；录用日期：2019年6月29日；发布日期：2019年7月5日</p><disp-formula id="hanspub.31156-formula25"><graphic xlink:href="//html.hanspub.org/file/4-2670187x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>双边滤波算法在给手背静脉图像进行去噪、平滑的同时可以保持静脉血管的边缘细节。基于FPGA的双边滤波算法，可以利用FPGA的并行和流水线计算的特点，加快算法的计算速度，在满足手背静脉显像系统对于实时性要求的同时，增强手背静脉图像，为后续的血管分割和提取奠定基础。</p><p>关键词 :双边滤波，FPGA，手背静脉，图像处理</p><disp-formula id="hanspub.31156-formula26"><graphic xlink:href="//html.hanspub.org/file/4-2670187x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/4-2670187x8_hanspub.png" /> <img src="//html.hanspub.org/file/4-2670187x9_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>皮下静脉穿刺是常见的医疗手段之一，在静脉采血、输血、注射药物之前都需要对患者进行皮下静脉的穿刺。但是，许多因素会影响到皮下静脉穿刺的成功率，如儿童静脉纤细、深色皮肤等。手背静脉显像技术可以帮助医护人员找到血管，提高皮下静脉穿刺的成功率。主流的手背静脉成像技术基于近红外成像技术，利用了静脉血管中的血红蛋白对于700 nm~900 nm的近红外光的吸收率高于水、脂肪等周围的皮肤组织的特性 [<xref ref-type="bibr" rid="hanspub.31156-ref1">1</xref>] 。由于光强、光照角度、手背皮肤散射、个体手背厚薄等因素，静脉血管和周围的皮肤组织之间的分界不够明显，图像的对比度较低且噪声较多。噪声会影响后续的血管分割提取，导致静脉血管细节的模糊或缺失，因此需要在保证图像中静脉血管的细节特征不受影响下对图像中的噪声进行滤除。现如今，双边滤波由于其能够为图像去噪的同时保留图像的边缘信息而被越来越多地使用，该方法非常适合于手背静脉图像的去噪处理。考虑到手背静脉显像的实时性要求较高，双边滤波用软件实现比较慢，因此采用硬件实现能达到更快的处理速度和显示效果。随着近年来芯片工艺的发展，FPGA的性能不断提高，使用成本大幅降低。用户可以根据需求使用软件设计出硬件逻辑，并利用FPGA中集成的资源帮助图像采集及运算，降低了开发难度。利用FPGA的并行以及流水线处理的特点，可以有效地提高双边滤波算法的计算速度 [<xref ref-type="bibr" rid="hanspub.31156-ref2">2</xref>] 。本文利用双边滤波的优点，在FPGA上实现了双边滤波的算法，能够有效地对手背静脉图像进行去噪，提高手背静脉图像的清晰度。</p></sec><sec id="s4"><title>2. 双边滤波算法</title><p>双边滤波是一种结合了空间邻近关系和亮度相似度的滤波器。空间邻近度滤波器通过平均滤波器窗口中心点邻域的像素值，起到低通滤波器的作用，对图像进行平滑。而亮度相似度滤波器只允许平均相似的像素值，假如滤波器窗口内的像素与中心像素的像素值相差较大，该像素则会被忽略，起到保持边缘的作用。因此，双边滤波器既平滑了图像，又保持了图像的边缘。</p><p>双边滤波由下式定义：</p><p>ϕ &#175; ( m 0 &#175; ) = 1 k ( m 0 ) ∑ m ∈ F ϕ ( m ) ⋅ s ( ϕ ( m 0 ) , ϕ ( m ) ) ⋅ c ( m 0 , m ) (1)</p><p>定义m = (x, y)代表像素的坐标，m<sub>0</sub> = (x<sub>0</sub>, y<sub>0</sub>)和 m 0 &#175; = ( x 0 &#175; , y 0 &#175; ) 分别代表滤波前后中心像素的坐标。因此，式中 ϕ &#175; ( m 0 &#175; ) 为滤波后中心像素的像素值， ϕ ( m ) 和 ϕ ( m 0 ) 分别为滤波窗口F中邻域像素和中心像素的像素值。</p><p>s ( ϕ ( m 0 ) , ϕ ( m ) ) = e − 1 2 ( ‖ ϕ ( m 0 ) − ϕ ( m ) ‖ σ p h ) 2 (2)</p><p>c ( m 0 , m ) = e − 1 2 ( ‖ m 0 − m ‖ σ c ) 2 (3)</p><p>式(2)和(3)分别称之为亮度相似度算子和空域邻近度算子 [<xref ref-type="bibr" rid="hanspub.31156-ref3">3</xref>] 。式中，σ<sub>ph</sub>和σ<sub>c</sub>定义了高斯曲线的宽度，决定了双边滤波器的性能 [<xref ref-type="bibr" rid="hanspub.31156-ref4">4</xref>] 。亮度相似度算子比较每个邻域像素与中心像素的灰度值，基于σ<sub>ph</sub>因子计算出相应权重系数。当像素值差值的绝对值越大，相应的权重系数越小，反之亦然。空域邻近度算子是一个低通滤波器，其权重与中心像素与邻域像素的空间距离成反比。两种权重相结合，每个像素由其邻近点的加权平均代替。</p><p>k ( m 0 ) = ∑ m ∈ F S ( ϕ ( m 0 ) , ϕ ( m ) ) ⋅ c ( m 0 , m ) (4)</p><p>式(4)对加权后的像素值进行归一化，保证滤波后的图像灰度级保持在原来的范围。</p></sec><sec id="s5"><title>3. 双边滤波算法的FPGA实现</title><sec id="s5_1"><title>3.1. 双边滤波处理步骤</title><p>双边滤波算法实现的总体框图如图1所示，图像逐个像素从SDRAM中读入。为了形成N &#215; N大小的窗口，输入的像素需要先经过N − 1个图像宽度的行缓存，再逐列输出到N &#215; N的窗口寄存器中。窗口寄存器中的每个像素点分别输入到各自的亮度相似度算子，并行计算出亮度相似度权重系数，并与已知的空域邻近度权重系数相乘。计算出权重系数后，每个像素与相应权重系数相乘，然后分别对加权像素值与权重系数求和，二者相除得到双边滤波后的图像。</p><p>图1. 算法处理步骤流程图</p></sec><sec id="s5_2"><title>3.2. 亮度相似度权重系数计算</title><p>根据式(2)，计算亮度相似度权重系数需要复杂的指数运算。在FPGA中实现指数运算的常用函数有CORDIC算法、分段线性逼近法等，然而其计算范围小、精度差，而且需要耗费大量硬件资源和运算周期 [<xref ref-type="bibr" rid="hanspub.31156-ref5">5</xref>] 。而查表法是根据精度要求计算出结果，并将结果预先写入查找表(LUT)中，然后在计算时通过查表在1个时钟周期可以直接得到结果。因此使用查表法查找权重系数预先的计算结果代替权重系数的直接计算，可以有效地减少了资源的消耗和计算的时间。</p><p>根据式(2)，两个像素值的差值可以作为查找表中的相应权重系数的查找地址，且权重系数的数量是有限的，并受到下列三个参数的影响：</p><p>1) 像素值的位宽N；</p><p>2) 参数σ<sub>ph</sub>；</p><p>3) 权重系数的位宽W；</p><p>提升图像的像素值位宽，会导致像素值差值的数量增多，预先存入查找表中的权重系数的数量会增加。参数σ<sub>ph</sub>会决定高斯曲线的陡峭程度，与权重系数的位宽共同影响计算精度。根据指数的性质，亮度相似度权重与空间邻近度权重的取值范围为 0 &lt; s ( ϕ ( m 0 ) , ϕ ( m ) ) &lt; 1 与 0 &lt; c ( m 0 , m ) &lt; 1 ，因此使用定点数代替浮点数来表示权重系数。当像素值差值越大，负指数向零收敛，此时只有有限数量的权重系数大于零。在权重系数的位宽W下，对权重系数采取四舍五入，并将最后一个大于0的权重系数所对应的像素值差值定为极限值。假设像素值位宽N = 8，像素值差值的可取0~255，权重系数总共有256个值，查找表深度为256，权重系数位宽W = 8，消耗256 &#215; 8 bit的存储器资源。如图2所示，此时像素值差值90为极限值，只有90个权重系数会被存储到查找表，消耗的存储器资源随之减少。</p><p>图2. 数量有限的权重系数</p><p>亮度相似度权重系数计算步骤如图3所示，窗口寄存器中的邻域像素 ϕ ( m ) 中心像素 ϕ ( m 0 ) 相减，得到像素值差值来查找基于特定σ<sub>ph</sub>计算出的亮度相似度权重系数表，得到像素m对应的亮度相似度权重系数p(m)。若像素值差值超过极限值，将跳过查表，输出结果0。</p><p>图3. 亮度相似度算子</p></sec><sec id="s5_3"><title>3.3. 空间邻近度权重系数计算</title><p>根据式(3)，计算空间邻近度权重系数与亮度相似度权重系数相似，需要进行复杂的指数运算。空间邻近度权重系数对于特定大小的窗口是恒定的，而且在水平和垂直方向上对称，可预先计算好结果。如图4所示，对于3 &#215; 3大小的窗口，只需计算空间距离为0、1、2的权重系数，根据像素的空间位置直接查表可得相应的空间邻近度权重系数g(m)，并与上一步的亮度相似度权重系数相乘得到每个像素的综合权重系数w(m)。</p></sec><sec id="s5_4"><title>3.4. 归一化</title><p>根据式(1)和式(4)，加权后的像素值和权重系数分别需要进行累加，二者相除进行归一化。如图5与图6所示，采用累加树的形式对加权像素值和权重系数分别累加，对于3 &#215; 3大小的窗口，需要消耗4个时钟周期得到累加结果，最后二者相除得到双边滤波后的像素值。</p><p>图4. 空间邻近度算子</p><p>图5. 累加树结构</p><p>图6. 加权像素值的归一化</p></sec></sec><sec id="s6"><title>4. 实验结果</title><p>采用Intel Cyclone IV E系列的EP4CE22F17C8芯片实现算法，在752 &#215; 480的图像分辨率，及5 &#215; 5窗口大小的参数下，双边滤波模块总共消耗了3038个逻辑寄存器，79440位RAM存储资源，及72个乘法器资源。使用Matlab对8位的752 &#215; 480分辨率大小的手背静脉图像添加σ<sub>noise</sub> = 0.5的高斯噪声，用ModelSim对图像进行双边滤波仿真，双边滤波器中参数分别为：σ<sub>ph</sub> = 25，σ<sub>c</sub> = 25，W = 8，另使用相同参数的高斯滤波对噪声图像进行处理作为比较。实验结果如图7所示，经过双边滤波后图像得到平滑，双边滤波的去噪效果良好，且相较于高斯滤波这一常见的图像去噪方法，保持了手背静脉血管的结构和边缘。由于流水线设计的特点，在25 MHz的时钟频率下，FPGA计算一帧图像需要耗费14 ms，每秒能计算超过60帧图像，保证了系统的实时性。</p><p>图7. 双边滤波与高斯滤波处理后图像</p></sec><sec id="s7"><title>5. 结论</title><p>本文采用双边滤波算法对手背静脉图像进行滤波，与传统的高斯滤波方法相比，能滤除图像中噪声的同时保持了血管的结构和边缘，为后续的静脉血管分割和提取奠定良好基础。在FPGA上实现的双边滤波算法，利用FPGA并行和流水线计算的优点，提升了算法运算速度，满足了手背静脉显像系统实时性的需求，并提高了图像的清晰度。该算法能广泛应用于图像处理领域，具有良好的应用前景。</p><p>不足之处在于，目前本文在FPGA上实现的双边滤波算法不能动态地调节参数，只能作算法的验证，未来需要加入窗口大小以及权重系数结果进行动态调整。</p></sec><sec id="s8"><title>致谢</title><p>非常感谢2018国家级大学生创新创业计划资助项目(2018101450201)对本文的资助。</p></sec><sec id="s9"><title>文章引用</title><p>梁岳青,崔笑宇. 基于FPGA的静脉图像双边滤波算法Bilateral Filter Algorithm of Vein Image Based on FPGA[J]. 图像与信号处理, 2019, 08(03): 130-135. https://doi.org/10.12677/JISP.2019.83018</p></sec><sec id="s10"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.31156-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">朱东莹, 吕勇, 沈俊杰. 基于近红外光的静脉深度估算研究[J]. 科技创新与应用, 2018(28): 18-21.</mixed-citation></ref><ref id="hanspub.31156-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">白书华. 基于FPGA的实时图像采集和去噪系统设计[J]. 航天器环境工程, 2016, 33(2): 163-166.</mixed-citation></ref><ref id="hanspub.31156-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">王玉灵. 基于双边滤波的图像处理算法研究[D]: [硕士学位论文]. 西安: 西安电子科技大学, 2010.</mixed-citation></ref><ref id="hanspub.31156-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">公羽, 吕志鹏. 基于双边滤波的点云数据预处理方法[J]. 测绘与空间地理信息, 2016, 39(1): 125-127.</mixed-citation></ref><ref id="hanspub.31156-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">乔峰, 张慧欣. 一种基于FPGA硬件求解函数的简化方法[J]. 电子科学技术, 2015, 2(5): 532-537.</mixed-citation></ref></ref-list></back></article>