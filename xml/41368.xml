<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">PM</journal-id><journal-title-group><journal-title>Pure  Mathematics</journal-title></journal-title-group><issn pub-type="epub">2160-7583</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/PM.2021.113049</article-id><article-id pub-id-type="publisher-id">PM-41368</article-id><article-categories><subj-group subj-group-type="heading"><subject>PM20210300000_69377459.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  正则化Consensus问题的收敛性证明
  Convergence Proof of Regularized Consensus Problems
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>刘</surname><given-names>玉洁</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>毕</surname><given-names>文静</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>炎</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>俞</surname><given-names>露</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>伟南</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>巢湖学院数学与统计学院，安徽 合肥</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>18</day><month>03</month><year>2021</year></pub-date><volume>11</volume><issue>03</issue><fpage>371</fpage><lpage>376</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    交替方向乘子法(ADMM算法)是求解可分离凸优化问题的一种有效方法。该算法利用目标函数的可分性，将原问题拆分成若干个极小化的子问题，然后交替迭代求解。而一致性(Consensus)问题是求解大数据问题的重要的一种形式，本文提出了一种正则化的一致性问题，给出了其迭代过程，并在适当的假设下，证明了其收敛性。&lt;br&gt;Alternating direction multiplier method (ADMM algorithm) is an effective method to solve sepa-rable convex optimization problems. The algorithm USES the separability of the objective function to divide the original problem into several minimization subproblems and then solve them alter-nately iteratively. Consensus is an important form of solving big data problems. In this paper, a regularized consistency problem is proposed, its iterative process is given, and its convergence is proved under appropriate assumptions. 
  
 
</p></abstract><kwd-group><kwd>ADMM，Consensus，收敛性, ADMM</kwd><kwd> Consensus</kwd><kwd> The Convergence</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>交替方向乘子法(ADMM算法)是求解可分离凸优化问题的一种有效方法。该算法利用目标函数的可分性，将原问题拆分成若干个极小化的子问题，然后交替迭代求解。而一致性(Consensus)问题是求解大数据问题的重要的一种形式，本文提出了一种正则化的一致性问题，给出了其迭代过程，并在适当的假设下，证明了其收敛性。</p></sec><sec id="s2"><title>关键词</title><p>ADMM，Consensus，收敛性</p></sec><sec id="s3"><title>Convergence Proof of Regularized Consensus Problems</title><p>Yujie Liu, Wenjing Bi, Yan Zhang, Lu Yu, Weinan Li</p><p>College of Mathematics and Statistics, Chaohu University, Hefei Anhui</p><p><img src="//html.hanspub.org/file/9-1251223x4_hanspub.png" /></p><p>Received: Feb. 18<sup>th</sup>, 2021; accepted: Mar. 19<sup>th</sup>, 2021; published: Mar. 30<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/9-1251223x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>Alternating direction multiplier method (ADMM algorithm) is an effective method to solve separable convex optimization problems. The algorithm USES the separability of the objective function to divide the original problem into several minimization subproblems and then solve them alternately iteratively. Consensus is an important form of solving big data problems. In this paper, a regularized consistency problem is proposed, its iterative process is given, and its convergence is proved under appropriate assumptions.</p><p>Keywords:ADMM, Consensus, The Convergence</p><disp-formula id="hanspub.41368-formula71"><graphic xlink:href="//html.hanspub.org/file/9-1251223x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/9-1251223x7_hanspub.png" /> <img src="//html.hanspub.org/file/9-1251223x8_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>乘子交替方向法(ADMM)是一种求解线性约束凸优化问题的高效算法，由Glowinski等 [<xref ref-type="bibr" rid="hanspub.41368-ref1">1</xref>] 及Gabay等 [<xref ref-type="bibr" rid="hanspub.41368-ref2">2</xref>] 分别于1975年和1976年提出。该算法首先构造原问题的增广拉格朗日函数，每个迭代步由多个子问题构成，每个子问题对于增广拉格朗日函数关于1块变量进行极小化，当所有子问题求解结束后更新乘子(对偶变量)。该算法收敛速度较快，且子问题规模较小、计算量较低，因而该算法的计算效率较高，已被广泛应用于求解信息科学、统计学、机器学习等领域的多种优化问题，如矩阵完整化问题、图像去模糊去噪问题、协方差矩阵校正问题等 [<xref ref-type="bibr" rid="hanspub.41368-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.41368-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.41368-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.41368-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.41368-ref7">7</xref>]。斯坦福大学Boyd等 [<xref ref-type="bibr" rid="hanspub.41368-ref6">6</xref>] 于2011年对ADMM进行了综述，并指出该算法适合求解大规模分布式优化问题。</p><p>所谓全局变量一致性优化问题，即目标函数根据数据分解成N子目标函数(子系统)，每个子系统和子数据都可以获得一个参数解，但是全局解只有一个z，于是就可以写成如下优化命题：</p><p>min                                     ∑ i = 1 N f i ( x i ) s .t .                                             x i − z = 0 , i = 1 , ⋯ , N</p><p>注意，此时仍是凸函数，而并不是对参数空间进行划分，这里是对数据而言，所以维度一样，与之前的问题并不太一样。这种问题其实就是所谓的并行化处理，或分布式处理，希望从多个分块的数据集中获取相同的全局参数解。</p><p>在ADMM算法框架下(先返回最初从扩增lagrangian导出的ADMM)，这种问题解法相当明确：</p><p>L ρ ( x 1 , ⋯ , x N , z , y ) = ∑ i = 1 N ( f i ( x i ) + y i T ( x i − z ) + ( ρ / 2 ) ‖ x i − z ‖ 2 2 ) s .t .                                               C = { ( x 1 , ⋯ , x N ) | x 1 = ⋯ = x N }</p><p>从而迭代结果为</p><p>x i k + 1 = arg min x i ( f i ( x i ) + y i k T ( x i − z k ) + ( ρ / 2 ) ‖ x i − z k ‖ 2 2 ) z k + 1 = 1 N ∑ i = 1 N ( x i k + 1 + ( 1 / ρ ) y i k ) y i k + 1 = y i k + ρ ( x i k + 1 − z k + 1 )</p><p>对y-update和z-update的和分别求个平均，易得，于是可以知道z-update步其实可以简化为，于是上述ADMM其实可以进一步化简为如下形式：</p><p>x i k + 1 = arg min x i ( f i ( x i ) + y i k T ( x i − x &#175; k ) + ( ρ / 2 ) ‖ x i − x &#175; k ‖ 2 2 ) y i k + 1 = y i k + ρ ( x i k + 1 − x &#175; k + 1 )</p><p>这种迭代算法写出来了，并行化那么就是轻而易举了，各个子数据分别并行求最小化，然后将各个子数据的解汇集起来求均值，整体更新对偶变量，然后再继续回带求最小值至收敛。当然也可以分布式部署(hadoop化)，但是说起来容易，真正工程实施起来又是另外一回事，各个子节点机器间的通信更新是一个需要细细揣摩的问题。</p><p>另外，对于全局一致性优化，也需要给出相应的终止迭代准则，与一般的ADMM类似，这里的primal和dual的residuals为</p><p>r k = ( x 1 k − x &#175; k , ⋯ , x N k − x &#175; k ) ,                                 s k = − ρ ( x &#175; k − x &#175; k − 1 , ⋯ , x &#175; k − x &#175; k − 1 )</p><p>从而2-norm为</p><p>‖ r k ‖ 2 2 = ∑ i = 1 N ‖ x i − x &#175; k ‖ 2 2 ,                                                   ‖ s k ‖ 2 2 = N ρ 2 ‖ x &#175; k − x &#175; k − 1 ‖ 2 2</p><p>本文主要考虑正则化的Consensus问题，即在目标函数后面加个正则项g(z)，并且这个正则项存在偏导数。证明提出的正则化的一致性算法的收敛性，给出了详细证明。</p></sec><sec id="s6"><title>2. 正则化的Consensus问题</title><p>下面就是要将之前所谈到的经典的机器学习算法并行化起来。想法很简单，就是对全局变量加上正则项即可，</p><p>min                                     ∑ i = 1 N f i ( x i ) + g ( z ) s .t .                                             x i − z = 0 , i = 1 , ⋯ , N</p><p>首先构建非增广的Lagrangian L 0 有</p><p>L 0 ( x 1 , ⋯ , x N , z , y ) = ∑ i = 1 N ( f i ( x i ) + y i T ( x i − z ) ) + g ( z ) ，</p><p>从而增广的Lagrangian L ρ 有</p><p>L ρ ( x 1 , ⋯ , x N , z , y ) = ∑ i = 1 N ( f i ( x i ) + y i T ( x i − z ) + ( ρ / 2 ) ‖ x i − z ‖ 2 2 ) + g ( z ) .</p><p>因此ADMM算法只需要改变下z-update步即可</p><p>x i k + 1 = arg min x i ( f i ( x i ) + y i k T ( x i − z k ) + ( ρ / 2 ) ‖ x i − z k ‖ 2 2 ) z k + 1 = arg min z ( g ( z ) + ∑ i = 1 N − y i k T z + ( ρ / 2 ) ‖ x i k + 1 − z ‖ 2 2 ) y i k + 1 = y i k + ρ ( x i k + 1 − z k + 1 )</p><p>同样的，我们仍对z做一个平均处理，于是就有</p><p>z k + 1 = arg min z ( g ( z ) + ( N ρ / 2 ) ‖ z − x &#175; k + 1 − ( 1 / ρ ) y &#175; k ‖ 2 2 )</p><p>上述形式都取得是最原始的ADMM形式，简化处理，写成scaled形式即有</p><p>x i k + 1 = arg min x i ( f i ( x i ) + ( ρ / 2 ) ‖ x i − z k + u i k ‖ 2 2 ) z k + 1 = arg min z ( g ( z ) + ( N ρ / 2 ) ‖ z − x &#175; k + 1 − u &#175; k ‖ 2 2 ) u i k + 1 = u i k + x i k + 1 − z k + 1</p><p>这样对于后续处理问题就清晰明了多了。可以看到如果 g ( z ) = λ ‖ z ‖ 1 ，即lasso问题，那么z-update步就用软阈值operator即</p><p>z k + 1 = S λ / N ρ ( x &#175; k + 1 − ( 1 / ρ ) y &#175; k )</p><p>因此，对于大规模数据，要想用lasso等算法，只需要对数据做切块(切块也最好切均匀点)，纳入到全局变量一致性的ADMM框架中，即可并行化处理。</p></sec><sec id="s7"><title>3. 项收敛性证明</title><p>本部分主要说明上述算法的收敛性，在证明之前首先给出一些符号说明及条件假设。</p><p>符号说明：令 ( x 1 , ⋯ , x N , y , z ) 为 ( x , y , z ) ， f ( x ) = ∑ i = 1 n f ( x i ) 。</p><p>假设1：函数 f i , g 是偏导数存在的凸函数。</p><p>假设2：非增广的Lagrangian L 0 存在鞍点，即存在 ( x * , y * , z * ) ，对任意的 ( x , y , z ) 使得：</p><p>L 0 ( x * , y , z * ) ≤ L 0 ( x * , y * , z * ) ≤ L 0 ( x , y * , z )</p><p>定理：在满足上述假设条件1，2和上述算法的迭代过，当 k → ∞ ，</p><p>r k → 0 , z k + 1 − z k → 0</p><p>从而我们有</p><p>lim k → ∞ p k = p *</p><p>证明：</p><p>部分1</p><p>因为 ( x * , y * , z * ) 是函数 L 0 的鞍点，所以有：</p><p>L 0 ( x * , z * , y * ) ≤ L 0 ( x k + 1 , z k + 1 , y * ) (1)</p><p>再利用 x * − z * = 0 ，令</p><p>p k + 1 = f ( x k + 1 ) + g ( z k + 1 ) ， p * = f ( x * ) + g ( z * )</p><p>从而(1)式有</p><p>p * ≤ p k + 1 + y * T r k + 1 (2)</p><p>部分2</p><p>通过定义我们知道， x k + 1 是 L ρ ( x , z k , y k ) 的极小值。由于f是可偏导的凸函数。所以：</p><p>0 ∈ ∂ L ρ ( x k + 1 , z k , y k ) = ∂ f ( x k + 1 ) + y k + ρ ( x k + 1 − z k )</p><p>又因为 y k + 1 = y k + ρ r k + 1 ，所以有 y k = y k + 1 + ρ r k + 1 ，从而</p><p>0 ∈ ∂ L ρ ( x k + 1 , z k , y k ) = ∂ f ( x k + 1 ) + y k + 1 − ρ ( z k + 1 − z k )</p><p>这里表明 x k + 1 是下面这个函数的极小值</p><p>f ( x ) + y k + 1 − ρ ( z k + 1 − z k ) x (4)</p><p>与上面相似的证法可以说明 z k + 1 是函数 g ( z ) + y ( k + 1 ) T z 的极小值。结合(4)式有</p><p>f ( x k + 1 ) + y k + 1 − ρ ( z k + 1 − z k ) x k + 1 ≤ f ( x * ) + y k + 1 − ρ ( z k + 1 − z k ) x * (5)</p><p>g ( z k + 1 ) + y ( k + 1 ) T z k + 1 ≤ g ( z * ) + y ( k + 1 ) T z * (6)</p><p>再结合 x * − z * = 0 ，结合(5)和(6)式有</p><p>p k + 1 − p * ≤ − ( y k + 1 ) T r k + 1 − ρ ( z k + 1 − z k ) T ( − r k + 1 + z k + 1 − z * ) (7)</p><p>证明3</p><p>结合(2)和(7)有</p><p>2 ( y k + 1 − y * ) T r k + 1 − 2 ρ ( z k + 1 − z k ) T r k + 1 + 2 ρ ( z k + 1 − z k ) T ( z k + 1 − z * ) ≤ 0 (8)</p><p>对于(8)式中的第一部分利用 y k + 1 = y k + ρ r k + 1 有</p><p>2 ( y k − y * ) T r k + 1 + ρ ‖ r k + 1 ‖ 2 2 + ρ ‖ r k + 1 ‖ 2 2 (9)</p><p>再利用 r k + 1 = ( 1 / ρ ) ( y k + 1 − y k ) ，因此(9)式中的前两部分有</p><p>( 2 / ρ ) ( y k − y * ) T ( y k + 1 − y k ) + ( 1 / ρ ) ‖ y k + 1 − y k ‖ 2 2 + ρ ‖ r k + 1 ‖ 2 2</p><p>又因为 y k + 1 − y k = ( y k + 1 − y * ) − ( y k − y * ) ，从而上式变为</p><p>( 1 / ρ ) ( ‖ y k + 1 − y * ‖ 2 2 − ‖ y k − y * ‖ 2 2 ) + ρ ‖ r k + 1 ‖ 2 2 (10)</p><p>接下来，整理(8)和(9)式中剩下的部分，即</p><p>ρ ‖ r k + 1 ‖ 2 2 − 2 ρ ( z k + 1 − z k ) T r k + 1 + 2 ρ ( z k + 1 − z k ) T ( z k − z * )</p><p>再利用 z k + 1 − z * = ( z k + 1 − z k ) − ( z k − z * ) ，有</p><p>ρ ‖ r k + 1 − ( z k + 1 − z k ) ‖ 2 2 + ρ ‖ z k + 1 − z k ‖ 2 2 + 2 ρ ( z k + 1 − z k ) T ( z k − z * )</p><p>再结合 z k + 1 − z k = ( z k + 1 − z * ) − ( z k − z * ) ，从而有</p><p>ρ ‖ r k + 1 − ( z k + 1 − z k ) ‖ 2 2 + ρ ( ‖ z k + 1 − z * ‖ 2 2 − ‖ z k − z * ‖ 2 2 )</p><p>令</p><p>U k = ( 1 / ρ ) ‖ y k − y * ‖ 2 2 + ρ ‖ z k − z * ‖ 2 2</p><p>从而(8)可以写成</p><p>U k − U k + 1 ≥ ρ ‖ r k + 1 − ( z k + 1 − z k ) ‖ 2 2 (11)</p><p>由证明2中可以看出， z k + 1 是函数 g ( z ) + y ( k + 1 ) T z 的极小值， z k 是函数 g ( z ) + y ( k ) T z 的极小值，从而有</p><p>g ( z k + 1 ) + y ( k + 1 ) T z k + 1 ≤ g ( z k ) + y ( k + 1 ) T z k</p><p>g ( z k ) + y ( k ) T z k ≤ g ( z k + 1 ) + y ( k ) T z k + 1</p><p>结合上面两个不等式，有</p><p>( y k + 1 − y k ) T ( z k + 1 − z k ) ≤ 0</p><p>又因为 y k + 1 − y k = ρ r k + 1 ，从而得到</p><p>ρ r k + 1 ( z k + 1 − z k ) ≤ 0 (12)</p><p>结合(12)式，使得(11)有</p><p>U k − U k + 1 ≥ ρ ‖ r k + 1 ‖ + ρ ‖ z k + 1 − z k ‖ 2 2</p><p>从而有</p><p>∑ k = 0 ∞ ( ρ ‖ r k + 1 ‖ + ρ ‖ z k + 1 − z k ‖ 2 2 ) ≤ U 0 (13)</p><p>从(13)式可以看出 r k → 0 , z k + 1 − z k → 0 , k → ∞ ，从而得到</p><p>lim k → ∞ p k = p *</p></sec><sec id="s8"><title>4. 总结</title><p>通过正则化的一致性问题，我们可以看到并行和分布式部署优化方案的可行性。我们可以切分数据以及相应的目标函数，也可以切分变量到各个子系统上去，分别作优化，甚至我们可以大胆想象对不同类型数据块用不同的优化算法，结合Consensus问题和ADMM算法，达到同一个全局变量的优化目的；并且在理论上说明了算法的收敛性。</p></sec><sec id="s9"><title>致 谢</title><p>本文的撰写感谢程一元老师的指导。</p></sec><sec id="s10"><title>基金项目</title><p>巢湖学院省级大学生创新创业训练计划资助项目(S201910380067)，巢湖学院省级大学生创新创业训练计划资助项目(S201910380065)，巢湖学院校级科研项目(XLY-201903)。</p></sec><sec id="s11"><title>文章引用</title><p>刘玉洁,毕文静,张 炎,俞 露,李伟南. 正则化Consensus问题的收敛性证明Convergence Proof of Regularized Consensus Problems[J]. 理论数学, 2021, 11(03): 371-376. https://doi.org/10.12677/PM.2021.113049</p></sec><sec id="s12"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.41368-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Glowinski, R. and Marroco, A. (1975) Sur l’approximation, par éléments finis d’ordre un, et la résolution, par pénalisation-dualitéd’une classe de problèmes de Dirichlet nonlinéaires. Re-vue Francaise Dautomatique, Informatique, Recherhe Operationnelle. Analyse Numerique, 9, 41-46. &lt;br&gt;https://doi.org/10.1051/m2an/197509R200411</mixed-citation></ref><ref id="hanspub.41368-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Gabay, D. and Mercier, B. (1976) A Dual Algorithm for the Solution of Nonlinear Variational Problems via Finite Element Approximations. Computers &amp; Mathematics with Applications, 2, 17-40.  
&lt;br&gt;https://doi.org/10.1016/0898-1221(76)90003-1</mixed-citation></ref><ref id="hanspub.41368-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Lin, F., Jovanovic, M.R. and Georgiou, T.T. (2013) An ADMM Algorithm for Matrix Completion of Partially Known State Covariances. Decision &amp; Control, 2013, 1684-1689.</mixed-citation></ref><ref id="hanspub.41368-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Wang, Y.L., Yang, J.F., Yin, W.T., et al. (2008) A New Alternating Minimization Algorithm for Total Variation Image Reconstruction. SIAM Journal on Imaging Sciences, 1, 248-272. &lt;br&gt;https://doi.org/10.1137/080724265</mixed-citation></ref><ref id="hanspub.41368-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Shen, Y. and Wang, H.Y. (2016) New Augmented Lagrangian-Based Proximal Point Algorithm for Convex Optimization with Equality Constraints. Journal Optimization Theory and Ap-plication, 171, 251-261.  
&lt;br&gt;https://doi.org/10.1007/s10957-016-0991-1</mixed-citation></ref><ref id="hanspub.41368-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Boyd, S., Parikh, N., Chu, E., et al. (2011) Distributed Optimi-zation and Statistical Learning via the Alternating Direction Method of Multipliers. Found Trends Mach Learning, 3, 1-122. &lt;br&gt;https://doi.org/10.1561/2200000016</mixed-citation></ref><ref id="hanspub.41368-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">申远, 孔玉倩, 纪磊. 一种新参数条件的线性化逐块交替方向乘子法[J]. 徐州工程学院学报(自然科学版), 2020, 35(2): 23-32.</mixed-citation></ref></ref-list></back></article>