<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">PM</journal-id><journal-title-group><journal-title>Pure  Mathematics</journal-title></journal-title-group><issn pub-type="epub">2160-7583</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/PM.2019.93053</article-id><article-id pub-id-type="publisher-id">PM-30360</article-id><article-categories><subj-group subj-group-type="heading"><subject>PM20190300000_60183728.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  吴方法在求解数独问题中的应用
  The Application of Wu’s Method of Characteristic Set in Solving Sudoku Problem
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>许</surname><given-names>晓宁</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>北京航空航天大学数学与系统科学学院，北京</addr-line></aff><pub-date pub-type="epub"><day>05</day><month>05</month><year>2019</year></pub-date><volume>09</volume><issue>03</issue><fpage>403</fpage><lpage>409</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    吴方法是计算机代数中的一种重要方法，主要通过求解吴特征列来达到对多项式方程组进行消元求解的目的，多项式的不可约特征序列则是在吴特征列的基础上进行因子分解得到的三角列集合，从而得到相应的零点分解，进而达到求解多项式零点的目的。本文以四宫数独为例，类比图论染色问题对数独问题进行建模，给出了一种用多项式组表示数独问题的方法，用数学软件Singular求解了该多项式组的不可约特征序列，并得到了一些相关的结论。
    Wu’s method is a crucial method in computer algebra. It achieves the elimination purpose by cal-culating the Wu’s characteristic sets. The irreducible characteristic series is a set of triangular sets obtained by factoring the Wu’s characteristic sets, which can provide the zero decomposition of the polynomial equations. In this paper, the Sudoku is modeled by analogy with graph coloring problem, and a method to express Sudoku with polynomial equations is given. Taking Shidoku as an example, we compute the irreducible characteristic series of its polynomial equations and some conclusions are listed. 
  
 
</p></abstract><kwd-group><kwd>三角列，吴特征列，不可约特征序列，数独，图论染色问题, Triangular Set</kwd><kwd> Wu’s Characteristic Set</kwd><kwd> Irreducible Characteristic Series</kwd><kwd> Sudoku</kwd><kwd> Graph Coloring</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>吴方法在求解数独问题中的应用<sup> </sup></title><p>许晓宁</p><p>北京航空航天大学数学与系统科学学院，北京</p><p><img src="//html.hanspub.org/file/23-1250813x1_hanspub.png" /></p><p>收稿日期：2019年4月26日；录用日期：2019年5月6日；发布日期：2019年5月22日</p><disp-formula id="hanspub.30360-formula52"><graphic xlink:href="//html.hanspub.org/file/23-1250813x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>吴方法是计算机代数中的一种重要方法，主要通过求解吴特征列来达到对多项式方程组进行消元求解的目的，多项式的不可约特征序列则是在吴特征列的基础上进行因子分解得到的三角列集合，从而得到相应的零点分解，进而达到求解多项式零点的目的。本文以四宫数独为例，类比图论染色问题对数独问题进行建模，给出了一种用多项式组表示数独问题的方法，用数学软件Singular求解了该多项式组的不可约特征序列，并得到了一些相关的结论。</p><p>关键词 :三角列，吴特征列，不可约特征序列，数独，图论染色问题</p><disp-formula id="hanspub.30360-formula53"><graphic xlink:href="//html.hanspub.org/file/23-1250813x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/23-1250813x7_hanspub.png" /> <img src="//html.hanspub.org/file/23-1250813x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>数独作为一种富有逻辑性的数字填充游戏，具有非常好的益智效果，而且它在数学上也有着很长的历史，它最早起源于18世纪，以瑞士的数学家欧拉等人研究的拉丁方阵为开端；19世纪80年代之后，在美国得到进一步发展；于1984年被引入日本并且迅速流行起来；2004年，数独游戏登上英国泰晤士报，随后广为流传；数独在2007年被引入中国大陆之后也得到了良好的发展，许多数学学者也对数独问题进行了更深的思考，并给出了一些解决数独问题的数学模型和解法。</p><p>目前求解数独的方法主要分为两类，一类是以人的逻辑为依据，通过观察比较来寻找数独的解；另一种则是基于计算机回溯法的暴力解法。为了方便叙述和计算，本文以 4 &#215; 4 的数独问题为例，根据数独问题的特点，通过建立多项式方程组将求解数独问题转化为求解多项式方程组零点的问题，我们将用不可约特征序列的方法求解多项式方程组。不可约特征序列是由王东明在吴特征列的基础上进一步通过因子分解而得到的三角系统，以多项式的零点集为主要关注点，给出原多项式方程组的解的结构。</p></sec><sec id="s4"><title>2. 数独问题的多项式表示</title><p>四宫数独是一般九宫数独问题的简化版本，要求在 4 &#215; 4 的16个格位内分别填入 { 1 , 2 , 3 , 4 } 四个数字中的一个，使得每行、每列、每个宫内的数字都不相同。用多项式方程组表示数独问题的方法有很多种，此处我们主要介绍一种与图论中染色问题相似的一种方法 [<xref ref-type="bibr" rid="hanspub.30360-ref1">1</xref>] 。我们将待填数的格位看作是图中待染色的点，需要填的 { 1 , 2 , 3 , 4 } 四个数字看作是四种不同的颜色，每行、每列、每宫内不能填相同数字的格位则看作是不能染相同颜色的点，它们之间由边相连。这样，我们就可以用类似图论染色问题中构建多项式的方式建立多项式方程组来描述数独问题了。</p><p>图1. 无提示数的四宫数独问题</p><p>用多项式方程组表示无提示数四宫数独问题的步骤如下：</p><p>1) 如上图1设出16个变量 x 1 , x 2 , ⋯ , x 16 ，分别表示16个格位，用有限域 F 11 中的四个元素 { 1 , 2 , 3 , 4 } 分别表示要填的四个数字(注：选择在有限域 F 11 中进行计算，是因为我们所应用的计算软件Singular分别用 { − p − 1 2 , − 1 , 0 , 1 , ⋯ , p − 1 2 } 这11个元素来表示 F p (其中p为素数)中个元素， p = 11 是使 F p 包含数字1，2，3，4的最小的素数了，为了读写方便，所以选择在 F 11 中进行计算。)；</p><p>2) 写出表示格位取值的16个多项式： F ( x i ) = ∏ n = 1 4 ( x i − n ) ,   ( i = 1 , 2 , ⋯ , 16 ) ；</p><p>3) 若格位 x i 和格位 x j 处不能填相同的数字，则用 G ( x i , x j ) : = F ( x i ) − F ( x j ) x i − x j 来表示，这样的方程共有56个，分别用来表示每行、每列、每宫内的格位中所填数字不能相同。</p><p>这样我们就用包含72个多项式的方程组将四宫数独问题表示了出来。对于有提示数的数独问题，若格位 x i 处有提示数n，则用多项式 f ( x i ) = x i − n 替换掉原来的 F ( x i ) = ∏ n = 1 4 ( x i − n ) 即可。</p></sec><sec id="s5"><title>3. 吴特征列与不可约特征序列</title><p>本节主要介绍一些有关吴特征列和不可约特征列的基础知识，其详细内容可以阅读文献 [<xref ref-type="bibr" rid="hanspub.30360-ref2">2</xref>] 和文献 [<xref ref-type="bibr" rid="hanspub.30360-ref3">3</xref>] 的相关部分。</p><p>设 K 是一个数域，F是多项式环 K [ x 1 , ⋯ , x n ] (默认变元序为 x 1 &lt; ⋯ &lt; x n )中的一个多项式。我们定义，多项式F中所含的变元的最大下标 c l s ( F ) ∶ = max { k : deg ( F , x k ) &gt; 0 , 1 ≤ k ≤ n } 为F的类，如果 F ∈ K 则规定 c l s ( F ) = 0 。当 c l s ( F ) &gt; 0 时，把 l v ( F ) ∶ = x c l s ( F ) 称为是F的导元；把 l d e g ( F ) : = d e g ( F , l v ( F ) ) 称为F的导次数；把 i n i ( F ) : = l c ( F , l v ( F ) ) 称为F的初式。</p><p>定理3.1</p><p>设 F , G 是多项式环 R [ x ] 中的任意两个多项式， x k 是一个变元，而且有 l = d e g ( G , x k ) ， m = d e g ( F , x k ) 。如果 l &gt; 0 ，那么就存在多项式 Q , R ∈ R [ x ] 和整数 0 ≤ s ≤ m − l + 1 使得 l c ( G , x k ) s ⋅ F = Q ⋅ G + R ，而且有 d e g ( R , x k ) &lt; l 。如果s固定，那么 Q , R 是唯一确定的。证明参见 [<xref ref-type="bibr" rid="hanspub.30360-ref3">3</xref>] 。</p><p>定义3.2</p><p>如果定理3.1中的条件可以被满足，那么称表达式 l c ( G , x k ) s ⋅ F = Q ⋅ G + R 为F关于G的伪余公式，称Q为F对G关于 x k 的伪商，记为 p q u o ( F , G , x k ) ，称R为F对G关于 x k 的伪余式，记为 p r e m ( F , G , x k ) 。</p><p>定义3.3</p><p>如果 K [ x ] 中的有限非空有序集合 T = [ T 1 , ⋯ , T r ] 满足条件 0 &lt; c l s ( T 1 ) &lt; ⋯ &lt; c l s ( T r ) ，那么我们就将 [ T 1 , ⋯ , T r ] 称为是一个三角列，为了方便起见，我们也把空集合称为是一个三角列。</p><p>对于多项式集合 T ⊆ K [ x ] \ K ，记 l v ( T ) ∶ = { l v ( T ) : T ∈ T } ， i n i ( T ) ∶ = { i n i ( T ) : T ∈ T } 。对于 x i ∈ l v ( T ) ，记 T x i : = { T ∈ T : l v ( T ) = x i } ， T &lt; x i : = { T ∈ T : l v ( T ) &lt; x i } ，类似地定义 T &gt; x i ， T ≤ x i ， T ≥ x i 。</p><p>设 P , Q ∈ K [ x ] 是非零多项式。并且有 Q ∉ K 。如果 d e g ( P , l v ( Q ) ) &lt; l d e g ( Q ) 。那么就称P对Q是约化的。设多项式集合 T ⊆ K [ x ] 是一个三角列， P ∈ K [ x ] 是任意多项式，如果P对 T 中的每一个多项式T都是约化的，那么称P对 T 是约化的。</p><p>定义3.4</p><p>如果多项式集合 T ⊆ K [ x ] 只包含一个非零常数，则称 T 为平凡升列；否则，若 T = [ T 1 , ⋯ , T r ] 是三角列，且对于任意 1 ≤ j &lt; i ≤ r ， T i 对于所有 T j 都是约化的，就称 T 为非平凡升列。</p><p>定义3.5</p><p>在三角列 T ⊆ K [ x ] 中，若对于任意 x i ∈ l v ( T ) 都有 p r e m ( i n i ( F ) , T &lt; x i ) ≠ 0 成立，其中 F ∈ T x i ，则称 T 是良好三角列。</p><p>定义3.6</p><p>设 P ⊆ K [ x ] 是非空多项式集合，任意包含于由 P 所生成的理想的升列都称为 P 的中间列。</p><p>定义3.7</p><p>设 P ⊆ K [ x ] 是非空多项式集合，如果存在升列 C 使得 C ⊆ 〈 P 〉 而且 p r e m ( P , C ) = { 0 } ，那么就称 C 为 P 的特征列。</p><p>命题3.8 (特征列的零点关系)</p><p>设非平凡升列 C = [ C 1 , ⋯ , C r ] 是多项式集合 P ⊆ K [ x ] 的特征列，设 P i ∶ = P ∪ { i n i ( C i ) } , ( i = 1 , ⋯ , r ) ， I : = i n i ( C ) 。有如下的零点关系： Z ( C / I ) ⊆ Z ( P ) ⊆ Z ( C ) ， Z ( C / I ) = Z ( P / I ) ， Z ( P ) = Z ( C / I ) ∪ ∪ i = 1 r Z ( P i ) 。</p><p>定义 K [ x ] 中多项式P的秩为 l v ( P ) l d e g ( P ) ，如果 c l s ( P ) &gt; 0 ；否则的话定义P的秩为P，记为 r a n k ( P ) 。</p><p>定义3.9</p><p>设 P , Q ∈ K [ x ] 是非零多项式，如果满足下列三个条件之一，则称P的秩低于Q的秩，记为 P ≺ Q ：1) P ∈ K ，但是 Q ∉ K ；2) P , Q ∉ K ，而且 c l s ( P ) &lt; c l s ( Q ) ；3) P , Q ∉ K ， c l s ( P ) = c l s ( Q ) ，而且 l d e g ( P ) &lt; l d e g ( Q ) 。如果 Q ≺ P ，则称P的秩高于Q的秩，记为 P ≻ Q 。如果 P ≺ Q 和 P ≻ Q 都不成立，那么称P和Q具有相同的秩，记为 P ~ Q 。把 P ≺ Q 或 P ~ Q 简记为 P ≾ Q 。</p><p>定义3.10</p><p>设 T = [ T 1 , ⋯ , T r ] 和 S = [ S 1 , ⋯ , S t ] 是多项式环 K [ x ] 中的两个非平凡升列，称 T 的秩低于 S 的秩，记为 T ≺ S ，如果满足下列条件之一：1) 存在 i ≤ min ( r , t ) ，使得对于每个 j &lt; i 都有 T j ~ S j ，但是 T i ≺ S i ；</p><p>2) r &gt; t ，而且对于每个 j ≤ t 都有 T j ~ S j 成立。如果 S ≺ T ，那么称 T 的秩高于 S 的秩，记为 T ≻ S 。如果 T ≻ S 和 T ≺ S 都不成立，那么称 T 和 S 具有相同的秩，记为 T ~ S 。将 T ≺ S 或者 T ~ S 简记为 T ≾ S 。并规定平凡升列的秩总是低于非平凡升列的秩。</p><p>引理3.11</p><p>设 T = [ T 1 , ⋯ , T r ] 和 S = [ S 1 , ⋯ , S t ] 是多项式环 K [ x ] 中的两个升列，那么我们有下列结论成立：(1) T ~ S 当且仅当 r = t 而且对于所有 j ≤ t ，都有 T j ~ S j 成立；(2)设 P ∈ K [ x ] \ K ，并记 v = l v ( P ) ，如果 T 是非平凡升列，并且P对于 T 是约化的，那么 ( T &lt; v ∪ { P } ) ≺ T 。</p><p>定义3.12</p><p>对于多项式环 K [ x ] 中任意非空有限的多项式集合 P ，设 Φ 是由所有含于 P 的升列组成的集合。因为一个非零多项式可以构成一个升列，所以 Φ 非空。我们将 Φ 的任意极小升列(关于 ≺ 秩最低的升列)称为是 P 的基列。</p><p>P 的基列可以通过如下步骤找出：设 F 1 : = P ，令 B 1 是 F 1 中秩最低的多项式。如果 B 1 是非零常数，那么 [ B 1 ] 就是 P 的一个基列。否则，令 F 2 : = { F ∈ F 1 \ B 1 : F 对 B 1 是 约 化 的 } 。如果 F 2 = ∅ ，那么 [ B 1 ] 就是</p><p>P 的一个基列。否则，设 B 2 是 F 2 中秩最低的多项式。易知 B 1 ≺ B 2 。可以类似地依次构造 F 3 , F 4 , ⋯ ，因为 P 是非空有限的多项式集合，而基列或是一个非零常数，或是作为一个三角列最多含有n个多项式，所以上述构造过程必定会在有限步之后终止，最后我们就可以得到 P 的一个基列。</p><p>P 的吴特征列的算法如下：1) 设 F : = P ， R : = P ；2) 如果集合 R 非空，则求取 R 的一个基列 C ；3) 若 C 中含有 K 中的元素，则另 R ∶ = ∅ ，否则另 R : = { p r e m ( F , C ) : F ∈ F \ C } \ { 0 } ；4) 另 F : = P ∪ C ∪ R ，并返回第2)步，直到集合 R 为空集为止。最后一次求出的基列 C 即为多项式组 P 的吴特征列。该算法的终止性及正确性可参见 [<xref ref-type="bibr" rid="hanspub.30360-ref3">3</xref>] 。</p><p>设非平凡升列 C = [ C 1 , ⋯ , C r ] 是多项式集合 P ⊆ K [ x ] 的特征列，现在回到特征列的零点关系，即 Z ( P ) = Z ( C / I ) ∪ ∪ i = 1 r Z ( P i ) ，显然有 Z ( P i ∪ C ) = Z ( P i ) ，于是，计算每一个 P i ∪ C 的特征列，并如此进行下去，由于 P i ∪ C 的基列的秩低于 C 的秩，所以经过有限多步之后可以得到如下的零点分解 Z ( P ) = ∪ i = 1 e Z ( C i / I i ) ，其中 C i 都是升列， I i = i n i ( C i ) 。</p><p>定义3.15</p><p>设 Ψ 为 K [ x ] 中由升列 C 1 , ⋯ , C e 构成的有限集合， P 为 K [ x ] 中的多项式集合，如果有零点分解 Z ( P ) = ∪ i = 1 e Z ( C i / I i ) 成立，且 p r e m ( P , C i ) = { 0 } 对于所有的i成立，则称 Ψ 为 P 的特征序列。 Ψ = ∅ 即 e = 0 也即 Z ( P ) = ∅ 。</p><p>设 T ⊆ K [ x ] 是一个三角列，则 T 可以写成如下形式：</p><p>T = [ T 1 ( x 1 , ⋯ , x p 1 ) , T 2 ( x 1 , ⋯ , x p 1 , ⋯ , x p 2 ) , ⋯ , T r ( x 1 , ⋯ , x p 1 , ⋯ , x p 2 , ⋯ , x p r ) ] ,</p><p>其中 p i = c l s ( T i ) ， x p i = l v ( T i ) ， i = 1 , 2 , ⋯ , r ， 0 &lt; p 1 &lt; p 2 &lt; ⋯ &lt; p r ≤ p n 。进一步地，将导元 x p 1 , x p 2 , ⋯ , x p r 重新命名为 y 1 , ⋯ , y r ，其它变元记为 u 1 , ⋯ , u d 或简记为 u ，则 T 就可以写作 T = [ T 1 ( u , y 1 ) , T 2 ( u , y 1 , y 2 ) , ⋯ , T r ( u , y 1 , y 2 , ⋯ , y r ) ] 。设 K 0 是 K 添加 u 1 , ⋯ , u d 后得到的超越扩域 K ( u ) = K ( u 1 , ⋯ , u d ) ，如下对三角列 T 的不可约性和一般零点作归纳定义。</p><p>定义3.16</p><p>设 T ⊆ K [ x ] 是良好三角列，若 T 只含一个多项式 T 1 ( u , y 1 ) ，且 T 1 是 K 0 [ y 1 ] 中的不可约多项式，则称 T 是不可约的。此时，设 η 1 为 T 1 在 K 0 的某一代数扩域中的零点，则称 ( u , η 1 ) 为 T 的一个一般零点。假设含任意 k ( k &lt; r ) 个多项式的良好三角列之不可约性和一般零点已经定义，那么称良好三角列 T = [ T 1 ( u , y 1 ) , T 2 ( u , y 1 , y 2 ) , ⋯ , T r ( u , y 1 , y 2 , ⋯ , y r ) ] 是不可约的，如果 [ T 1 ( u , y 1 ) , T 2 ( u , y 1 , y 2 ) , ⋯ , T r − 1 ( u , y 1 , y 2 , ⋯ , y r − 1 ) ] 是不可约的，且以 ( u , η 1 , ⋯ , η r − 1 ) 为一般零点，且多项式 T r ( u , y 1 , y 2 , ⋯ , y r ) 在 K r − 1 [ y r ] 中不可约。其中 K r − 1 = K 0 ( η 1 , ⋯ , η r − 1 ) 是将 η 1 , ⋯ , η r − 1 添入 K 0 得到的代数扩域。此时设 η r 为 T r ( u , y 1 , y 2 , ⋯ , y r ) 在 K r − 1 的某个代数扩域中的零点，称 ( u , η 1 , ⋯ , η r ) 为 T 的一个一般零点。</p><p>定理3.17零点分解定理</p><p>设多项式组 P ⊆ K [ x ] 有中间列 T = [ T 1 , T 2 , ⋯ , T r ] ，其中 c l s ( T 1 ) &gt; 0 ， I i = i n i ( T i ) ， 1 ≤ i ≤ r 。如果 T 可约，则存在k，使得 T k 可以分解为不可约多项式 F 1 , F 2 , ⋯ , F t ——即存在非负整数 s 1 , s 2 , ⋯ , s k − 1 和 K [ u , y 1 , y 2 , ⋯ , y k ] 中的多项式 Q 1 , Q 2 , ⋯ , Q k − 1 以及 K [ u , y 1 , y 2 , ⋯ , y k − 1 ] 中的多项式D，使得 I 1 s 1 ⋯ I k − 1 s k − 1 ( F 1 ⋯ F t − D ⋅ T k ) = ∑ i = 1 k − 1 Q i ⋅ T i 成立——于是有下面的零点分解成立： Z ( P ) = ∪ i = 1 k − 1 Z ( P i ) ∪ ∪ j = 1 t Z ( Q j ) ，其中 P i = P ∪ { I i } ( 1 ≤ i ≤ k − 1 ) ， Q j = P ∪ { F j } ( 1 ≤ j ≤ t ) 。</p><p>仿照求解特征序列的过程，可以对每个 P ∪ { I i } 以及 P ∪ { F j } 进一步求其零点分解，最终会得到形如 Z ( P ) = ∪ i = 1 e Z ( C i / I i ) 的零点分解，其中 I i = i n i ( C i ) 且每个 C i 都不可约。设 Ψ 是一个特征序列或三角</p><p>序列，若 Ψ 中的升列都不可约，则称 Ψ 是不可约的。求解任意非空多项式方程组的不可约特征序列主要是在求解吴特征列算法的基础上用因子分解方法将吴特征列中可约的多项式在相应的代数扩域上进行因式分解，从而得到不可约特征序列。详细算法以及相应的因子分解算法详见文献 [<xref ref-type="bibr" rid="hanspub.30360-ref2">2</xref>] 的4.4节及9.4节。</p></sec><sec id="s6"><title>4. 应用及结论</title><p>对于有唯一解的数独问题，我们可根据本文第二部分给出的建模方法，用有限域 F 11 上的72个多项式进行表示，即表示16个格位取值的多项式 F ( x 1 ) , ⋯ , F ( x 16 ) 以及56个表示每行、每列、每宫内的格位所填数字不同的多项式 G ( x 1 , x 2 ) , ⋯ , G ( x 15 , x 16 ) ，这72个多相似构成一个多项式组，之后我们求解出该多项式组的不可约特征序列，即可解出该多项式组的零点集，也就解出了相应的数独问题。直观地，我们有如下结论：</p><p>命题4.1 数独问题有解当且仅当多项式方程组的不可约三角分解不为{1}。</p><p>命题4.2 数独问题有唯一的解当且仅当多项式方程组的不可约三角分解只包含一个三角列 { x i − a i | i = 1 , 2 , ⋯ , 16 } ，其中 a i ∈ { 1 , 2 , 3 , 4 } 。此时数独问题的解即第i个格位处填数字 a i 。</p><p>命题4.3 如果多项式方程组的不可约三角分解包含多个三角列，则原数独问题有多个解。此时，每个三角列都具有形式 { x i − a i | i = 1 , 2 , ⋯ , 16 } (其中 a i ∈ { 1 , 2 , 3 , 4 } )，分别代表数独的一种解，不可约特征序列种包含多少个三角列，原数独问题便有多少种解。</p><p>在求解多项式组的不可约特征序列时，我们主要用到的计算软件为Singular，在Singular中有内置函数“ c h a r _ s e r i e s ( I ) ”，可以直接求解出多项式组I在给定数域中的不可约特征序列，关于软件Singular的更多内容见 [<xref ref-type="bibr" rid="hanspub.30360-ref4">4</xref>] 。</p><p>例4.1 以下图2四宫数独为例：</p><p>图2. 一个四宫数独问题</p><p>我们可以用多项式方程组来表示它。首先用 F ( x 1 ) , ⋯ , F ( x 16 ) 表示16个格位的取值，然后用 G ( x 1 , x 2 ) , ⋯ , G ( x 15 , x 16 ) (共56个)表示每行、每列、每宫内的格位取值不能相同，最后，由于本题中给定了第2、8、11、13个格位的提示数分别为4、1、3、2，所以分别用多项式 x 2 − 4 , x 8 − 1 , x 11 − 3 , x 13 − 2 替换掉 F ( x 2 ) , F ( x 8 ) , F ( x 11 ) , F ( x 13 ) ，这样我们就用72个多项式将该数独问题描述出来了。之后求解由这72个多项式方程构成的多项式方程组的不可约特征列，结果为： { [ x 1 − 1 , x 2 − 4 , x 3 − 2 , x 4 − 3 , x 5 − 3 , x 6 − 2 , x 7 − 4 , x 8 − 1 , x 9 − 4 , x 10 − 1 , x 11 − 3 , x 12 − 2 , x 13 − 2 , x 14 − 3 , x 15 − 1 , x 16 − 4 ] } ，该不可约特征序列只包含有一个三角列，即原多项式组只有唯一解，也即原四宫数独只有唯一解，其解即如该三角列所示。</p><p>例4.2 若是如图3所示的一个没有任何提示数的空白四宫数独问题，</p><p>图3. 无提示数的四宫数独问题</p><p>我们构建的多项式组即为 { F ( x 1 ) , ⋯ , F ( x 16 ) , G ( x 1 , x 2 ) , ⋯ , G ( x 15 , x 16 ) } ，由72个多项式组成，计算其不可约特征序列，结果为由288个三角列构成的不可约特征列，其中每一个三角列都形如例4.1中的结果，分别表示数独问题的一种可能的解，也就是说，空白的四宫数独问题一共有288种不同的解，这与我们运用组合数学进行求解的结果是一致的。</p><p>此外，在文献 [<xref ref-type="bibr" rid="hanspub.30360-ref5">5</xref>] 中，Stephen Lucas等人用求解多项式组的Groebner基的方法处理了由类似的多项式方程组所生成的理想，同样得到了无提示数的四宫数独问题有288种解的结论。对于一般的九宫数独问题来说，也可以用类似的多项式来表示，Gago-Vargas等人在文献 [<xref ref-type="bibr" rid="hanspub.30360-ref6">6</xref>] 中对九宫数独问题进行了详细的讨论，并用Groebner基成功求解出有大量提示数的数独问题。值得指出的一点是，想要将无提示数的九宫数独问题表示出来需要用到81个变量和891个多项式，不论对于Groebner基来说还是吴特征列方法来说都是非常巨大的计算量，远远超出了一般个人电脑的计算能力，不过通过这个方法，我们可以用多项式将数独问题的结构进行表示，吴方法的应用也为数独问题提供了一种多项式组解法的新思路。</p></sec><sec id="s7"><title>文章引用</title><p>许晓宁. 吴方法在求解数独问题中的应用The Application of Wu’s Method of Characteristic Set in Solving Sudoku Problem[J]. 理论数学, 2019, 09(03): 403-409. https://doi.org/10.12677/PM.2019.93053</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.30360-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Adams, W.W. and Loustaunau, P. (1994) An Introduction to Gröbner Bases. Graduate Studies in Mathematics, 3, 289 p. https://doi.org/10.1090/gsm/003</mixed-citation></ref><ref id="hanspub.30360-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">王东明. 消去法及其应用[M]. 北京: 科学出版社, 2002: 30-43, 111-125.</mixed-citation></ref><ref id="hanspub.30360-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">王东明, 牟晨琪, 李晓亮, 等. 多项式代数[M]. 北京: 高等教育出版社, 2011: 65-88.</mixed-citation></ref><ref id="hanspub.30360-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Greuel, G.M. and Pfister, G. (2008) A Singular Introduction to Commutative Algebra. A Singular Introduction to Commutative Algebra. Springer, 571-646.</mixed-citation></ref><ref id="hanspub.30360-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Arnold, E., Lucas, S. and Taalman, L. (2010) Grobner Basis Representations of Sudoku. College Mathematics Journal, 41, 101-112. https://doi.org/10.4169/074683410x480203</mixed-citation></ref><ref id="hanspub.30360-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Gago-Vargas, J., Hartillo-Hermoso, M.I. and Ucha-Enríquez, J.M. (2006) Sudokus and Gröbner Bases: Not Only a Divertimento. In: Ganzha, V.G., Mayr, E.W. and Vorozhtsov, E.V., Eds., Computer Algebra in Scientific Computing. CASC 2006. Lecture Notes in Computer Science, Vol. 4194, Springer, Berlin, Heidelberg, 155-165.  
https://doi.org/10.1007/11870814_13</mixed-citation></ref></ref-list></back></article>