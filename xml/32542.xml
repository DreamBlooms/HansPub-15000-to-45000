<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2019.910211</article-id><article-id pub-id-type="publisher-id">CSA-32542</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20191000000_32118817.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于LSTM的股票价格的多分类预测
  Multi-Category Prediction of Stock Price Based on LSTM
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>奉贤</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>赵</surname><given-names>建群</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>同济大学，电子与信息工程学院，上海</addr-line></aff><aff id="aff3"><addr-line>广东科贸职业学院，经济管理学院，广东 广州</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>30</day><month>09</month><year>2019</year></pub-date><volume>09</volume><issue>10</issue><fpage>1882</fpage><lpage>1891</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   为对股票价格的涨跌幅度进行预测，提出一种基于长短期记忆网络(LSTM)的方法。根据股票涨跌幅问题，通过对涨跌幅度做多值量化分类，将其转化成一个多分类问题。将股票的基本交易信息作为特征输入，利用神经网络对其训练，最后对股票的涨跌幅度做分类预测。数据集分沪深300成分股整体类、银行类和证券类三种股票集，实验结果表明该模型在涨跌幅多分类情况下，有比较好的预测效果；同时，在对某一类股票进行预测时，用该类股票的历史交易信息训练的模型要比以整体股票交易信息训练的模型效果好。 In order to predict the rise and fall of stock prices, a method based on long-term and short-term memory network (LSTM) is proposed. According to the stock price increase and decrease, through the quantitative classification of the ups and downs, it is transformed into a multi-classification problem. The basic transaction information of the stock is used as the feature input, and it is trained by the neural network. Finally, the stock’s ups and downs are classified and predicted. The data set is divided into three parts: the whole category set of the Shanghai and Shenzhen 300 constituent stocks, the bank set and the securities. The experimental results show that the model has a better forecasting effect in the case of multi-classification of the ups and downs; at the same time, in a certain kind of stocks when making predictions, the model trained with the historical trading infor-mation of such stocks is better than the model trained with the overall stock trading information. 
  
 
</p></abstract><kwd-group><kwd>股票预测，LSTM，沪深300，多分类, Stock Forecasting</kwd><kwd> LSTM</kwd><kwd> Shanghai and Shenzhen 300</kwd><kwd> Multiple Classification</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于LSTM的股票价格的多分类预测<sup> </sup></title><p>陈奉贤<sup>1</sup>，赵建群<sup>2</sup></p><p><sup>1</sup>同济大学，电子与信息工程学院，上海</p><p><sup>2</sup>广东科贸职业学院，经济管理学院，广东 广州</p><p><img src="//html.hanspub.org/file/9-1541553x1_hanspub.png" /></p><p>收稿日期：2019年9月24日；录用日期：2019年10月9日；发布日期：2019年10月16日</p><disp-formula id="hanspub.32542-formula49"><graphic xlink:href="//html.hanspub.org/file/9-1541553x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>为对股票价格的涨跌幅度进行预测，提出一种基于长短期记忆网络(LSTM)的方法。根据股票涨跌幅问题，通过对涨跌幅度做多值量化分类，将其转化成一个多分类问题。将股票的基本交易信息作为特征输入，利用神经网络对其训练，最后对股票的涨跌幅度做分类预测。数据集分沪深300成分股整体类、银行类和证券类三种股票集，实验结果表明该模型在涨跌幅多分类情况下，有比较好的预测效果；同时，在对某一类股票进行预测时，用该类股票的历史交易信息训练的模型要比以整体股票交易信息训练的模型效果好。</p><p>关键词 :股票预测，LSTM，沪深300，多分类</p><disp-formula id="hanspub.32542-formula50"><graphic xlink:href="//html.hanspub.org/file/9-1541553x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/9-1541553x7_hanspub.png" /> <img src="//html.hanspub.org/file/9-1541553x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>随着我国经济的快速发展，政府、投资机构以及投资者们对股票预测的需求也越来越多 [<xref ref-type="bibr" rid="hanspub.32542-ref1">1</xref>] 。因此，对股票价格走势的分析成为越来越多研究者关注的课题。但股票价格高度的波动性与不确定性，使其成为计算机领域和金融领域的一大难题 [<xref ref-type="bibr" rid="hanspub.32542-ref2">2</xref>] 。</p><p>股票投资通常会选择某一类或某一只股票来作为投资对象，对这一类或一只股票进行预测，既可以将整体的股票交易信息作为训练数据，也可以只选择该类或该只股票的交易信息作为训练数据。模型有决策树 [<xref ref-type="bibr" rid="hanspub.32542-ref3">3</xref>] 、LR [<xref ref-type="bibr" rid="hanspub.32542-ref4">4</xref>] 、支持向量机 [<xref ref-type="bibr" rid="hanspub.32542-ref5">5</xref>] 等传统机器学习的方法，也有深度学习的方法 [<xref ref-type="bibr" rid="hanspub.32542-ref6">6</xref>] 。欧阳金亮和陆黎明等人 [<xref ref-type="bibr" rid="hanspub.32542-ref7">7</xref>] 通过引入动态调整学习率的方法和附加量，对传统BP算法进行改进，然后用改进的算法对单只股票青岛海尔进行验证。毛景慧 [<xref ref-type="bibr" rid="hanspub.32542-ref8">8</xref>] 通过研究基于LSTM的股票价格序列影响因素，使用沪深300的290只股票数据进行整体的建模预测。</p><p>本文根据以往研究中不同训练集的训练，同时考虑股票数据的时序性，选择用对时序序列有较好性能的LSTM网络分别对其训练，将训练好的模型用于预测6分类和3分类情况下的次日收盘价的涨跌幅，并对结果做对比分析。</p></sec><sec id="s4"><title>2. 模型与实现</title><sec id="s4_1"><title>2.1. 模型理论基础</title><p>人工神经网络是1980年代兴起的人工智能领域的一类研究热点，它通过对人脑神经元网络进行抽象，构建人工神经单元，再通过不同的连接方式搭建不同的网络结构 [<xref ref-type="bibr" rid="hanspub.32542-ref9">9</xref>] 。</p><p>神经网络分为多种，BP神经网络是一种按照误差逆向传播算法训练的多层前馈神经网络，也是目前应用最广泛的神经网络 [<xref ref-type="bibr" rid="hanspub.32542-ref10">10</xref>] ；卷积神经网络(CNN)则是通过构造卷积层来提取输入特征，再利用前馈连接来完成特征的输出，它是深度学习的代表算法之一 [<xref ref-type="bibr" rid="hanspub.32542-ref11">11</xref>] ；循环神经网络(RNN)适用于输入是序列的数据，它是一种在序列的演进方向进行递归，循环单元按照链式连接的一种神经网络 [<xref ref-type="bibr" rid="hanspub.32542-ref12">12</xref>] 。由于其具有参数共享的特点，因此适合于序列的非线性特征学习。</p><p>长短期记忆网络(LSTM)则是对RNN的一种改进 [<xref ref-type="bibr" rid="hanspub.32542-ref13">13</xref>] ，它通过引入门机制构建特殊的记忆神经单元，从而解决RNN不能实现信息的长期依赖问题。LSTM结构如图1所示，其包括输入门<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/9-1541553x9_hanspub.png" xlink:type="simple"/></inline-formula>、输出门 o t 、遗忘门 f t 等门结构，这些门结构通过以下的递归方程来更新细胞状态 C t ，同时激活从输入到输出的映射。</p><p>f t = σ ( W f ⋅ [ h t − 1 , X t ] + b f ) (1)</p><p>i t = σ ( W i ⋅ [ h t − 1 , X t ] + b i ) (2)</p><p>o t = σ ( W o ⋅ [ h t − 1 , X t ] + b o ) (3)</p><p>其中， f t 、 i t 、 o t 分别表示t时刻的遗忘门、输入门和输出门。 σ 表示激活函数，W和b分别表示权重矩阵和偏置，下标 f , i , o 代表遗忘门、输入门和输出门。 h t − 1 表示<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/9-1541553x22_hanspub.png" xlink:type="simple"/></inline-formula>时刻LSTM细胞的输出， x t 代表t时刻的输入。</p><p>遗忘门 f t 决定神经单元遗弃哪些信息，该门层通过读取 h t − 1 和 x t 的状态，输出一个0到1之间的值，0代表完全舍弃，1代表完全保留。输入门 i t 决定神经单元要更新的值，它从遗忘门筛选完的信息中，通过tanh函数更新神经单元状态。最终神经单元输出的状态由输出门 o t 决定，其先用sigmoid层决定要输出的神经单元状态，然后将这些状态用tanh函数压缩在−1到1之间。</p><p>图1. LSTM单元结构 [<xref ref-type="bibr" rid="hanspub.32542-ref14">14</xref>]</p></sec><sec id="s4_2"><title>2.2. 股票预测问题描述</title><p>本文主要针对预测股票涨跌幅度的目标，将其转换为一个多分类任务来进行处理。</p><p>影响股票涨跌的因素有很多，与股票本身信息相关的有其基本交易数据如开盘价、收盘价、最高价、最低价、交易量、涨跌幅等6类，还有交易数据衍生出的一些统计技术指标，如换手率等 [<xref ref-type="bibr" rid="hanspub.32542-ref10">10</xref>] 。</p><p>除了交易数据，股市波动还通常和舆论、政策等因素相关。但这些特征信息不能直观、即时的反映到后续的股票价格中去，同时这些信息是否与股票的基本信息耦合也尚未论证。因此本文只对股票的6类基本交易数据作为输入特征。记某连续T个交易日的价格序列为：</p><p>P 1 , P 2 , ⋯ , P T</p><p>本文根据股票价格的前T天的历史交易信息，预测下一天股票收盘价较第T天的涨跌幅区间 Y T + 1 。6分类下的第 T + 1 天的收盘价涨跌幅区间定义如下：</p><p>Y T + 1 = y ( P 1 , P 2 , ⋯ , P T ) = { 5 , Y T + 1 &gt; 2 % 4 , 1 % &lt; Y T + 1 &lt; 2 % 3 , 0 &lt; Y T + 1 &lt; 1 % 2 , − 1 % &lt; Y T + 1 &lt; 0 1 , − 2 % &lt; Y T + 1 &lt; − 1 % 0 , Y T + 1 &lt; − 2 % (4)</p><p>0~5分别代表了6个涨跌幅区间，模型最终是预测第 T + 1 天收盘价的涨跌幅属于哪个区间。</p><p>在股票预测时，预测股票是否出现大涨或大跌往往比只预测涨跌更具有实际意义，因此，本文还做了涨跌幅3分类的情况，既将第二天股票收盘价涨幅超过1%的作为大涨，跌幅超过−1%的作为大跌，在这之间的认为是不涨不跌。3分类下第 T + 1 天的收盘价涨跌幅区间定义如式(4)所示：</p><p>Y T = { 0 ,               Y T &gt; 1 % 1 ,       − 1 % &lt; Y T &lt; 1 % 2 ,               Y T &lt; − 1 % (5)</p></sec><sec id="s4_3"><title>2.3. 预测方法</title><p>本文利用能长久保持时序信息的LSTM作为网络框架，网络的输入包括6个基本交易数据特征：开盘价、最高价、最低价、收盘价、涨跌幅和交易量。</p><p>考虑到单层的网络对特征学习效果不佳，构建一个三层的LSTM网络，每层神经元节点数为128，层与层之间全连接。神经网络的输出层接一个Softmax层，将输出转换为每个涨跌幅区间的概率，并以取得最大概率的区间为预测区间。在6分类下，最后的输出是6维，既6种涨跌幅区间的概率值。在3分类下，最后的输出是3维，既3种涨跌幅区间的概率值。在两种不同的分类下，都将概率取得最大的涨跌幅区间作为模型最终的预测区间。</p><p>LSTM预测模型如图2所示。模型在Softmax后是两种不同区间分类的网络输出。</p><p>图2. LSTM预测模型</p><p>本文使用有监督的方式对LSTM网络进行训练，既以T天的数据集作为输入，将式(3)和式(4)所示下一天较第T天的涨跌幅区间用Onehot编码处理后，作为标签输入到网络中。</p><p>为了优化网络权重，通常需要使用损失函数来估计预测值和标签的差异。本文使用交叉熵损失函数，定义如下：</p><p>L = − 1 n ∑ j = 1 n ∑ k = 0 c p j ( k ) log p ^ j ( k ) ​ (6)</p><p>其中，n表示训练样本数， p ^ j ( k ) 表示模型的预测样本j属于类别k的概率， p j ( k ) 表示样本j的实际概率，如果样本j属于k，则取值为1，否则为0。</p><p>预测值和标签值越接近，则损失函数的值就越小。因此需要通过反向传播来不断更新模型的权重值，使损失函数不断减小，让模型不断地学习数据特征。</p><p>在实际参数优化上，本文选用收敛速度较快、适应性较好的Adam算法 [<xref ref-type="bibr" rid="hanspub.32542-ref15">15</xref>] 对损失函数进行优化。</p></sec></sec><sec id="s5"><title>3. 实验与结果</title><sec id="s5_1"><title>3.1. 数据集描述</title><p>本文所采用的数据集分为两个部分，一部分是从沪深300股票集中选取在2013年到2017年之间有连续交易数据的160只股票作为整体股票的数据集1，选取上市的在16只银行股票作为类别股的数集2，上市的14只证券类股票作为类别股的数集3。</p><p>数据集的基本信息如表1所示。</p><p>数据集包含了从2013年到2017年的股票基本交易信息，由于有的股票会在正常交易日出现停盘的情况，因此需要对停盘日期的数据填充，本文使用的方式是用停盘交易日前一天的数据来填充该日的交易信息。在处理后的股票数据集中，每个交易日都包含了开盘价、收盘价、涨跌幅等信息。表2是部分数据集信息。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Data set overvie</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >数据集</th><th align="center" valign="middle" >交易天数(天)</th><th align="center" valign="middle" >股票数量(只)</th></tr></thead><tr><td align="center" valign="middle" >数据集1</td><td align="center" valign="middle" >1215</td><td align="center" valign="middle" >160</td></tr><tr><td align="center" valign="middle" >数据集2</td><td align="center" valign="middle" >1215</td><td align="center" valign="middle" >16</td></tr><tr><td align="center" valign="middle" >数据集3</td><td align="center" valign="middle" >1215</td><td align="center" valign="middle" >14</td></tr></tbody></table></table-wrap><p>表1. 数据集概况</p><p>由表2可知，成交量和其他几个特征在数值上有很大的差异，因此在数据集送入到LSTM网络之前，还需要对其做归一化处理，以降低不同特征之间的数值差异，减免奇异样本在优化时对梯度方向的影响。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Partial data set informatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >日期</th><th align="center" valign="middle" >开盘价</th><th align="center" valign="middle" >最高价</th><th align="center" valign="middle" >最低价</th><th align="center" valign="middle" >收盘价</th><th align="center" valign="middle" >涨跌幅</th><th align="center" valign="middle" >成交量</th></tr></thead><tr><td align="center" valign="middle" >2013/1/4</td><td align="center" valign="middle" >16.32</td><td align="center" valign="middle" >16.45</td><td align="center" valign="middle" >15.92</td><td align="center" valign="middle" >15.99</td><td align="center" valign="middle" >−0.19</td><td align="center" valign="middle" >443851</td></tr><tr><td align="center" valign="middle" >2013/1/7</td><td align="center" valign="middle" >15.98</td><td align="center" valign="middle" >16.35</td><td align="center" valign="middle" >15.88</td><td align="center" valign="middle" >16.3</td><td align="center" valign="middle" >1.94</td><td align="center" valign="middle" >357169</td></tr><tr><td align="center" valign="middle" >2013/1/8</td><td align="center" valign="middle" >16.3</td><td align="center" valign="middle" >16.37</td><td align="center" valign="middle" >15.86</td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >−1.84</td><td align="center" valign="middle" >312479</td></tr><tr><td align="center" valign="middle" >2013/1/9</td><td align="center" valign="middle" >15.96</td><td align="center" valign="middle" >16.02</td><td align="center" valign="middle" >15.8</td><td align="center" valign="middle" >15.86</td><td align="center" valign="middle" >−0.88</td><td align="center" valign="middle" >251329</td></tr></tbody></table></table-wrap><p>表2. 部分数据集信息</p><p>为了进一步了解数据特征，本文对三个股票数据集根据其涨跌幅做了样本统计。</p><p>图3、图4和图5分别是沪深300整体类、证券类和银行类在2013~2015年期间的股票集价格涨跌幅分布图。由图可知，三种类型的股票价格涨跌幅分布都近似于高斯分布，其中整体类和证券类的股票都存在部分涨跌停的股票，而银行类则出现的较少，这说明整体类和证券类的股票出现。</p><p>图3. 沪深300整体类股票涨跌幅分布图</p><p>图4. 证券类股票涨跌幅分布图</p><p>动荡的样本数较多，其价格涨跌幅变化更为复杂，预测难度也更大。除此之外，三类股票集的涨跌幅众数都向零点右侧偏移，这说明在这五年期间，沪深300股票市场整体体量有所增长。</p><p>在涨跌幅3分类下的数据占比直方图如图6所示，由图可知3种分类情况下数据分布基本均衡，不涨不跌类别的数据所占比例稍多于其他两类。</p></sec><sec id="s5_2"><title>3.2. 实验结果</title><p>为了检验不同数据集训练的模型对股票的预测效果，本文用数据集1、2和3分别训练对应模型，为了评测训练效果，将数据集划分为训练集、验证集和测试集。对于每只股票，以整体数据的前80% (2013年~2016年)作为训练集，剩余20%作为测试集。训练集用于训练调节LSTM网络参数，测试集用于评测效果。在训练集里，又以8比2的比例分割训练集和验证集。验证集数据用于判断模型收敛时的迭代次数，避免过拟合。本文使用分类准确率作为判断模型优劣的标准。</p><p>图5. 银行类股票涨跌幅分布图</p><p>图6. 3种分类数据分布图</p><p>本文开始设定的隐藏层节点数为128，学习率是0.01，训练迭代次数为150次。使用沪深300的160只股票训练的模型记为M1，用银行类的16只股票训练的模型记为M2，用证券类的14只股票训练的模型记为M3。在训练过程中，通过验证集的损失函数值变换情况来判断模型是否收敛。图7、图8和图9分别表示的是M1、M2和M3模型迭代150次时训练集和验证集损失函数值随迭代次数的变化情况。</p><p>由图7和图9可知，M1和M3模型在迭代了100次左右时就已收敛，由图8可知，M2模型在迭代了80次左右收敛，在此之后的迭代训练过程中，三种模型虽然训练集的损失函数值仍在下降，但验证集的损失函数值开始振荡，说明模型出现了过拟合。</p><p>因此用测试集对模型测试时，选择各自损失函数最小时的检查点模型。三种模型在不同测试集数据上的结果如表3所示。</p><p>图7. M1模型损失函数</p><p>图8. M2模型损失函数</p><p>图9. M3模型损失函数</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> 6 classification accuracy in different mode</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >模型</th><th align="center" valign="middle" >测试集</th><th align="center" valign="middle" >准确率</th></tr></thead><tr><td align="center" valign="middle" >M1</td><td align="center" valign="middle" >沪深300</td><td align="center" valign="middle" >0.276</td></tr><tr><td align="center" valign="middle" >M1</td><td align="center" valign="middle" >银行类</td><td align="center" valign="middle" >0.311</td></tr><tr><td align="center" valign="middle" >M1</td><td align="center" valign="middle" >证券类</td><td align="center" valign="middle" >0.277</td></tr><tr><td align="center" valign="middle" >M2</td><td align="center" valign="middle" >银行类</td><td align="center" valign="middle" >0.334</td></tr><tr><td align="center" valign="middle" >M3</td><td align="center" valign="middle" >证券类</td><td align="center" valign="middle" >0.286</td></tr></tbody></table></table-wrap><p>表3. 不同模型6分类准确率</p><p>由表3可知，三种数据集的准确率都好于6分类随机预测的结果，这说明模型学习到了一定量的股票价格波动规律。其中，银行类的预测准确率高于其他两类，这是由于银行类的大盘股占比高，相对其他类型的股票，受非股票本身因素波动的影响较小。在同一数据集不同模型的表现效果上，M2模型在银行类测试集上的表现优于M1模型，M3模型在证券类测试集上的表现也优于M1模型。这说明对特定类别的股票预测时，选择该领域的股票数据进行训练，预测效果要好于用整体股票信息训练。</p><p>为了进一步评估模型的性能及更好的为投资者提供有用信息，本文还用了大涨、大跌和不涨不跌3分类的模型进行评估，表4是不同模型在三个数据集上3分类的准确率。</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> 3 classification accuracy in different mode</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >模型</th><th align="center" valign="middle" >测试集</th><th align="center" valign="middle" >准确率</th></tr></thead><tr><td align="center" valign="middle" >M1</td><td align="center" valign="middle" >沪深300</td><td align="center" valign="middle" >0.517</td></tr><tr><td align="center" valign="middle" >M1</td><td align="center" valign="middle" >银行类</td><td align="center" valign="middle" >0.593</td></tr><tr><td align="center" valign="middle" >M1</td><td align="center" valign="middle" >证券类</td><td align="center" valign="middle" >0.548</td></tr><tr><td align="center" valign="middle" >M2</td><td align="center" valign="middle" >银行类</td><td align="center" valign="middle" >0.626</td></tr><tr><td align="center" valign="middle" >M3</td><td align="center" valign="middle" >证券类</td><td align="center" valign="middle" >0.586</td></tr></tbody></table></table-wrap><p>表4. 不同模型3分类准确率</p><p>由表4可以看出，3分类的准确率要比6分类的准确率高，这是因为数据分布不均衡，股票价格的涨跌主要集中在了不涨不跌这一类上，所以在把涨跌幅较小的数据合为一类时，模型的准确率有大幅提升。不同数据集上，银行类数据的准确率高于其他两类。除此之外，在3分类模型上，同样存在某一领域的股票预测上，选用该领域的训练集训练出的模型效果要好于用整体股票信息训练出的模型。</p></sec></sec><sec id="s6"><title>4. 总结</title><p>在预测股票价格涨跌幅上，本文提出了一种基于LSTM的多分类预测模型。用沪深300、银行类和证券类等多种数据集分别训练不同的模型，对比不同数据集上各模型在6分类和3分类情况下的预测效果。实验中发现，模型在6分类和3分类的股票涨跌幅预测上，均有比较好的效果。对特定类别的股票预测时，选择该领域的股票数据进行训练，预测效果要好于用整体股票信息的训练，最高时准确率可提升2%。在对涨跌情况三分类的预测中，最高准确率可达0.62。在今后的工作中，还可以根据预测任务的不同尝试使用不同的特征用于训练，探索股票的不同交易数据对于股票价格预测的影响。</p></sec><sec id="s7"><title>文章引用</title><p>陈奉贤,赵建群. 基于LSTM的股票价格的多分类预测Multi-Category Prediction of Stock Price Based on LSTM[J]. 计算机科学与应用, 2019, 09(10): 1882-1891. https://doi.org/10.12677/CSA.2019.910211</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.32542-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">刘长虎, 陶建格, 崔衍秋. 股票价格指数的投资功能[J]. 市场论坛, 2004(6): 71-72.</mixed-citation></ref><ref id="hanspub.32542-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">黄丽明, 陈维政, 闫宏飞. 基于循环神经网络和深度学习的股票预测方法[J]. 广西师范大学学报(自然科学版), 2019, 137(1): 13-22.</mixed-citation></ref><ref id="hanspub.32542-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">沈金榕. 基于决策树的逐步回归算法及在股票预测上的应用[D]: [硕士学位论文]. 广州: 广东工业大学, 2017.</mixed-citation></ref><ref id="hanspub.32542-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Huo, J., Zheng, Y. and Chen, X. (2009) Implementation of Transaction Trend Prediction Model Based on Regression Analysis. Journal of Baosha Teachers’ College, 117, 19-23.</mixed-citation></ref><ref id="hanspub.32542-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">黄秋萍, 周霞, 甘宇健, 韦宇. SVM与神经网络模型在股票预测中的应用研究[J]. 微型机与应用, 2015, 34(5): 88-90.</mixed-citation></ref><ref id="hanspub.32542-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">刘磊. 基于深度学习的股票价格趋势预测方法研究[D]: [硕士学位论文]. 昆明: 云南财经大学, 2017.</mixed-citation></ref><ref id="hanspub.32542-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">欧阳金亮, 陆黎明. 综合改进BP神经网络算法在股价预测中的应用[J]. 计算机与数字工程, 2011, 39(2): 57-59.</mixed-citation></ref><ref id="hanspub.32542-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">毛景慧. 基于LSTM深度神经网络的股市时间序列预测精度的影响因素研究[D]: [硕士学位论文]. 广州: 暨南大学, 2017.</mixed-citation></ref><ref id="hanspub.32542-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">阎平凡, 张长水. 人工神经网络与模拟进化计算[M]. 北京: 清华大学出版社, 1900.</mixed-citation></ref><ref id="hanspub.32542-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">闻新, 张兴旺, 朱亚萍, 李新. 智能故障诊断技术: MATLAB应用[M]. 北京: 北京航空航天大学出版社, 2015.</mixed-citation></ref><ref id="hanspub.32542-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Gu, J., Wang, Z., Kuen, J., Ma, L., Shahroudy, A., Shuai, B., Liu, T., Wang, X., Wang, L., Wang, G. and Cai, J. (2015) Recent Advances in Convolu-tional Neural Networks.</mixed-citation></ref><ref id="hanspub.32542-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Goodfellow, I., Bengio, Y. and Courville, A. (2016) Deep Learning (Vol. 1). MIT Press, Cambridge, 326-366.</mixed-citation></ref><ref id="hanspub.32542-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Graves, A. and Schmidhuber, J. (2005) Framewise Phoneme Classification with Bidirectional LSTM and Other Neural Network Architectures. Neural Networks, 18, 602-610. &lt;br&gt;https://doi.org/10.1016/j.neunet.2005.06.042</mixed-citation></ref><ref id="hanspub.32542-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">KIMY (2014) Convolutional Neural Networks for Sentence Classification. In: Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing, ACL, Stroudsburg, 1746-1751.  
&lt;br&gt;https://doi.org/10.3115/v1/D14-1181</mixed-citation></ref><ref id="hanspub.32542-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Kingma, D.P. and Bal, J. (2014) Adam: A Method for Stochastic Opti-mization. Computer Science.  
&lt;br&gt;https://arXiv.org/abs/1412.6980</mixed-citation></ref></ref-list></back></article>