<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">SEA</journal-id><journal-title-group><journal-title>Software Engineering and Applications</journal-title></journal-title-group><issn pub-type="epub">2325-2286</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/SEA.2020.91011</article-id><article-id pub-id-type="publisher-id">SEA-34356</article-id><article-categories><subj-group subj-group-type="heading"><subject>SEA20200100000_70296484.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于加速度的门限检测计步算法设计
  Design of Step Detection Algorithm Based on Acceleration Threshold Detection
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>冯</surname><given-names>箫</given-names></name><xref ref-type="aff" rid="aff1"><sub>1</sub></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>江南大学物联网工程学院，江苏 无锡</addr-line></aff><pub-date pub-type="epub"><day>06</day><month>01</month><year>2020</year></pub-date><volume>09</volume><issue>01</issue><fpage>93</fpage><lpage>101</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  伴随城市化的进程推进，人们对于室内定位技术的精度要求日益增长，室内定位的研究也受到了社会的广泛关注。本文在传统的波峰波谷检测算法的基础上做出改进，设计了多重门限检测的波谷检测算法。该算法通过波峰值或者波谷值判断行人的运动状态，然后检测相邻波谷之间的时间差和波谷与波峰之间的时间差是否满足阈值条件，消除伪波峰和伪波谷的影响，实现计步。同时，本文也使用了卡尔曼滤波降低原始数据的噪声，平滑曲线。实验表明本文算法提高了计步的准确性，能够应用于计步器、室内定位等领域。
   With the advancement of urbanization, people are increasingly demanding the accuracy of indoor positioning technology. The research on indoor positioning has also received widespread attention from the society. This paper improves on the traditional wave and valley detection algorithm, and designs a valley detection algorithm for multiple threshold detection. This algorithm uses the wave peak or valley value to determine the pedestrian’s movement state, and then detects the time difference and valley between adjacent valleys. Whether the time difference between the peak and the peak meets the threshold condition, eliminates the effects of pseudo peaks and pseudo valleys, and realizes step counting. At the same time, this paper also uses Kalman filtering to reduce the noise of the original data and smooth the curve. Experiments show that the algorithm in this paper improves the step counting. The accuracy can be applied to pedometers, indoor positioning and other fields.
 
</p></abstract><kwd-group><kwd>波峰波谷检测，多重门限检测，卡尔曼滤波，室内定位, Crest and Trough Detection</kwd><kwd> Multiple Threshold Detection</kwd><kwd> Kalman Filtering</kwd><kwd> Indoor Positioning</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于加速度的门限检测计步算法设计<sup> </sup></title><p>冯箫</p><p>江南大学物联网工程学院，江苏 无锡</p><p>收稿日期：2020年2月5日；录用日期：2020年2月20日；发布日期：2020年2月27日</p><disp-formula id="hanspub.34356-formula37"><graphic xlink:href="//html.hanspub.org/file/11-2690416x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>伴随城市化的进程推进，人们对于室内定位技术的精度要求日益增长，室内定位的研究也受到了社会的广泛关注。本文在传统的波峰波谷检测算法的基础上做出改进，设计了多重门限检测的波谷检测算法。该算法通过波峰值或者波谷值判断行人的运动状态，然后检测相邻波谷之间的时间差和波谷与波峰之间的时间差是否满足阈值条件，消除伪波峰和伪波谷的影响，实现计步。同时，本文也使用了卡尔曼滤波降低原始数据的噪声，平滑曲线。实验表明本文算法提高了计步的准确性，能够应用于计步器、室内定位等领域。</p><p>关键词 :波峰波谷检测，多重门限检测，卡尔曼滤波，室内定位</p><disp-formula id="hanspub.34356-formula38"><graphic xlink:href="//html.hanspub.org/file/11-2690416x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/11-2690416x7_hanspub.png" /> <img src="//html.hanspub.org/file/11-2690416x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>步行运动是一项普遍的，门槛低的全民健身运动，在诸多方面对人体有益，但是过多运动也会对人体产生损伤，因而有效计步显得十分重要。计步器可以记录步行的步数，在孕妇健康管理、体育教学、反映能量消耗、增强运动等方面发挥着巨大的作用。微机电系统(Micro-electro Mechanical Systems, MEMS)以体积小、重量轻、功耗低、耐用性好、价格低廉等优点广泛应用于智能手机传感器模块中。目前大多数计步算法都是围绕加速度实现的，而智能手机内置的加速度传感器能够方便获取加速度。</p><p>对于精确计步问题，很多学者已经进行了研究，涌现出了很多方法。</p><p>文献 [<xref ref-type="bibr" rid="hanspub.34356-ref1">1</xref>] 提出多级自适应门限计步算法，先检测加速度信号中的峰值点和谷值点，接着基于获得的峰值点和谷值点，计算人物的步频特征，根据所得步频特征判断人物的运动状态，最后，针对每种运动状态，自适应分配对应的时间差阈值和动态峰谷值差值阈值，实现多级自适应。该算法的准确率能达到95%以上，但对波峰或者波谷的检测准确度要求很高。文献 [<xref ref-type="bibr" rid="hanspub.34356-ref2">2</xref>] 提出了一种基于加速度传感器的自适应计步算法，通过对加速度传感器采集的信号数据进行一系列处理，然后利用人工免疫算法对处理后提取的特征值进行判断，确定人的运动状态，再进行计步。该算法改进了特征值提取方法，摒弃了传统的贝叶斯分类算法，采用人工免疫分类算法有效地提高了计步的准确率，但是运动状态的判定对样本数据库有较强的依赖性。</p><p>文献 [<xref ref-type="bibr" rid="hanspub.34356-ref3">3</xref>] 设计了一种基于MPU6050加速度传感器的自适应采样计步器，该计步器通过MPU6050加速度传感器采集步态信号，运用滑动滤波算法对传感器输出的数字步态信号进行滤波与降噪处理，采用动态阀值算法对行人的跑步和走路两种状态进行自动识别，并根据人体不同的运动状态自动调整采样速率，计步精度可以达到95%以上。文献 [<xref ref-type="bibr" rid="hanspub.34356-ref4">4</xref>] 利用MEMES-IMU多种特征值，提出了行走和跑步的两种步态检测算法。在行走状态下，采用加速度、角速度，足部着地和跨步时间的多条件约束实现零速区间检测。在跑步状态时，通过步伐探测和跨步探测的方法，并结合多条件约束，实现零速区间检测。检测精度达到99%以上，但未将行走状态与跑步状态算法统一。</p><p>针对以上算法出现的问题，本文提出了基于加速度的门限检测算法，在波谷检测算法的基础上改进和优化。算法运用卡尔曼滤波算法对传感器输出的步态信号进行滤波和降噪等预处理，然后根据状态门限阈值判定行人的运动状态，比如跑步、行走或者静止，针对不同的运动状态分别设置步频时间差阈值和峰谷值时间差阈值，满足阈值条件则计步。该算法计步精度可以达到96%以上，可以有效应用于计步器、室内定位等领域，测量不同状态下的步数，满足工程应用的需求。</p></sec><sec id="s4"><title>2. 计步原理</title><p>步态周期可以分为支撑期和摆动期，是指行走过程中一侧足跟着地至该侧足跟再次着地时所经过的时间 [<xref ref-type="bibr" rid="hanspub.34356-ref5">5</xref>]。</p><p>如图1所示，在一个步态周期中，人由于大腿的摆动，垂直加速度先增大后减小，前向加速度在迈步过程中增大，在提脚过程中减小。</p><p>通过Android手机的三轴加速度传感器获取手机坐标系(如图2(a)所示，x轴沿手机左右方向，y轴沿手机上下方向，z轴沿垂直于手机屏幕的方向)下的加速度数据，如图2(b)所示。加速度数据的变化可以反映出行人运动的全过程，因而基于加速度的算法实现计步是可行的。</p><p>图1. 一个步态周期过程中加速度变化规律</p><p>图2. 手机坐标系和一个步态周期里加速度变化</p></sec><sec id="s5"><title>3. 算法设计</title><sec id="s5_1"><title>3.1. 预处理</title><p>acc_z (z轴加速度)尽管能够反映出行人运动的加速度变化，但是单轴加速度对噪声的抗干扰能力较差，不稳定.在实际生活中，行人握持手机的姿势或者手机的摆放位置不尽相同，而且手机加速度的方向与行人行走方向并不相同。对此，大部分研究采用三轴合一加速度，如公式(1)所示：</p><disp-formula id="hanspub.34356-formula39"><label>(1)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/11-2690416x11_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中acc_x表示侧向加速度，acc_y表示垂直加速度，acc_z表示前向加速度 [<xref ref-type="bibr" rid="hanspub.34356-ref5">5</xref>]。</p><p>三轴合一的加速度结果如图3所示。</p><p>图3. 三轴合一加速度</p></sec><sec id="s5_2"><title>3.2. 卡尔曼滤波</title><p>在数据的采集过程中，由于传感器的噪声和手机的摆动或者与衣服的摩擦，不可避免会产生错误的数据(如图4(a)所示)，因此需要对采集的数据进行滤波，矫正错误的数据.本文采用卡尔曼滤波算法 [<xref ref-type="bibr" rid="hanspub.34356-ref6">6</xref>]。</p><p>图4(b)是经过卡尔曼滤波后的波形图，从图中可以看出卡尔曼滤波模型有效地消除了伪波峰或波谷，提高了计步的准确性，同时也使得波形更加平滑，趋近于实际加速度的变化趋势。</p><p>图4. (a) 卡尔曼滤波前；(b) 卡尔曼滤波后</p></sec><sec id="s5_3"><title>3.3. 门限检测计步算法</title><p>传统的波峰波谷计步算法由于只检测峰值或者谷值对噪声抗干扰能力较弱，当滤波过程中无法完全消除伪波峰或者伪波谷，那么就会出现多次计步的情况，降低计步的准确性。本文在传统波峰波谷计步算法上做出改进，兼顾波峰和波谷检测，同时引入波峰时间自更新，避免由于行人停留使得相邻两波峰或波谷的时间差大大超过阈值而无法计步的情况，有效提高了计步的准确性。</p><sec id="s5_3_1"><title>3.3.1. 状态门限阈值设置</title><p>行人在慢走、快走或者跑步过程中的步频是不一样的，一步所需的时间也不同，因而在计步前需要判断行人的运动状态。本文区分静止、行走和跑步这3中状态，约定静止状态state = 0，行走状态state = 1，跑步状态state = 2。为描述状态判断的过程，引入如下符号：</p><p>still_peak：静止时加速度的峰值最大阈值，即行走时加速度的峰值最小阈值；</p><p>walk_peak：行走时加速度的峰值最大阈值，即跑步时加速度的峰值最小阈值；</p><p>still_valley：行走时加速度的谷值最小阈值，即行走时加速度的谷值最大阈值；</p><p>walk_valley：行走时加速度的谷值最小阈值，即跑步时加速度的谷值最大阈值；</p><p>在8个历元的滑动窗口中取出最大值Max和最小值Min (一般重力加速度g取9.8 m/s<sup>2</sup>，满足最大值大于重力加速度，最小值小于重力加速度)，状态转移方程如(2)所示：</p><disp-formula id="hanspub.34356-formula40"><label>(2)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/11-2690416x15_hanspub.png"  xlink:type="simple"/></disp-formula><p>如图5所示，行人在不同状态运动时，峰值和谷值都有明显的差别，对人行走和跑步时的数据多次采样，绘制加速度幅值分布情况图，由实验统计结果可知：行人在正常行走情况下加速度峰值幅值分布在[1.1 g, 2 g]，谷值幅值分布在[0.4 g, 0.9 g]的比重达到98%以上；跑步状态下加速度峰值幅值大于2 g，谷值幅值小于0.4 g的比重达到99%以上，因此取still_peak为11.1 m/s<sup>2</sup>，walk_peak为20 m/s<sup>2</sup>，still_valley为9.3 m/s<sup>2</sup>，walk_valley为4 m/s<sup>2</sup>。</p><p>图5. 不同运动状态下的加速度波形</p><p>状态判定函数Judge_State()的伪代码如下。</p><p>Dim state AS INTERGER</p><p>state=1</p><p>input(acc)</p><p>if acc&lt;9.8 Then</p><p>do 状态转</p><p>Endif</p><p>if acc&gt;9.8 Then</p><p>do 状态转移</p><p>Endif</p></sec><sec id="s5_3_2"><title>3.3.2. 时间差门限阈值设置</title><p>通常情况下，正常人行走的频率为1~2.5 Hz，跑步时的频率不超过5 Hz，所以设置行走时的时间差门限阈值为[0.4 s, 1 s]，设置跑步时的时间差门限阈值为[0.2 s, 0.5 s]；记行走时相邻两波谷的时间差为delta_1，跑步时相邻两波谷的时间差为delta_2，通过检测delta_1或者delta_2是否在门限阈值范围内进行一次判断，如果小于阈值下限，表示存在伪波谷(如图6波谷2所示，波谷2中两个波谷的时间差小于阈值)，如果大于阈值上限，可能行人停止行走或休息，此时需要更新前一个谷值时间，避免影响后续计步。</p><p>图6. 两种伪波谷类型</p><p>记相邻的波峰与波谷的时间差为delta；如图6所示，尽管波谷1达到阈值要求，但是波峰1没有达到阈值要求，在计步过程中并不能计成一步，因而需要通过delta来进行二次判断消除这种情况的伪波谷的影响。错误率与delta的关系如图8所示，当delta取值过小，会导致一步内波峰与波谷的检测时间差过小，从而忽略如慢走的步数，降低了计步准确性；当delta取值过大，会导致本次判断失效，不能消除图6中伪波谷1。根据实验数据的统计，如图7所示，当delta取0.4时，错误率最低即计步的准确率最高。</p><p>图7. 计步的错误率与delta的关系</p><p>阈值判断的峰值和谷值尽管在窗口里是最值，但仍需判断是否是前后邻域的最值，窗口两侧的最值不满足要求，需要摒弃，这是第三次判断.当三次判断都满足条件时，计步并更新前一个谷值时间，进入下一轮读取，算法伪代码如下所示。</p><p>input(acc)</p><p>input(time)</p><p>do 潜在峰值和谷值获取</p><p>if峰值:</p><p>state= Judge_State(Max)</p><p>if 时间阈值判定成立 Then</p><p>do 计步</p><p>Endif</p><p>Endif</p><p>if 谷值：</p><p>state = Judge_State(Min)</p><p>if 时间阈值判定成立 Then</p><p>do 计步</p><p>Endif</p><p>Endif</p></sec></sec></sec><sec id="s6"><title>4. 实验与结果分析</title><sec id="s6_1"><title>4.1. 实验设计</title><p>为了获取行人在运动过程中握持Android手机时的加速度，编写了一款APP读取三轴加速度的数值.选取物联网工程学院宽阔的走廊作为实验的场地(如图8所示)，便于实验。</p><p>图8. 实验走廊</p><p>实验使用的手机是HUAWEI Honor 10，系统为Android9.0.1。实验区别静止、行走和跑步三种状态，每种状态均采用门限检测计步算法，采集三组数据，每组数据的实际步数都是100步。</p></sec><sec id="s6_2"><title>4.2. 实验结果分析</title><p>经过行人运动时加速度数据的采集，预处理，滤波，计步算法等过程进行了随机测试，测试的结果如表1所示。通过门限检测算法可以有效实现计步，行走状态下的准确率可达100%，最低为93%；跑步状态下的准确率可达99%，最低为95%；静止状态下的行人可以100%识别；在实际生活应用中可以作为室内定位或者计步器的一部分，准确提供行人的步数信息。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Step detection result</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >运动状态</th><th align="center" valign="middle" >实际运动步数</th><th align="center" valign="middle" >计步结果</th><th align="center" valign="middle" >准确率</th><th align="center" valign="middle" >平均准确率</th></tr></thead><tr><td align="center" valign="middle"  rowspan="3"  >行走</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >100%</td><td align="center" valign="middle"  rowspan="3"  >97.3%</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >93</td><td align="center" valign="middle" >93%</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >99</td><td align="center" valign="middle" >99%</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >跑步</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >103</td><td align="center" valign="middle" >97%</td><td align="center" valign="middle"  rowspan="3"  >96.3%</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >105</td><td align="center" valign="middle" >95%</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >103</td><td align="center" valign="middle" >97%</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >静止</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >100%</td><td align="center" valign="middle"  rowspan="3"  >100%</td></tr><tr><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >100%</td></tr><tr><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >100%</td></tr></tbody></table></table-wrap><p>表1. 步数检测结果</p></sec><sec id="s6_3"><title>4.3. 与传统波峰检测算法比较</title><p>文献 [<xref ref-type="bibr" rid="hanspub.34356-ref7">7</xref>] 采用传统峰值检测实现计步，选取统一的时间窗口[0.2 s, 2 s]，比较上一峰值与此峰值的时间间隔，如果处于时间窗口内，则视为有效信号。此算法对噪声的抗干扰能力较弱，只能一次性计步，计步过程中不能过长停留，否则会形成累积误差，无法计步。如图9所示，红线以上部分均达到峰值要求，计步是前3个峰值计步有效，但第三个与第四个峰值间有较长的时间间隔，且超过时间阈值，第四个峰值以及往后的峰值都是无效的。</p><p>图9. 文献 [<xref ref-type="bibr" rid="hanspub.34356-ref7">7</xref>] 计步结果</p><p>对于本文的算法和文献 [<xref ref-type="bibr" rid="hanspub.34356-ref7">7</xref>] 的算法分别进行10次行走和跑步测试.将2种算法计算的总步数与实际行走的步数进行比较，可以得到如图10所示的误差比较。</p><p>由图10可知，测试10次之后，文献 [<xref ref-type="bibr" rid="hanspub.34356-ref7">7</xref>] 传统峰值检测算法计算出的总步数与实际的步数误差较大，跑步状态下步态周期短，误差范围大于等于3%占比60%，均在5%以内。行走状态下步态周期相对变长，此时误差范围大于等于3%占比90%，大于等于5%占比60%。而本文算法测试10次，跑步状态下误差范围大于等于3%占比30%，均在5%以内。行走状态下误差范围大于等于3%占比30%，均在5%以内。由实验结果表明：本文的算法优于传统的峰值检测算法，有效地提高了计步的精度。</p><p>图10. 实验误差比较</p></sec></sec><sec id="s7"><title>5. 结束语</title><p>本文讨论了基于加速度的门限检测计步算法，在传统的波峰波谷检测算法的基础上做出改进，提高了计步的准确性。本文也讨论了卡尔曼滤波原理，对原始的加速度数据进行过滤，降低了噪声的干扰。在状态判断的基础上进行三次门限检测有效对伪波峰和伪波谷起到抑制作用。实验表明本算法能够满足计步器、室内定位等方向的精度要求，在此后的工作里，我们团队将致力于滤波方法的改进，进一步提高精度，降低噪声对实验的影响。</p></sec><sec id="s8"><title>文章引用</title><p>冯 箫. 基于加速度的门限检测计步算法设计Design of Step Detection Algorithm Based on Acceleration Threshold Detection[J]. 软件工程与应用, 2020, 09(01): 93-101. https://doi.org/10.12677/SEA.2020.91011</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.34356-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">李钢, 郑鑫博, 阳召成. 一种基于多级自适应门限的计步算法[J]. 深圳大学学报理工版, 2018, 35(2): 158-165.</mixed-citation></ref><ref id="hanspub.34356-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">李雪梅, 车爱静. 一种基于加速度传感器的自适应计步算法[J]. 唐山学院学报, 2019, 32(3): 18-21.</mixed-citation></ref><ref id="hanspub.34356-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">魏芬, 邓海琴. 基于加速度传感器的自适应采样计步器设计[J]. 自动化技术与应用, 2019, 38(5): 121-124.</mixed-citation></ref><ref id="hanspub.34356-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">李飞, 王朋远. 基于foot-mounted IMU零速区间的行人步态检测算法[J]. 城市勘测, 2019(4): 97-101.</mixed-citation></ref><ref id="hanspub.34356-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">严金戈, 郭延锐. 基于鞋垫内置传感器的高精度计步算法[J]. 计算机工程与设计, 2018, 39(10): 3150-3155.</mixed-citation></ref><ref id="hanspub.34356-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">李庆党, 张义龙. 基于卡尔曼滤波和互补滤波的改进型姿态解算方法[J]. 青岛科技大学学报(自然科学版), 2019, 40(6): 85-89.</mixed-citation></ref><ref id="hanspub.34356-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">李雪梅, 车爱静, 高焕明. 基于加速度传感器的计步器设计[J]. 山东工业技术, 2019(11): 142, 162.</mixed-citation></ref></ref-list></back></article>