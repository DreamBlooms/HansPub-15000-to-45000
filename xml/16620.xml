<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">SEA</journal-id><journal-title-group><journal-title>Software Engineering and Applications</journal-title></journal-title-group><issn pub-type="epub">2325-2286</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/SEA.2015.46016</article-id><article-id pub-id-type="publisher-id">SEA-16620</article-id><article-categories><subj-group subj-group-type="heading"><subject>SEA20150600000_54730564.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  LIUF理论量词公式的插值算法
  Interpolation Algorithm for Quantifier Formulas in LIUF Theory
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>千卉</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>江</surname><given-names>建国</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>刘</surname><given-names>文秀</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>辽宁师范大学数学学院，辽宁 大连</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>lqh274243982@sina.com(李千)</email>;<email>jjgbox@sina.com(江建)</email>;<email>1070957463@qq.com(刘文)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>15</day><month>12</month><year>2015</year></pub-date><volume>04</volume><issue>06</issue><fpage>121</fpage><lpage>128</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   量词公式的插值是LIUF理论中一个未解决的问题。针对如何消去量词、消去量词后如何求出公式的插值等问题，提出了一种基于无量词公式理论插值的新算法。首先利用斯科拉姆化消去存在量词，并通过引入新变量消去全称量词，使量词公式变为无量词公式；然后运用已有的LIUF无量词理论公式插值算法求出变换后公式的插值；最后将插值中含有的新变量用存在量词或全称量词替换，从而得到LIUF理论中量词公式的插值。实例表明新算法可以解决LIUF理论中量词公式的插值问题。 The problem of interpolation for quantifier formulas is still unsolved in LIUF theory. For the problems of how to eliminate quantifiers and compute the interpolation after eliminating the quantifiers, a new algorithm based on quantifier-free theory interpolation algorithm is proposed. First, the skolemization was used to eliminate existential quantifiers and universal quantifiers were instantiated with free individual variables to create quantifier-free formulas; Then, the quantifier-free theory interpolation algorithm was used to compute the formulas; Finally, the new variables were eliminated by quantifying universally or existentially, and interpolation for quantifier formulas was obtained. The algorithm example shows that the new interpolation algorithm can solve the problem of quantifier formulas in LIUF theory.
    
  
 
</p></abstract><kwd-group><kwd>理论插值，LIUF理论，量词消去，斯科拉姆化, Theory Interpolation</kwd><kwd> LIUF Theory</kwd><kwd> Eliminate Quantifier</kwd><kwd> Skolemization</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>LIUF理论量词公式的插值算法</title><p>李千卉，江建国，刘文秀</p><p>辽宁师范大学数学学院，辽宁 大连</p><disp-formula id="hanspub.16620-formula252"><graphic xlink:href="http://html.hanspub.org/file/2-2690174x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2015年12月8日；录用日期：2015年12月22日；发布日期：2015年12月28日</p><disp-formula id="hanspub.16620-formula253"><graphic xlink:href="http://html.hanspub.org/file/2-2690174x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>量词公式的插值是LIUF理论中一个未解决的问题。针对如何消去量词、消去量词后如何求出公式的插值等问题，提出了一种基于无量词公式理论插值的新算法。首先利用斯科拉姆化消去存在量词，并通过引入新变量消去全称量词，使量词公式变为无量词公式；然后运用已有的LIUF无量词理论公式插值算法求出变换后公式的插值；最后将插值中含有的新变量用存在量词或全称量词替换，从而得到LIUF理论中量词公式的插值。实例表明新算法可以解决LIUF理论中量词公式的插值问题。</p><p>关键词 :理论插值，LIUF理论，量词消去，斯科拉姆化</p><disp-formula id="hanspub.16620-formula254"><graphic xlink:href="http://html.hanspub.org/file/2-2690174x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>1957年，Craig首次提出了插值的概念[<xref ref-type="bibr" rid="hanspub.16620-ref1">1</xref>] 。在此后的研究中，研究者们发现Craig插值在命题逻辑、命题可满足性(SAT)问题[<xref ref-type="bibr" rid="hanspub.16620-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.16620-ref3">3</xref>] 、无量词一阶逻辑问题[<xref ref-type="bibr" rid="hanspub.16620-ref4">4</xref>] 、可满足性模理论(SMT)问题[<xref ref-type="bibr" rid="hanspub.16620-ref5">5</xref>] 、软件模型检测[<xref ref-type="bibr" rid="hanspub.16620-ref6">6</xref>] 和抽象优化[<xref ref-type="bibr" rid="hanspub.16620-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.16620-ref8">8</xref>] 等领域有广泛的应用，因此，其中所涉及的插值的求法成为研究的热点。当前最常用的求插值的方法为DPLL法[<xref ref-type="bibr" rid="hanspub.16620-ref9">9</xref>] ，它因易操作、高效等优点被广泛使用。由DPLL的研究可知，它可与理论T结合，因此插值的研究可扩展到理论中去。</p><p>近些年来，由于实际研究的需要，理论插值的研究越来越广泛。研究的理论包括线性不等式理论[<xref ref-type="bibr" rid="hanspub.16620-ref10">10</xref>] 、数组理论[<xref ref-type="bibr" rid="hanspub.16620-ref11">11</xref>] 、未解释函数理论[<xref ref-type="bibr" rid="hanspub.16620-ref12">12</xref>] 等。但这些都局限于对单个理论的研究，当面对两个或两个以上理论时，就无法高效地求出插值了。本文研究的是两种理论结合下的插值，即线性不等式理论(Linear Inequality，简称LI)和未解释函数理论(Uninterpreted Functions，简称UF)结合下的插值，这里将这种结合理论称为LIUF理论。LIUF理论中非协调公式对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x9_hanspub.png" xlink:type="simple"/></inline-formula>的插值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x10_hanspub.png" xlink:type="simple"/></inline-formula>满足：(1)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x11_hanspub.png" xlink:type="simple"/></inline-formula>，(2)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x12_hanspub.png" xlink:type="simple"/></inline-formula>，(3)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x13_hanspub.png" xlink:type="simple"/></inline-formula>中的符号都是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x14_hanspub.png" xlink:type="simple"/></inline-formula>公有的。</p><p>LIUF理论在软件模型检测中有十分重要的应用。同时，当已知LI理论的插值时，可通过结合理论下的插值算法求出UF理论的插值，反之亦然，这大大减少了工作量。然而，现有的工作仅研究了无量词公式在LIUF理论中的插值算法，量词公式的插值算法仍是一个未解决的问题。</p><p>LIUF理论量词公式插值求解面临两大问题，即如何消去量词以及如何消去插值中由量词消去引入的新变量。针对所面临的问题，本文提出了LIUF理论量词公式的插值算法，并通过实例详细地说明了如何在LIUF理论中求出量词公式的插值。</p></sec><sec id="s4"><title>2. LIUF理论</title><p>在LIUF理论中，项是单个变量或<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x15_hanspub.png" xlink:type="simple"/></inline-formula>，这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x16_hanspub.png" xlink:type="simple"/></inline-formula>是项，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x17_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x18_hanspub.png" xlink:type="simple"/></inline-formula>元函数符号。形如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x19_hanspub.png" xlink:type="simple"/></inline-formula>的线性组合称为算术项，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x20_hanspub.png" xlink:type="simple"/></inline-formula>是项，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x21_hanspub.png" xlink:type="simple"/></inline-formula>为整数常量，且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x22_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x23_hanspub.png" xlink:type="simple"/></inline-formula>。原子谓词指单个命题变量或不等式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x24_hanspub.png" xlink:type="simple"/></inline-formula> (这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x25_hanspub.png" xlink:type="simple"/></inline-formula>是算术项)或等式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x26_hanspub.png" xlink:type="simple"/></inline-formula> (这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x27_hanspub.png" xlink:type="simple"/></inline-formula>是项)。原子谓词本身或原子谓词的否定构成文字，文字的析取构成子句，子句通常用“<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x28_hanspub.png" xlink:type="simple"/></inline-formula>”表示，将包含文字集<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x29_hanspub.png" xlink:type="simple"/></inline-formula>的子句记作<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x30_hanspub.png" xlink:type="simple"/></inline-formula>，空子句记作<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x31_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>序列是有限公式集的序列对，记为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x32_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x33_hanspub.png" xlink:type="simple"/></inline-formula>为公式集(本文中为文字集或子句集)，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x34_hanspub.png" xlink:type="simple"/></inline-formula>为公式的合取，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x35_hanspub.png" xlink:type="simple"/></inline-formula>为公式的析取。现设本文所讨论的插值均有如下形式：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x36_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x37_hanspub.png" xlink:type="simple"/></inline-formula>为公式对，括号中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x38_hanspub.png" xlink:type="simple"/></inline-formula>也可表示为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x39_hanspub.png" xlink:type="simple"/></inline-formula>；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x40_hanspub.png" xlink:type="simple"/></inline-formula>代表与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x41_hanspub.png" xlink:type="simple"/></inline-formula>有关的插值，当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x42_hanspub.png" xlink:type="simple"/></inline-formula>为空子句时，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x43_hanspub.png" xlink:type="simple"/></inline-formula>就是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x44_hanspub.png" xlink:type="simple"/></inline-formula>的插值，这里的插值以及下文所提到的插值均为Craig插值。通常，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x45_hanspub.png" xlink:type="simple"/></inline-formula>满足：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x46_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x47_hanspub.png" xlink:type="simple"/></inline-formula>。需要说明，文中所有的小写字母都代表公式，大写字母都代表公式集。</p><p>现给出证明规则，使用这些规则可得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x48_hanspub.png" xlink:type="simple"/></inline-formula>的证明过程。</p><p>HYP <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x49_hanspub.png" xlink:type="simple"/></inline-formula> COMB <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x50_hanspub.png" xlink:type="simple"/></inline-formula></p><p>RES <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x51_hanspub.png" xlink:type="simple"/></inline-formula> TRANS <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x52_hanspub.png" xlink:type="simple"/></inline-formula></p><p>CONG <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x53_hanspub.png" xlink:type="simple"/></inline-formula>(*) EQNEQ <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x54_hanspub.png" xlink:type="simple"/></inline-formula></p><p>LEQEQ <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x55_hanspub.png" xlink:type="simple"/></inline-formula> EQLEQ <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x56_hanspub.png" xlink:type="simple"/></inline-formula></p><p>本文中(*)表示出现在“<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x57_hanspub.png" xlink:type="simple"/></inline-formula>”右侧的符号也出现在其左侧。</p><p>例 设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x58_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x59_hanspub.png" xlink:type="simple"/></inline-formula>，试写出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x60_hanspub.png" xlink:type="simple"/></inline-formula>的证明过程。</p><p>1 <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x61_hanspub.png" xlink:type="simple"/></inline-formula>(HYP) 2 <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x62_hanspub.png" xlink:type="simple"/></inline-formula>(HYP)</p><p>3 <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x63_hanspub.png" xlink:type="simple"/></inline-formula>(HYP) 4 <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x64_hanspub.png" xlink:type="simple"/></inline-formula> (HYP)</p><p>5 <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x65_hanspub.png" xlink:type="simple"/></inline-formula>(COMB1, 3) 6 <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x66_hanspub.png" xlink:type="simple"/></inline-formula>(COMB2, 4)</p><p>7 <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x67_hanspub.png" xlink:type="simple"/></inline-formula> (EQLEQ5, 6)</p></sec><sec id="s5"><title>3. LIUF无量词理论公式的插值</title><p>上节介绍了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x68_hanspub.png" xlink:type="simple"/></inline-formula>的证明过程，而插值正是从这个证明过程中推出的，那么如何从中提取出插值呢？这正是本节所要讨论的内容：介绍LIUF理论中三个无量词公式理论插值的定义，引入插值规则，讨论插值的求法。</p><p>定义1(不等式插值)将形如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x69_hanspub.png" xlink:type="simple"/></inline-formula>序列的称为不等式插值，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x70_hanspub.png" xlink:type="simple"/></inline-formula>为文字集，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x71_hanspub.png" xlink:type="simple"/></inline-formula>为项，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x72_hanspub.png" xlink:type="simple"/></inline-formula>为公式。它是有效的，满足：</p><p>(1)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x73_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>(2)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x74_hanspub.png" xlink:type="simple"/></inline-formula>且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x75_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>(3)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x76_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x77_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x78_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>这里，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x79_hanspub.png" xlink:type="simple"/></inline-formula>为插值。符号“<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x80_hanspub.png" xlink:type="simple"/></inline-formula>”在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x81_hanspub.png" xlink:type="simple"/></inline-formula>中表示<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x82_hanspub.png" xlink:type="simple"/></inline-formula>中所有的变量和未解释函数符号都出现在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x83_hanspub.png" xlink:type="simple"/></inline-formula>中；在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x84_hanspub.png" xlink:type="simple"/></inline-formula>中表示<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x85_hanspub.png" xlink:type="simple"/></inline-formula>中所有的变量和未解释函数符号都出现在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x86_hanspub.png" xlink:type="simple"/></inline-formula>中，此时称<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x87_hanspub.png" xlink:type="simple"/></inline-formula>是全局项；否则，称<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x88_hanspub.png" xlink:type="simple"/></inline-formula>是局部项。在不等式理论中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x89_hanspub.png" xlink:type="simple"/></inline-formula>总为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x90_hanspub.png" xlink:type="simple"/></inline-formula>。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x91_hanspub.png" xlink:type="simple"/></inline-formula>表示<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x92_hanspub.png" xlink:type="simple"/></inline-formula>中不等式的线性组合，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x93_hanspub.png" xlink:type="simple"/></inline-formula>表示对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x94_hanspub.png" xlink:type="simple"/></inline-formula>中不等式相加后得到的结果。</p><p>定义2(子句插值)将形如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x95_hanspub.png" xlink:type="simple"/></inline-formula>的序列称为子句插值，这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x96_hanspub.png" xlink:type="simple"/></inline-formula>是子句集，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x97_hanspub.png" xlink:type="simple"/></inline-formula>是文字集，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x98_hanspub.png" xlink:type="simple"/></inline-formula>是公式。它是有效的，满足：</p><p>(1)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x99_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>(2)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x100_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>(3)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x101_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>这里，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x102_hanspub.png" xlink:type="simple"/></inline-formula>表示<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x103_hanspub.png" xlink:type="simple"/></inline-formula>中文字的原子谓词出现在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x104_hanspub.png" xlink:type="simple"/></inline-formula>中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x105_hanspub.png" xlink:type="simple"/></inline-formula>表示<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x106_hanspub.png" xlink:type="simple"/></inline-formula>中文字的原子谓词不出现在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x107_hanspub.png" xlink:type="simple"/></inline-formula>中。在子句插值中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x108_hanspub.png" xlink:type="simple"/></inline-formula>就是插值。</p><p>定义3(等式插值)将形如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x109_hanspub.png" xlink:type="simple"/></inline-formula>的序列称为等式插值，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x110_hanspub.png" xlink:type="simple"/></inline-formula>是文字集，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x111_hanspub.png" xlink:type="simple"/></inline-formula>为项，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x112_hanspub.png" xlink:type="simple"/></inline-formula>为公式。它是有效的，满足：</p><p>(1)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x113_hanspub.png" xlink:type="simple"/></inline-formula>；</p><disp-formula id="hanspub.16620-formula255"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x114_hanspub.png"  xlink:type="simple"/></disp-formula><p>① <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x115_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>② <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x116_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>(3)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x117_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x118_hanspub.png" xlink:type="simple"/></inline-formula>，如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x119_hanspub.png" xlink:type="simple"/></inline-formula>，那么<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x120_hanspub.png" xlink:type="simple"/></inline-formula>，否则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x121_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x122_hanspub.png" xlink:type="simple"/></inline-formula>同理。</p><p>这里，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x123_hanspub.png" xlink:type="simple"/></inline-formula>为插值。为了得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x124_hanspub.png" xlink:type="simple"/></inline-formula>，首先建立<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x125_hanspub.png" xlink:type="simple"/></inline-formula>的等式链<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x126_hanspub.png" xlink:type="simple"/></inline-formula>，等式链中的等式来自于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x127_hanspub.png" xlink:type="simple"/></inline-formula>或<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x128_hanspub.png" xlink:type="simple"/></inline-formula>，设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x129_hanspub.png" xlink:type="simple"/></inline-formula>代表等式中最左侧的全局项，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x130_hanspub.png" xlink:type="simple"/></inline-formula>代表等式中最右侧的全局项。当等式中有全局项时，由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x131_hanspub.png" xlink:type="simple"/></inline-formula>可推出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x132_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x133_hanspub.png" xlink:type="simple"/></inline-formula>；当等式中无全局项时，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x134_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x135_hanspub.png" xlink:type="simple"/></inline-formula>。在TRANS规则中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x136_hanspub.png" xlink:type="simple"/></inline-formula>总为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x137_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>下面介绍几种插值规则，运用这些规则，就可以得到插值。</p><p>首先介绍前提(HYP)规则：</p><p>HYP-A <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x138_hanspub.png" xlink:type="simple"/></inline-formula> HYP-B <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x139_hanspub.png" xlink:type="simple"/></inline-formula></p><p>HYPC-A <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x140_hanspub.png" xlink:type="simple"/></inline-formula> HYPC-B <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x141_hanspub.png" xlink:type="simple"/></inline-formula></p><p>HYPEQ-A <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x142_hanspub.png" xlink:type="simple"/></inline-formula></p><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x144_hanspub.png" xlink:type="simple"/></inline-formula><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x143_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x145_hanspub.png" xlink:type="simple"/></inline-formula></p><p>HYPEQ-B <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x146_hanspub.png" xlink:type="simple"/></inline-formula></p><p>HYP规则应用在插值算法的最开始，主要作用是将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x147_hanspub.png" xlink:type="simple"/></inline-formula>中的公式写成<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x148_hanspub.png" xlink:type="simple"/></inline-formula>的形式，方便下面的运算。</p><p>下面介绍其余插值规则，这些规则的使用并无固定顺序，可根据实际需要选择恰当的规则计算插值。</p><p>COMB<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x149_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x150_hanspub.png" xlink:type="simple"/></inline-formula></p><p>RES-A<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x151_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x152_hanspub.png" xlink:type="simple"/></inline-formula>不出现在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x153_hanspub.png" xlink:type="simple"/></inline-formula>中</p><p>RES-B<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x154_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x155_hanspub.png" xlink:type="simple"/></inline-formula>出现在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x156_hanspub.png" xlink:type="simple"/></inline-formula>中</p><p>TRANS1<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x157_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x158_hanspub.png" xlink:type="simple"/></inline-formula>且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x159_hanspub.png" xlink:type="simple"/></inline-formula></p><p>TRANS2<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x160_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x161_hanspub.png" xlink:type="simple"/></inline-formula>或<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x162_hanspub.png" xlink:type="simple"/></inline-formula></p><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x163_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x164_hanspub.png" xlink:type="simple"/></inline-formula></p><p>CONG1 <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x165_hanspub.png" xlink:type="simple"/></inline-formula>(*)，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x166_hanspub.png" xlink:type="simple"/></inline-formula>或<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x167_hanspub.png" xlink:type="simple"/></inline-formula></p><p>CONG2 <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x168_hanspub.png" xlink:type="simple"/></inline-formula> (*)，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x169_hanspub.png" xlink:type="simple"/></inline-formula></p><p>LEQEQ1<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x170_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x171_hanspub.png" xlink:type="simple"/></inline-formula>或<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x172_hanspub.png" xlink:type="simple"/></inline-formula></p><p>LEQEQ2<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x173_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x174_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x175_hanspub.png" xlink:type="simple"/></inline-formula></p><p>EQLEQ-BB <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x176_hanspub.png" xlink:type="simple"/></inline-formula> (*)，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x177_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x178_hanspub.png" xlink:type="simple"/></inline-formula></p><p>EQLEQ-AB <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x179_hanspub.png" xlink:type="simple"/></inline-formula> (*)，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x180_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x181_hanspub.png" xlink:type="simple"/></inline-formula></p><p>EQLEQ-AA <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x182_hanspub.png" xlink:type="simple"/></inline-formula> (*)，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x183_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x184_hanspub.png" xlink:type="simple"/></inline-formula></p></sec><sec id="s6"><title>4. LIUF理论量词公式的插值算法</title><sec id="s6_1"><title>4.1. 面临的挑战</title><p>通过上一节的介绍可以很容易证明出LIUF理论无量词公式插值系统的完备性和可靠性。但在某些情况下，无量词公式插值通常是不存在的。例如：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x185_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x186_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x187_hanspub.png" xlink:type="simple"/></inline-formula>的插值为“存在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x188_hanspub.png" xlink:type="simple"/></inline-formula>”，这是量词的表达方法。因此，对于单纯的整数域上的LIUF理论无量词公式，并不能得到完备的系统，这就需要研究带有量词公式的LIUF理论插值系统。</p><p>LIUF理论量词公式的插值求解过程中，如何消去量词成为首个要面临的问题。量词包括存在量词和全称量词。存在量词可用斯科拉姆化法[<xref ref-type="bibr" rid="hanspub.16620-ref13">13</xref>] 消去，这是很容易做到的；但消去全称量词就有些复杂了，全称量词的消去过程会引入新的变量，那么新变量的选择就变得至关重要，如果选择不当，就会增加不必要的计算量，而且当公式中同时含有存在量词和全称量词时，必须考虑先消去哪种量词，这关系到整个插值过程的工作量。</p><p>当消去量词后，原公式变为无量词公式，然后求出无量词公式的插值。应注意：消去量词后得到的公式可用无量词公式插值算法计算。但此时求出的插值并不是所要求的量词公式的插值，因为其中含有由量词消去所引入的新变量，这时需要考虑如何消去新变量，且保证不会影响插值的整体形式。</p><p>针对上述问题，要求出LIUF理论量词公式的插值，需要满足：</p><p>1) 确定消去存在量词和全称量词的顺序和方法；</p><p>2) 找到无量词公式插值中引入的新变量的消去方法。</p></sec><sec id="s6_2"><title>4.2. LIUF理论量词公式插值算法</title><p>对于上述问题，我们给出LIUF理论量词公式插值算法。该算法可以解决上节所提出的两个问题，并能成功求出其插值。对于量词公式对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x189_hanspub.png" xlink:type="simple"/></inline-formula>，若仅出现一种量词，就用相应的方法消去量词，若两种量词同时出现，则先消去存在量词，然后再消去全称量词，并将公式变为无量词的情况<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x190_hanspub.png" xlink:type="simple"/></inline-formula>，然后通过已有的插值算法先求出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x191_hanspub.png" xlink:type="simple"/></inline-formula>的插值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x192_hanspub.png" xlink:type="simple"/></inline-formula>，再由文献[<xref ref-type="bibr" rid="hanspub.16620-ref1">1</xref>] ，将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x193_hanspub.png" xlink:type="simple"/></inline-formula>中由量词消去引入的新变量用存在或全称量词替换，就得到了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x194_hanspub.png" xlink:type="simple"/></inline-formula>的插值。算法的具体过程如算法1所示。</p><p>算法1. LIUF理论量词公式的插值算法</p></sec><sec id="s6_3"><title>4.3. 算法实例</title><p>使用LIUF理论量词公式插值算法可以求出量词公式的插值。下面以具体例子进行说明。</p><p>例 设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x216_hanspub.png" xlink:type="simple"/></inline-formula>， <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x217_hanspub.png" xlink:type="simple"/></inline-formula>，求<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x218_hanspub.png" xlink:type="simple"/></inline-formula>的插值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x219_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>1) 用斯科拉姆化法消去存在量词，并把公式变为全称前束范式。</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x220_hanspub.png" xlink:type="simple"/></inline-formula>；</p><disp-formula id="hanspub.16620-formula256"><graphic xlink:href="http://html.hanspub.org/file/2-2690174x221_hanspub.png"  xlink:type="simple"/></disp-formula><p>2) 消去全称量词，将<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x222_hanspub.png" xlink:type="simple"/></inline-formula>中的项<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x223_hanspub.png" xlink:type="simple"/></inline-formula>实例化，分别引入新变量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x224_hanspub.png" xlink:type="simple"/></inline-formula>和等式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x225_hanspub.png" xlink:type="simple"/></inline-formula>，将量词公式对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x226_hanspub.png" xlink:type="simple"/></inline-formula>化为无量词公式对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x227_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x228_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x229_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>3) 由LIUF理论无量词公式的插值算法求出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x230_hanspub.png" xlink:type="simple"/></inline-formula>的插值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x231_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>具体步骤如下：</p><disp-formula id="hanspub.16620-formula257"><label>(1) (HYP-A)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x232_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula258"><label>(2) (HYP-A)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x233_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula259"><label>(3) (HYP-A)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x234_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula260"><label>(4) (HYPEQ-A)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x235_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula261"><label>(5) (HYP-B)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x236_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula262"><label>(6) (HYP-B)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x237_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula263"><label>(7) (HYP-B)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x238_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula264"><label>(8) (HYPEQ-B)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x239_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula265"><label>(9) (COMB1, 5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x240_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula266"><label>(10) (COMB2, 6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x241_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula267"><label>(11) (LEQEQ2 4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x242_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula268"><label>(12) (LEQEQ1 8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x243_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula269"><label>(13) (COMB9, 11)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x244_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula270"><label>(14) (COMB10, 12)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x245_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula271"><label>(15) (COMB13, 14)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x246_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula272"><label>(16) (COMB3, 7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x247_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16620-formula273"><label>(17) (COMB15, 16)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-2690174x248_hanspub.png"  xlink:type="simple"/></disp-formula><p>所以<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x249_hanspub.png" xlink:type="simple"/></inline-formula>为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x250_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>4) 因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x251_hanspub.png" xlink:type="simple"/></inline-formula>中不含有新变量，所以不需要将变量替换为量词。</p><p>所以，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x252_hanspub.png" xlink:type="simple"/></inline-formula>的插值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x253_hanspub.png" xlink:type="simple"/></inline-formula>为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-2690174x254_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>有了上述算法，无量词公式的插值规则都可以应用在带有量词公式上，这就使插值有了更广泛的应用。</p></sec></sec><sec id="s7"><title>5. 结语</title><p>本文在无量词理论插值算法的基础上，介绍了LIUF理论量词公式的插值算法，解决了之前无法求解量词公式插值的问题，从而使插值有了更为广泛的应用。但这种方法只能应用在已知的无量词插值算法的基础上，并不能独立使用，进一步的工作是要改进出适用范围更广的插值算法，这将使插值计算更加智能化和高效化。</p></sec><sec id="s8"><title>文章引用</title><p>李千卉,江建国,刘文秀. LIUF理论量词公式的插值算法Interpolation Algorithm for Quantifier Formulas in LIUF Theory[J]. 软件工程与应用, 2015, 04(06): 121-128. http://dx.doi.org/10.12677/SEA.2015.46016</p></sec><sec id="s9"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.16620-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Craig, W. (1957) Three Uses of the Herbrand-Gentzen Theorem in Relating Model Theory and Proof Theory. The Journal of Symbolic Logic, 22, 269-285. &lt;br&gt;http://dx.doi.org/10.2307/2963594</mixed-citation></ref><ref id="hanspub.16620-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">McMillan, K.L. (2003) Interpolation and SAT-Based Model Checking. In: CAV 2003: 2003 Proceedings of the 15th Conference on Computer Aided Verification, Lecture Notes in Computer Science, Springer, Berlin, 1-13.</mixed-citation></ref><ref id="hanspub.16620-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Weissenbacher, G. (2010) Program Analysis with Interpolants. Magdalen College, Oxford University, Oxford, England, 277.</mixed-citation></ref><ref id="hanspub.16620-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Henzinger, T.A., Jhala, R., Majumdar, R., et al. (2004) Abstractions from Proofs. ACM SIGPLAN Notices, 39, 232- 244.</mixed-citation></ref><ref id="hanspub.16620-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Bruttomesso, R., Rollini, S.F., Sharygina, N., et al. (2010) Flexible Interpolation Generation in Satisfiability Modulo Theories. ICCAD 2010: 2010 Proceedings of the 14th International Conference on Computer-Aided Design, IEEE, Piscataway, 770-777.</mixed-citation></ref><ref id="hanspub.16620-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">陈祖希, 徐中伟, 霍伟伟, 等. 基于Craig插值的线性混成系统符号化模型检测[J]. 电子学报, 2014(7): 1338- 1346.</mixed-citation></ref><ref id="hanspub.16620-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">McMillan, K.L., Ball, T. and Jones, R.B. (2006) Lazy Abstraction with Interpolations. In: CAV 2006: 2006 Proceedings of the 18th Conference on Computer Aided Verification, Springer, Berlin, 123-136.</mixed-citation></ref><ref id="hanspub.16620-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">屈婉霞, 李暾, 郭阳, 杨晓东. 模型检验中抽象技术研究综述[J]. 计算机工程与应用, 2006, 42(33): 15-19.</mixed-citation></ref><ref id="hanspub.16620-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Nieuwenhuis, R., Oliveras, A. and Tinelli, C. (2006) Solving SAT and SAT Modulo Theories: From an Abstract Davis- Putnam-Logemann-Loveland procedure to DPLL(T). Journal of the ACM, 53, 937-977.</mixed-citation></ref><ref id="hanspub.16620-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Pudlak, P. (1997) Lower Bounds for Resolution and Cutting Plane Proofs and Monotone Computations. Mathematical Institute Academy of Sciences of Czech Republic, 62, 1-20. &lt;br&gt;http://dx.doi.org/10.2307/2275583</mixed-citation></ref><ref id="hanspub.16620-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Alberti, F., et al. (2014) An Extension of Lazy Abstraction with Interpolation of Programs with Arrays. Formal Methods in System Design, 45, 63-109. &lt;br&gt;http://dx.doi.org/10.1007/s10703-014-0209-9</mixed-citation></ref><ref id="hanspub.16620-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Lopes, N.P. and Monteiro, J. (2015) Automatic Equivalence Checking of Programs with Uninterpreted Functions and Integer Arithmetic. International Journal on Software Tools for Technology Transfer, Springer, Science, 1-16.</mixed-citation></ref><ref id="hanspub.16620-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Fitting, M. (1996) First-Order Logic and Automated Theorem Proving. Springer, Berlin.  
&lt;br&gt;http://dx.doi.org/10.1007/978-1-4612-2360-3</mixed-citation></ref></ref-list></back></article>