<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2020.911224</article-id><article-id pub-id-type="publisher-id">AAM-38646</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20201100000_61247401.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  公共工期指派和可控处理时间资源约束下最大费用最小化单机排序问题
  Minmax Single Machine Scheduling Problem with Common Due-Date and Controllable Processing Time and Resource Restriction
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>罗</surname><given-names>成新</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>广东科技学院，通识教育学院，广东 东莞</addr-line></aff><pub-date pub-type="epub"><day>10</day><month>11</month><year>2020</year></pub-date><volume>09</volume><issue>11</issue><fpage>1945</fpage><lpage>1953</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    本文研究具有公共工期指派的凸资源单机排序问题。任务的实际加工时间是所获得的资源量的凸函数，目标函数是所有任务费用中的最大值。考虑两个问题。在第一个问题中，假设可用资源总数量有限，决策者需要寻找任务的最优排序、公共工期和资源分配方案，使得最大费用最小。第二个问题与第一个问题互补，资源总量没有限制，目标是在最大费用有上界限制条件下，求出最小资源总量、任务排序和公共工期及资源分配方案，使得资源总量最小。分别将上述问题转化为非线性凸规划问题加以处理。证明了两个问题均可以在多项式时间内求出最优解，提供了求解上述问题的多项式时间最优算法。分别给出实例说明算法的运算过程和有效性。
    This paper studies a common due-date assignment and scheduling problem. The objective function is the maximal cost among all jobs. The processing time of a job is a convex function of a resource allocated to it. Two problems are considered. In the first problem, the aim is to find imultaneously the job sequence and common due-date, as well as the resource allocation policy to optimilty that minimize the maximal cost among all jobs, subject to an upper bound on resourse amount. The second problem is complementary with the first one. The objective is to find imultaneously the optimal job sequence and due-date that minimize the resource amount of all jobs, subject to an upper bound on maximal cost among all jobs. The problems are converted to nolinear convex programmings. We present optimal algorithms that can be used to solve the above problems, respectively. Two examples are given to show how to realize the algorithms. 
  
 
</p></abstract><kwd-group><kwd>排序，单机，公共工期，最大费用，资源分配, Scheduling</kwd><kwd> Single Machine</kwd><kwd> Common Due-Date</kwd><kwd> Maximal Cost</kwd><kwd> Resource Allocation</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>本文研究具有公共工期指派的凸资源单机排序问题。任务的实际加工时间是所获得的资源量的凸函数，目标函数是所有任务费用中的最大值。考虑两个问题。在第一个问题中，假设可用资源总数量有限，决策者需要寻找任务的最优排序、公共工期和资源分配方案，使得最大费用最小。第二个问题与第一个问题互补，资源总量没有限制，目标是在最大费用有上界限制条件下，求出最小资源总量、任务排序和公共工期及资源分配方案，使得资源总量最小。分别将上述问题转化为非线性凸规划问题加以处理。证明了两个问题均可以在多项式时间内求出最优解，提供了求解上述问题的多项式时间最优算法。分别给出实例说明算法的运算过程和有效性。</p></sec><sec id="s2"><title>关键词</title><p>排序，单机，公共工期，最大费用，资源分配</p></sec><sec id="s3"><title>Minmax Single Machine Scheduling Problem with Common Due-Date and Controllable Processing Time and Resource Restriction<sup> </sup></title><p>Chengxin Luo</p><p>College of General Education, Guangdong University of Science and Technology, Dongguan Guangdong</p><p><img src="//html.hanspub.org/file/9-2621358x4_hanspub.png" /></p><p>Received: Oct. 25<sup>th</sup>, 2020; accepted: Nov. 11<sup>th</sup>, 2020; published: Nov. 18<sup>th</sup>, 2020</p><p><img src="//html.hanspub.org/file/9-2621358x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>This paper studies a common due-date assignment and scheduling problem. The objective function is the maximal cost among all jobs. The processing time of a job is a convex function of a resource allocated to it. Two problems are considered. In the first problem, the aim is to find imultaneously the job sequence and common due-date, as well as the resource allocation policy to optimilty that minimize the maximal cost among all jobs, subject to an upper bound on resourse amount. The second problem is complementary with the first one. The objective is to find imultaneously the optimal job sequence and due-date that minimize the resource amount of all jobs, subject to an upper bound on maximal cost among all jobs. The problems are converted to nolinear convex programmings. We present optimal algorithms that can be used to solve the above problems, respectively. Two examples are given to show how to realize the algorithms.</p><p>Keywords:Scheduling, Single Machine, Common Due-Date, Maximal Cost, Resource Allocation</p><disp-formula id="hanspub.38646-formula37"><graphic xlink:href="//html.hanspub.org/file/9-2621358x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/9-2621358x7_hanspub.png" /> <img src="//html.hanspub.org/file/9-2621358x8_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>作为典型的离散优化问题之一，排序问题在工业生产加工和各种涉及企业管理机制范围内，处处可见其用武之处。准时(Just-in-Time)排序生产原则在过去的三十年里引起了众多研究者高度重视，产生了丰富的研究成果。在准时排序生产方针框架下，每个任务都有一个工期，工期经过协议由消费者决定，或者是决策变量。工期有三种形式：(1) 所有任务具有相同的工期(公共工期：common due-date)；(2) 每个任务具有不同的工期(不同工期：different due-date)；(3) 每个任务的工期是处理时间的线性函数(松弛工期：slack due-date)。文献 [<xref ref-type="bibr" rid="hanspub.38646-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.38646-ref2">2</xref>] 分别最先提出上诉三种工期，并分别给出了多项式时间最优解。文献 [<xref ref-type="bibr" rid="hanspub.38646-ref3">3</xref>] 进一步把公共工期推广到工期窗口(due-date window)，在窗口内完工的任务没有费用，而在窗口前或窗口后完工的任务分别有提前或延误费用。工期窗口(位置及大小)是决策变量，目标函数是由提前、延误和推迟窗口开始时间及窗口大小共同构成的费用之和。</p><p>在传统排序所研究的问题中，一般假定任务的处理时间是固定不变的，排在任何位置进行处理都取恒定常数。随着科技发展和技术的不断完善、企业实力的增强，管理者可以通过增加各类资源来缩短任务的处理时间。这种管理模式在文献中称为具有资源分配的可控处理时间问题。具有资源分配的排序问题在企业的生产加工中等实际环境中有广泛应用，最近二十多年来得到了学者们的大量研究，取得了丰富的研究成果。一般资源消费函数有两种：线性资源消费函数和凸资源消费函数。后者能够很好地反映边际效益递减这一广泛存在的经济规律，因而受到学者的重视。文献 [<xref ref-type="bibr" rid="hanspub.38646-ref4">4</xref>] 比较全面地介绍了关于可控处理时间的研究论文。</p><p>在上面工期或工期窗口和各种机器及处理时间约定条件下，研究者取得了丰富的成果。文献 [<xref ref-type="bibr" rid="hanspub.38646-ref5">5</xref>] 讨论工期指派排序问题，处理时间含学习效应和资源分配；文献 [<xref ref-type="bibr" rid="hanspub.38646-ref6">6</xref>] 考虑单机工期窗口指派和资源分配问题，前提条件是具有公共流以及学习效应；文献 [<xref ref-type="bibr" rid="hanspub.38646-ref7">7</xref>] 考虑带有公共交货期窗口和加工时间可控的单机排序问题；文献 [<xref ref-type="bibr" rid="hanspub.38646-ref8">8</xref>] 在可控加工时间条件下研究具有退化效应的单机排序问题；文献 [<xref ref-type="bibr" rid="hanspub.38646-ref9">9</xref>] 研究的单机窗口排序问题中，假设条件是与任务有关的截断学习效应以及凸资源共同决定处理时间；文献 [<xref ref-type="bibr" rid="hanspub.38646-ref10">10</xref>] 在带有学习和退化效应假设下研究相同工期指派问题。得到了相应的最优算法。</p><p>在上面众多文献中，目标函数几乎都集中在与提前和延误等费用总和最小化方面。然而对于一种排序，所有任务费用中有一个最大费用，对最大费用最小化问题的研究有重要意理论意义。最大费用最小化对于评估生产系统的效率、对与生产管理过程中最坏情形度量和控制，以及平等对待所有代理商都有现实意义。</p><p>在文献中，将目标函数取作最大费用始于文献 [<xref ref-type="bibr" rid="hanspub.38646-ref11">11</xref>]。文献 [<xref ref-type="bibr" rid="hanspub.38646-ref12">12</xref>] 在松弛工期假设下讨论最大费用最小化问题，得到了简单最优算法。文献 [<xref ref-type="bibr" rid="hanspub.38646-ref13">13</xref>] 在松弛工期假设下讨论两个竞争代理商最小化最大费用问题，给出了简单的多项式时间最优算法。 [<xref ref-type="bibr" rid="hanspub.38646-ref14">14</xref>] [<xref ref-type="bibr" rid="hanspub.38646-ref15">15</xref>] 分别考虑工期窗口指派最大费用最小化单机排序问题，得到了相应的多项式时间算法。</p><p>本文研究最大费用最小化的工期指派单机排序问题，其中任务处理时间是可控的。通过分配给任务一定的资源来缩短加工时间，使得生产系统获得最大效益。由于资源是有费用的，决策者同时还要考率控制使用资源的成本，这样一来会使得问题变得更加复杂化。与以往多数论文不同，我们同时考虑最大费用最小化，任务具有可控处理时间，任务的实际加工时间是所获得的资源量的凸函数，并且可利用的资源总量有上界限制。侧重考虑两个问题。第一个问题是在资源总量有上界的条件下，确定最优任务排序、最优公共工期以及资源分配方案，使得任务中最大费用最小化。第二个问题与第一个问题互补，其中资源总量没有限制，目的是在最大费用有上界限制条件下，求出最小资源总量、任务排序和公共工期及资源分配方案，使得资源总量最小。解决方法是将原问题转化为非线性凸规划问题进行处理，最后得到求解各自问题的最优算法。</p></sec><sec id="s6"><title>2. 问题描述</title><p>假设管理者使用一台机器(处理机)用来处理n个不相关的任务(工件) J = { J 1 , J 2 , ⋯ , J n } ，所有任务在处理前均已到位等待处理。机器一次处理一个任务，并且要连续处理完，中间不允许中断。所有任务都有一个公共工期 d j = d   ( j = 1 , ⋯ , n ) ，d是决策变量。任务如果在工期d之前或在之后完工，则分别有相应提前或延误费用；在时刻 t = d 完工则没有费用。用 p j ( u j ) 表示任务 J j 的实际加工时间，它是资源消耗量 u j 的凸函给数，由下式给出</p><p>p j ( u j ) = ( w j / u j ) k ,   u j &gt; 0 ,   j = 1 , 2 , ⋯ , n (1)</p><p>其中 w j 为工件 J j 的负荷， u j 是分配给工件 J j 的资源数量， k &gt; 0 是给定常数。定义 π = ( J 1 , J 2 , ⋯ , J n ) 为在一个资源分配 u = ( u 1 , u 2 , ⋯ , u n ) 下所确定的工件排序， C j = C j ( π ) 表示 J j 的完工时间， E j = max { 0 , d − C j } ， T j = max { 0 , C j − d } 分别表示工件 J j 的提前量和延迟量。以下用 J ( j ) 表示排在位置j的工件， C ( j ) , E ( j ) , T ( j ) , u ( j ) 分别表示 J ( j ) 的完工时间、提前量和延迟量及获得的资源数量。</p><p>在确定的工件排序后，每个任务或者提前，或者延误，或者准时完工(这时没有费用)，三者必居其一，其费用为 E j = max { α E j + γ d , β T j + γ d } ,   j = 1 , 2 , ⋯ , n 。总费用定义为</p><p>Z = max 1 ≤ j ≤ n { Z j } = max 1 ≤ j ≤ n max { α E j + γ d , β T j + γ d }</p><p>这里，提前、延误和推迟工期单位时间的费用分别记为 α , β , γ ，均为给定的正数。</p><p>研究的第一个问题中，假设资源总量有上界限制，即在满足 ∑ j = 1 n u j ≤ U 的前提下，决定最优资源分配方案 u = ( u 1 , u 2 , ⋯ , u n ) 、任务的最优排序 π 和最优工期d使得总费用 Z = Z ( π , u ) 最小，其中 U &gt; 0 是可使用资源总量的上限。使用三参数表示法 [<xref ref-type="bibr" rid="hanspub.38646-ref16">16</xref>] 可以表示如下</p><p>P 1 :   1 | d j = d , p j ( u j ) = ( w j / u j ) k , ∑ j = 1 n u j ≤ U | Z (2)</p><p>第二个问题与第一个问题互补，其中对资源总量U没有限制，目标是在最大费用有上界限制(即 Z ≤ Q )条件下(其中 Q &gt; 0 是给定的常数)，求出最小资源总量U、任务排序和公共工期及资源分配方案，使得资源总量U最小。用三参数表示法可表示如下</p><p>P 2 :   1 | d j = d , p j ( u j ) = ( w j / u j ) k , Z ≤ Q | ∑ j = 1 n u j (3)</p></sec><sec id="s7"><title>3. 问题P1的最优解</title><p>本节中给出问题P1的最优解。为此首先给出下述重要结论。这对得到最优算法是必要的。</p><p>引理1 [<xref ref-type="bibr" rid="hanspub.38646-ref11">11</xref>] 对于给定的任务排序 π = ( J ( 1 ) , ⋯ , J ( n ) ) 和资源分配方案 u = ( u ( 1 ) , ⋯ , u ( n ) ) 最优工期d和目标函数Z分别为</p><p>d * = d ( π , u ) = { 0 , γ &gt; β C ( 1 ) + β / ( α + β ) [ C ( n ) − C ( 1 ) ] , γ ≤ β (4)</p><p>Z * = Z ( π , u ) = { β C ( n ) , γ &gt; β γ C ( 1 ) + ε [ C ( n ) − C ( 1 ) ] , γ ≤ β (5)</p><p>其中 ε = β ( α + γ ) / ( α + β ) 。</p><p>根据引理1，利用(1)的表达式 p j ( u j ) = ( w j / u j ) k ,   u j &gt; 0 ,   j = 1 , 2 , ⋯ , n ，问题P1转化为下述的非线性规划</p><p>NPL 1 :     { min Z = β ∑ j = 1 n ( w ( j ) / u ( j ) ) k s .t .     ∑ j = 1 n u ( j ) ≤ U ,   u ( j ) &gt; 0 ,   j = 1 , 2 , ⋯ , n   ( γ &gt; β ) (6)</p><p>NPL 2 :     { min Z = γ ( w ( 1 ) / u ( 1 ) ) k + ε ∑ j = 2 n ( w ( j ) / u ( j ) ) k s .t .     ∑ j = 1 n u ( j ) ≤ U ,   u ( j ) &gt; 0 ,   j = 1 , 2 , ⋯ , n   ( γ ≤ β ) (7)</p><p>引理2 对于给定的任务排序 π = ( J ( 1 ) , ⋯ , J ( n ) ) ，NPL1和NPL2的最优解 u * = ( u ( 1 ) * , ⋯ , u ( n ) * ) 和最优目标函数值 Z * 分别为</p><p>u ( j ) * = { ( U / V ) w ( j ) k / ( k + 1 ) ,     j = 1 , 2 , ⋯ , n ,   β &lt; γ { ( U / L ) ( γ / ε ) 1 / ( k + 1 ) w ( 1 ) k / ( k + 1 ) , j = 1 ( U / L ) w ( j ) k / ( k + 1 ) ,     j = 2 , ⋯ , n ,     β ≥ γ (8)</p><p>Z * = Z ( π , u * ) = { β U − k V k + 1 , ​   γ &gt; β ε U − k L k + 1 ,   γ ≤ β (9)</p><p>其中</p><p>V = ∑ j = 1 n w ( j ) k / ( k + 1 ) = ∑ j = 1 n w j k / ( k + 1 ) ， L = ( γ / ε ) 1 / ( k + 1 ) w ( 1 ) k / ( k + 1 ) + ∑ j = 2 n w ( j ) k / ( k + 1 )</p><p>证明 以 γ ≤ β 为例加以证明， γ &gt; β 时证明方法类似。由于(7)式给出的目标函数是关于决策变量 u ( j ) 的凸函数，并且约束函数 g ( u ) = ∑ j = 1 n u ( j ) − U 也是关于 u ( j ) 的凸函数，利用凸规划理论，可知最优资源 u * 必使 g ( u ) = 0 ，于是可使用Lagrange乘子法求解上述问题。假定任务排序 π 给定，则Lagrange函数表达式为</p><p>L 1 ( u , λ ) = γ ( w ( 1 ) / u ( 1 ) ) k + ε ∑ j = 2 n ( w ( j ) / u ( j ) ) k + λ { ∑ j = 1 n u ( j ) − U } (10)</p><p>这里 λ 表示Lagrange乘子。在(10)中，分别计算 L 1 ( u , λ ) 对所有决策变量的一阶偏导数，再令它们为零，便可得到最优资源 u * 所满足的必要条件如下</p><p>∂ L 1 ( u , λ ) / ∂ λ = ∑ j = 1 n u ( j ) − U = 0 (11)</p><p>∂ L 1 ( u , λ ) / ∂ u ( 1 ) = − γ k ( w ( 1 ) k / u ( 1 ) k + 1 ) + λ = 0 (12)</p><p>∂ L 1 ( u , λ ) / ∂ u ( j ) = − ε k ( w ( j ) k / u ( j ) k + 1 ) + λ = 0 ,   j = 1 , 2 , ⋯ , n (13)</p><p>注意到是凸规划问题，因此上述条件也是充分条件。由(12)，(13)得</p><p>γ ( w ( 1 ) k / u ( 1 ) k + 1 ) = ε ( w ( j ) k / u ( j ) k + 1 ) ,   j = 2 , ⋯ , n (14)</p><p>由(14)得到</p><p>u ( j ) = u ( 1 ) ( w ( j ) / w ( 1 ) ) k / ( k + 1 ) ( ε / γ ) 1 / ( k + 1 ) ,   j = 2 , ⋯ , n (15)</p><p>将(15)带入(11)，得</p><p>u ( 1 ) = ( U / L ) ( γ / ε ) 1 / ( k + 1 ) w ( 1 ) k / ( k + 1 ) (16)</p><p>将(16)带入(15)可得(8)。其中</p><p>V = ∑ j = 1 n w ( j ) k / ( k + 1 ) ， L = ( γ / ε ) 1 / ( k + 1 ) w ( 1 ) k / ( k + 1 ) + ∑ j = 2 n w ( j ) k / ( k + 1 )</p><p>最后将(8)中后两式带入NPL2中目标函数Z得到(9)式。引理证毕。</p><p>引理3 [<xref ref-type="bibr" rid="hanspub.38646-ref17">17</xref>] 给定两个正数列 { x j } 和 { y j } ， j = 1 , 2 , ⋯ , n 。把 { x j } 按不减顺序排列，再把 { y j } 按不增顺序排列，可使得对应项乘积的和 ∑ j = 1 n x j y j 达到最小值。</p><p>根据上面分析和引理2、引理3，问题P1可由下述算法求解。</p><p>算法1 输入数据 α , β , γ , k , U</p><p>第一步 计算 l = arg max 1 ≤ j ≤ n { w j } ，根据引理3，将任务 J l 排在首位，其余任务顺序任意，得到最优任务排序 π * = { J l , J ( 2 ) , ⋯ , J ( n ) }</p><p>第二步 由(8)计算出最优资源分配 u * = ( u ( 1 ) * , u ( 2 ) * , ⋯ , u ( n ) * )</p><p>第三步 由(4)计算最优公共工期</p><p>d * = d ( π , u ) = { 0 ,   γ &gt; β γ ( w l / u l ) k + ( β / ( α + β ) ) ∑ j = 2 n ( w ( j ) / u ( j ) ) k ,   γ ≤ β</p><p>第四步 由(9)计算出最优目标值 Z * 。</p><p>定理1 使用算法1可以在 O ( n ) 时间内求出问题P1的最优解。</p><p>证明 上面一系列分析可以保证定理1结论的正确性。第一步时间复杂性为 O ( n ) ，第二步的时间复杂性同为 O ( n ) ，第三、四步需要 O ( 1 ) 时间。于是求解问题P1的总的时间复杂性是 O ( n ) 。定理证毕。</p><p>以下算例1说明算法1的运算过程。</p><p>算例1 给定问题参数 k = 1 , ​   U = 121 , ​   n = 5 ，任务负荷 { w 1 , w 2 , w 3 , w 4 , w 5 } = { 1 , 1 , 4 , 9 , 16 } 。</p><p>第一步计算 l = arg max 1 ≤ j ≤ n { w j } = 5 ，根据引理3得到最优任务排序 π * = { J 5 , J 1 , J 2 , J 3 , J 4 } 。。</p><p>情形1 取 α = 1 , β = 2 , γ = 3 。由于 β &lt; γ ，故利用(8)求出最优资源分配</p><p>u * = ( u ( 1 ) * , u ( 2 ) * , u ( 3 ) * , u ( 4 ) * , u ( 5 ) * ) = ( u 5 * , u 1 * , u 2 * , u 3 * , u 4 * ) = ( 44 , 11 , 11 , 22 , 33 ) 。由(9)求出最优目标函数值</p><p>Z * = β U − k V k + 1 = 2 ，其中 V = ∑ j = 1 5 w j k / ( k + 1 ) = 11 。由(4)求出最优 d * = 0 。</p><p>情形2 取 α = 1 , β = 4 , γ = 2 。由于 β ≥ γ ， ε = β ( α + γ ) / ( α + β ) = 2.4 ，最优任务排序还是</p><p>π * = { J 5 , J 1 , J 2 , J 3 , J 4 } 不变， L = ( γ / ε ) 1 / ( k + 1 ) w 5 k / ( k + 1 ) + ∑ j = 1 4 w j k / ( k + 1 ) = 7 + ( 2 / 3 ) 30 = 10.65 。由(8)求出最优资</p><p>源分配 u * = ( u ( 1 ) * , u ( 2 ) * , u ( 3 ) * , u ( 4 ) * , u ( 5 ) * ) = ( u 5 * , u 1 * , u 2 * , u 3 * , u 4 * ) = ( 41.47 , 11.36 , 11.36 , 22.72 , 34.08 ) 。由(9)求出最优目标</p><p>函数值 Z * = ε U − k L k + 1 = 2.25 。由(4)求出最优 d * = γ ( w 5 / u 5 ) k + ( β / ( α + β ) ) ∑ j = 1 4 ( w j / u j ) k = 1.3610 。</p></sec><sec id="s8"><title>4. 问题P2的最优解</title><p>本节中给出问题P2的最优解，在最大费用有上界条件 Z ≤ Q 下展开。首先，利用上一节的相应结果，问题P2可以转换为下述两个非线性规划。</p><p>NLP 3 ( β &lt; γ ) :   { min U = ∑ j = 1 n u ( j ) s .t .   { β ∑ j = 1 n ( w ( j ) / u ( j ) ) k ≤ Q u ( j ) &gt; 0 ,   j = 1 , 2 , ⋯ , n (17)</p><p>NLP 4 ( β ≥ γ ) : { min U = ∑ j = 1 n u ( j ) s .t .     { γ ( w ( 1 ) / u ( 1 ) ) k + ε ∑ j = 2 n ( w ( j ) / u ( j ) ) k ≤ Q u ( j ) &gt; 0 ,   j = 1 , 2 , ⋯ , n (18)</p><p>引理4 对于给定的任务排序 π = ( J ( 1 ) , ⋯ , J ( n ) ) ，非线性规划NLP3，NLP4的最优解 u * = ( u ( 1 ) * , ⋯ , u ( n ) * ) 和最优目标函数值 U * 分别为</p><p>u ( j ) * = { ( V β / Q ) 1 / k w ( j ) k / ( k + 1 ) ,     j = 1 , 2 , ⋯ , n   ( β &lt; γ ) { ( L ε / Q ) 1 / k ( γ / ε ) 1 / ( k + 1 ) w ( 1 ) k / ( k + 1 ) , j = 1 ( L ε / Q ) 1 / k w ( j ) k / ( k + 1 ) , j = 2 , ⋯ , n     ( β ≥ γ ) (19)</p><p>U * = { ( β / Q ) 1 / k V ( k + 1 ) / k , β &lt; γ ( ε / Q ) 1 / k L ( 1 / k ) + 1 , β ≥ γ (20)</p><p>证明 以 γ ≤ β 为例加以证明， γ &gt; β 时证明方法类似。由于(18)式给出的目标函数 U = ∑ j = 1 n u ( j ) 是关</p><p>于 u ( j ) 的凸函数，并且约束函数 f ( u ) = γ ( w ( 1 ) / u ( 1 ) ) k + ε ∑ j = 1 n ( w ( j ) / u ( j ) ) k − Q 也是关于 u ( j ) 的凸函数，利用</p><p>凸规划理论，可知最优资源 u * 必在边界 f ( u ) = 0 上取得，于是可使用Lagrange乘子法求解。假定任务排序 π 已经给定，则Lagrange函数为</p><p>L 2 ( u , η ) = ∑ j = 1 n u ( j ) + η [ γ ( w ( 1 ) / u ( 1 ) ) k + ε ∑ j = 2 n ( w ( j ) / u ( j ) ) k − Q ] (21)</p><p>这里 η 表示Lagrange乘子。在(21)中，分别计算 L 2 ( u , η ) 对所有决策变量的一阶偏导数，再令它们等于零，便可得到最优资源 u * 所满足的必要条件如下</p><p>∂ L 2 ( u , λ ) / ∂ η = γ ( w ( 1 ) / u ( 1 ) ) k + ε ∑ j = 2 n ( w ( j ) / u ( j ) ) k − Q = 0 (22)</p><p>∂ L 2 ( u , λ ) / ∂ u ( 1 ) = 1 − η γ k ( w ( 1 ) k / u ( 1 ) k + 1 ) = 0 (23)</p><p>∂ L 2 ( u , λ ) / ∂ u ( j ) = 1 − η ε k ( w ( j ) k / u ( j ) k + 1 ) = 0 , j = 2 , ⋯ , n (24)</p><p>注意到是凸规划问题，因此上述条件也是充分条件。由(23)，(24)可得</p><p>γ ( w ( 1 ) k / u ( 1 ) k + 1 ) = ε ( w ( j ) k / u ( j ) k + 1 ) ,   j = 2 , ⋯ , n (25)</p><p>由(25)得到</p><p>u ( j ) = u ( 1 ) ( w ( j ) / w ( 1 ) ) k / ( k + 1 ) ( ε / γ ) 1 / ( k + 1 ) ,   j = 2 , ⋯ , n (26)</p><p>将(26)带入(22)，得</p><p>u ( 1 ) = ( L ε / Q ) 1 / k ( γ / ε ) 1 / ( k + 1 ) w ( 1 ) k / ( k + 1 ) (27)</p><p>将(27)带入(26)可得(19)后两行。将(19)带入 U = ∑ j = 1 n u ( j ) 可得(20)。引理证毕。</p><p>根据引理3、引理4，我们有如下结论：如果 γ &gt; β ，由于 V = ∑ j = 1 n w j k / ( k + 1 ) 是与任务排序无关的常数，因此任意排序都是最优的。如果 γ ≤ β ，注意到 k , Q , ε 皆为常数，因此只需最小化 L = ( γ / ε ) 1 / ( k + 1 ) w ( 1 ) k / ( k + 1 ) + ∑ j = 2 n w ( j ) k / ( k + 1 ) 。注意到 γ / ε ≤ 1 ，根据引理3可知将最大的 w ( j ) 对应的任务排在首位，其余任务顺序任意，可得最优排序。根据上面分析可得问题P2如下算法。</p><p>算法2 输入数据 α , β , γ , k , Q</p><p>第一步 计算 l = arg max 1 ≤ j ≤ n { w j } ，根据引理3，将任务 J l 排在首位，其余任务顺序任意，得到最优任务排序 π * = { J l , J ( 2 ) , ⋯ , J ( n ) }</p><p>第二步 由(19)计算出最优资源分配 u * = ( u ( 1 ) * , u ( 2 ) * , ⋯ , u ( n ) * )</p><p>第三步 由(4)计算最优公共工期</p><p>d * = d ( π , u ) = { 0 ,   γ &gt; β γ ( w l / u l ) k + ( β / ( α + β ) ) ∑ j = 2 n ( w ( j ) / u ( j ) ) k ,   γ ≤ β</p><p>第四步 由(20)计算出最优目标值 U * 。</p><p>定理2 使用算法2可以在 O ( n ) 时间内得到问题P2的最优解。</p><p>证明 上述全面的分析保证定理2结论的正确性。其中第一、二步所需时间都是 O ( n ) ，第三、四步的计算时间同为 O ( 1 ) 。因此求解问题P2的总时间为 O ( n ) 。定理证毕。</p><p>以下算例2说明算法2的运算过程。</p><p>算例2 给定问题参数 k = 1 , ​   Q = 100 ,   n = 5 ，任务负荷为 { w 1 , w 2 , w 3 , w 4 , w 5 } = { 1 , 1 , 4 , 9 , 16 } 。</p><p>计算 l = arg max 1 ≤ j ≤ n { w j } = 5 ，根据引理3，得到最优任务排序 π * = { J 5 , J 1 , J 2 , J 3 , J 4 } 。</p><p>情形1 取 α = 1 , β = 2 , γ = 3 。由于 β &lt; γ ，故利用(19)求出最优资源分配</p><p>u * = ( u ( 1 ) * , u ( 2 ) * , u ( 3 ) * , u ( 4 ) * , u ( 5 ) * ) = ( u 5 * , u 1 * , u 2 * , u 3 * , u 4 * ) = ( 0.88 , 0.22 , 0.22 , 0.44 , 0.66 ) 。由(20)求出最优目标函数值</p><p>U * = ( β / Q ) 1 / k V ( k + 1 ) / k = ( 2 / 100 ) &#215; 11 2 = 2.42 ，其中 V = 11 。由(4)求出最优 d * = 0 。</p><p>情形2 取 α = 1 , β = 4 , γ = 2 ，由于 β ≥ γ ， ε = β ( α + γ ) / ( α + β ) = 2.4 ，最优任务排序 π * = { J 5 , J 1 , J 2 , J 3 , J 4 } 不变， L = 10.65 。利用(19)求出最优资源分配</p><p>u * = ( u ( 1 ) * , u ( 2 ) * , u ( 3 ) * , u ( 4 ) * , u ( 5 ) * ) = ( u 5 * , u 1 * , u 2 * , u 3 * , u 4 * ) = ( 0.9329 , 0.2556 , 0.2556 , 0.5112 , 0.7668 ) 。由(20)求出最优目标</p><p>函数值 U * = ( ε / Q ) 1 / k L ( 1 / k ) + 1 = ( 2.4 / 100 ) &#215; 10.65 2 = 2.7221 。由(4)求出最优</p><p>d * = γ ( w 5 / u 5 ) k + ( β / ( α + β ) ) ∑ j = 1 4 ( w j / u j ) k = 56.2109 。</p></sec><sec id="s9"><title>5. 结论</title><p>本文研究最大费用最小化的工期指派单机排序问题，其中任务处理时间是可控的。目标是分别在资源总量有限和总费用受限的条件下确定，确定最优任务排序、最优公共工期以及资源分配方案，使得任务中最大费用最小化。解决本问题方法分为两步：首先把研究的问题转化为非线性凸规划问题，运用凸优化理论进行处理；其次利用匹配算法求得最优任务排序，进一步得到最优工期、最优资源分配方案等。作为总结提供了最优算法。用两个实例分别说明算法的运算过程和有效性。</p><p>未来研究可以考虑将本文问题推广到工期窗口情形，或者任务处理时间是与位置有关的凸函数情形。新问题将会更复杂，从而具有挑战性和实际应用意义。</p></sec><sec id="s10"><title>基金项目</title><p>国家自然科学基金项目(11171050)资助。</p></sec><sec id="s11"><title>文章引用</title><p>罗成新. 公共工期指派和可控处理时间资源约束下最大费用最小化单机排序问题Minmax Single Machine Scheduling Problem with Common Due-Date and Controllable Processing Time and Resource Restriction[J]. 应用数学进展, 2020, 09(11): 1945-1953. https://doi.org/10.12677/AAM.2020.911224</p></sec><sec id="s12"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.38646-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Panwalkar, S.S., Smith, M.L. and Seidmann, A. (1982) Common Due Date Assignment to Minimize Total Penalty for the One Machine Scheduling Problem. Operations Research, 30, 391-399. &lt;br&gt;https://doi.org/10.1287/opre.30.2.391</mixed-citation></ref><ref id="hanspub.38646-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Seidmann, A., Panwalkar, S.S. and Smith, M.L. (1981) Optimal Assignment of Due-Dates for a Single Processor Scheduling Problem. International Journal of Production Research, 19, 393-399.  
&lt;br&gt;https://doi.org/10.1080/00207548108956667</mixed-citation></ref><ref id="hanspub.38646-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Liman, S.D., Panwalkar, S.S. and Thongmee, S. (1998) Common Due Window Size and Location Determination in a Single Machine Scheduling Problem. Journal of the Operational Research Society, 49, 1007-1010.  
&lt;br&gt;https://doi.org/10.1057/palgrave.jors.2600601</mixed-citation></ref><ref id="hanspub.38646-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Shabtay, D. and Steiner, G. (2007) A Survey of Scheduling with Controllable Processing Times. Discrete Applied Mathematics, 155, 1643-1666. &lt;br&gt;https://doi.org/10.1016/j.dam.2007.02.003</mixed-citation></ref><ref id="hanspub.38646-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Lu, Y.Y., Li, G., Wu, Y.B. and Ji, P. (2014) Optimal Due-Date Assignment Problem with Learning Effect and Resource-Dependent Processing Times. Optimization Letters, 8, 113-127. &lt;br&gt;https://doi.org/10.1007/s11590-012-0467-7</mixed-citation></ref><ref id="hanspub.38646-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Li, G., Luo, M.L., Zhang, W.J. and Wang, X.Y. (2015) Single-Machine Due-Window Assignment Scheduling Based on Common Flow Allowance, Learning Effect and Resource Allocation. International Journal of Production Research, 53, 1228-1241. &lt;br&gt;https://doi.org/10.1080/00207543.2014.954057</mixed-citation></ref><ref id="hanspub.38646-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">郭玲，赵传立. 带有公共交货期窗口和加工时间可控的单机排序问题[J]. 重庆师范大学学报: 自然科学版, 2012, 29(6): 9-14.</mixed-citation></ref><ref id="hanspub.38646-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Wang, X.-Y. and Wang, J.-J. (2013) Single-Machine Due Date Assignment Problem with Deteriorating Jobs and Resource-Dependent Processing Times. International Journal of Advanced Manufacturing Technology, 67, 255-260.  
&lt;br&gt;https://doi.org/10.1007/s00170-013-4771-x</mixed-citation></ref><ref id="hanspub.38646-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">罗成新, 翟文瑾. 具有一般截断因子和资源约束的单机工期窗口排序问题[J]. 重庆师范大学学报: 自然科学版, 2017, 34(4): 1-7.</mixed-citation></ref><ref id="hanspub.38646-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">王吉波, 梁茜茜, 张博. 带有学习与恶化效应的共同工期指派问题[J]. 自然科学版, 2019, 36(3): 1-6.</mixed-citation></ref><ref id="hanspub.38646-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Mosheiov, G. and Sarig, A. (2009) Minmax Scheduling Problems with a Common Due-Window. Computers &amp; Operations Research, 36, 1886-1992. &lt;br&gt;https://doi.org/10.1016/j.cor.2008.06.001</mixed-citation></ref><ref id="hanspub.38646-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Mor, B. and Mosheiov, G. (2012) Minmax Scheduling Problems with Common Flow-Allowance. Journal of the Operational Research Society, 63, 1284-1293. &lt;br&gt;https://doi.org/10.1057/jors.2011.135</mixed-citation></ref><ref id="hanspub.38646-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Mor, B. and Mosheiov, G. (2016) Minimizing Maximum Cost on a Single Machine with Two Competing Agents and Job Rejection. Journal of the Operational Research Society, 67, 1524-1531.  
&lt;br&gt;https://doi.org/10.1057/s41274-016-0003-8</mixed-citation></ref><ref id="hanspub.38646-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Mor, B. (2018) Minmax Common Due-Window Assignment and Scheduling on a Single Machine with Two Competing Agents. Journal of the Operational Research Society, 69, 589-602. &lt;br&gt;https://doi.org/10.1057/s41274-017-0253-0</mixed-citation></ref><ref id="hanspub.38646-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Gerstl, E., Mor, B. and Mosheiov, G. (2017) Minmax Scheduling with Acceptable Lead-Times: Extensions to Position Dependent Processing Times, Due-Window and Job Rejection. Computers &amp; Operations Research, 83, 150-156.  
&lt;br&gt;https://doi.org/10.1016/j.cor.2017.02.010</mixed-citation></ref><ref id="hanspub.38646-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Graham, R.L., Lawler, E.L., Lenstra, J.K. and Rinnooy Kan, A.H.G. (1979) Optimization and Approximation in Deterministic Sequencing and Scheduling: A Survey. Annals of Discrete Mathematics, 3, 287-326.  
&lt;br&gt;https://doi.org/10.1016/S0167-5060(08)70356-X</mixed-citation></ref><ref id="hanspub.38646-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Hardy, G.H., Littlewood, J.E. and Polya, G. (1967) Inequalities. Cambridge University Press, Cambridge.</mixed-citation></ref></ref-list></back></article>