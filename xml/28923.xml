<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2019.92042</article-id><article-id pub-id-type="publisher-id">CSA-28923</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20190200000_72755951.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于SURF算法的桥梁裂纹图像拼接技术
  A Robust Approach for Bridge Crack Image Mosaic Based on SURF Algorithm
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>孟</surname><given-names>帅</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>湖南科技大学机电学院，湖南 湘潭</addr-line></aff><pub-date pub-type="epub"><day>29</day><month>01</month><year>2019</year></pub-date><volume>09</volume><issue>02</issue><fpage>375</fpage><lpage>383</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对现阶段桥梁健康检测中存在着多样化的裂纹问题，摄像机在确保清晰度的情况下很难获取一张高分辨率高精度的裂纹图像。本文在此问题上提出了基于SURF特征点的图像拼接技术研究在桥梁裂纹上的应用，对采集到的裂纹图像进行预处理，其中主要用了灰度处理突出特征点以及滤波方法去噪，利用SURF算法对裂纹图像进行特征点提取，通过欧氏距离的相似量方法进行特征点匹配，再采用RANSAC (Random Sample Consensus随机抽样一致性)算法剔除错误的匹配点对获得精确匹配，最后使用加权平均法融合图像实现图像拼接。本实验在光照、尺度变换、模糊等不同条件下，对SURF算法、ORB (Oriented Fast and Rotated BRIEF)算法和SIFT (Scale-invariant Feature Transform尺度不变特征变换)算法进行比较，研究结果表明，基于SURF算法裂纹图像拼接在不同环境下匹配精度更高，实用性和鲁棒性更强。因此，该算法在桥梁裂纹图像拼接具有较强的应用价值。 Diversified crack difficulties occurred to the detection about bridge health at the present stage. Meanwhile, it is hard to obtain the high resolution and precision crack images accompanied with the insurance of the camera sharpness. Therefore, the image mosaic technology was applied to analysis of the bridge cracks based on the SURF (Speeded up Robust Features) algorithm. First of all, the captured crack images are mainly pretreated through gray processing to highlight the feature points and denoised by the way of filtering. Secondly, the feature points of the crack images are extracted by the SURF and matched through the similar quantity method of Euclidean distance. Thirdly, the RANSAC (Random Sample Consensus) algorithm is employed to eliminate the wrong match points and get an exact match. Finally, the weighted average method is used to fuse for the purpose of image mosaic. The SURF, ORB (Oriented Fast and Rotated BRIEF) and SIFT (Scale-invariant Feature Transform scale invariant feature transform) were compared by changing the environment factors like lighting, scale conversion, blurring in the experiment. The research results show that the image mosaic based on the SURF performs higher matching precision, more real-time and robustness in different environments. Therefore, it performs a strong application value in bridge crack image mosaic. 
  
 
</p></abstract><kwd-group><kwd>图像拼接，SURF算法，RANSAC算法，加权平均法, Image Mosaic</kwd><kwd> SURF Algorithm</kwd><kwd> RANSAC Algorithm</kwd><kwd> Weighted Mean Method</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于SURF算法的桥梁裂纹图像拼接技术<sup> </sup></title><p>孟帅</p><p>湖南科技大学机电学院，湖南 湘潭</p><p><img src="//html.hanspub.org/file/21-1541292x1_hanspub.png" /></p><p>收稿日期：2019年2月2日；录用日期：2019年2月13日；发布日期：2019年2月20日</p><disp-formula id="hanspub.28923-formula59"><graphic xlink:href="//html.hanspub.org/file/21-1541292x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>针对现阶段桥梁健康检测中存在着多样化的裂纹问题，摄像机在确保清晰度的情况下很难获取一张高分辨率高精度的裂纹图像。本文在此问题上提出了基于SURF特征点的图像拼接技术研究在桥梁裂纹上的应用，对采集到的裂纹图像进行预处理，其中主要用了灰度处理突出特征点以及滤波方法去噪，利用SURF算法对裂纹图像进行特征点提取，通过欧氏距离的相似量方法进行特征点匹配，再采用RANSAC (Random Sample Consensus随机抽样一致性)算法剔除错误的匹配点对获得精确匹配，最后使用加权平均法融合图像实现图像拼接。本实验在光照、尺度变换、模糊等不同条件下，对SURF算法、ORB (Oriented Fast and Rotated BRIEF)算法和SIFT (Scale-invariant Feature Transform尺度不变特征变换)算法进行比较，研究结果表明，基于SURF算法裂纹图像拼接在不同环境下匹配精度更高，实用性和鲁棒性更强。因此，该算法在桥梁裂纹图像拼接具有较强的应用价值。</p><p>关键词 :图像拼接，SURF算法，RANSAC算法，加权平均法</p><disp-formula id="hanspub.28923-formula60"><graphic xlink:href="//html.hanspub.org/file/21-1541292x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/21-1541292x7_hanspub.png" /> <img src="//html.hanspub.org/file/21-1541292x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>伴随着我国基础设施建设的日益发展，在交通建设中更是突飞猛进，不管是在基础道路还是高速公路或者铁路，其中桥梁都扮演着必不可少的角色。然而随着时间的增长，桥梁必然会出现损伤问题，在很多桥梁损害里面，裂缝其实是很难观察检验出来的一类损坏形态，也是桥梁健康检查的重点之一，现阶段对于桥梁裂纹的检测还是停留在人工操作，这种方式成本投入高，安全隐患大，效率更低。随着科技与计算机技术的迅速发展，关于数字图像方面的处理技术能够普遍使用在军事探测、航天航空以及工业机器人等相关领域，由此进入高速变革的阶段，其中图像拼接这种技术令许多我国境内和海外的探究成员有兴趣对其实施深层面的探究。然而随着人们对图像获得信息的需求越来越高，目前的一些硬件设施单一，还难以采集到高分辨率的宽视角图像，所以如何能在低成本等条件下采用数字图像处理技术获取高质量高分辨率的图像成为一个研究热点。</p><p>关于图像拼接这种技术而言，最为关键的就是对于图像实施配准操作 [<xref ref-type="bibr" rid="hanspub.28923-ref1">1</xref>] ，其从广义上说能够划为2个类别：其一，以区块为基础的计算方法，该匹配算法较为传统，对待匹配图像的相似度要求较高，当中涵盖以空间为基础的像素配准方法等一系列相关部分；其二，以特征为基础的计算方法，通过使用图像内匹配的局部显著特点去确定图像间存在的几何转换关系。而这些年的探究焦点是以特征为基础的搭配方法，该方法有更好的计算速度和鲁棒性强，许多研究者在这方面都进行了广泛深入的研究。2004年，David G. Lowe [<xref ref-type="bibr" rid="hanspub.28923-ref2">2</xref>] 提出了SIFT优化算法，具有旋转、亮度及尺度不变性。2006年，Herbert Bay [<xref ref-type="bibr" rid="hanspub.28923-ref3">3</xref>] 等人提出了SURF算法，其在SIFT算法的基础上改进，具有快速性、尺度不变的特点。文献 [<xref ref-type="bibr" rid="hanspub.28923-ref4">4</xref>] 指出一类以SURF为基础的图像拼接方法，关于这种计算方法，在特征点众多的声纳图像里面具备优良的精度，另外具备较佳的即时性。文献 [<xref ref-type="bibr" rid="hanspub.28923-ref5">5</xref>] 将SURF算法应用到无人机遥感影像拼接，在运算速度和提取到的特征点数量均有较大进步。</p><p>为了获取一种快速实用性及高效的算法，来实现桥梁裂纹高质量的宽视角拼接图像，本文引用SURF算法在图像拼接中进行特征点的提取与匹配，通过RANSAC算法剔除错误的匹配点对，最后使用加权平均方法融合图像。在特征点的匹配上结合ORB算法与SIFT算法，在不同条件下得到的拼接效果来验证本文算法的实用性与鲁棒性。</p></sec><sec id="s4"><title>2. 桥梁裂纹图像拼接技术</title><sec id="s4_1"><title>2.1. 裂纹图像预处理</title><p>在裂纹图像采集的过程中，会因为环境的多变复杂而出现的噪声干扰等存在，影响到后面拼接阶段图像特征匹配，为此图像预处理就变得必不可少。本文对拍摄到的裂纹图像主要做了灰度处理，将三通道的彩色图像变为单通道的灰度图像，在提取特征点过程中更能有效的生成描述子，同时也对图像进行了尺度变换，将原图像的尺寸做了缩放处理，有益于后续的匹配观察。</p></sec><sec id="s4_2"><title>2.2. SURF算法</title><p>本文裂纹图像拼接采用SURF算法，进行特征点的提取与匹配，该算法是由Herbert Bay等人在SIFT算法基础上提出的一种快速高鲁棒性特征提取算法。其提取的特征具有旋转、尺度等不变性的特点，有很好的鲁棒性，适用于不同尺度、不同拍摄角度下图像处理，相比较其他算法更具有实时性和鲁棒性。</p><p>1) 积分图像</p><p>假设 I ( x , y ) 为图像的某一像素点，则积分图像 I Σ ( X ) 的面积等于该点到原点的所有点的像素之和，即</p><p>I Σ ( X ) = ∑ i = 0 i ≤ x ∑ j = 0 j ≤ y I ( i , j ) (1)</p><p>由上式可得，在任意一块矩形区域(如图1)的积分面积可以有式(1)得到：</p><p>Σ = A − B − C + D (2)</p><p>图1. 计算积分图像</p><p>2) 特征点提取</p><p>在积分图像基础上，构建Hessian矩阵 H ( X , σ ) 尺度为 σ ，即</p><p>H ( X , σ ) = [ L x x ( X , σ ) L x y ( X , σ ) L x y ( X , σ ) L y y ( X , σ ) ] (3)</p><p>其中 L x x ( X , σ ) 是图像 I 与二阶高斯函数 ∂ 2 ∂ x 2 g ( σ ) 的卷积，同理可得 L x y ( X , σ ) 和 L y y ( X , σ ) 。为了提高运算效率，用盒子滤波器近似替代高斯滤波器，并且用 D x x ， D x y 和 D y y 来对应 L x x ， L x y 和 L y y 。而近似高斯计算Hessian矩阵行列式的估计公式为：</p><p>det ( H approx ) = D x x D x y − ( ω D x y ) 2 (4)</p><p>其中 ω 为权重，一般取0.9。根据以上行列式判断极值点，如果行列式的符号是负的，那么特征值具备差别的符号，认为此点并非部分极值点。假如行列式的符号是正的，那么它的2个特征值同是正的或是负的，认为该点为极值点。</p><p>SUFT这种计算方法组建尺度空间和SIFT计算方法有所不同，因为采用积分图像与盒子滤波，不必创建金字塔图像，选用盒子滤波样板持续增加尺寸这种办法，通过不同的盒子滤波来求得Hessian矩阵行列式的回应图形，将经过Hessian矩阵得到的多层数据利用非极大值抑制寻找到极值点，再将该点的DOH值与二维图像空间和尺度空间领域内的26个点进行比较，得到初步的关键点，之后剔除一些错误关键点，筛选出相对平稳的特征点。</p><p>3) 特征点描述</p><p>关于SUFT算法而言，在它的特征点描述中，首先我们需要确认特征点的主方向，确保其在转动过程中能够保持不变，在6 s (s代表特征点的尺度)作为半径长的圆形区块中，归纳60度的扇形区块中全部点在水平向、垂直向的Harr小波特征的总和，以步长为0.2弧度一定方向旋转，对窗口中Harr小波的回应值实施累加操作，最后将其最大值对照的方向确定成主方向。</p><p>其次我们要生成特征描述子，先要确定边长为20 s的正方形区域，再划分为 4 &#215; 4 的边长为5s小区域，每个小区域用2 s的Haar小波模板响应运算，然后对响应值统计 ∑ d x ， ∑ | d x | ， ∑ d y ， ∑ | d y | ，形成 4 &#215; 4 &#215; 4 = 64 维的特征向量。</p><p>4) 特征点匹配</p><p>通过对距离集合进行比较运算得到最小欧式距离和次最小欧氏距离，设定一个阈值，当最小欧氏距离和次最小欧氏距离的比值小于该阈值时，则认为该特征点对应最小欧式距离的特征点是匹配的，否则没有与特征点相匹配。</p></sec><sec id="s4_3"><title>2.3. 图像融合</title><p>在待拼接的图像进行预处理、特征提取与匹配、求出变换矩阵之后，便是要对两幅拼接的图像进行融合，其目的就是将不同的图像拼接在一起成为一幅完整的图像。本文主要利用的是加权平均法，其具有简单易实现、运算速度快的优点。</p></sec><sec id="s4_4"><title>2.4. 桥梁裂纹图像拼接流程</title><p>本文的图像拼接实验是应用在桥梁裂纹上，其实验流程是先采集到裂纹图像进行预处理，包括用灰度处理突出特征点以及滤波方法去噪，然后同SURF算法进行特征点的提取，通过欧氏距离的相似量方法进行特征点匹配，利用RANSAN算法剔除误匹配，最后计算单应性矩阵用加权平均方法进行图像融合，实现裂纹图像拼接，如图2所示。</p><p>图2. 裂纹图像拼接流程框架</p></sec></sec><sec id="s5"><title>3. 实验数据比较与分析</title><p>本文实验采用的是CCD工业相机拍摄裂纹素材，具有500万像素足以获取需要的数据。实验的程序设计是在Visual Studio 2010进行，配置环境如表1所示。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Experimental environmen</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >名称</th><th align="center" valign="middle" >参数</th></tr></thead><tr><td align="center" valign="middle" >系统</td><td align="center" valign="middle" >Windows 7</td></tr><tr><td align="center" valign="middle" >框架</td><td align="center" valign="middle" >Opencv</td></tr><tr><td align="center" valign="middle" >语言</td><td align="center" valign="middle" >C++</td></tr><tr><td align="center" valign="middle" >CPU</td><td align="center" valign="middle" >Intel (R) Pentium (R) G4560 3.50 GHz</td></tr><tr><td align="center" valign="middle" >RAM</td><td align="center" valign="middle" >8.00 GB</td></tr></tbody></table></table-wrap><p>表1. 实验环境</p><p>为了验证本文SURF算法在特征点的提取与匹配上的鲁棒性和实用性，实验分别在光照，噪声，尺度变换等条件下，对SURF算法、SIFT算法与ORB算法进行比较分析。图3为采集到的几张裂纹图像，图4为SURF算法进行图像匹配的效果图，图5为图像拼接后的效果图。</p><p>从表2中观察可以看到，执行速度上ORB算法最具有优势，SURF算法处理的时间只慢了0.5 s，一般表格的数据都是量化计数，本文实验观察中，会发现到大量的特征点分布杂乱无章，匹配精度和准确性上都受到了影响，表格中在成功匹配对数上SURF算法明显优越于SIFT和ORB算法，在拼接效果表现得也很好。对比看来SURF算法实用性上有更大的价值。</p><sec id="s5_1"><title>3.1. 尺度条件下的鲁棒性比较</title><p>图像在不同尺度下得到的特征点意义是不同的，尺度较大的图像提取到的特征点在小尺度下的图像中表现得可能不明显，不同尺度下的图像也会出现新的特征点。</p><p>图3. 裂纹图像</p><p>图4. SURF匹配效果图</p><p>图5. 拼接效果图</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Comparison of the first set of three algorithm stitching dat</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SIFT</th><th align="center" valign="middle" >ORB</th><th align="center" valign="middle" >SURF</th></tr></thead><tr><td align="center" valign="middle" >执行时间/s</td><td align="center" valign="middle" >3.24258</td><td align="center" valign="middle" >0.13154</td><td align="center" valign="middle" >0.63343</td></tr><tr><td align="center" valign="middle" >特征点个数</td><td align="center" valign="middle" >232，254</td><td align="center" valign="middle" >218，226</td><td align="center" valign="middle" >239，255</td></tr><tr><td align="center" valign="middle" >成功匹配对数</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >58</td><td align="center" valign="middle" >72</td></tr><tr><td align="center" valign="middle" >内点/外点</td><td align="center" valign="middle" >20/6</td><td align="center" valign="middle" >10/48</td><td align="center" valign="middle" >50/22</td></tr></tbody></table></table-wrap><p>表2. 第一组三种算法拼接数据对比</p><p>本实验方案取图1(b)为原图像，对其改变尺度大小，分别为缩小尺寸80%、60%、40%、20%，对应图6中横坐标1，2，3，4。尺度变换后的图像和原图像进行特征点匹配，逐一比较得到匹配对数，然后观察其变化幅度。</p><p>图6. 尺度变换下各算法的匹配对数折线图</p><p>从折线图6中可以观察到SURF算法变化幅度最小,在尺度变换较大时匹配对数变化较小，匹配的对数较多，更趋于稳定。在尺度变换中SURF算法表现出更高的鲁棒性。</p></sec><sec id="s5_2"><title>3.2. 光照条件下鲁棒性比较</title><p>在不同光照下，图像中的一些关键特征会由于阴影影响被弱化，而有些特征会更加突出，使得图像中的特征或者特征点并非处于相同的灰度尺度下。</p><p>本实验方案对一张图像逐渐增加亮度，见图7，逐一与原图像进行匹配，观察其正确匹配对数的变化幅度，对各算法进行比较分析。结果见图8。</p><p>图7. 不同亮度下的裂纹图像</p><p>图8. 光照条件下各算法的匹配对数折线图</p><p>从图8中可以观察到，SURF算法在不同亮度下正确的匹配对数最多，变化的幅度的较小，相比较SIFT算法和ORB算法表现得更加稳定。</p></sec><sec id="s5_3"><title>3.3. 模糊条件下鲁棒性比较</title><p>图像进行模糊变换后，其分辨率就会降低，随着分辨率的下降，其特征的识别精确度就会下降。</p><p>本实验方案对原图像用高斯噪声进行模糊处理，与原图像进行匹配，如图9所示，实验得到以下结果见表3。</p><p>图9. 裂纹原图像和模糊处理后的图像</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Data comparisons of algorithms under fuzzy condition</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SIFT</th><th align="center" valign="middle" >ORB</th><th align="center" valign="middle" >SURF</th></tr></thead><tr><td align="center" valign="middle" >执行时间/s</td><td align="center" valign="middle" >3.08791</td><td align="center" valign="middle" >0.148539</td><td align="center" valign="middle" >0.563838</td></tr><tr><td align="center" valign="middle" >成功匹配对数</td><td align="center" valign="middle" >57</td><td align="center" valign="middle" >71</td><td align="center" valign="middle" >101</td></tr></tbody></table></table-wrap><p>表3. 模糊条件下各算法的数据对比</p><p>从表3中可以观察到，各算法执行时间从大到小依次为SIFT、SURF、ORB，SURF算法成功匹配对数明显优于ORB和SIFT算法，拼接质量更佳，通过比较模糊条件下简单比较，SURF算法鲁棒性表现得更好。</p><p>图10为三张互有重叠的裂纹图像用SURF算法拼接后的效果图，可以观察到基本将裂纹拼接为一幅完整的宽视角高分辨率的图像。</p><p>图10. SURF拼接效果图</p></sec></sec><sec id="s6"><title>4. 结论</title><p>近年来，全景图像拼接的应用越来越广泛，例如虚拟现实、视频监控以及街景地图等。那么随着这一技术的广泛应用，当前算法中存在的拼接效率低、计算量大以及拼接存在误差等问题也成为限制其应用的重要问题，阻碍了相关应用的发展，因此对图像拼接技术质量和效率的提升成为了图像领域研究的热点问题。本课题主要研究的是如何在保证图像拼接质量的前提下，提高图像拼接的计算速度。文章通过分析传统基于SURF特征匹配的图像拼接方法的缺陷，提出改进方法来加快图像拼接的速度，通过理论部分的可行性研究分析以及仿真实验，实验结果证明了改进方法的可行性，但是本论文仍然存在一些可以继续研究和改进的地方。</p><p>1) 本文提出的图像局部特征自适应的快速SURF图像拼接方法中获得的复杂度阈值是通过方差的计算得到的，接下来在复杂度阈值获取的精度和速度上还有改进空间。</p><p>2) 对于待拼接图像间变换关系更为复杂的拼接实验有待进一步研究。本文中测试的待拼接图像仿射变换关系不是特别复杂，若图像间仿射变换较大，测试得到的重叠区域可能不太准确，而且拼接结果的清晰度也会有所下降。所以下一步的工作可以针对仿射变换较大的图像序列进行拼接优化。</p></sec><sec id="s7"><title>文章引用</title><p>孟 帅. 基于SURF算法的桥梁裂纹图像拼接技术A Robust Approach for Bridge Crack Image Mosaic Based on SURF Algorithm[J]. 计算机科学与应用, 2019, 09(02): 375-383. https://doi.org/10.12677/CSA.2019.92042</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.28923-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">史露, 苏刚, 韩飞. 基于SIFT和SURF图像拼接算法的改进算法[J]. 计算机应用与软件, 2013, 30(6):72-74.</mixed-citation></ref><ref id="hanspub.28923-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Lowe, D.G. (2004) Distinctive Image Features from Scale-Invariant Keypoints. International Journal of Computer Vision, 60, 91-110. &lt;br&gt;https://doi.org/10.1023/B:VISI.0000029664.99615.94</mixed-citation></ref><ref id="hanspub.28923-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Bay, H., Tuytelaars, T. and Van Gool, L. (2006) Surf: Speeded up Robust Features. Computer Vision-ECCV 2006. Springer Berlin Heidelberg, 404-417.</mixed-citation></ref><ref id="hanspub.28923-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">倪先锋. 基于SURF算法的声纳图像拼接方法[J]. 科技创新与应用, 2014(12): 56-57.</mixed-citation></ref><ref id="hanspub.28923-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">胡同喜, 牛雪峰, 谭洋, 等. 基于SURF算法的无人机遥感影像拼接技术[J]. 测绘通报, 2015(1): 55-58.</mixed-citation></ref></ref-list></back></article>