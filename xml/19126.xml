<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2016.54093</article-id><article-id pub-id-type="publisher-id">AAM-19126</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20160400000_42254809.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  一个求解非线性方程组问题的LS算法
  A LS Algorithm for Nonlinear Equations
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>黄</surname><given-names>玲花</given-names></name><xref ref-type="aff" rid="aff1"><sub>1</sub></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>广西财经学院信息与统计学院，广西 南宁</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>linghuahuang@163.com</email></corresp></author-notes><pub-date pub-type="epub"><day>11</day><month>11</month><year>2016</year></pub-date><volume>05</volume><issue>04</issue><fpage>813</fpage><lpage>817</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  本文给出一个求解非线性方程组问题的LS算法，该方法具有如下特点：1) 搜索方向自动满足充分下降性；2) 方向具有信赖域的特征；3) 算法拥有全局收敛性；4) 数值结果表明新方法是有效的。
   This paper presents a LS conjugate gradient algorithm for nonlinear equations and the given algorithm has the following features: 1) the search direction satisfies the sufficient descent property; 2) the direction also has the trust region property; 3) the proposed algorithm possesses the global convergence; 4) numerical results show that the new algorithm is effective.
 
</p></abstract><kwd-group><kwd>方程组，共轭梯度，收敛性, Nonlinear Equations</kwd><kwd> Conjugate Gradient</kwd><kwd> Convergence</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>一个求解非线性方程组问题的LS算法<sup> </sup></title><p>黄玲花</p><p>广西财经学院信息与统计学院，广西 南宁</p><disp-formula id="hanspub.19126-formula696"><graphic xlink:href="http://html.hanspub.org/file/28-2620349x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2016年11月12日；录用日期：2016年11月26日；发布日期：2016年11月30日</p><disp-formula id="hanspub.19126-formula697"><graphic xlink:href="http://html.hanspub.org/file/28-2620349x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文给出一个求解非线性方程组问题的LS算法，该方法具有如下特点：1) 搜索方向自动满足充分下降性；2) 方向具有信赖域的特征；3) 算法拥有全局收敛性；4) 数值结果表明新方法是有效的。</p><p>关键词 :方程组，共轭梯度，收敛性</p><disp-formula id="hanspub.19126-formula698"><graphic xlink:href="http://html.hanspub.org/file/28-2620349x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>考虑如下问题：</p><disp-formula id="hanspub.19126-formula699"><label>(1.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/28-2620349x9_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x10_hanspub.png" xlink:type="simple"/></inline-formula>是一个连续函数，上述问题是一个非线性方程组，一个求解该问题的一个方法时将它化为如下的最优化问题模型：</p><disp-formula id="hanspub.19126-formula700"><label>(1.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/28-2620349x11_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中定义<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x13_hanspub.png" xlink:type="simple"/></inline-formula><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x12_hanspub.png" xlink:type="simple"/></inline-formula>是欧式范数，不难看出(1.1)和(1.2)的解是等价的。从中可见(1.1)就转化为</p><p>了一个最小值的优化问题(1.2)，本文将针对(1.2)提出其求解方法。下面的数值迭代方法经常被使用，公式为：</p><disp-formula id="hanspub.19126-formula701"><label>(1.3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/28-2620349x14_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x15_hanspub.png" xlink:type="simple"/></inline-formula>代表搜索方向，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x16_hanspub.png" xlink:type="simple"/></inline-formula>是步长，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x17_hanspub.png" xlink:type="simple"/></inline-formula>是当前迭代点或第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x18_hanspub.png" xlink:type="simple"/></inline-formula>次迭代点，根据<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x19_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x20_hanspub.png" xlink:type="simple"/></inline-formula>就产生下一个迭代点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x21_hanspub.png" xlink:type="simple"/></inline-formula>，依次下去便会产生一个点列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x22_hanspub.png" xlink:type="simple"/></inline-formula>，分析此点列收敛到某一聚点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x23_hanspub.png" xlink:type="simple"/></inline-formula>或得到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x24_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>共轭梯度算法是一类非常有效的数值优化方法，它的方向定义如下：</p><disp-formula id="hanspub.19126-formula702"><graphic xlink:href="http://html.hanspub.org/file/28-2620349x25_hanspub.png"  xlink:type="simple"/></disp-formula><p>根据<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x26_hanspub.png" xlink:type="simple"/></inline-formula>的选取不同，便称为相应的共轭梯度法，目前已有很多公式 [<xref ref-type="bibr" rid="hanspub.19126-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.19126-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.19126-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.19126-ref4">4</xref>] 等。目前已有很多学者将共轭梯度法应用于非线性方程组问题(见文献 [<xref ref-type="bibr" rid="hanspub.19126-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.19126-ref6">6</xref>] 等)，我们给出一个修正的LS共轭梯度算法，该方法具有显著的优点。下一部分，我们给出修正的LS方法和具体算法步骤，第三部分证明算法的全局收敛性，最后给出数值检验结果。</p></sec><sec id="s4"><title>2. 公式和算法</title><p>下面给出修正的LS公式，表达式为：</p><disp-formula id="hanspub.19126-formula703"><label>(2.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/28-2620349x27_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x28_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x29_hanspub.png" xlink:type="simple"/></inline-formula>是常数。此公式设计的部分思想是基于文章 [<xref ref-type="bibr" rid="hanspub.19126-ref6">6</xref>] 。在此公式的基础上，我们给出一个修正的LS共轭梯度算法，步骤如下：</p><p>算法1 (修正的LS算法)</p><p>步0：给定初始点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x30_hanspub.png" xlink:type="simple"/></inline-formula>，常数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x31_hanspub.png" xlink:type="simple"/></inline-formula>。令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x32_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步1：若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x33_hanspub.png" xlink:type="simple"/></inline-formula>，则停止；否则进行步2。</p><p>步2：通过式(2.1)计算搜索方向<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x34_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步3：选出满足下面的线搜索条件的步长<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x35_hanspub.png" xlink:type="simple"/></inline-formula>：</p><disp-formula id="hanspub.19126-formula704"><label>(2.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/28-2620349x36_hanspub.png"  xlink:type="simple"/></disp-formula><p>步4：令迭代公式为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x37_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步5：若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x38_hanspub.png" xlink:type="simple"/></inline-formula>，停止并令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x39_hanspub.png" xlink:type="simple"/></inline-formula>；否则令</p><disp-formula id="hanspub.19126-formula705"><label>(2.3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/28-2620349x40_hanspub.png"  xlink:type="simple"/></disp-formula><p>步：令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x41_hanspub.png" xlink:type="simple"/></inline-formula>，转步1。</p><p>注：线搜索(2.2)是由文献 [<xref ref-type="bibr" rid="hanspub.19126-ref5">5</xref>] 给出，(2.3)的思想来源于文献 [<xref ref-type="bibr" rid="hanspub.19126-ref7">7</xref>] 。</p></sec><sec id="s5"><title>3. 下降性、信赖域性质和收敛性分析</title><p>首先分析算法1的充分下降性和信赖域的性质，通过下面的引理实现。</p><p>引理3.1. 若搜索方向<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x42_hanspub.png" xlink:type="simple"/></inline-formula>由式(2.1)产生，有</p><disp-formula id="hanspub.19126-formula706"><label>(3.1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/28-2620349x43_hanspub.png"  xlink:type="simple"/></disp-formula><p>和</p><disp-formula id="hanspub.19126-formula707"><label>(3.2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/28-2620349x44_hanspub.png"  xlink:type="simple"/></disp-formula><p>成立，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x45_hanspub.png" xlink:type="simple"/></inline-formula>是常数。</p><p>证明：根据(2.1)式，当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x46_hanspub.png" xlink:type="simple"/></inline-formula>时，(3.1)和(3.2)显然成立。当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x47_hanspub.png" xlink:type="simple"/></inline-formula>时，由(2.1)得到</p><disp-formula id="hanspub.19126-formula708"><graphic xlink:href="http://html.hanspub.org/file/28-2620349x48_hanspub.png"  xlink:type="simple"/></disp-formula><p>(3.1)式成立。下证(3.2)式。根据(3.1)式，可推出</p><disp-formula id="hanspub.19126-formula709"><graphic xlink:href="http://html.hanspub.org/file/28-2620349x49_hanspub.png"  xlink:type="simple"/></disp-formula><p>从上式可得(3.1)式的左边，其中取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x50_hanspub.png" xlink:type="simple"/></inline-formula>。对于(3.2)的右边，通过(2.1)式获得下式</p><disp-formula id="hanspub.19126-formula710"><graphic xlink:href="http://html.hanspub.org/file/28-2620349x51_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中最后一个不等式根据<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x52_hanspub.png" xlink:type="simple"/></inline-formula>得到，取<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x53_hanspub.png" xlink:type="simple"/></inline-formula>便得到(3.2)的右边。综上，(3.1)和(3.2)均成立。证毕！</p><p>上述引理中的(3.1)是充分下降性，(3.2)是信赖域性质，这两个性质对算法的全局收敛性起着非常重要的作用。从中也可看出，所建议的搜索方向不需要任何附加条件，自动满足这两个性质。为获得算法1的全局收敛性，我们需要下面的假设条件。</p><p>假设1：(A) 所研究的问题(1.1)有解；</p><p>(B)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x54_hanspub.png" xlink:type="simple"/></inline-formula>在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x55_hanspub.png" xlink:type="simple"/></inline-formula>上满足下面的Lipschitz性质，即</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x57_hanspub.png" xlink:type="simple"/></inline-formula><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x56_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x58_hanspub.png" xlink:type="simple"/></inline-formula>是个常数。</p><p>在假设1和引理3.1结论的基础上，我们可以建立算法的全局收敛性。因为全局收敛性的证明与文献 [<xref ref-type="bibr" rid="hanspub.19126-ref6">6</xref>] 的证明过程基本相同，此处不再详述，只给出定理。</p><p>定理3.1. 假如序列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x59_hanspub.png" xlink:type="simple"/></inline-formula>由算法1产生，同时假设1成立，则有</p><disp-formula id="hanspub.19126-formula711"><graphic xlink:href="http://html.hanspub.org/file/28-2620349x60_hanspub.png"  xlink:type="simple"/></disp-formula><p>成立。</p><p>此定理被称为算法1的全局收敛性定理。</p></sec><sec id="s6"><title>4. 数值结果</title><p>为了验证算法的有效性，我们将对下面的问题进行检验(表1)，这些问题同文献 [<xref ref-type="bibr" rid="hanspub.19126-ref5">5</xref>] 一样。</p><p>利用Matlab R2009a编写程序，在Windows 7系统，6.00GB内存，64位操作系统，CPU为Intel (R) Xeon (R), E5507 2.27 GHz上运行。参数选取是：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/28-2620349x61_hanspub.png" xlink:type="simple"/></inline-formula>。表二中参数含义：NI表示迭代次数，NF表示函数值次数，Dim表示问题的维数，Time表示运行的CPU时间，Fval表示程序终止时的范数值。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Equations proble</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >No.</th><th align="center" valign="middle" >名称</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >Exponential function 2</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >Trigonometric function</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >Logarithmic function</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >Broyden Tridiagonal function</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >Trigexp function</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >Strictly convex function 1</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >Extended Freudentein and Roth function</td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >Discrete boundary value problem</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >Troesch problem</td></tr></tbody></table></table-wrap><p>表1. 方程组问题</p><p>从上面表格中的数值结果可以看出，算法1对上述问题的求解非常有效，最终的范数值很接近零，表明对非线性方程组的精确解逼近程度很高，个别问题可以求到精确解(如问题7和问题9)；随着问题维数的增加，CPU时间和迭代次数以及函数值次数改变不是很大，说明算法1的有效性；个别问题的CUP时间是零，说明其求解几乎没有占用系统的CPU时间，就得出了结果。</p></sec><sec id="s7"><title>文章引用</title><p>黄玲花. 一个求解非线性方程组问题的LS算法A LS Algorithm for Nonlinear Equations[J]. 应用数学进展, 2016, 05(04): 813-817. http://dx.doi.org/10.12677/AAM.2016.54093</p></sec><sec id="s8"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.19126-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Fletcher, R. and Reeves, C.M. (1964) Function Minimization by Conjugate Gradients. Computer Journal, 7, 149-154.  
&lt;br&gt;https://doi.org/10.1093/comjnl/7.2.149</mixed-citation></ref><ref id="hanspub.19126-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Polak, E. and Ribière, G. (1968) Note sur la convergence de méthodes de directions conjuguées. Rev. franaise Informat.recherche Opérationnelle, 16, 35-43.</mixed-citation></ref><ref id="hanspub.19126-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Wei, Z.X., Yao, S.W. and Liu, L.Y. (2006) The Convergence Properties of Some New Conjugate Gradient Methods. Applied Mathematics &amp; Computation, 183, 1341-1350. &lt;br&gt;https://doi.org/10.1016/j.amc.2006.05.150</mixed-citation></ref><ref id="hanspub.19126-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Yuan, G.L. (2009) Modified Nonlinear Conjugate Gradient Methods with Sufficient Descent Property for Large-Scale Optimization Problems. Optimization Letters, 3, 11-21. &lt;br&gt;https://doi.org/10.1007/s11590-008-0086-5</mixed-citation></ref><ref id="hanspub.19126-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Li, Q. and Li, D.H. (2011) A Class of Derivative-Free Methods for Large-Scale Nonlinear Monotone Equations. Ima Journal of Numerical Analysis, 31, 1625-1635. &lt;br&gt;https://doi.org/10.1093/imanum/drq015</mixed-citation></ref><ref id="hanspub.19126-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Yuan, G. and Zhang, M. (2015) A Three-Terms Polak-Ribière-Polyak Conjugate Gradient Algorithm for Large-Scale Nonlinear Equations. Journal of Computational &amp; Applied Mathematics, 286, 186-195.  
&lt;br&gt;https://doi.org/10.1016/j.cam.2015.03.014</mixed-citation></ref><ref id="hanspub.19126-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Solodov, M.V. and Svaiter, B.F. (1998) A Globally Convergent Inexact Newton Method for Systems of Monotone Equations. Reformulation: Nonsmooth, Piecewise Smooth, Semismooth and Smoothing Methods. Springer US, 1411- 1414.</mixed-citation></ref></ref-list></back></article>