<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2018.86097</article-id><article-id pub-id-type="publisher-id">CSA-25620</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20180600000_93336941.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于LMS的多智能体系统变步长自调优一致性
  Variable Step Self-Tuning Consensus of Multi-Agent Systems with Least Mean Squares Method
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>韩</surname><given-names>宗亭</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>吴</surname><given-names>宪祥</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>呼</surname><given-names>香艳</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郭</surname><given-names>宝龙</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>曦</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>西安电子科技大学空间科学与技术学院，陕西 西安</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>14</day><month>06</month><year>2018</year></pub-date><volume>08</volume><issue>06</issue><fpage>877</fpage><lpage>887</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   研究了离散时间多智能体系统中的一致性问题。在不使用任何全局信息的情况下，将粒子群的变步长算法应用到最小均方(LMS)算法中进行多智能体局部自调，实现了多智能体的一致性。在这个过程中，网络模型的代价函数取决于智能体的状态和邻居状态平均值之间的误差。同时证明了网络图强连通的情况下，所有的智能体状态将达到一致性。最后，通过在不同拓扑结构下的仿真实例对提出的算法进行验证。 This paper considers the consensus problem in discrete time multi-agent systems. By using variable step particle swarm algorithm, the coupling parameters among agents are locally self-tuned by least-mean square (LMS) algorithm, without using any global information. In this process, each agent minimizes a local cost function dependent on the error between the agent state and the average of neighbors’ states. Provided that the network graph is strongly connected, it is shown that for each agent, the sequence of coupling parameters is convergent, and all agent states converge toward the same constant value. Finally, the proposed algorithm is verified by simulation under different topologies. 
  
 
</p></abstract><kwd-group><kwd>多智能体系统，一致性，自调优，最小均方算法, Multi-Agent Systems</kwd><kwd> Consensus</kwd><kwd> Self-Tuning</kwd><kwd> Least Mean Squares Method</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于LMS的多智能体系统变步长自调优一致性<sup> </sup></title><p>韩宗亭，吴宪祥，呼香艳，郭宝龙，陈曦</p><p>西安电子科技大学空间科学与技术学院，陕西 西安</p><p><img src="//html.hanspub.org/file/5-1541077x1_hanspub.png" /></p><p>收稿日期：2018年6月4日；录用日期：2018年6月20日；发布日期：2018年6月27日</p><disp-formula id="hanspub.25620-formula55"><graphic xlink:href="//html.hanspub.org/file/5-1541077x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>研究了离散时间多智能体系统中的一致性问题。在不使用任何全局信息的情况下，将粒子群的变步长算法应用到最小均方(LMS)算法中进行多智能体局部自调，实现了多智能体的一致性。在这个过程中，网络模型的代价函数取决于智能体的状态和邻居状态平均值之间的误差。同时证明了网络图强连通的情况下，所有的智能体状态将达到一致性。最后，通过在不同拓扑结构下的仿真实例对提出的算法进行验证。</p><p>关键词 :多智能体系统，一致性，自调优，最小均方算法</p><disp-formula id="hanspub.25620-formula56"><graphic xlink:href="//html.hanspub.org/file/5-1541077x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/5-1541077x7_hanspub.png" /> <img src="//html.hanspub.org/file/5-1541077x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>近年来，多智能体系统的协调控制问题受到了系统与控制领域专家学者的广泛关注。在多智能体系统网络中，一致性问题作为协调控制的代表性问题，也是其它分布式控制和估计的研究基础。系统达到一致性，也就是多智能体系统中每个智能体的状态在一致性协议或者算法的控制下渐进地或者在有限时间内达到相同的数值。随着多智能体协调控制的研究深入，一致性问题已经成为当前研究的热点问题，在理论和实际的应用方面都取得了很多的成果。它是多智能体系统的分布式控制研究中的基本问题之一，在交汇问题、编队控制、传感器网络的信息融合等方面有广泛应用 [<xref ref-type="bibr" rid="hanspub.25620-ref1">1</xref>] - [<xref ref-type="bibr" rid="hanspub.25620-ref10">10</xref>] 。</p><p>一致性理论的早期研究始于管理科学，分布式计算以及在自然界中出现的蜂群、鸟群和鱼群等常见的集群行为。在过去的二十年中，大量的论文涵盖了群集和分布式编队、分布式优化和估计、通信和传感器网络、耦合振荡器同步问题等方面的问题。2013年，Cao等人对近年来在多智能体协调方面的进展进行了较为全面的综述 [<xref ref-type="bibr" rid="hanspub.25620-ref11">11</xref>] 。2006年，Zhou，Lu等人提出动态网络自适应一致性，作者假设整个自治网络的解是已知的，并且每个智能体使用全局信息作为智能体状态跟踪的参考，局部控制输入与智能体状态与此参考状态之间的误差成正比，并且证明了这个误差收敛到零 [<xref ref-type="bibr" rid="hanspub.25620-ref12">12</xref>] 。2008年，Zhou，Lu等人在复杂网络中假设同步解决方案是已知的或有限制性的，得出了相似的结果 [<xref ref-type="bibr" rid="hanspub.25620-ref13">13</xref>] 。2009年，DeLellis等人证明了全局同步依赖于自适应变化的耦合增益施加的循环条件。要求收益矩阵依赖于耦合半负定时刻 [<xref ref-type="bibr" rid="hanspub.25620-ref14">14</xref>] 。2009年，Das等人考虑了每个智能体都必须跟踪已知或估计的领导者轨迹的问题。在未知参数和已知基函数的基础上，用一个中立的网络结构来表示非线性动力学 [<xref ref-type="bibr" rid="hanspub.25620-ref15">15</xref>] 。2012年，Yu等人对领导者的动力学进行了类似的参数化。领导者的轨迹是全局信息，智能体间的耦合参数是一个非自适应的，它的值对于网络的所有节点都是相同的 [<xref ref-type="bibr" rid="hanspub.25620-ref16">16</xref>] 。2013年，Li等人提出了连续时间自适应一致性问题的研究。作者分析了无向图，并假设已知输入增益对所有智能体都是相同的。证明了每个智能体的状态都收敛于所有智能体状态的平均值 [<xref ref-type="bibr" rid="hanspub.25620-ref17">17</xref>] 。2015年，Miloje等人提出了多智能体系统的自适应一致性协议，不应用任何全局信息，应用定步长的自适应一致性算法，最后证明了每个智能体的状态都趋于所有智能体初始状态的平均值 [<xref ref-type="bibr" rid="hanspub.25620-ref18">18</xref>] 。</p><p>总的来说，上述的研究工作对多智能体一致性的发展做出了有益的理论和实践探索。但是也存在一定的问题：一方面，需要考虑多智能体的状态到达一致性的时间问题，比如加快智能体的收敛速度；另一方面，在切换拓扑网络中的应用需要进行验证。</p><p>针对上述问题，我们在Miloje等人提出的多智能体自适应一致性协议的基础之上，提出了一种基于LMS的变步长自调优一致性协议。我们考虑了有向图拓扑，在不使用任何全局信息的情况下，每个智能体都通过最小化其本地代价函数和基于变步长LMS的参数估计器来生成耦合系数的值。代价函数等于智能体状态与其邻居状态平均值之间的局部误差的平方。结果表明，基于LMS的变步长自调优一致性算法是收敛的，所有的智能体状态都趋于一致的值。</p></sec><sec id="s4"><title>2. 预备知识以及问题描述</title><sec id="s4_1"><title>2.1. 图论基础</title><p>在多智能体系统一致性问题的研究中，图论是非常重要的分析工具。通常，用记号 G = { V , E , A } 表示一个加权的有向图。其中， V = { v 1 , v 2 , ⋯ , v n } 表示具有n个节点的节点集合，它的边集合 E ⊆ V &#215; V ，节点的下标集合 I = { 1 , 2 , ⋯ , n } ；邻接矩阵 A = [ a i j ] ∈ R n &#215; n ，当有向边 ( v i , v j ) ∈ E 时，表示节点 v j 可以获得 v i 的信息，此时 a i j &gt; 0 ；否则， a i j = 0 [<xref ref-type="bibr" rid="hanspub.25620-ref19">19</xref>] 。</p><p>定义节点i的邻居集合： N i = { j : a i j &gt; 0 } 。</p><p>矩阵 D = d i a g { d i , i = 1 , 2 , ⋯ , n } ， d i = ∑ j = 1 n a i j 为矩阵A的第i行元素之和，称为节点i的出度，矩阵 L = D − A 为图G的拉普拉斯矩阵 [<xref ref-type="bibr" rid="hanspub.25620-ref20">20</xref>] 。</p><p>最小均方算法简称LMS算法，是一种最陡下降算法的改进算法，是在维纳滤波理论上运用速下降法后的优化延伸，最早是由Widrow和Hoff提出来的。LMS算法是一种随机梯度算法。它以系统均方误差为代价函数，利用随机估计值代替最速下降法中的梯度向量，在统计意义上以最速下降方向收敛到Wiener解。其具有计算复杂程度低、在信号为平稳信号的环境中收敛性好、其期望值无偏地收敛到维纳解和利用有限精度实现算法时的平稳性等特性，使LMS算法成为自适应算法中稳定性最好、应用最广的算法 [<xref ref-type="bibr" rid="hanspub.25620-ref21">21</xref>] 。在本文中应用最小均方算法。</p></sec><sec id="s4_2"><title>2.2. 问题描述</title><p>考虑一组用离散时间积分器来表示的N个智能体：</p><p>x i ( t + 1 ) = x i ( t ) + β i u i ( t ) ,     i = 1 , ⋯ , N (1)</p><p>x i ( t ) ∈ R ， u i ( t ) ∈ R 分别表示智能体在离散时间 t = 0 , 1 , 2 , ⋯ 时的状态和控制输入。 β i 表示第i个智能体的输入增益。假设 β i 的符号已知，但是它的大小是一个未知数。公式(1)可以被视为一组连续时间多智能体系统的离散版本 [<xref ref-type="bibr" rid="hanspub.25620-ref18">18</xref>] 。</p><p>在本文中，考虑以下简单的一致性协议：</p><p>u i ( t ) = ∑ j ∈ N i θ i j ( t ) ( x j ( t ) − x i ( t ) ) (2)</p><p>θ i j ( t ) 是控制参数，也是要进行估计的数值，以便智能体的状态 x i ( t ) 收敛到相同的值。例如，</p><p>lim t → ∞ x i ( t ) = x c , ∀ i ∈ V , x c ∈ R (3)</p><p>x c 为多智能体系统的状态变量达到一致的数值。在本文中，提出了基于LMS的变步长算法自适应地调整参数 θ i j ( t ) 。定义参数向量：</p><p>θ i ( t ) T = [ θ i 1 ( t ) l i 1 , ⋯ , θ i N ( t ) l i N ] , ∀ i ∈ v (4)</p><p>这里的 l i j 是指示函数，定义如下：</p><p>l i j = { 1         j ∈ N i 0         其 他</p><p>所以(2)中的 u i ( t ) 可以写为如下的形式</p><p>u i ( t ) = θ i ( t ) T φ i ( t ) (5)</p><p>φ i ( t ) 是信号向量，定义如下：</p><p>φ i ( t ) T = [ ε i 1 ( t ) l i 1 , ⋯ , ε i N ( t ) l i N ] (6)</p><p>其中：</p><p>ε i j ( t ) = x j ( t ) − x i ( t ) (7)</p><p>由于 β i 是未知的，智能体i将会自调整参数向量 θ i ( t ) ，使得下面的代价函数最小化：</p><p>J i ( θ i ) = 1 2 ( x i ( t + 1 ) − x &#175; i ( t + 1 ) ) 2 (8)</p><p>这里的 x &#175; i ( t + 1 ) 是第i个智能体邻居状态的平均值（也包含其自身的值）</p><p>x &#175; i ( t + 1 ) = 1 1 + N ∑ j ∈ N i x j ( t ) , N &#175; i = N i ∪ { i } (9)</p><p>其中N是 N i 中元素的个数。</p><p>假设 β i 的符号是已知的，参数向量 θ i ( t ) 可以通过使用以下归一化LMS算法来估计：</p><p>θ i ( t + 1 ) = θ i ( t ) − μ i sgn ( β i ) φ i ( t ) e i ( t + 1 ) r i ( t ) (10)</p><p>其中：</p><p>r i ( t ) = 1 + ‖ φ i ( t ) ‖ 2 (11)</p><p>e i ( t + 1 ) = x i ( t + 1 ) − x &#175; i ( t + 1 ) (12)</p><p>这里的 x &#175; i ( t + 1 ) 由公式(9)定义。在公式(10)中， μ i &gt; 0 是步长参数，提出的这个算法的步长是改变的，在每次的迭代过程中，改变这个参数，加快收敛的速度。 sgn ( β i ) 是 β i 的符号。公式(10)从任意初始条件 θ i ( 0 ) 开始迭代。将 u i ( t ) 从公式(5)中代入公式(1)中可以得到：</p><p>x i ( t + 1 ) = x i ( t ) + β i θ i ( t ) T φ i ( t ) (13)</p><p>由公式(8)给出的 J i ( θ i ) 对 θ i ( t ) 的梯度是：</p><p>∂ J i ( θ i ) ∂ θ i ( t ) = e i ( t + 1 ) ∂ x i ( t + 1 ) ∂ θ i ( t ) = β i φ i ( t ) e i ( t + 1 ) (14)</p><p>其中 e i ( t + 1 ) 由公式(12)定义。因此公式(10)中的第二项等于公式(8)的负梯度并进行规范化，而 β i 被替换为其符号标示。</p><p>公式(13)可以写成如下的紧凑的形式：</p><p>x ( t + 1 ) = W ( t ) x ( t ) (15)</p><p>这里的 x ( t ) 是：</p><p>x ( t ) T = [ x 1 ( t ) , x 2 ( t ) , ⋯ , x N ( t ) ] (16)</p><p>而 W ( t ) ∈ R N &#215; N 是耦合权重矩阵，定义如下:</p><p>W ( t ) = [ w i j ] , w i j ( t ) = { β i θ i j ( t ) ,                         j ∈ N i 1 − ∑ K ∈ N i β i θ i j ( t ) ,       j = i 0 ,                                             其 他 (17)</p></sec><sec id="s4_3"><title>2.3. 相关证明</title><p>假设图G是强连通的，且对所有的 i = 1 , 2 , ⋯ , N ，公式(10)中的步长 μ i 是可变的，并且步长 μ i 满足 μ i &lt; 2 / β i max 。</p><p>由公式(9)给出的 x &#175; i ( t + 1 ) 可以写成：</p><p>x &#175; i ( t + 1 ) = a i T x ( t ) (18)</p><p>这里的 x ( t ) 由公式(16)定义的。</p><p>a i T = [ a i 1 , ⋯ , a i N ] , a i j = { 1 1 + N i     j ∈ N i , j = i 0                             其 他 (19)</p><p>定义：</p><p>e ( t ) T = [ e i ( t ) , ⋯ , e N ( t ) ] (20)</p><p>从公式(12) (16) (18)可以得到：</p><p>x ( t + 1 ) = A x ( t ) + e ( t + 1 ) (21)</p><p>矩阵 A ∈ R N &#215; N ， A = [ a i j ] 中的 a i j 是由公式(19)中定义。注意到A是具有正对角元素的随机矩阵。由于假设图是强连通的，非负矩阵A是不可约的，因此，矩阵A在 λ 1 = 1 处，只有一个特征值，其他的特征值 λ i , 2 ≤ i ≤ N ，满足 | λ i | &lt; 1 。 l = ( 1 , ⋯ , 1 ) T 是对应于 λ i = 1 的右特征向量。让 y A 的作为矩阵A对应于特征值 λ 1 的左特征向量并且标准化，得到 y A T l = 1 。因此，矩阵A可以分解为：</p><p>A = A 1 + l y A T ,       l t A T = 1 (22)</p><p>其中 A 1 l = 0 , y A T A 1 = 0 ，并且 A 1 的谱半径满足 ρ ( A 1 ) &lt; 1 。把(22)带入(21)可以得到：</p><p>x ( t + 1 ) = A 1 x ( t ) + l y A T x ( t ) + e ( t + 1 ) (23)</p><p>定义：</p><p>H ( q − 1 ) = ( I − q − 1 A 1 ) − 1 (24)</p><p>这里的 q − 1 是单位延迟算子。由于 A 1 l = 0 可以得到 H ( q ) − 1 l = ( I + ∑ k = 1 ∞ q − k A 1 k ) l = l 。再由公式(23)可以得到：</p><p>x ( t + 1 ) = l y A T x ( t ) + H ( q − 1 ) e ( t + 1 ) (25)</p><p>让</p><p>ϕ i ( t ) = x ( t ) − x i ( t ) l , i ∈ v (26)</p><p>由公式(25) (26)可以得到：</p><p>ϕ i ( t + 1 ) = l y A T ( x ( t ) − l x i ( t ) ) + l y A T l x i ( t ) − l x i ( t + 1 ) + H ( q − 1 ) e ( t + 1 ) (27)</p><p>由于 y A T l = 1 ，因此公式(27)可以写为：</p><p>ϕ i ( t + 1 ) = l y A T ϕ i ( t ) + l [ x i ( t ) − x i ( t + 1 ) ] + H ( q − 1 ) e ( t + 1 ) (28)</p><p>公式(9)可以写成：</p><p>x &#175; i ( t + 1 ) = x i ( t ) + b i T ϕ i ( t ) (29)</p><p>其中 b i 为：</p><p>b i T = [ b i 1 , ⋯ , b i N ] , b i j = { 1 1 + N i     j ∈ N i 0                       其 他 (30)</p><p>然后由公式(12)给出的误差 e i ( t + 1 ) 可以表示为：</p><p>e i ( t + 1 ) = x i ( t + 1 ) − x i ( t ) − b i T ϕ i ( t ) (31)</p><p>通过把公式(31)的 x i ( t + 1 ) − x i ( t ) 代入公式(28)，可以得到下式：</p><p>ϕ i ( t + 1 ) = Q i ϕ i ( t ) − l e i ( t + 1 ) + H ( q − 1 ) e ( t + 1 ) (32)</p><p>其中：</p><p>Q i = l ( y A − b i ) T (33)</p><p>b i T = [ b i 1 , ⋯ , b i N ] , b i j = { 1 1 + N i     j ∈ N i 0                     其 他 (34)</p><p>公式(33)中的矩阵 Q i 的秩为1，它唯一的非零特征值为：</p><p>ρ 1 = l T ( y A − b i ) = 1 − l T b i = 1 − ∑ k = 1 N b i k = 1 − N i 1 + N i &lt; 1 因此存在正常数 c 0 ，使得对于所有的 k ≥ 0 ， ‖ Q i k ‖ ≤ c 0 ρ 1 k , 0 &lt; ρ 1 &lt; 1 。</p><p>从公式(32)可以得到：</p><p>ϕ i ( t + 1 ) = Q i t + 1 ϕ i ( 0 ) + ∑ k = 0 t Q i t − k [ H ( q − 1 ) e ( k + 1 ) − l e i ( k + 1 ) ] (35)</p><p>可以得到：</p><p>‖ ϕ i ( t + 1 ) ‖ 2 ≤ c 1 ρ 1 k + c 2 ∑ k = 0 t ρ 1 t − k ‖ e ( k + 1 ) ‖ 2 (36)</p><p>其中， c 1 ， c 2 均为常数。式(36)两边从 t = 0 到 t = n 两边求和得到下式：</p><p>∑ t = 0 n ‖ ϕ i ( t + 1 ) ‖ 2 ≤ c 1 + c 2 ∑ t = 0 n ‖ e ( t + 1 ) ‖ 2 , ∀ n ≥ 0 (37)</p><p>由公式(6)和公式(18)得到 x &#175; i ( t + 1 ) = x i ( t ) + a i T φ i ( t ) ，再结合公式(12)和公式(13)可以得到推出如下公式：</p><p>e i ( t + 1 ) = θ ˜ i ( t ) φ i ( t ) (38)</p><p>e i ( t + 1 ) 由公式(12)定义，并且：</p><p>θ ˜ i ( t ) = β i θ i ( t ) − a i (39)</p><p>再结合公式(10)得到：</p><p>θ ˜ i ( t + 1 ) = θ ˜ i ( t ) − μ i | β i | r i ( t ) φ i ( t ) e i ( t + 1 ) (40)</p><p>将公式(40)两边平方后得到：</p><p>V i ( t + 1 ) = V i ( t ) − 2 μ i | β i | r i ( t ) θ ˜ i ( t ) φ i ( t ) e ( t + 1 ) i + ( μ i β i ) 2 r i ( t ) ⋅ φ i ( t ) 2 r i ( t ) e i ( t + 1 ) 2 (41)</p><p>这里的 V i ( t ) = ‖ θ ˜ i ( t ) ‖ 2 ，把公式(38)中的 θ ˜ i ( t ) φ i ( t ) 带入到公式(41)，并且由公式(11) r i ( t ) = 1 + ‖ φ i ( t ) ‖ 2 可以得到 ( ‖ φ i ( t ) ‖ 2 / r i ( t ) ) ≤ 1 ，可以得到：</p><p>V i ( t + 1 ) ≤ V i ( t ) − 2 μ i | β i | ( 1 − μ i | β i | 2 ) ∑ t = 0 n e i ( t + 1 ) 2 r i ( t ) (42)</p><p>把公式(42)的两边从 t = 0 到 t = n 进行求和，可以得到下式：</p><p>V i ( n + 1 ) + 2 μ i | β i | ( 1 − μ i | β i | 2 ) ∑ t = 0 n e i ( t + 1 ) 2 r i ( t ) ≤ V i ( 0 ) (43)</p><p>由于 μ i | β i | &gt; 0 ，并且开始的假设成立，所以 μ i | β i | &lt; 2 。因此，对于所有的 n ≥ 0</p><p>∑ t = 0 n e i ( t + 1 ) 2 r i ( t ) ≤ c 3 &lt; ∞ , i ∈ v (44)</p><p>其中 c 3 是常数。</p><p>定义：</p><p>r &#175; ( t ) = ∑ i = 1 N max 1 ≤ τ ≤ t r i ( τ ) (45)</p><p>可以由公式(44)得到：</p><p>∑ t = 0 n ‖ e ( t + 1 ) ‖ 2 r &#175; ( t ) ≤ c 4 ≤ ∞ (46)</p><p>其中， c 4 是常数， e ( t ) 由公式(20)定义。如果 { r &#175; ( t ) } , t ≥ 0 是一个有界的序列，则由公式(46)可以得到：</p><p>∑ t = 0 n ‖ e ( t + 1 ) ‖ 2 ≤ c 5 &lt; ∞ (47)</p><p>其中， c 5 为常数。而如果 lim t → ∞ r &#175; ( t ) = + ∞ ，则由克罗内克引理可以得到：</p><p>lim n → ∞ 1 r &#175; ( n ) ‖ e ( t + 1 ) ‖ 2 = 0 (48)</p><p>由公式(6)和公式(26)可以得到 ‖ φ i ( t ) ‖ ≤ ‖ ϕ i ( t ) ‖ ，再应用公式(11) (37) (45)可以得到：</p><p>r &#175; ( n ) ≤ c 6 + c 7 ∑ t = 0 n ‖ e ( t + 1 ) ‖ 2 (49)</p><p>其中， c 6 和 c 7 均为常数。由公式(48) (49)得到：</p><p>∑ t = 0 n ‖ e ( t + 1 ) ‖ 2 ≤ c 8 &lt; ∞ (50)</p><p>其中， c 8 为常数。由公式(37)(47)以及 ‖ φ i ( t ) ‖ ≤ ‖ ϕ i ( t ) ‖ 得到：</p><p>∑ t = 0 n ‖ φ i ( t ) ‖ 2 ≤ ∑ t = 0 n ‖ ϕ i ( t ) ‖ 2 ≤ c 9 ≤ ∞ (51)</p><p>其中， c 9 为常数。最后，由公式(26)和公式(51)可以得到：</p><p>lim t → ∞ ( x ( t ) − x i ( t ) l ) = 0 , i ∈ v (52)</p><p>证明了该多智能体系统的一致性。</p></sec></sec><sec id="s5"><title>3. 仿真与分析</title><p>在这个仿真示例中，首先应用一个由5个智能体组成的网络。其中，该一致协议中的耦合参数由公式(10)定义的变步长LMS递归生成。多智能体系统的拓扑结构如图1所示：</p><p>公式(10)中的步长 μ i 采用固定步长时，如果步长过大或过小，可能导致多智能体系统收敛速度慢，后期可能不会收敛。因此，在算法的运行初期保持较大的值，随着迭代次数的增加，步长自适应的进行减小。因此，在多次的实验的情况下，将 μ i 的初始数值设置为较大的数值，在之后的迭代过程中设置为可变步长 μ i = μ i − 0.001 &#215; n , i ∈ v ，让其随着迭代次数的增加而减小。</p><p>表1显示了每个智能体的初始位置和初始的速度。</p><p>对图1所示的拓扑结构进行仿真，仿真结果如图2和图3所示。</p><p>由于图1所示的拓扑结构含有有向生成树，多智能体的状态变量最后达到了一致。图2显示了每个智能体状态 x i ( t ) , i ∈ v 的收敛。图3显示了每个智能体的方向和位置信息。</p><p>如果改变该多智能体系统的拓扑结构，使得该图不含有生成树。如图4所示。</p><p>对图4所示的拓扑结构进行仿真。仿真结果如图5和图6所示。</p><p>图1. 含有生成树的拓扑结构</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> The initial positions and velocities of the agent</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >初始位置分量x</th><th align="center" valign="middle" >初始位置分量y</th><th align="center" valign="middle" >初始速度分量vx</th><th align="center" valign="middle" >初始速度分量vy</th></tr></thead><tr><td align="center" valign="middle" >智能体1</td><td align="center" valign="middle" >0.5</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >3</td></tr><tr><td align="center" valign="middle" >智能体2</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >2</td></tr><tr><td align="center" valign="middle" >智能体3</td><td align="center" valign="middle" >1.5</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >智能体4</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td></tr><tr><td align="center" valign="middle" >智能体5</td><td align="center" valign="middle" >2.5</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >1</td></tr></tbody></table></table-wrap><p>表1. 智能体的初始位置和初始速度</p><p>图2. 智能体速度的幅值</p><p>图3. 智能体的位置和方向</p><p>图4. 不含生成树的拓扑结构</p><p>图5. 智能体速度的幅值</p><p>图6. 智能体的位置和方向</p><p>由仿真结果可以看到，由于图4所示的拓扑结构不含有向生成树，所以得到的多智能体系统的状态变量没有实现一致性。也可以由图4所示的拓扑结构图进行直观的分析，由于智能体5不接收任何智能体的信息，所以，智能体5的状态一直保持不变。智能体2也不接收其他智能体的任何信息，所以智能体1、3、4的状态值最后收敛到智能体2的状态值。</p></sec><sec id="s6"><title>4. 结论</title><p>本文针对多智能体系统的一致性问题进行了研究，提出了一种基于LMS的变步长自调优一致性算法，证明了该算法收敛。最后通过在不同拓扑结构中仿真，验证了所设计一致性算法的正确性。</p></sec><sec id="s7"><title>文章引用</title><p>韩宗亭,吴宪祥,呼香艳,郭宝龙,陈 曦. 基于LMS的多智能体系统变步长自调优一致性 Variable Step Self-Tuning Consensus of Multi-Agent Systems with Least Mean Squares Method[J]. 计算机科学与应用, 2018, 08(06): 877-887. https://doi.org/10.12677/CSA.2018.86097</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.25620-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">[1]	Olfati-Saber, R. and Murray, R.M. (2004) Consensus Problems in Networks of Agents with Switching Topology and Time-Delays. IEEE Transactions on Automatic Control, 49, 1520-1533. &lt;br&gt;https://doi.org/10.1109/TAC.2004.834113</mixed-citation></ref><ref id="hanspub.25620-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Ren, W. and Beard, R.W. (2005) Consensus Seeking in Mul-ti-Agent Systems under Dynamically Changing Interaction Topologies. IEEE Transactions on Automatic Control, 50, 655-661. &lt;br&gt;https://doi.org/10.1109/TAC.2005.846556</mixed-citation></ref><ref id="hanspub.25620-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">李静, 方正. 分数阶非线性多智能体系统的一致性研究[J]. 计算机工程与应用, 2016, 52(23): 63-67.</mixed-citation></ref><ref id="hanspub.25620-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Li, T. and Zhang. J.F. (2010) Consensus Conditions of Mul-ti-Agent Systems with Time-Varying Topologies and Stochastic Communication Noises. IEEE Transactions on Auto-matic Control, 55, 2043-2057.  
&lt;br&gt;https://doi.org/10.1109/TAC.2010.2042982</mixed-citation></ref><ref id="hanspub.25620-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Dong, X.W., Xi, J.X., Shi, Z.Y., et al. (2013) Practical Consen-sus for High-Order Linear Time-Invariant Swarm Systems with Interaction Uncertainties, Time-Varying Delays and Ex-ternal Disturbances. International Journal of Systems Science, 44, 1843-1856. &lt;br&gt;https://doi.org/10.1080/00207721.2012.670296</mixed-citation></ref><ref id="hanspub.25620-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Jadbabaie, A., Lin, J. and Morse, A.S. (2003) Coordination of Groups of Mobile Autonomous Agents Using Nearest Neighbor Rules. IEEE Transactions on Automatic Control, 48, 988-1001. &lt;br&gt;https://doi.org/10.1109/TAC.2003.812781</mixed-citation></ref><ref id="hanspub.25620-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">王品, 姚佩阳. 具有不同输入时延的二阶多智能体系统一致性[J]. 复杂系统与复杂性科学, 2016, 13(4): 102-107.</mixed-citation></ref><ref id="hanspub.25620-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Bai, H., Arcak, M. and Wen, J. (2011) Coopera-tive Control Design: A Systematic-Passivity Based Approach. Springer-Verlag, New York. &lt;br&gt;https://doi.org/10.1007/978-1-4614-0014-1</mixed-citation></ref><ref id="hanspub.25620-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Ma, T.D., Zhang, L.Y. and Gu, Z.Y. (2016) Further Studies on Impulsive Consensus of Multi-Agent Nonlinear Systems with Control Gain Error. Neurocomputing, 190, 140-146. &lt;br&gt;https://doi.org/10.1016/j.neucom.2016.01.024</mixed-citation></ref><ref id="hanspub.25620-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">袁玩贵, 屈百达. 受干预多智能体系统的一致性分析及控制[J]. 控制与决策, 2016, 31(1): 187-192.</mixed-citation></ref><ref id="hanspub.25620-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Cao, Y., Yu, W., Ren, W. and Chen, G. (2013) An Overview of Recent Progress in the Study of Distributed Multi-Agent Coordination. IEEE Transactions on Industrial Informatics, 9, 427-438.  
&lt;br&gt;https://doi.org/10.1109/TII.2012.2219061</mixed-citation></ref><ref id="hanspub.25620-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Zhou, J., Lu, J. and Lü, J. (2006) Adaptive Synchronization of an Uncertain Complex Dynamical Network. IEEE Transactions on Automatic Control, 51, 652-656. &lt;br&gt;https://doi.org/10.1109/TAC.2006.872760</mixed-citation></ref><ref id="hanspub.25620-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Zhou, J., Lu, J. and Lü, J. (2008) Pinning Adaptive Synchroniza-tion of a General Complex Dynamical Network. Automatica, 44, 996-1003. &lt;br&gt;https://doi.org/10.1016/j.automatica.2007.08.016</mixed-citation></ref><ref id="hanspub.25620-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">DeLellis, P., diBernardo, M. and Garofalo, F. (2009) Novel Decentralized Adaptive Strategies for Synchronization of Complex Networks. Automatica, 45, 1312-1318. &lt;br&gt;https://doi.org/10.1016/j.automatica.2009.01.001</mixed-citation></ref><ref id="hanspub.25620-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Das, A. and Lewis, F. (2010) Distributed Adaptive Control for Synchronization of Unknown Nonlinear Networked Systems. Automatica, 46, 2014-2021. &lt;br&gt;https://doi.org/10.1016/j.automatica.2010.08.008</mixed-citation></ref><ref id="hanspub.25620-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Yu, H. and Xia, X. (2012) Adaptive Consensus for Mul-ti-Agents in Networks with Jointly Connected Topologies. Automatica, 48, 1783-1790. &lt;br&gt;https://doi.org/10.1016/j.automatica.2012.05.068</mixed-citation></ref><ref id="hanspub.25620-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Li, Z., Ren, W., Liu, X. and Xie, L. (2013) Distributed Con-sensus of Linear Multi-Agent Systems with Adaptive Dynamic Protocols. Automatica, 49, 1986-1995. &lt;br&gt;https://doi.org/10.1016/j.automatica.2013.03.015</mixed-citation></ref><ref id="hanspub.25620-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">Radenkovic, M. and Bose, T. (2015) On Multi-Agent Self-Tuning Consensus. Pergamon Press, Inc., Oxford.</mixed-citation></ref><ref id="hanspub.25620-ref19"><label>19</label><mixed-citation publication-type="other" xlink:type="simple">张清华. 图论及其应用[M]. 北京: 清华大学出版社, 2013: 2-4.</mixed-citation></ref><ref id="hanspub.25620-ref20"><label>20</label><mixed-citation publication-type="other" xlink:type="simple">吴永红, 刘敬贤. 多智能体网络一致性协同控制理论及应用[M]. 北京: 科学出版社, 2013.</mixed-citation></ref><ref id="hanspub.25620-ref21"><label>21</label><mixed-citation publication-type="other" xlink:type="simple">李霄剑, 王永, 陈绍青, 等. 一种方向优化最小均方算法[J]. 电子与信息学报, 2014, 36(6): 1348-1354.</mixed-citation></ref></ref-list></back></article>