<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">SG</journal-id><journal-title-group><journal-title>Smart Grid</journal-title></journal-title-group><issn pub-type="epub">2161-8763</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/SG.2015.54024</article-id><article-id pub-id-type="publisher-id">SG-15916</article-id><article-categories><subj-group subj-group-type="heading"><subject>SG20150400000_76119171.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于萤火虫算法的含DG配电网故障区段定位
  Fault Location for Distribution Networks with DG Based on Firefly Algorithm
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>岳</surname><given-names>凯旋</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>宝华</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>南京理工大学自动化学院，江苏 南京</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>16</day><month>07</month><year>2015</year></pub-date><volume>05</volume><issue>04</issue><fpage>197</fpage><lpage>203</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   萤火虫算法是一种新近提出的高级启发式算法，其具有概念简明、需要设置的参数少、收敛性好的优点。对配电网进行区域划分来降低解的维度并对萤火虫算法进行适当改进，提出了基于二进制萤火虫算法的含DG配电网故障定位方法。算例分析结果表明该方法在配电网发生单点以及多点故障，并伴有部分开关信息畸变情况下，均能够得到准确的结果，证明了其有效性。通过与粒子群算法进行对比，验证了萤火虫算法应用于配电网故障定位的快速性与可靠性。 Firefly algorithm is a new advanced heuristic algorithm, which has advantages of concise concept, few parameters need to be set and good astringency. By dividing the distribution network to reduce the solution’s dimension and improving the firefly algorithm, this paper puts forward a new method of fault location for distribution networks with DG based on binary firefly algorithm. Analysis of example shows that the proposed method is able to get accurate results when it is used to locate single fault or multiple faults in distribution networks accompanied by part of the switch under the distortion of information, which proves its effectiveness. Finally, the comparison results with particle swarm optimization algorithm testify its speed and reliability.
    
  
 
</p></abstract><kwd-group><kwd>配电网，故障定位，萤火虫算法，分布式发电, Distribution Network</kwd><kwd> Fault Location</kwd><kwd> Firefly Algorithm</kwd><kwd> Distributed Generation</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于萤火虫算法的含DG配电网故障区段定位<sup> </sup></title><p>岳凯旋，王宝华</p><p>南京理工大学自动化学院，江苏 南京</p><p>Email: yuekaixuan88@126.com</p><p>收稿日期：2015年8月1日；录用日期：2015年8月17日；发布日期：2015年8月20日</p><disp-formula id="hanspub.15916-formula866"><graphic xlink:href="http://html.hanspub.org/file/6-1580258x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>萤火虫算法是一种新近提出的高级启发式算法，其具有概念简明、需要设置的参数少、收敛性好的优点。对配电网进行区域划分来降低解的维度并对萤火虫算法进行适当改进，提出了基于二进制萤火虫算法的含DG配电网故障定位方法。算例分析结果表明该方法在配电网发生单点以及多点故障，并伴有部分开关信息畸变情况下，均能够得到准确的结果，证明了其有效性。通过与粒子群算法进行对比，验证了萤火虫算法应用于配电网故障定位的快速性与可靠性。</p><p>关键词 :配电网，故障定位，萤火虫算法，分布式发电</p><disp-formula id="hanspub.15916-formula867"><graphic xlink:href="http://html.hanspub.org/file/6-1580258x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>故障定位技术是实现馈线自动化的基础，对配电网运行的智能化及自愈力具有重要意义。</p><p>目前基于馈线终端单元(FTU)上传故障信息的故障定位算法主要有两类：直接算法与间接算法。直接算法中以矩阵算法[<xref ref-type="bibr" rid="hanspub.15916-ref1">1</xref>] 为典型，矩阵算法的计算量小，判断速度快，但对FTU上传故障信息的精确性要求更高。间接算法以各类智能算法为代表，代表算法有粒子群算法[<xref ref-type="bibr" rid="hanspub.15916-ref2">2</xref>] 、遗传算法[<xref ref-type="bibr" rid="hanspub.15916-ref3">3</xref>] 、和声算法[<xref ref-type="bibr" rid="hanspub.15916-ref4">4</xref>] 等。粒子群算法与遗传算法能够进行全局寻优，具有良好的容错性，但算法执行过程中依然存在易陷入局部最优的问题；和声算法概念简单，需要设置的参数较少，但由于每次迭代只产生一个新解，迭代效率较低。</p><p>萤火虫算法(Firefly Algorithm, FA) [<xref ref-type="bibr" rid="hanspub.15916-ref5">5</xref>] 是Xin-She Yang博士于2008年提出的高级启发式算法，在分布式电源定容和选址[<xref ref-type="bibr" rid="hanspub.15916-ref6">6</xref>] 、独立微网系统的最优化[<xref ref-type="bibr" rid="hanspub.15916-ref7">7</xref>] 等问题中都有成功的应用。萤火虫算法具有概念简单，算法需设置的参数较少，收敛性好的优点。本文在建立配电网故障定位数学模型的基础上，采用二进制萤火虫算法进行寻优求解，并与二进制粒子群算法进行对比，证明了该方法的有效性。</p></sec><sec id="s4"><title>2. 萤火虫算法</title><sec id="s4_1"><title>2.1. 算法仿生原理</title><p>萤火虫算法(FA)是一种启发式全局优化算法，来源于对萤火虫群体行为的模拟。在FA算法中，每个优化问题的解被看作是搜索空间中的萤火虫的位置，每个萤火虫的位置都对应一个由优化目标函数所决定的适应度值，适应度值越优秀则代表萤火虫的绝对亮度越高。绝对亮度低的萤火虫总是会被绝对亮度高的萤火虫吸引，并飞向绝对亮度高的萤火虫。在算法中通过位置更新公式来实现萤火虫被吸引并改变自身位置的过程。</p></sec><sec id="s4_2"><title>2.2. 算法数学描述</title><p>萤火虫算法的优化机理在数学角度上描述如下[<xref ref-type="bibr" rid="hanspub.15916-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.15916-ref8">8</xref>] ：</p><p>定义1：萤火虫的相对荧光亮度为：</p><disp-formula id="hanspub.15916-formula868"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/6-1580258x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>式中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x8_hanspub.png" xlink:type="simple"/></inline-formula>为萤火虫的最大荧光亮度，即光源(r = 0处)荧光亮度，与适应度值有关；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x9_hanspub.png" xlink:type="simple"/></inline-formula>为光吸收系数，可设为常数；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x10_hanspub.png" xlink:type="simple"/></inline-formula>为萤火虫i到萤火虫j的笛卡尔距离，即</p><disp-formula id="hanspub.15916-formula869"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/6-1580258x11_hanspub.png"  xlink:type="simple"/></disp-formula><p>定义2：萤火虫的吸引度为：</p><disp-formula id="hanspub.15916-formula870"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/6-1580258x12_hanspub.png"  xlink:type="simple"/></disp-formula><p>式中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x13_hanspub.png" xlink:type="simple"/></inline-formula>为最大吸引力，即光源(r = 0处)的吸引力。</p><p>定义3：当萤火虫j被萤火虫i吸引时，萤火虫j的位置更新公式如下：</p><disp-formula id="hanspub.15916-formula871"><label>(4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/6-1580258x14_hanspub.png"  xlink:type="simple"/></disp-formula><p>式中，t为算法的迭代次数；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x15_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x16_hanspub.png" xlink:type="simple"/></inline-formula>为萤火虫i、萤火虫j所处的位置；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x17_hanspub.png" xlink:type="simple"/></inline-formula>为萤火虫i对萤火虫j的吸引力；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x18_hanspub.png" xlink:type="simple"/></inline-formula>为步长因子，是[0,1]上的常数；rand为[0,1]上服从均匀分布的随机因子。</p><p>在二进制萤火虫算法(BFA)中，萤火虫<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x19_hanspub.png" xlink:type="simple"/></inline-formula>中的元素只能在0和1中取值，因此，我们需要对更新后萤火虫的位置进行修正，采用文献[<xref ref-type="bibr" rid="hanspub.15916-ref9">9</xref>] 中提出的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x20_hanspub.png" xlink:type="simple"/></inline-formula>函数，修正公式如下：</p><disp-formula id="hanspub.15916-formula872"><label>(5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/6-1580258x21_hanspub.png"  xlink:type="simple"/></disp-formula><p>式中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x22_hanspub.png" xlink:type="simple"/></inline-formula>为随机产生的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x23_hanspub.png" xlink:type="simple"/></inline-formula>范围内的随机数。</p></sec></sec><sec id="s5"><title>3. 二进制萤火虫算法的应用</title><p>配电网故障定位的基本流程是当配电网发生故障后，安装于各开关处的FTU会监测到故障电流并上传故障电流信息，故障定位软件启动。此时寻优算法将不断生成新解，新解通过开关函数将线路状态信息转换为相应的开关故障电流信息，再根据评价函数来判断解的优劣程度，直到找到最优解，即实现故障线路定位。</p><sec id="s5_1"><title>3.1. 编码</title><p>线路状态信息有两种：正常状态与故障状态。正常状态用“0”表示，故障状态用“1”表示。开关故障电流信息有三种：无过电流、流过正方向过电流、流过负方向过电流，分别用0、1、−1来表示。其中正方向规定为由系统电源指向用户负荷侧。</p></sec><sec id="s5_2"><title>3.2. 开关函数</title><p>采用文献[<xref ref-type="bibr" rid="hanspub.15916-ref9">9</xref>] 的开关函数模型，开关函数如式：</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x24_hanspub.png" xlink:type="simple"/></inline-formula> （6）</p><p>式中：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x25_hanspub.png" xlink:type="simple"/></inline-formula>为j号开关的开关函数；“<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x26_hanspub.png" xlink:type="simple"/></inline-formula>”表示逻辑或运算；将配电网以j号开关为分段点，分为上下两个部分：其中包含系统电源的部分为j号开关的上半部分，另一部分为下半部分。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x27_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x28_hanspub.png" xlink:type="simple"/></inline-formula>为电源开关系数，分别表示上、下部分对应的电源是否接入配电网，若接入则取1，否则取0；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x29_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x30_hanspub.png" xlink:type="simple"/></inline-formula>表示从j号开关到上半区电源S1、下半区电源S2路径上所经过的馈线区段状态值；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x31_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x32_hanspub.png" xlink:type="simple"/></inline-formula>分别表示下半部分、上半部分所有馈线的故障状态，若有故障线路则为1，否则为0。</p><p>如图1所示为简化含DG配电网结构图，S1~S7表示馈线开关，K1、K2表示DG接入配电网开关，a~g表示馈线区段，S表示系统电源，DG1、DG2为分布式电源。在DG1，DG2都接入配电网的情况下，当馈线d发生短路故障时，FTU上传的开关状态信息为[1,1,1,1,−1,−1,−1]。</p></sec><sec id="s5_3"><title>3.3. 评价函数</title><p>评价函数是算法能否对配电网故障进行准确定位的关键。采用文献[<xref ref-type="bibr" rid="hanspub.15916-ref3">3</xref>] 提出的评价函数，如式：</p><disp-formula id="hanspub.15916-formula873"><label>(7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/6-1580258x33_hanspub.png"  xlink:type="simple"/></disp-formula><p>式中：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x34_hanspub.png" xlink:type="simple"/></inline-formula>为配电网开关的个数；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x35_hanspub.png" xlink:type="simple"/></inline-formula>为配电网馈线个数；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x36_hanspub.png" xlink:type="simple"/></inline-formula>为FTU上传的故障信息；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x37_hanspub.png" xlink:type="simple"/></inline-formula>为配电网开关j的期望状态；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x38_hanspub.png" xlink:type="simple"/></inline-formula>为权系数乘以故障馈线数，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x39_hanspub.png" xlink:type="simple"/></inline-formula>取值范围在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x40_hanspub.png" xlink:type="simple"/></inline-formula>内，用以避免误判，文中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x41_hanspub.png" xlink:type="simple"/></inline-formula>取0.5。</p></sec></sec><sec id="s6"><title>4. 提高故障定位算法效率的措施</title><sec id="s6_1"><title>4.1. 故障信息维度降阶</title><p>文献[<xref ref-type="bibr" rid="hanspub.15916-ref4">4</xref>] 将配电网看作由度为1且以电源点为顶点的有源树与若干个无源树枝组成。由于发生故障时，若故障点不在无源树枝上，则整个无源树枝的节点都无故障电流流过，因此，可以根据FTU上传的故障信息，在对开关编码时去除掉无故障的无源树枝上的开关，这样就能够降低故障信息解的维度，提高算法的定位速度。</p><p>如图2所示，该配电网包括30个开关节点，4个DG电源。其中，有源树枝用实线相连，无源树枝用虚线相连，图中无源树枝共6条。当F1处发生故障时，6条无源树枝上均无故障电流流过，因此将FTU上传的故障信息中的相应开关去除，这样解的维数由30维变为17维，很大程度上提高了算法运算速度。</p><p>图1. 简化含DG配电网络故障定位分析图</p><p>图2. 含DG配电网络结构图</p></sec><sec id="s6_2"><title>4.2. 对二进制萤火虫算法的改进</title><p>文献[<xref ref-type="bibr" rid="hanspub.15916-ref5">5</xref>] 中给出的标准萤火虫算法流程，在萤火虫的位置移动规则中，“最亮”的萤火虫在每次迭代中都没有“移动”，这样可能会导致算法后期陷入“局部最优”。因此对式(4)简化，得到式(8)。通过让“最亮”的萤火虫在解空间随机微小移动，能够一定程度防止算法陷入“局部最优”。</p><disp-formula id="hanspub.15916-formula874"><label>(8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/6-1580258x44_hanspub.png"  xlink:type="simple"/></disp-formula></sec></sec><sec id="s7"><title>5. 算法流程</title><p>根据建立的故障定位模型，运用BFA算法进行故障定位的流程如下：</p><p>离线阶段：</p><p>步骤1：对配电网开关节点以及馈线区段编号，根据网络结构，将配电网划分为有源树与无源树枝。</p><p>步骤2：FA算法参数初始化。包括光吸收系数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x45_hanspub.png" xlink:type="simple"/></inline-formula>、最大吸引力<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x46_hanspub.png" xlink:type="simple"/></inline-formula>、种群规模FA-NUM、步长因子<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x47_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>在线阶段：</p><p>步骤1：根据FTU上传的过流信息，将无故障电流流过的无源树枝剔除，确定解的维数。</p><p>步骤2：初始化FA-NUM只萤火虫。通过式(6)转化为开关故障过流信息，通过式(7)计算适应度值并赋予萤火虫亮度。</p><p>步骤3：根据式(3)计算各萤火虫吸引力<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x48_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步骤4：根据式(4)更新萤火虫的空间位置，重新计算萤火虫的适应度。</p><p>步骤5：根据萤火虫的亮度排列所有萤火虫；</p><p>步骤6：判断是否满足终止条件，若满足则跳出循环，若不满足则重复步骤3~5。</p></sec><sec id="s8"><title>6. 算例分析</title><p>以图2所示的含DG配电网作为算例，采用MATLAB软件编制了基于BFA算法的配电网故障定位程序。参数设置如下：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x49_hanspub.png" xlink:type="simple"/></inline-formula>、<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x50_hanspub.png" xlink:type="simple"/></inline-formula>、萤火虫种群规模为20，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/6-1580258x51_hanspub.png" xlink:type="simple"/></inline-formula>，最大迭代次数为100。</p><p>为了验证基于BFA算法进行配电网故障定位的有效性、容错性，采用几种典型的故障情况进行仿真测试，测试结果如表1。</p><p>从表1的测试结果可以看出，该故障定位算法在单点故障、双点故障、以及有信息畸变情况下都能够进行准确的故障定位，同时算法可以反映出畸变开关，以便于对相应的FTU设备进行维护与检修。</p><p>为了验证基于BFA算法配电网故障区段定位方法的优势，将其与文献[<xref ref-type="bibr" rid="hanspub.15916-ref11">11</xref>] 中的二进制粒子群算法(BPSO)比较。参数设置参照文献[<xref ref-type="bibr" rid="hanspub.15916-ref10">10</xref>] ，BPSO子种群规模为20，加速因子为2，惯性权重为0.9，采用表1第四种故障情况，连续运行程序50次，试验结果见表2、图3。从试验结果中可以看出，BFA算法陷</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Test result of faul</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >输入量</th><th align="center" valign="middle"  colspan="3"  >输出量</th></tr></thead><tr><td align="center" valign="middle" >FTU上传故障信息</td><td align="center" valign="middle" >故障线路</td><td align="center" valign="middle" >畸变开关</td><td align="center" valign="middle" >适应度值</td></tr><tr><td align="center" valign="middle" >[1,1,1,1,1,1,−1,−1,−1,−1,0,−1,−1,−1,0,0,0,0,0,0,0,0,−1,−1,−1,0,0,−1,−1,0]</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >无</td><td align="center" valign="middle" >0.5</td></tr><tr><td align="center" valign="middle" >[1,1,1,0,1,1,−1,−1,−1,−1,0,0,−1,−1,0,0,1,1,0,0,0,0,−1,−1,−1,0,0,−1,−1,0]</td><td align="center" valign="middle" >6,18</td><td align="center" valign="middle" >无</td><td align="center" valign="middle" >1.5</td></tr><tr><td align="center" valign="middle" >[1,0,1,1,1,1,−1,−1,−1,−1,0,−1,−1,1,0,0,0,0,0,0,0,0,−1,−1,−1,0,0,−1,−1,0]</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >2,14</td><td align="center" valign="middle" >3.5</td></tr><tr><td align="center" valign="middle" >[1,1,1,0,1,1,−1,−1,−1,−1,0,0,−1,−1,0,0,1,1,0,0,0,0,−1,1,−1,0,0,−1,1,0]</td><td align="center" valign="middle" >6,18</td><td align="center" valign="middle" >24,29</td><td align="center" valign="middle" >5.5</td></tr></tbody></table></table-wrap><p>表1. 故障测试结果</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Results comparison of algorithm</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法名称</th><th align="center" valign="middle" >BFA</th><th align="center" valign="middle" >BPSO</th></tr></thead><tr><td align="center" valign="middle" >平均迭代次数</td><td align="center" valign="middle" >15.42</td><td align="center" valign="middle" >29.88</td></tr><tr><td align="center" valign="middle" >陷入局部最优次数</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >2</td></tr><tr><td align="center" valign="middle" >正确率/%</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >96</td></tr></tbody></table></table-wrap><p>表2. 算法比较试验结果</p><p>图3. 两种算法收敛趋势</p><p>入局部最优的次数低于BPSO算法，且算法的收敛速度也优于BPSO。综上，BFA算法能够高效、准确的解决含分布式电源配电网故障定位问题。</p></sec><sec id="s9"><title>7. 结论</title><p>本文提出了一种基于BFA算法的含DG配电网的故障区段定位方法。在建立配电网故障定位数学模型的基础上，采用区域划分的方法降低了解的维度，对FA算法稍加改进，通过仿真测试表明，在配电网发生单点以及多点故障，并伴有部分开关信息畸变情况下，该方法均能够得到准确的结果。将该算法与二进制粒子群算法进行对比，表明该算法具有收敛速度更快,不易陷入局部最优的优势，具有一定的实用价值。</p></sec><sec id="s10"><title>文章引用</title><p>岳凯旋,王宝华. 基于萤火虫算法的含DG配电网故障区段定位Fault Location for Distribution Networks with DG Based on Firefly Algorithm[J]. 智能电网, 2015, 05(04): 197-203. http://dx.doi.org/10.12677/SG.2015.54024</p></sec><sec id="s11"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.15916-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">罗梅, 杨洪耕 (2012) 配电网故障定位的一种改进通用矩阵算法. 电力系统保护与控制, 40, 64-68.</mixed-citation></ref><ref id="hanspub.15916-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">李超文, 何正友, 张海平, 等 (2009) 基于二进制粒子群算法的辐射状配电网故障定位. 电力系统保护与控制, 37, 35-39.</mixed-citation></ref><ref id="hanspub.15916-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">王进强, 陈少华 (2013) 基于改进遗传算法的含分布式电源的配电网故障定位. 电力科学与工程, 29, 13-17.</mixed-citation></ref><ref id="hanspub.15916-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">刘蓓, 汪沨, 陈春, 等 (2013) 和声算法在含DG配电网故障定位中的应用. 电工技术学报, 28, 280-284.</mixed-citation></ref><ref id="hanspub.15916-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Yang, X.S. (2009) Firefly algorithms for multimodal optimization. Stochastic algorithms: Foundations and applications. Springer, Berlin, Heidelberg, 169-178. &lt;br&gt;http://dx.doi.org/10.1007/978-3-642-04944-6_14</mixed-citation></ref><ref id="hanspub.15916-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">陈家俊, 蒋铁铮, 周勇, 等 (2014) 考虑电压骤降的分布式电源定容和选址. 电网技术, 38, 2244-2249.</mixed-citation></ref><ref id="hanspub.15916-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">王晶, 王宗礼, 陈骏宇, 等 (2014) 基于萤火虫优化算法的微网源-荷博弈模型及分析. 电力系统自动化, 21, 7- 12.</mixed-citation></ref><ref id="hanspub.15916-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">刘长平, 叶春明 (2011) 一种新颖的仿生群智能优化算法: 萤火虫算法. 计算机应用研究, 28, 3295-3297.</mixed-citation></ref><ref id="hanspub.15916-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Chandrasekaran, K., Simon, S.P. and Padhy, N.P. (2013) Binary real coded firefly algorithm for solving unit commitment problem. Information Sciences, 16, 67-84. &lt;br&gt;http://dx.doi.org/10.1016/j.ins.2013.06.022</mixed-citation></ref><ref id="hanspub.15916-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">周湶, 郑柏林, 廖瑞金, 等 (2013) 基于粒子群和差分进化算法的含分布式电源配电网故障区段定位. 电力系统保护与控制, 4, 33-37.</mixed-citation></ref><ref id="hanspub.15916-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Kennedy, J. and Eberhart, R.C. (1997) A discrete binary version of the particle swarm algorithm. Proceedings of Conference on System, Man, and Cybernetics, 4104-4109. &lt;br&gt;http://dx.doi.org/10.1109/icsmc.1997.637339</mixed-citation></ref></ref-list></back></article>