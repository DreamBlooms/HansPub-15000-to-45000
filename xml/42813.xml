<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2021.115165</article-id><article-id pub-id-type="publisher-id">CSA-42813</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20210500000_61882979.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  一种基于ATE的提高DSP测试覆盖率方法
  A Method of Improving DSP Test Coverage Based on ATE
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>培华</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>魏</surname><given-names>领会</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>北京冠中集创科技有限公司，北京</addr-line></aff><aff id="aff3"><addr-line>北方工业大学，北京</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>08</day><month>05</month><year>2021</year></pub-date><volume>11</volume><issue>05</issue><fpage>1598</fpage><lpage>1606</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   DSP功能高覆盖率的测试是一个比较难的课题。本文以自主研发CATT-400大规模集成电路测试系统为测试平台，提出一种基于ATE (Automatic Test Equipment)的DSP的高覆盖率的测试方法；通过基于美国TI公司TMS320F28xx系列DSP，实现该测试方法开发验证，并实现自动测试设备与测试向量的自动匹配。该方法对于有微处理器的芯片测试有很大的推广意义。 It is difficult to test the high coverage of DSP function. In this paper, the CATT-400 large-scale integrated circuit test system developed by ourselves is used as the test platform, and a high coverage test method based on ATE (automatic test equipment) DSP is proposed. Through the TMS320F28xx series DSP of TI Company in the United States, the test method is developed and verified, and the automatic matching between the automatic test equipment and the test vector is realized. This method is of great significance for chip test with microprocessors. 
  
 
</p></abstract><kwd-group><kwd>CATT-400，TMS320F28xx，ATE, CATT-400</kwd><kwd> TMS320F28xx</kwd><kwd> ATE</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>DSP功能高覆盖率的测试是一个比较难的课题。本文以自主研发CATT-400大规模集成电路测试系统为测试平台，提出一种基于ATE (Automatic Test Equipment)的DSP的高覆盖率的测试方法；通过基于美国TI公司TMS320F28xx系列DSP，实现该测试方法开发验证，并实现自动测试设备与测试向量的自动匹配。该方法对于有微处理器的芯片测试有很大的推广意义。</p></sec><sec id="s2"><title>关键词</title><p>CATT-400，TMS320F28xx，ATE</p></sec><sec id="s3"><title>A Method of Improving DSP Test Coverage Based on ATE<sup> </sup></title><p>Peihua Chen<sup>1</sup>, Linghui Wei<sup>2*</sup></p><p><sup>1</sup>GZICTEST Technology Co., Ltd., Beijing</p><p><sup>2</sup>North China University of Technology, Beijing</p><p><img src="//html.hanspub.org/file/42-1542072x5_hanspub.png" /></p><p>Received: Apr. 28<sup>th</sup>, 2021; accepted: May 22<sup>nd</sup>, 2021; published: May 31<sup>st</sup>, 2021</p><p><img src="//html.hanspub.org/file/42-1542072x6_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>It is difficult to test the high coverage of DSP function. In this paper, the CATT-400 large-scale integrated circuit test system developed by ourselves is used as the test platform, and a high coverage test method based on ATE (automatic test equipment) DSP is proposed. Through the TMS320F28xx series DSP of TI Company in the United States, the test method is developed and verified, and the automatic matching between the automatic test equipment and the test vector is realized. This method is of great significance for chip test with microprocessors.</p><p>Keywords:CATT-400, TMS320F28xx, ATE</p><disp-formula id="hanspub.42813-formula39"><graphic xlink:href="//html.hanspub.org/file/42-1542072x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/42-1542072x8_hanspub.png" /> <img src="//html.hanspub.org/file/42-1542072x9_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>目前，进口的DSP处理器都是封装测试后的芯片，对于一些可靠性要求比较高的像航天、汽车电子等领域，需要对进口来的芯片进行二次测试；但测试模式对国内用户保密，导致芯片在二次测试时无法通过进入测试模式实现对芯片的测试。国内也有一些对该类型进行测试的方法研究。例如基于应用模式的DSP测试方法 [<xref ref-type="bibr" rid="hanspub.42813-ref1">1</xref>]，提出了使用测试机代替实装测试板测试的新方法；针对MCU测试，基于ATE的一种MCU测试方法 [<xref ref-type="bibr" rid="hanspub.42813-ref2">2</xref>]，提出一种创新型测试方法，能够大大减少MCU重复烧写次数；DSP结构与测试方法研究 [<xref ref-type="bibr" rid="hanspub.42813-ref3">3</xref>]，研究了由测试系统模拟外部程序存储器加载程序的并行测试算法。基于覆盖率驱动的高性能指令集验证方法 [<xref ref-type="bibr" rid="hanspub.42813-ref4">4</xref>]，利用面向对象特性、随机约束求解机制以及覆盖率统计机制，提出一种快速搭建覆盖率驱动的随机测试平台的方法。目前看到测试方法基于理论性的研究比较多，在实现方面应用性不强；针对实用性和易实现性，本文提出一种新的基于ATE的DSP测试解决方案，该方案既可以实现DSP的高覆盖率测试要求，也能较简单地实现。并且在CATT-400 ATE测试设备中验证了该方案的可行性和可靠性；DSP与测试系统是两个不同的时钟源，这个也是测试的难点，也是本论文解决的问题。</p></sec><sec id="s6"><title>2. 测试概述</title><sec id="s6_1"><title>2.1. CATT-400测试系统介绍</title><p>CATT-400是由北京冠中集创科技有限公司自主研发的大规模集成电路数字测试系统，系统的最大优点就是数模混合测试系统，可以进行DC测试、功能测试和AC测试，具有测试精度高、速度快等特点。系统设计采用模块化结构设计，每通道板可提供64路管脚电路和8路DPS电路，系统最大配置为8块通道板512路测试通道，最大测试速率为400 MHz，系统具有Per Pin PMU特性。本测试系统有较强的失效分析功能，设计有每通道失效存储器，用于失效分析，失效向量深度可达到128 M。系统具有动态定时功能，每通道可以设置时间参数，时间分辨率为1.25 nS。适用于IC生产厂家进行芯片测试或成品检验。目前该系统已经用在高端DSP、FPGA、SOC等芯片的测试。该系统的结构框图如图1所示。系统采用光纤通讯方式可以解决通信干扰和误码率的问题，增加系统控制的可靠性。</p></sec><sec id="s6_2"><title>2.2. DSP测试介绍</title><p>DSP是一款用于控制的高性能、多功能、高性价比数字处理芯片。芯片内部结构比较复杂，外围单元比较多，增加了测试的复杂性和测试覆盖率问题。对该DSP芯片既要进行直流参数测试，功能测试，也要对该芯片的交流参数测试。</p><p>图1. 测试系统结构图</p><p>直流参数包括：GPIO管脚以及其它功能管脚的开短路测试、漏流测试、电平测试、动态功耗和静态功耗测试等；</p><p>功能测试：GPIO管脚的输入输出功能测试、各个协议(SPI、SCI等)功能测试、指令集、外部总线接口等测试；</p><p>交流参数测试：主要是datasheet里面的各个管脚的上升时间，管脚之间的时间延时测试、各种协议的时序测试等。</p><p>每一项测试都要编写测试程序，并要考虑测试覆盖率的问题，覆盖率越高，对芯片测试的可靠性也越高。DSP测试项目如表1所示。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Project requirements DSP tes</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >DSP测试项</th><th align="center" valign="middle" >测试内容</th></tr></thead><tr><td align="center" valign="middle" >直流测试</td><td align="center" valign="middle" >开短路测试、漏流测试、电平测试、功耗测试等</td></tr><tr><td align="center" valign="middle" >功能测试</td><td align="center" valign="middle" >GPIO功能测试、外部接口功能、指令集测试、协议测试等</td></tr><tr><td align="center" valign="middle" >交流参数测试</td><td align="center" valign="middle" >上升时间、下降时间、延时等</td></tr></tbody></table></table-wrap><p>表1. DSP测试项目要求</p></sec></sec><sec id="s7"><title>3. DSP测试平台</title><p>本测试以美国TI公司的TMS320F28xx芯片作为开发产品介绍。</p><sec id="s7_1"><title>3.1. TMS320F28xx结构图 [<xref ref-type="bibr" rid="hanspub.42813-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.42813-ref6">6</xref>]</title><p>结构框图如图2所示，它的基本功能如下：</p><p>-SCI (串行通信接口)</p><p>-SPI (串行外设接口)</p><p>-UART (通用串行接口)</p><p>-12-bit，16通道ADC</p><p>-Mc BSP (多通道带缓冲串行口)</p><p>-eCAN (增强型CAN模块)</p><p>-独立的32位定时器</p><p>-独立编程的GPI O管脚</p><p>-外部扩展接口</p><p>通过结构框图可以看出这一类型的DSP芯片的功能比较强大、比较多；每种功能又包括很多工作模式和参数设置，在正常应用这些功能时，这些工作模式都可能用到，在测试时，要把这些模式都覆盖掉。像SCI接口测试，即包括可编程波特率又包括可编程数据格式；在对这个功能测试时，要有多种组合，不同波特率和不同数据格式组合，实现对该功能的全覆盖测试。</p><p>图2. 结构框图</p></sec><sec id="s7_2"><title>3.2. 测试硬件组成结构</title><p>在测试过程中，被测芯片DSP是放在测试夹具里面，芯片的引脚通过测试夹具的进行连接。测试夹具是焊接在一个PCB板上，夹具的每个管脚通过与PCB板上的插座相连，PCB板上插座插在CATT-400测试系统上，与测试系统的测试接口连接。TMS320F28xx的测试资源主要用到测试系统的IO通道、DPS通道和地。芯片的GPIO管脚及其它功能的管脚与测试系统的IO通道连接，电源VCC与测试系统的DPS通道连接，地与测试系统的地连接，连接接口如图3所示。</p><p>图3. 测试硬件连接</p></sec></sec><sec id="s8"><title>4. 测试方法介绍及实现</title><p>对于测试直流和AC测试实现起来比较容易，覆盖率都是固定的，该方法就不做介绍了。下面就对功能实现方法进行介绍。</p><sec id="s8_1"><title>4.1. 需要开发工具</title><p>在测试开发过程中，主要用到以下几个工具：</p><p>CCS Studio 3.3：TI DSP开发环境，编译环境是C语言 [<xref ref-type="bibr" rid="hanspub.42813-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.42813-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.42813-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.42813-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.42813-ref9">9</xref>]；</p><p>JTAG：TI DSP仿真器，可以把DSP生成的程序通过JTAG下载到DSP中去；</p><p>Catt-400 tool：CATT-400开发环境；包括测试程序开发、向量生成工具、校准工具等。</p></sec><sec id="s8_2"><title>4.2. 测试方法介绍</title><p>测试方法对于dsp部分来说 [<xref ref-type="bibr" rid="hanspub.42813-ref10">10</xref>] [<xref ref-type="bibr" rid="hanspub.42813-ref11">11</xref>]，都是在C语言环境下进行的，比较容易掌握。对于TMS320F28xx系列来说，需要功能测试项如表2所示。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Test function ite</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >功能</th><th align="center" valign="middle" >测试需求</th></tr></thead><tr><td align="center" valign="middle" >JTAG功能</td><td align="center" valign="middle" >JTAG下载，烧录功能</td></tr><tr><td align="center" valign="middle" >SPI</td><td align="center" valign="middle" >SPI接口协议测试</td></tr><tr><td align="center" valign="middle" >SCI</td><td align="center" valign="middle" >SCI接口协议测试</td></tr><tr><td align="center" valign="middle" >UART</td><td align="center" valign="middle" >UART接口协议测试</td></tr><tr><td align="center" valign="middle" >eCAN</td><td align="center" valign="middle" >eCAN协议测试</td></tr><tr><td align="center" valign="middle" >GPIO</td><td align="center" valign="middle" >IO输入输出功能测试，驱动力测试</td></tr><tr><td align="center" valign="middle" >12-bit ADC</td><td align="center" valign="middle" >ADC采集数据精度测试</td></tr><tr><td align="center" valign="middle" >External interface</td><td align="center" valign="middle" >外部数据接口，包括数据访问，存储单元访问</td></tr><tr><td align="center" valign="middle" >指令集</td><td align="center" valign="middle" >CPU运算单元的运算能力，及准确性测试</td></tr><tr><td align="center" valign="middle" >存储单元</td><td align="center" valign="middle" >各个存储单元可靠性测试</td></tr></tbody></table></table-wrap><p>表2. 测试功能项</p><p>芯片测试分两类 [<xref ref-type="bibr" rid="hanspub.42813-ref12">12</xref>]，一类是外部接口部分测试，该部分测试是在CCS开发环境中把接口的功能用C语言编程，包括每个功能的寄存器设置、协议发送和接受数据的格式、数据的模式等。在与测试机交互部分编写pattern，每段pattern对应C语言的每个功能，pattern对应功能的协议和数据与C语言编写的协议要对应上。</p><p>一类是芯片内部存储单元和运算单元，这类功能用C语言编程，对指令部分，编写复杂的运算包括一些算法操作数的组合和复杂的浮点运算，使DSP的算法指令都给覆盖上；内部存储单元采用往存储单元里写一些有规律的数据进行访问，保证每个存储单元都被访问到；每个功能测试的结果通过GPIO接口传到测试系统，由测试系统的pattern来判断结果是否正确。</p><p>在这些测试方法中，对于C编程测试部分是把所有的功能都和在一个程序里，每个功能的执行通过相应的GPIO高低电平来控制的，这样可以解决DSP与测试设备不同时钟源的问题；外部通过测试机的pattern控制对应的GPIO，来执行不同的功能。</p><p>0——该功能不执行</p><p>1——该功能执行</p></sec><sec id="s8_3"><title>4.3. 测试方法实现</title><p>实现主要有以下几个步骤：</p><p>1) 根据硬件连接图，确定每个芯片管脚与软件对应关系；软件对应关系是通过excel进行列出来的，如图4所示。</p><p>2) 根据DSP功能，编写CCS程序；首先选择GPIO控制管脚，选择的这个GPIO管脚为输入管脚。例如选在GPIOA0；在CCS里编程如下：</p><p>图4. 通道对应关系</p><p>while(GpioDataRegs.GPADAT.bit.GPIOA0==0)</p><p>{}</p><p>while(1)</p><p>{</p><p>If (GpioDataRegs.GPADAT.bit.GPIOA0==1)</p><p>{</p><p>{</p><p>加入测试功能</p><p>}</p><p>}</p><p>else</p><p>{</p><p>break;</p><p>}</p><p>3) 编程测试pattern和测试程序</p><p>根据DSP功能，来编写测试机pattern；例如：SPI协议，可以利用pattern生成工具生成TMS320F28xx的测试机可以执行pattern。利用对应的GPIO的通道进行控制是否执行SPI测试协议；在CATT-400环境下编写测试程序；CATT-400环境如图5所示。</p><p>4) 调试</p><p>前面生成的文件有两个，一个是ccs生成的.out文件，这个是DSP的可执行文件，一个是测试机的测试程序文件。在调试过程中是这两个程序相互配合来完成。调试过程中执行以下几个操作：</p><p>图5. 测试环境</p><p>a) 把CCS生成的DSP程序通过JTAG下载到DSP中去，运行程序；</p><p>b) 在CATT-400 debug模式下进行debug某一项功能，看测试结果，是否pass，如果fail再修改，直至pass；</p><p>c) 调试其它功能，直至把所有的功能都调试完；</p><p>d) 把所有的测试项放在一个测试流程里，看测试是否全pass，如果fail，调试一直pass为止；</p><p>e) 收集数据，看稳定性，如果稳定了，就可以进行产品测试了。</p><p>通过以上几个流程的开发就可以实现对DSP的高覆盖率测试，流程图如图6所示。</p><p>图6. 测试开发流程</p></sec><sec id="s8_4"><title>4.4. 测试结果分析</title><p>通过测试流程编程的方法，编写测试程序，在测试机台上进行测试验证，测试结果见图7显示部分测试结果；通过测试结果验证了该测试方法的可行性，并且把DSP的功能测试都能实现，提高了测试的覆盖率。</p><p>图7. 测试结果</p></sec></sec><sec id="s9"><title>5. 结论</title><p>该文提出了一种解决DSP测试的方法，该方法既解决了DSP原来测试覆盖率低的问题，可以通过与测试机的配合，完成DSP各种功能的程序编写并在机台上验证，也为不同时钟源的测试提供了一种新的解决方法；利用C语言对DSP进行测试编程比较方便，更接近于芯片的应用状态；提高了对芯片测试可靠性的测试要求。</p></sec><sec id="s10"><title>文章引用</title><p>陈培华,魏领会. 一种基于ATE的提高DSP测试覆盖率方法A Method of Improving DSP Test Coverage Based on ATE[J]. 计算机科学与应用, 2021, 11(05): 1598-1606. https://doi.org/10.12677/CSA.2021.115165</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.42813-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">武乾文, 奚留华, 郭晓宇. 一种基于应用模式的DSP测试技术[J]. 电子与封装, 2018(5): 12-14+22.</mixed-citation></ref><ref id="hanspub.42813-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">何立, 潘宇. 基于ATE的一种MCU测试方法[J]. 电子质量, 2021(1): 30-33.</mixed-citation></ref><ref id="hanspub.42813-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">武乾文, 冯妍. DSP结构与测试方法研究[J]. 计算机与数字工程, 2010(9): 84-87.</mixed-citation></ref><ref id="hanspub.42813-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">刘畅, 郭阳. 基于覆盖率驱动的高性能指令集验证方法[J]. 计算机工程, 2014, 40(6): 317-321.</mixed-citation></ref><ref id="hanspub.42813-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">于明. TMS320F281x Digital Signal Processors [J]. 电子测试, 2016(13): 9-12.</mixed-citation></ref><ref id="hanspub.42813-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">孙丽明. TMS320F2812原理及其C语言程序开发[M]. 北京: 清华大学出版社, 2008.</mixed-citation></ref><ref id="hanspub.42813-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">杨珂瑶, 张小芳, 曾雷杰. 基于DSP的嵌入式软件测试方法[J]. 计算机与现代化, 2014(10): 61-65.</mixed-citation></ref><ref id="hanspub.42813-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">边倩, 林智慧. 用C语言实现DSP程序设计的研究[J]. 电子技术与软件工程, 2016(23): 251.</mixed-citation></ref><ref id="hanspub.42813-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">朱业腾. 基于DSP环境下C语言的编程优化[J]. 电子测试, 2017(20): 41+27.</mixed-citation></ref><ref id="hanspub.42813-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">高剑, 冯建科, 郭士瑞. DSP 功能测试方法研究[J]. 计算机与数字工程, 38(9): 28-40.</mixed-citation></ref><ref id="hanspub.42813-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">武乾文, 冯妍. DSP运算方法研究[J]. 电子与封装, 2011(7): 24-28.</mixed-citation></ref><ref id="hanspub.42813-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">王芳. 集成电路芯片测试[M]. 杭州: 浙江大学出版社, 2014.</mixed-citation></ref></ref-list></back></article>