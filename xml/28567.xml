<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2019.81011</article-id><article-id pub-id-type="publisher-id">AAM-28567</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20190100000_28112092.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  一类非奇异H-矩阵快速迭代判定新算法
  A New Algorithm of Fast Iterative Criterion for Non-Singular H-Matrices
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>茜</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>庹</surname><given-names>清</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>吉首大学数学与统计学院，湖南 吉首 </addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>07</day><month>01</month><year>2019</year></pub-date><volume>08</volume><issue>01</issue><fpage>96</fpage><lpage>104</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    通过对迭代矩阵因子和收敛条件的改进，得到一组非奇异H-矩阵新的快速迭代判定算法，并从理论上说明了算法的收敛性。最后，利用Matlab数值仿真实验结果表明所得算法迭代收敛速度更快，稳定性更好。
    By improving the iterative matrix factors and convergence conditions, a new fast iterative criterion algorithm for non-singular H-matrices is obtained, and the convergence of the algorithm is theoretically explained. Finally, the results of Matlab numerical simulation experiments show that the proposed algorithm has faster convergence and better stability. 
  
 
</p></abstract><kwd-group><kwd>非奇异H-矩阵，迭代矩阵，迭代算法, </kwd></kwd-group></article-meta></front><body><sec id="s1"><title>一类非奇异H-矩阵快速迭代判定新算法<sup> </sup></title><p>陈茜，庹清<sup>*</sup></p><p>吉首大学数学与统计学院，湖南 吉首</p><disp-formula id="hanspub.28567-formula11"><graphic xlink:href="//html.hanspub.org/file/11-2620830x5_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2018年12月29日；录用日期：2019年1月15日；发布日期：2019年1月22日</p><disp-formula id="hanspub.28567-formula12"><graphic xlink:href="//html.hanspub.org/file/11-2620830x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>通过对迭代矩阵因子和收敛条件的改进，得到一组非奇异H-矩阵新的快速迭代判定算法，并从理论上说明了算法的收敛性。最后，利用Matlab数值仿真实验结果表明所得算法迭代收敛速度更快，稳定性更好。</p><p>关键词 :非奇异H-矩阵，迭代矩阵，迭代算法</p><disp-formula id="hanspub.28567-formula13"><graphic xlink:href="//html.hanspub.org/file/11-2620830x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/11-2620830x8_hanspub.png" /> <img src="//html.hanspub.org/file/11-2620830x9_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>H-矩阵在计算数学，数学物理，控制论，统计学，弹性力学等众多领域中有着广泛应用。由于H-矩阵广泛的应用范围，其判定方法一直是人们关注的热点问题。因此，判别一个矩阵是否为H-矩阵及讨论其性质如何具有重大意义。由于近年来计算机的发展，国内外许多学者提出不少关于H-矩阵的迭代判定算法 [<xref ref-type="bibr" rid="hanspub.28567-ref1">1</xref>] - [<xref ref-type="bibr" rid="hanspub.28567-ref6">6</xref>] 。文献 [<xref ref-type="bibr" rid="hanspub.28567-ref7">7</xref>] 以细化的思想通过对方阵行下标集及矩阵行和不同的递进式划分，得到了非奇异H-矩阵的若干判定定理和相应的迭代判定算法，增大对H-矩阵判定的范围，改进了文献 [<xref ref-type="bibr" rid="hanspub.28567-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.28567-ref9">9</xref>] 中的结果。本文主要基于文 [<xref ref-type="bibr" rid="hanspub.28567-ref7">7</xref>] 思路，针对文献 [<xref ref-type="bibr" rid="hanspub.28567-ref10">10</xref>] 的判定结果做出改进得到一类迭代判定新算法，同时改进了文献 [<xref ref-type="bibr" rid="hanspub.28567-ref10">10</xref>] 的判定定理范围和文献 [<xref ref-type="bibr" rid="hanspub.28567-ref7">7</xref>] 的部分算法结果，最后用数值仿真结果说明了新算法判定的稳定性和高效性。</p><p>文 [<xref ref-type="bibr" rid="hanspub.28567-ref7">7</xref>] 中给出了如下一个迭代判别算法。</p><p>算法A</p><p>输入：矩阵 A = ( a i j ) ∈ M n (C)</p><p>输出： D = D ( 1 ) D ( 2 ) ⋯ D ( m ) ，如果A是H-矩阵。</p><p>步骤1. 如果 N 2 ( A ) = ϕ 或存在 i ∈ N 使 a i i = 0 ，则“A不是非奇异H-矩阵”，停止；否则，</p><p>步骤2. 设 m = 1 ， A ( 0 ) = A ， D ( 0 ) = I ，</p><p>步骤3. 计算 A ( m ) = A ( m − 1 ) D ( m − 1 ) = ( a i j ( m ) ) ，</p><p>步骤4. 如果 N 1 ( A ( m ) ) = ϕ ，则“A是非奇异H-矩阵”，停止；否则，</p><p>步骤5. 如果 N 2 ( A ( m ) ) = ϕ ，则“A不是非奇异H-矩阵”，停止；否则，</p><p>步骤6. 计算 Λ i ( A ( m ) ) = ∑ t ∈ N , t ≠ i | a i t ( m ) | , ∀ i ∈ N ，</p><p>N 1 ( A ( m ) ) = { i ∈ N : 0 &lt; | a i i ( m ) | ≤ Λ i ( A ( m ) ) } , N 2 ( A ( m ) ) = { i ∈ N : | a i i ( m ) | &gt; Λ i ( A ( m ) ) } ,</p><p>Λ i ( 1 ) ( A ( m ) ) = ∑ t ∈ N 1 ( A ( m ) ) , t ≠ i | a i t ( m ) | + ∑ t ∈ N 2 ( A ( m ) ) | a i t ( m ) | Λ t ( A ( m ) ) | a t t ( m ) | ,     ∀ i ∈ N 1 ( A ( m ) ) ,</p><p>N 1 ( 1 ) ( A ( m ) ) = { i ∈ N : 0 &lt; | a i i ( m ) | ≤ Λ i ( 1 ) ( A ( m ) ) } , N 2 ( 1 ) ( A ( m ) ) = { i ∈ N : Λ i ( A ( m ) ) ≥ | a i i ( m ) | &gt; Λ i ( 1 ) ( A ( m ) ) } , α i ( m ) = ∑ t ∈ N 1 ( A ( m − 1 ) ) , t ≠ i | a i t ( m ) | , β i ( m ) = ∑ t ∈ N 2 ( A ( m − 1 ) ) , t ≠ i | a i t ( m ) | ,     i ∈ N</p><p>步骤7. 令 r = max i ∈ N 2 ( A ( m − 1 ) ) α i ( m ) | a i i ( m ) | − β i ( m ) 。</p><p>步骤8. 如果 | a i i ( m ) | &gt; α i ( m ) + r β i ( m ) , ∀ i ∈ N 1 ( A ( m − 1 ) ) ，则“A是H-矩阵”，停止；否则，</p><p>步骤9. 设 d = ( d i ) ，其中</p><p>d i = { 1                                       i ∈ N 1 ( 1 ) ( A ( m − 1 ) ) Λ i ( 1 ) ( A ( m ) ) | a i i ( m ) |             i ∈ N 2 ( 1 ) ( A ( m − 1 ) ) Λ i ( A ( m ) ) | a i i ( m ) |                   i ∈ N 2 ( A ( m − 1 ) )</p><p>步骤10. D ( m ) = d i a g ( d ) , m = m + 1 ，返回步骤3。</p></sec><sec id="s4"><title>2. 主要结果</title><p>主要基于文 [<xref ref-type="bibr" rid="hanspub.28567-ref7">7</xref>] 的思想，本文通过对文 [<xref ref-type="bibr" rid="hanspub.28567-ref10">10</xref>] 中H-矩阵判定结果的改进得到新的无参数迭代判别算法B，又适当选取参数得到更高效的带参数迭代判定算法C。</p><p>通过对算法中迭代阵因子及收敛条件的改进，下面给出较算法A判定范围更广的一个迭代算法。</p><p>设 M n ( C ) ( M n ( R ) ) 为n阶复(实)矩阵的集合。 A = ( a i j ) ∈ M n ( C ) ，记</p><p>N = { 1 , 2 , ⋯ , n } , Λ i ( A ) = ∑ j ≠ i | a i j | ,   ∀ i ∈ N ,</p><p>N 1 = { i ∈ N | 0 &lt; | a i i | = Λ i ( A ) } , N 2 = { i ∈ N | 0 &lt; | a i i | &lt; Λ i ( A ) } ,</p><p>N 3 = { i ∈ N | | a i i | &gt; Λ i ( A ) } , N = N 1 ⊕ N 2 ⊕ N 3</p><p>r = max i ∈ N 3 { ∑ t ∈ N 2 | a i t | + ∑ t ∈ N 1 | a i t | | a i i | − ∑ t ∈ N 3 , t ≠ i | a i t | } , r 1 = max i ∈ N 3 { ∑ t ∈ N 2 | a i t | + ∑ t ∈ N 1 | a i t | | a i i | − ∑ t ∈ N 3 , t ≠ i | a i t | P t , r ( A ) | a t t | } ,</p><p>P i , r ( A ) = ∑ t ∈ N 1 | a i t | + ∑ t ∈ N 2 | a i t | + r ∑ t ∈ N 3 , t ≠ i | a i t |   ( i ∈ N 3 ) ,</p><p>P i , r 1 ( A ) = ∑ t ∈ N 1 | a i t | + ∑ t ∈ N 2 | a i t | + r 1 ∑ t ∈ N 3 , t ≠ i | a i t | P t , r | a t t |   ( i ∈ N 3 ) ,</p><p>w i = Λ i ( A ) Λ i ( A ) + | a i i |   ( i ∈ N 2 ) , δ = max { r 1 , w i } , h = max i ∈ N 3 { δ ( ∑ t ∈ N 1 | a i t | ) + ∑ t ∈ N 2 | a i t | w t P i , r 1 ( A ) − ∑ t ∈ N 3 , t ≠ i | a i t | P t , r 1 ( A ) | a t t | } .</p><p>S i ( A ) = | a i t | w i − δ ∑ t ∈ N 1 | a i t | − ∑ t ∈ N 2 , t ≠ i | a i t | w t − h ∑ t ∈ N 3 | a i t | P t , r 1 ( A ) | a t t |   ( i ∈ N 2 ) , R i = 1 ∑ t ∈ N 3 | a i t | S i .</p><sec id="s4_1"><title>2.1. 无参数算法</title><p>算法B</p><p>输入：矩阵 A = ( a i j ) ∈ M n (C)</p><p>输出： D = D ( 1 ) D ( 2 ) ⋯ D ( m ) ，如果A是H-矩阵。</p><p>步骤1. 如果 N 3 ( A ) = ϕ 或存在 i ∈ N 使 a i i = 0 ，则“A不是非奇异H-矩阵”，停止；否则，</p><p>步骤2. 设 m = 1 ， A ( 0 ) = A ， D ( 0 ) = I ，</p><p>步骤3. 计算 A ( m ) = A ( m − 1 ) D ( m − 1 ) = ( a i j ( m ) ) ，</p><p>步骤4. 如果 N 2 ( A ( m ) ) = ϕ ，则“A是非奇异H-矩阵”，停止；否则，</p><p>步骤5. 如果 N 3 ( A ( m ) ) = ϕ ，则“A不是非奇异H-矩阵”，停止；否则，</p><p>步骤6. 计算 δ ( m ) , w i ( m ) , h ( m ) , P i , r 1 ( m ) ( A ( m ) ) ，</p><p>步骤7. 如果</p><p>| a i i ( m ) | w i ( m ) &gt; δ ( m ) ∑ t ∈ N 1 ( A ( m ) ) | a i t ( m ) | + ∑ t ∈ N 2 ( A ( m ) ) , t ≠ i | a i t ( m ) | w t ( m ) + h ( m ) ∑ t ∈ N 3 ( A ( m ) ) | a i t ( m ) | P t , r 1 ( m ) | a t t ( m ) | , ∀ i ∈ N 2 ( A ( m ) ) ,</p><p>且 N 1 ( A ( m ) ) = ϕ 或 i ∈ N 1 ( A ( m ) ) ≠ ϕ 时，存在 t ∈ N 2 ( A ( m ) ) ∪ N 3 ( A ( m ) ) ，使得 a i t ( m ) ≠ 0 ，则“A是非奇异H-矩阵”，停止；否则，</p><p>步骤8. 设 d ( m ) = ( d i ( m ) ) ，其中</p><p>d i ( m ) = { δ ( m )                           i ∈ N 1 ( A ( m ) ) w i ( m )                         i ∈ N 2 ( A ( m ) ) h ( m ) P i , r 1 ( m ) | a i i ( m ) |               i ∈ N 3 ( A (m))</p><p>步骤9. D ( m ) = d i a g ( d ( m ) ) , m = m + 1 ，返回步骤3。</p><p>注1：由上述符号可知， δ ( m ) &lt; 1 ， w i ( m ) &lt; 1 。则 ∀ i ∈ N 3 ( A ( m ) ) ， h ( m ) P i , r 1 ( m ) &lt; 1 ，有</p><p>Λ i ( A ( m ) ) | a i i ( m ) | &lt; h ( m ) P i , r 1 ( m ) | a i i ( m ) | .</p><p>所以，算法B具有比算法A更少的迭代次数。</p><p>在算法B的基础上，我们选取了适当的参数得到了下述算法C，它在一定程度上扩大了算法B的判定范围，修正了它判定结果的准确率，减少了运行迭代次数及时间。</p></sec><sec id="s4_2"><title>2.2. 带参数算法</title><p>算法C</p><p>输入：矩阵 A = ( a i j ) ∈ M n (C)</p><p>输出： D = D ( 1 ) D ( 2 ) ⋯ D ( m ) ，如果A是H-矩阵。</p><p>步骤1. 如果 N 3 ( A ) = ϕ 或存在 i ∈ N 使 a i i = 0 ，则“A不是非奇异H-矩阵”，停止；否则，</p><p>步骤2. 设 m = 1 ， A ( 0 ) = A ， D ( 0 ) = I ，</p><p>步骤3. 计算 A ( m ) = A ( m − 1 ) D ( m − 1 ) = ( a i j ( m ) ) ，</p><p>步骤4. 如果 N 2 ( A ( m ) ) = ϕ ，则“A是非奇异H-矩阵”，停止；否则，</p><p>步骤5. 如果 N 3 ( A ( m ) ) = ϕ ，则“A不是非奇异H-矩阵”，停止；否则，</p><p>步骤6. 计算 δ ( m ) , w i ( m ) , h ( m ) , P i , r 1 ( m ) ( A ( m ) ) ，</p><p>步骤7. 如果</p><p>| a i i ( m ) | w i ( m ) &gt; δ ( m ) ∑ t ∈ N 1 ( A ( m ) ) | a i t ( m ) | + ∑ t ∈ N 2 ( A ( m ) ) , t ≠ i | a i t ( m ) | w t ( m ) + h ( m ) ∑ t ∈ N 3 ( A ( m ) ) | a i t ( m ) | P t , r 1 ( m ) | a t t ( m ) | , ∀ i ∈ N 2 ( A ( m ) ) ,</p><p>且 N 1 ( A ( m ) ) = ϕ 或 i ∈ N 1 ( A ( m ) ) ≠ ϕ 时，存在 t ∈ N 2 ( A ( m ) ) ∪ N 3 ( A ( m ) ) ，使得 a i t ( m ) ≠ 0 ，则“A是非奇H-矩阵”，停止；否则，</p><p>步骤8. 设 d ( m ) = ( d i ( m ) ) ，其中</p><p>d i ( m ) = { δ ( m )                                           i ∈ N 1 ( A ( m ) ) w i ( m )                                         i ∈ N 2 ( A ( m ) ) h ( m ) P i , r 1 ( m ) | a i i ( m ) | + ε ( m )             i ∈ N 3 ( A (m))</p><p>ε ( m ) = { 1 q min S i ( m )               ∃ i ∈ N 2 ( A ( m ) ) , ∑ t ∈ N 3 | a i t ( m ) | = 0 min R i ( m )                   ∀ i ∈ N 2 ( A ( m ) ) , ∑ t ∈ N 3 | a i t ( m ) | ≠ 0</p><p>其中 q &gt; 1 。</p><p>步骤9. D ( m ) = d i a g ( d ( m ) ) , m = m + 1 ，返回步骤3。</p></sec></sec><sec id="s5"><title>3. 算法收敛性分析</title><p>下面通过定理1给出算法B作为H-矩阵迭代判定的收敛性分析。</p><p>定理1. 矩阵 A = ( a i j ) ∈ C n &#215; n 是H-矩阵当且仅当算法B经有限次迭代生成一个严格对角占优矩阵而停止。</p><p>证明 假设矩阵A是非负矩阵。用 A ( m − 1 ) 和 A ( m ) 表示算法A的迭代过程中前一次和当前次迭代矩阵，其中m是某一迭代次数。</p><p>充分性：假设算法B经过m次迭代停止生成一个严格对角占优矩阵，则得到一个严格对角占优矩阵 A ( m ) = A ( 0 ) D ( 1 ) D ( 2 ) ⋯ D ( m − 1 ) = A D ，其中 D = D ( 0 ) D ( 1 ) ⋯ D ( m − 1 ) 是正对角矩阵。显然此时A是H-矩阵。</p><p>必要性：令A是H-矩阵。利用反证法，假设算法B经过有限次迭代不停止。由算法B可知 A ( m ) = A ( 0 ) D ( 1 ) D ( 2 ) ⋯ D ( m − 1 ) = A D ，其中 D = D ( 0 ) D ( 1 ) ⋯ D ( m − 1 ) 是对角元小于1的正对角矩阵，则</p><p>A = A ( 0 ) = A ( 1 ) ≥ ⋯ ≥ A ( m ) ≥ ⋯ ≥ 0 ,</p><p>即无穷矩阵序列 { A ( m ) } 单调递减且有界，因此有</p><p>lim m → ∞ A ( m ) = B ≥ 0 ,</p><p>其中 B = A F ， F = D ( 1 ) D ( 2 ) ⋯ D ( m ) ⋯ 是正对角矩阵。</p><p>接下来，要证明</p><p>lim m → ∞ N 3 ( A ( m ) ) = N 3 ( B ) = ϕ .</p><p>再次利用反证法，假设 lim m → ∞ N 3 ( A ( m ) ) ≠ ϕ ，则 1 − δ ( m ) &gt; 0 ， 1 − w i ( m ) &gt; 0 ， 1 − h ( m ) P i , r 1 ( m ) | a i i ( m ) | &gt; 0 且存在某一 i ∈ N 3 ( A ( m ) ) 及常量 ε 1 , ε 2 , ε 3 使得</p><p>| a i i ( m ) | ( 1 − δ ( m ) ) &gt; ε 1 , | a i i ( m ) | ( 1 − w i ( m ) ) &gt; ε 2 , | a i i ( m ) | ( 1 − h ( m ) P i , r 1 ( m ) | a i i ( m ) | ) &gt; ε 3 , m = 1 , 2 , 3 , ⋯</p><p>令 ε 0 = min { ε 1 , ε 2 , ε 3 } 。</p><p>由算法B，有</p><p>0 &lt; a i i ( m + 1 ) = a i i ( m ) δ ( m ) &lt; a i i ( m ) − ε 1 &lt; a i i ( m ) − ε 0 ,</p><p>0 &lt; a i i ( m + 1 ) = a i i ( m ) w i ( m ) &lt; a i i ( m ) − ε 2 &lt; a i i ( m ) − ε 0 ,</p><p>0 &lt; a i i ( m + 1 ) = a i i ( m ) h ( m ) P i , r 1 ( m ) | a i i ( m ) | &lt; a i i ( m ) − ε 3 &lt; a i i ( m ) − ε 0 .</p><p>因此</p><p>a i i ( 0 ) = a i i ( 1 ) &gt; a i i ( 2 ) + ε 0 &gt; ⋯ &gt; a i i ( m ) + ( m − 1 ) ε 0 ,</p><p>令 m → ∞ ，则 a i i → ∞ ，产生矛盾。故</p><p>lim m → ∞ N 3 ( A ( m ) ) = N 3 ( B ) = ϕ .</p><p>这说明矩阵B不是H-矩阵。另一方面，由于A是不可约H-矩阵，则存在一个正对角矩阵E使得 A E = B ( F − 1 E ) 是严格对角占优的。易知， F − 1 E 仍是正对角矩阵，从而可得矩阵B是H-矩阵，产生矛盾。故算法B经有限次迭代停止。</p><p>算法A是利用对矩阵下标集的迭代细分来划分其占优与非占优指标集，一定程度上增大了它判定的范围，但迭代过程相对繁琐导致运行迭代次数与时间相对增加。算法B是构造新的迭代因子得到的新算法，由更小的对角阵迭代因子将使得算法运行的迭代次数和时间相比算法A需要的更少，且乘积因子对不等式的放缩使得判定范围比前者更广。在算法B基础上添加参数得到算法C，相比前两个算法运行的迭代次数和时间更小、判定范围更广，且在一定程度上修正了前两个算法判定结果的正确率，后面的数值仿真实验结果也说明了这一点。</p></sec><sec id="s6"><title>4. 数值仿真</title><p>本文通过数值仿真实验测试比较了3个算法程序的性能，测试中随机选取近年来H-矩阵迭代算法相关论文的18个真实样本。综合实例的适用度，在带参数的算法C中q的取值为q = 4。实验机器选用联想台式机，具体配置：(Inter(R)Core(TM)i5-4590 CPU@3.30GHz，双核处理器8.00G内存64位windows操作系统)，用Matlab R2013a语言编程实现。</p><p>根据算法A、B、C对不同样本运行产生的迭代次数，我们得到了数值仿真结果如图1所示(横坐标为样本编号，纵坐标为迭代次数)。由图1可以看出三个算法中算法C产生的迭代次数相对是最小的。针对算法有无参数对算法B、C产生的迭代次数作出对比可以看出，算法C相较算法B产生的迭代次数相对较少。综合图像来看，算法A的迭代次数明显高于后两个算法，且对某些样本实例的判定次数偏高，出错率也是三者中最高。算法B、C产生的次数相对较少且稳定在低次数段，两者的出错率相比算法C更低。</p><p>图1. 算法迭代结果曲线</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1"><xref ref-type="table" rid="table">Table </xref>1</xref></label><caption><title> Resulting data of Algorithm runtim</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >样本</th><th align="center" valign="middle" >算法A</th><th align="center" valign="middle" >算法B</th><th align="center" valign="middle" >算法C</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0.036</td><td align="center" valign="middle" >0.03</td><td align="center" valign="middle" >0.046</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0.046</td><td align="center" valign="middle" >0.012</td><td align="center" valign="middle" >0.019</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >0.038</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >0.037</td><td align="center" valign="middle" >0.026</td><td align="center" valign="middle" >0.012</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >0.039</td><td align="center" valign="middle" >0.021</td><td align="center" valign="middle" >0.0133</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >0.039</td><td align="center" valign="middle" >0.025</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >0.03</td><td align="center" valign="middle" >0.047</td><td align="center" valign="middle" >0.018</td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >0.041</td><td align="center" valign="middle" >0.012</td><td align="center" valign="middle" >0.024</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >0.031</td><td align="center" valign="middle" >0.025</td><td align="center" valign="middle" >0.012</td></tr><tr><td align="center" valign="middle" >10</td><td align="center" valign="middle" >0.045</td><td align="center" valign="middle" >0.022</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >11</td><td align="center" valign="middle" >0.038</td><td align="center" valign="middle" >0.023</td><td align="center" valign="middle" >0.02</td></tr><tr><td align="center" valign="middle" >12</td><td align="center" valign="middle" >0.045</td><td align="center" valign="middle" >0.014</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >13</td><td align="center" valign="middle" >0.036</td><td align="center" valign="middle" >0.016</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >14</td><td align="center" valign="middle" >0.039</td><td align="center" valign="middle" >0.021</td><td align="center" valign="middle" >0.01</td></tr><tr><td align="center" valign="middle" >15</td><td align="center" valign="middle" >0.03</td><td align="center" valign="middle" >0.018</td><td align="center" valign="middle" >0.018</td></tr><tr><td align="center" valign="middle" >16</td><td align="center" valign="middle" >0.047</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0.021</td></tr><tr><td align="center" valign="middle" >17</td><td align="center" valign="middle" >0.039</td><td align="center" valign="middle" >0.034</td><td align="center" valign="middle" >0.009</td></tr><tr><td align="center" valign="middle" >18</td><td align="center" valign="middle" >0.039</td><td align="center" valign="middle" >0.032</td><td align="center" valign="middle" >0.017</td></tr><tr><td align="center" valign="middle" >平均值</td><td align="center" valign="middle" >0.0386</td><td align="center" valign="middle" >0.0210</td><td align="center" valign="middle" >0.0133</td></tr></tbody></table></table-wrap><p>表1. 算法运行时间结果数据</p><p>根据以上3个算法对不同实例产生的运行时间，得到运行时间表1。对算法产生的运行时间，运用SPSS软件对其做单因素方差分析。由其中的一项输出结果表2，单因素方差分析表，可以看出方差检验统计量F = 31.120，相应的sig值等于0.000，小于显著性0.05，因此我们认为不同算法的运行时间有显著性差异。再根据表1的结果可以说明算法A运行的时间与其他两个算法有较大差异，算法A花费的时间最多。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2"><xref ref-type="table" rid="table">Table </xref>2</xref></label><caption><title> One-way analysis of variance (ANOVA</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >平方和</th><th align="center" valign="middle" >自由度</th><th align="center" valign="middle" >均方</th><th align="center" valign="middle" >F</th><th align="center" valign="middle" >显著性</th></tr></thead><tr><td align="center" valign="middle" >组间</td><td align="center" valign="middle" >0.006</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0.003</td><td align="center" valign="middle" >31.120</td><td align="center" valign="middle" >0.000</td></tr><tr><td align="center" valign="middle" >组内</td><td align="center" valign="middle" >0.005</td><td align="center" valign="middle" >51</td><td align="center" valign="middle" >0.000</td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td></tr><tr><td align="center" valign="middle" >总计</td><td align="center" valign="middle" >0.011</td><td align="center" valign="middle" >53</td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td><td align="center" valign="middle" ></td></tr></tbody></table></table-wrap><p>表2. 单因素方差分析表</p><p>为了检验不同的算法对不同实例结果判定的正确性，得到相应算法的正确率表3。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3"><xref ref-type="table" rid="table">Table </xref>3</xref></label><caption><title> <xref ref-type="table" rid="table">Table </xref>of Algorithmic correct rat</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >A</th><th align="center" valign="middle" >B</th><th align="center" valign="middle" >C</th></tr></thead><tr><td align="center" valign="middle" >正确率</td><td align="center" valign="middle" >72.22%</td><td align="center" valign="middle" >88.89%</td><td align="center" valign="middle" >94.44%</td></tr></tbody></table></table-wrap><p>表3. 算法正确率表</p><p>考虑到算法运行产生的迭代次数、判定结果的正确率和时间对算法的重要性不同，运用层次分析法做出了比较矩阵，并在matlab上实现依次得到它们的权重系数为0.5390、0.2973、0.1638。根据上述结果，对本文中3个算法做出算法综合评估表4。</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table">Table </xref>4</label><caption><title> Data of Algorithmic comprehensive performanc</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >算法A</th><th align="center" valign="middle" >算法B</th><th align="center" valign="middle" >算法C</th></tr></thead><tr><td align="center" valign="middle" >迭代次数</td><td align="center" valign="middle" >7.69</td><td align="center" valign="middle" >1.31</td><td align="center" valign="middle" >1.58</td></tr><tr><td align="center" valign="middle" >错误率</td><td align="center" valign="middle" >0.2778</td><td align="center" valign="middle" >0.1111</td><td align="center" valign="middle" >0.0556</td></tr><tr><td align="center" valign="middle" >运行时间</td><td align="center" valign="middle" >0.0386</td><td align="center" valign="middle" >0.021</td><td align="center" valign="middle" >0.0133</td></tr><tr><td align="center" valign="middle" >综合性能</td><td align="center" valign="middle" >4.2338</td><td align="center" valign="middle" >0.7425</td><td align="center" valign="middle" >0.8703</td></tr></tbody></table></table-wrap><p>表4. 算法综合性能数据</p><p>注2：本文在实例判定结果上，将运行判定结果出错或者无限循环结果在迭代次数中记迭代次数为0次，在正确率判定中判定为结果错误。在运行迭代次数及运行时间的数据处理中，将出错结果的迭代次数和时间分别用其它实例的平均迭代次数和时间替代，以减少对其它数据的影响。</p></sec><sec id="s7"><title>5. 结论</title><p>从上述数值仿真分析结果来看，算法B的综合性能值是最低的，即算法B从迭代产生的次数、时间和正确率综合来看相较其他算法是最好的。从算法的判定式语句来看(即步骤7或者步骤8)，算法C对H-矩阵的判定范围较算法B更广，且这两个算法判定H-矩阵的范围亦优于算法A的判定范围。其次，综合性能值较低的带参数算法C，它对实例判定结果的准确度最高，在对准确度的需求最高的情况下，它无疑是最好的选择。总体来看，得到的两个新算法不论在迭代产生的次数、时间还是正确率方面，相较文 [<xref ref-type="bibr" rid="hanspub.28567-ref7">7</xref>] 的算法A都是有显著优势的。</p></sec><sec id="s8"><title>致谢</title><p>感谢王海波等同学在算法数值仿真实验中所做的工作。</p></sec><sec id="s9"><title>基金项目</title><p>国家自然科学基金(11461027)和湖南省教育厅科研基金(16A173)。</p></sec><sec id="s10"><title>文章引用</title><p>陈 茜,庹 清. 一类非奇异H-矩阵快速迭代判定新算法A New Algorithm of Fast Iterative Criterion for Non-Singular H-Matrices[J]. 应用数学进展, 2019, 08(01): 96-104. https://doi.org/10.12677/AAM.2019.81011</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.28567-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Ojiro, K., Niki, H. and Usui, M. (2003) A New Criterion for the H-Matrix Property. Journal of Computational and Ap-plied Mathematics, 150, 293-302. https://doi.org/10.1016/S0377-0427(02)00666-0</mixed-citation></ref><ref id="hanspub.28567-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Kohno, T., et al. (2000) An Iterative Test for H-Matrices. Journal of Computational and Applied Mathematics, 115, 349-355. https://doi.org/10.1016/S0377-0427(99)00303-9</mixed-citation></ref><ref id="hanspub.28567-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Liu, J.Z. and He, A.Q. (2006) A New Algorithmic Charac-terization of H-Matrices. Applied Mathematics and Computation, 183, 603-609. https://doi.org/10.1016/j.amc.2006.05.100</mixed-citation></ref><ref id="hanspub.28567-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Liu, J.Z. and He, A.Q. (2007) An Iterleaved Iterative Criterion for H-Matrices. Applied Mathematics and Computation, 186, 727-734. https://doi.org/10.1016/j.amc.2006.08.031</mixed-citation></ref><ref id="hanspub.28567-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">周伟伟, 徐仲, 等. 非奇H-矩阵细分迭代判定准则[J]. 数值计算与计算机应用, 2011, 32(4): 293-300.</mixed-citation></ref><ref id="hanspub.28567-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">张骁, 陆全, 等. 非奇H-矩阵的一组迭代判别法[J]. 2015, 36(1): 59-68.</mixed-citation></ref><ref id="hanspub.28567-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">丁碧文, 刘建州. H-矩阵的判别法及其迭代算法[J]. 应用数学学报, 2013, 36(5): 935-948.</mixed-citation></ref><ref id="hanspub.28567-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Gao, Y.-M. and Wang, X.-H. (1992) Criteria for Generalized Diagonally Dominant Matrices and M-Matrices. Linear Algebra and its Applications, 169, 257-268. https://doi.org/10.1016/0024-3795(92)90182-A</mixed-citation></ref><ref id="hanspub.28567-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">沈光星. 非奇异H阵的新判据[J]. 工程数学学报, 1998(4): 23-29.</mixed-citation></ref><ref id="hanspub.28567-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">庹清, 朱砾, 刘建州. 一类非奇异H-矩阵判定的新条件[J]. 计算数学, 2008(2): 177-182.</mixed-citation></ref></ref-list></back></article>