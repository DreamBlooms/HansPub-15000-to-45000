<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2017.76072</article-id><article-id pub-id-type="publisher-id">CSA-21175</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20170600000_56843603.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于ThinkPHP框架的毕业生招聘系统
  Graduate Recruiting System Based on ThinkPHP Framework
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>湛宇</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>冯</surname><given-names>思玲</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>路</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>海南大学信息科学技术学院，海南 海口</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>14</day><month>06</month><year>2017</year></pub-date><volume>07</volume><issue>06</issue><fpage>615</fpage><lpage>631</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   详细介绍了ThinkPHP框架的工作原理，Bootstrap框架以及AJAX技术，将实现MVC设计模式的ThinkPHP框架引入到毕业生招聘系统的开发中，在前端使用Bootstrap开发响应式布局网页，利用AJAX技术实现无刷新更新页面，并结合具体的实例阐述了应用ThinkPHP框架实现MVC架构的设计模式，体现了软件框架在开发应用中的优越性，应用简单，开发效率高。 The working principle of the ThinkPHP framework, Bootstrap framework and AJAX technology are introduced in detail, and the ThinkPHP framework that implements the MVC design pattern is introduced into the development of graduate recruitment system. The Bootstrap is used to develop a responsive layout page at the front-end; AJAX technology is used to achieve no Refresh update page, and concrete examples are combined to illustrate the application of the ThinkPHP framework to implement the MVC architecture design pattern, which embodies the superiority of the software framework in the development and application. The application is simple and the development efficiency is high.
    
  
 
</p></abstract><kwd-group><kwd>MVC，招聘系统，ThinkPHP，Bootstrap，AJAX, MVC</kwd><kwd> Recruitment System</kwd><kwd> ThinkPHP</kwd><kwd> Bootstrap</kwd><kwd> Ajax</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于ThinkPHP框架的毕业生招聘系统<sup> </sup></title><p>王湛宇，冯思玲<sup>*</sup>，李路</p><p>海南大学信息科学技术学院，海南 海口</p><disp-formula id="hanspub.21175-formula78"><graphic xlink:href="http://html.hanspub.org/file/13-1540794x5_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2017年6月8日；录用日期：2017年6月25日；发布日期：2017年6月28日</p><disp-formula id="hanspub.21175-formula79"><graphic xlink:href="http://html.hanspub.org/file/13-1540794x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>详细介绍了ThinkPHP框架的工作原理，Bootstrap框架以及AJAX技术，将实现MVC设计模式的ThinkPHP框架引入到毕业生招聘系统的开发中，在前端使用Bootstrap开发响应式布局网页，利用AJAX技术实现无刷新更新页面，并结合具体的实例阐述了应用ThinkPHP框架实现MVC架构的设计模式，体现了软件框架在开发应用中的优越性，应用简单，开发效率高。</p><p>关键词 :MVC，招聘系统，ThinkPHP，Bootstrap，AJAX</p><disp-formula id="hanspub.21175-formula80"><graphic xlink:href="http://html.hanspub.org/file/13-1540794x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2017 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="http://image.hanspub.org:8080\Html/htmlimages\1-2890033x\e70a10f1-7c93-45ea-9603-062237856e4b.png" /><img src="http://image.hanspub.org:8080\Html\htmlimages\1-2890033x\e898c85e-ffc4-45c9-b817-14224a4d6960.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>当前的网络技术飞速发展，生活的方方面面都与互联网有着一定的关系，联系方式由原来的书信变成了现在的电邮，支付手段不再局限于原来的金银纸币，电子支付也变成了常用的付款方式。可以说网络的发展方便了生活。在人才的竞争中，也不再局限于人才招聘市场的现场招聘，网络招聘异军突起，成为了各大商家和广大人才的交流中心。依凭着互联网的互通，快捷，网络招聘的优势突出，其低成本，信息量大，搜索便利成为了网招流行的关键因素。</p><p>由此可见，构建一个方便，快捷并且安全的网络招聘平台的必要性。本文就是基于以上原因，简化了部分流程。着重去实现了网络招聘中的应试者和招聘单位的需求，使得各方都能够及时的查询到自己心仪的职位，招聘到公司需要的人才，大大节省了人才招聘和应招时的花费。同时，本系统应用了当前较为流行的ThinkPHP框架和AJAX技术，在Bootstrap框架下构建的网页能够在各种平台上显示友好，充分展现了响应式布局的优势。</p></sec><sec id="s4"><title>2. 系统实现的关键技术</title><sec id="s4_1"><title>2.1. ThinkPHP框架</title><p>ThinkPHP作为一款国产的PHP框架，以其快速、兼容和简洁的优势成为最为热门的MVC框架之一，支持多种服务器环境和多种数据库连接，简单易用，高度自动化的CURD操作极大简化了数据库操作，并且其开发效率高极大减轻了开发人员的负担。</p><p>在开发时，可以通过编写、配置入口文件，自动生成项目的目录 [<xref ref-type="bibr" rid="hanspub.21175-ref1">1</xref>] 。清晰的项目结构目录为项目开发提供了很多便利。Conf目录下储存配置文件，可用于对一些参数的更改，项目数据库的连接可以通过对配置文件的相关参数进行赋值即可完成对数据库的连接。Controller目录下储存对MVC架构中的控制器文件，负责调度整个程序的运转。Model目录下存储对MVC架构中的模型文件，主要负责处理业务数据。View目录下储存MVC架构中的视图文件，负责呈现界面。</p><p>ThinkPHP框架的开发流程为：</p><p>1) 项目命名并创建项目的入口文件</p><p>2) 完成项目的配置</p><p>3) 创建控制器类</p><p>4) 创建模型类</p><p>5) 创建模板文件</p><p>6) 运行和调试</p><p>其项目的目录结构如图1。</p></sec><sec id="s4_2"><title>2.2. MySQL数据库</title><p>关系型数据库管理系统有很多，其中MySQL就是其中之一。关系型数据库是一种将数据保存在不同的表中，增强了数据的组织性，提高了数据的灵活性。在数据库语言的应用上，MySQL应用的是用于访问数据库的最常用的标准化语言——SQL。这一数据库的特点突出，其体积小，源码开放，总体拥有成本低成为了一般中小型网站开发的首选数据库。其系统特性有：</p><p>1) MySQL源码开放，使用是不需要支付其他费用。</p><p>2) 支持Linux、Mac OS、Solaris、Windows等多种操作系统。</p><p>3) 为多种编程语言提供了API。这些编程语言包括C、C++、Python、Java、Perl、PHP、Eiffel、Ruby和.NET等。</p><p>4) 对于多线程的支持使得其能很好的利用CPU资源。</p><p>5) 对于查询算法的优化，能够很好的提高查询的效率。</p><p>图1. 项目目录结构图</p><p>6) 运用起来较为灵活，能单独运行于客户端服务器网络环境中，也可以作为嵌入到其他的软件中的一个库。</p><p>7) 提供多语言支持，常见的编码如中文的GB2312、BIG5，日文的Shift-JIS等都可以用作数据表名和数据列名。</p><p>8) 对于PHP有极好的支持。</p><p>9) 管理、检查和优化数据库均有提供管理工具。</p><p>10) 能够处理数据量极大的大型数据库。</p><p>11) 支持多种存储引擎。</p></sec><sec id="s4_3"><title>2.3. Bootstrap框架</title><p>Bootstrap作为一款前端框架，以其优秀的响应式布局设计，丰富的HTML和CSS组件，JQuery插件等特点被广泛应用于前端页面的建设。</p><p>一方面它有精美的预设样式和UI设计。丰富的class样式，给table，nav等标签赋予了生动的表现，其内置的Glyphicons字体图标可以免费使用，应用便利。内置的JQuery插件可以通过data属性就能轻松使用，省去了写一行js代码的繁琐。</p><p>另一方面它在不同的设备和平台上都有很好的显示风格。基于Bootstrap创建的网站和应用能够有效地适配手机、平板、PC设备。</p></sec><sec id="s4_4"><title>2.4. AJAX技术</title><p>AJAX作为一种创建交互式网页应用的网页开发技术，能够快速创建动态网页，只需要通过后台与服务器及进行少量的数据交换，即可在不刷新整个网页的情况下，实现网页的异步更新。AJAX技术使得Internet的应用程序更简洁，更高效。其工作方式如下图2：</p><p>图2. AJAX工作示意图</p></sec></sec><sec id="s5"><title>3. 系统需求分析</title><sec id="s5_1"><title>3.1. 系统概述</title><p>当前大学生求职问题已成为了当前社会的热点问题，全国高校面临的重点问题也是如何提高毕业生的就业率。过去的大学生就业主要就是通过现场的招聘会和人才交流会的途径来实现的，在互联网高速发展的今天，这一途径已经不能满足日益增长的毕业生数目，另外由于招聘会的限期和地域限制，让很多毕业生错过了与招聘单位的交流机会，一对一的交流对于毕业生和招聘单位尤为重要，所以，在线的交流平台，一对一的招聘网站就显得尤为重要，因其便捷，信息量大和即时性强的特点，成为了现今较为流行的人才招聘手段 [<xref ref-type="bibr" rid="hanspub.21175-ref2">2</xref>] 。</p></sec><sec id="s5_2"><title>3.2. 系统业务需求分析</title><sec id="s5_2_1"><title>3.2.1. 招聘信息发布流程</title><p>招聘系统要运行起来的首要条件是应该有企业发布招聘信息，然后待就业者才能去选择自己适合的岗位提交简历，在企业发布招聘信息之前，应该先有用人部门向人事反映需要应聘者需要达到的一些要求，比如说年龄，学历，工作经验等，接下来就是要确定招聘信息的内容，比如：单位名称，招聘的起止时间，需要的人数等。提交之后还应该给商家予以修改的机会，方便随时修改招聘条件，以便满足从业需求，最后提交审核。其示意图如图3所示：</p><p>图3. 招聘流程图</p></sec><sec id="s5_2_2"><title>3.2.2. 应聘流程</title><p>当企业发布了招聘信息之后，应聘者应该能即时的看到招聘信息，并编辑自己的简历，投递报名。应聘者首先会浏览网站上的招聘信息，根据自己想要找到的职位和自己的个人状况来选择心仪的公司，根据其招聘要求填写简历，最后提交审核，如果需要修改简历，可随时进行查看改动，并可以即时的查看自己的审核状态。其示意图如图4所示。</p></sec><sec id="s5_2_3"><title>3.2.3. 审核的流程</title><p>定期检查公司所发布的招聘公告，并当到达招聘信息的截止日期时，查看人事部门收到的所有简历，进行筛选，通过用人部门对简历的筛选，选出待面试的应聘者，并将面试通知发送给应聘者，如果应聘者面试通过，待招聘人数达标之后，删去招聘公告。其示意图如图5所示。</p></sec><sec id="s5_2_4"><title>3.2.4. 系统前台业务流程</title><p>访客浏览毕业生招聘系统时，如果有账号可以直接登陆，反之，则需进行注册，根据个人用户和商家用户来个性化注册界面。注册登陆之后，可以根据自己的用户类型来显示特定的界面。管理员登陆毕业生招聘系统后，显示其数据库中的现有的商家和个人用户的相关信息，可以进行管理。其示意图如图6所示。</p><p>图4. 应聘流程图</p><p>图5. 审核流程图</p><p>图6. 前台业务流程图</p></sec></sec><sec id="s5_3"><title>3.3. 系统功能需求分析</title><sec id="s5_3_1"><title>3.3.1. 招聘管理功能需求</title><p>招聘管理作为整个系统的核心内容，可将其大致分为两个部分：</p><p>1) 招聘信息提交，发布和审核：当公司的用人部门需要招聘人才时，可以在公司的招聘系统中发布招聘公告，由公司的人事部门审核。之后需要修改或者拓展的时候，还可以随时进行更改。</p><p>2) 人才筛选：人才筛选管理功能是基于发布了招聘公告之后，对应聘者投递的简历所进行的一系列的操作。其过程是由公司的人事部门进行的，筛选完成之后，分别对通过了筛选的应聘者发布面试通知。</p></sec><sec id="s5_3_2"><title>3.3.2. 人才资料管理功能需求</title><p>人才资料主要管理与求职者相关的信息，分为人才的分类管理，人才基本信息管理，综合查询等。</p><p>1) 人才分类管理：由于每个公司招聘的人才方向不一，在庞大的数据库中筛选时会十分费时，为了有效对数据进行筛选分析，管理维护，系统设置有人才分类模块，人才分类信息可以根据需求由用户自定义进行维护。</p><p>2) 人才基本信息管理：这个功能的实现主要有赖于应聘者自己对自己的个人信息进行的更新和维护，另一方面，也可以由管理员进行操作，对违规的信息进行定时的清理。</p><p>3) 综合查询：这部分主要是为了在数据不断扩大之后，方便根据不同的条件来进行查询，比如说：性别，技能，创建时间等。</p></sec><sec id="s5_3_3"><title>3.3.3. 权限管理功能需求</title><p>由于整个系统有三种人员要登陆使用，分别是发布招聘公告的公司，应聘职位的毕业生和管理员。所以有必要通过一定的手段来区分登陆用户的身份。</p><p>1) 角色和权限管理：权限控制是基于不同的角色而设定的，而角色又是基于不同的权限，角色具有系统操作的权限，不同的角色会有不同的权限，这些在登陆的时候应该基于判断，从而赋予不同系统管理功能。</p><p>2) 用户和角色管理控制：在新增用户的时候，应该分出是商家注册还是毕业生(应聘者)注册，并在数据库中给予给定的标识，这样在下次登陆的时候就能由系统根据其角色来提供特定的系统操作功能。</p></sec></sec></sec><sec id="s6"><title>4. 系统总体设计</title><sec id="s6_1"><title>4.1. 系统总体模块设计</title><p>采用结构化设计方法来实现系统总体功能，将整个系统划分为几个功能模块，正确处理模块之间的关系和模块内部的联系，明确其数据的调用关系和联系，通过对一个个模块的具体实现来完成整个系统的功能。其系统功能图如图1所示。</p><p>本系统主要按照用户的不同分为了三个模块：毕业生模块，商家模块和管理员模块。其中毕业生模块主要实现的功能有查看已经投递的简历，填写/管理个人简历和浏览商家的招聘公告等，商家模块主要实现的功能有填写/管理招聘公告，查看已经收到的简历和对应聘者发送面试/落选通知等，管理员模块主要实现的功能有管理毕业生信息，管理公司信息和添加/删除用户等。其示意图如图7所示：</p><p>下面分述其具体的模块内容：</p><p>1) 毕业生模块：</p><p>当毕业生注册为系统用户后，毕业生模块提供了用户一系列的操作，如毕业生可以通过这个模块创建简历，投递简历，搜索职位等。用户基本资料管理，简历管理，岗位查询都应该是这一模块的组成成分。</p><p>图7. 系统功能图</p><p>求职者的基本资料：个人求职者可以查看和修改自己的个人信息，包括用户名，性别，出生日期，联系方式等。</p><p>求职者的简历管理：这里可以让求职者方便的创建自己的简历，在填写时，需要的信息有个人基本信息，教育背景，工作经验等。系统对简历编号，方便管理，在简历创建成功之后，用户可以对简历进行查看，修改，删除等操作。</p><p>求职岗位的查询：求职者可以在这个模块查看近期企业发布的招聘公告，求职者可以通过企业名称，职位名称，工作地点等来筛选自己想要的岗位 [<xref ref-type="bibr" rid="hanspub.21175-ref3">3</xref>] 。</p><p>2) 企业会员模块：</p><p>当企业用户在首页完成注册操作之后，就可以使用企业会员模块，企业通过此模块可以进行的操作有：发布企业近期招聘公告，管理发布的招聘公告，查询求职者的信息等。企业会员模块包含的功能有：管理企业基本信息，管理招聘公告，查询求职者信息等。</p><p>管理企业基本信息：企业通过该功能模块时，可以对企业的基本信息进行修改。基本信息包括：企业名称，所在地，联系人，联系方式等。</p><p>管理招聘公告：企业的招聘公告由企业的人事部门来发布，在发布之后可以随时进行修改，更新，以便应聘者可以及时了解到企业的新情况。</p><p>查询求职者信息：企业可以通过查询模块来实现对近期收到简历的筛选，如可以根据求职者的性别，学历，面试岗位等来搜索。</p><p>3) 管理员管理模块：</p><p>该模块是对整个系统网站进行控制和设置的一个平台。管理员在这个模块中可以进行的操作有：管理个人会员信息、管理企业会员信息，添加/删除用户，对系统的基本数据进行分析等。</p><p>管理个人会员信息：通过这个模块，管理员可以对已经注册的个人会员信息进行查询、审核、删除等操作。</p><p>管理里企业会员信息：通过这个模块，管理员可以对已经注册了的企业的信息进行查询、审核、删除等操作。</p><p>管理用户：这里管理员可以增加用户，也可以删除用户，通过这个模块可以增加用户，也可以删除违规的用户。</p><p>数据分析：可以在管理员模块中加入一个数据分析的模块，来进行一些简单的数据分析，比如，通过折线图来查看最近的个人用户注册的情况等。</p></sec><sec id="s6_2"><title>4.2. 数据库设计</title><p>由系统的需求分析，在这里共构建了5个数据表，分别是记录用户基本信息的md-userInfo，个人简历信息的md-resume，公司基本信息的md-compInfo，职位基本信息md-workInfo的和应聘职位记录表md-applyInfo。</p><p>得到系统数据库的概念模型为图8所示。</p><p>得到系统数据库逻辑模型为：</p><p>1) 用户基本信息：{ID，类型，用户名，密码，性别，年龄，邮箱，电话，更新时间，添加时间}。</p><p>2) 个人简历基本信息：{ID，教育程度，工作经验，个人简历，专业技能}。</p><p>3) 公司基本信息：{ID，类型，名称，密码，邮箱，电话，邮编，地址}。</p><p>4) 职位基本信息表：{ID，职位名，人数，联系人，联系方式，描述}。</p><p>5) 应聘职位记录表：{职位ID，个人简历ID，有无参加面试资格}。</p><p>数据表结构图如图9所示。</p></sec></sec><sec id="s7"><title>5. 系统实现</title><sec id="s7_1"><title>5.1. 系统的基础配置</title><sec id="s7_1_1"><title>5.1.1. 系统环境搭建</title><p>本系统采用ThinkPHP的三层架构，开发工具使用了phpstorm，数据库mysql版本为5.5.53，服务器采用Apache，于Windows操作系统下进行开发使用，其前端框架使用了Bootstrap，兼容大部分浏览器，其中包括Chrome、Safari、Firefox、Internet Explorer (IE9以上完美支持)和Opera。</p><p>图8. E-R图</p><p>图9. 数据表结构图</p></sec><sec id="s7_1_2"><title>5.1.2. 数据库的连接配置</title><p>本次系统开发使用的是ThinkPHP框架和MySQL数据库，由于ThinkPHP本身对MySQL数据库兼容性好，并且配置简单，只需要更改一下config.php这个项目下的配置项的值即可，所以十分简洁。具体配置如下：</p><p>//'配置项' =&gt; '配置值'</p><p>'URL_MODEL'=&gt;'0',//URL模式</p><p>'DB_PREFIX'=&gt;'md_',//数据库表前缀配置</p><p>'DB_TYPE'=&gt;'mysql',//数据库类型</p><p>'DB_HOST'=&gt;'localhost',//数据库的地址</p><p>'DB_NAME'=&gt;'recruit',//数据库名</p><p>'DB_USER'=&gt;'root',//数据库登录名</p><p>'DB_PWD'=&gt;'root',//数据库登录密码</p><p>'DB_PORT'=&gt;'3306',//数据库端口</p><p>'MD5_PRE'=&gt;'modai',//定义用于MD5加密psw的后缀</p><p>之后就可以运用TP框架提供的操作函数直接连接到数据库进行操作。</p></sec></sec><sec id="s7_2"><title>5.2. 主页模块</title><p>系统的主界面如图10所示。</p><p>通过主页模块实现的功能为：根据session中的User的type来渲染模板，session不存在的话就跳转到登陆主页。</p><p>其前端的设计大致为：头部放置网页logo和导航栏，中间的内容为一个轮播图，底部有一个版权声明。为了能在各种不同的设备上达到一个比较好的视觉效果和使用体验，运用了现今较为成熟的bootstrap前端框架，其优秀的响应式布局，显示效果和较为丰富的插件，为之后的模板设计提供了很大的便利，并且由于其流式栅格系统构成的响应式布局使得网页在电脑上和各个移动端都有很好的显示效果。</p><p>其后端实现代码为：</p><p>class Index Controller extends Controller {</p><p>public function index(){</p><p>//判断用户是否登陆过，通过session</p><p>if(isset($_SESSION['User'])&amp;&amp;$_SESSION['User']!=''){</p><p>if($_SESSION['User']['type']==1){</p><p>$this-&gt;redirect(U('Admin/index/index'));}</p><p>if($_SESSION['User']['type']==2){</p><p>$this-&gt;redirect('BysIndex/index');//显示后台页面}</p><p>if($_SESSION['User']['type']==3){</p><p>$this-&gt;redirect('SjIndex/index');//显示相应的后台页面}</p><p>}else{$this-&gt;display('index/index');}}</p><p>图10. 主页图</p></sec><sec id="s7_3"><title>5.3. 系统注册模块</title><p>前端页面的编写使用了bootstrap这个前端框架，首先编写了头部的导航栏，之后进行了注册的表单的设计，其中nav导航栏是通过TP框架中的include标签来引入的。</p><p>后端的工作主要就是进行对提交的注册数据进行一定的防注入处理和加密后存入数据库，在注册成功之后跳转至相应的首页并存入session变量，反之，跳出错误界面，提示重试。</p></sec><sec id="s7_4"><title>5.4. 毕业生模块</title><p>毕业生主页使用了一个模板文件，其中的各个页面的跳转是通过锚点实现的。为了实现动态加载网页，使用了AJAX技术无刷新动态生成页面。</p><p>其左侧导航栏是通过bootstrap的tabtable选项卡和panel-group手风琴切换嵌套应用实现的，头部的导航栏是通过navbar等class属性对nav标签进行样式控制实现的。其中头部导航的下拉菜单中的跳转应用了js中的click方法。毕业生主页如图11所示。</p><p>其后端的实现功能主要是页面的赋值和渲染，具体代码如下：</p><p>public function index(){</p><p>if(isset($_SESSION['User'])&amp;&amp;$_SESSION['User']!=''){</p><p>$User=session('User');</p><p>$name=$User['name'];</p><p>$data=D('User')-&gt;getUserByName($name);</p><p>$id=$data['id'];</p><p>session('id',$id);</p><p>$num=M('resume')-&gt;where('md_userInfo_id='.$id.'')-&gt;count();</p><p>$data=array_merge($data,array('num'=&gt;$num));</p><p>$this-&gt;assign('data', $data);}</p><p>$this-&gt;viewsume();</p><p>$this-&gt;display('index_personal/bys_index');}</p><p>图11. 毕业生主页图</p><p>毕业生的个人信息修改前端实现主要是通过一张提交表单，表单中默认填写有现在的登陆者的一些基本信息，方便用户进行订正，更改。后端的主要功能就是更新当前用户的数据库中的相关字段。</p><p>毕业生进行工作的查询时，可以选择搜索条件，当无条件的时候点击搜索按钮可以搜索全部的工作信息，之后点击“show details”后可以显示搜索的结果。其搜索结果图如图12所示。</p><p>前端的实现是通过一个判断条件的下拉菜单，一个搜索值填写框，搜索按钮和显示详情的按钮组成，其中的搜索值填写框通过JS来根据条件的不同，对其进行disabled与否的切换。搜索结果是由一个列表表单组成，其中操作一栏有一个按钮组，用于显示工作详情和填写简历。</p><p>后端的实现包括两个部分，一个部分是查找和显示搜索结果的方法，另一个就是通过AJAX实现的异步处理数据，实现了无刷新页面的渲染，通过这个方法很好的解决了TP中的display方法无法渲染当前页面的问题，通过对弹出层的赋值和页面生成实现对详情的展示。</p><p>后端的核心代码如下：</p><p>1. 查找功能和显示结果功能的实现：</p><p>public function findwork(){</p><p>$searchdata=array(</p><p>'condition'=&gt;$_POST['condition'],</p><p>'value'=&gt;$_POST['value']);</p><p>if($searchdata['condition']==0){</p><p>$data= M('compwork')-&gt;select();</p><p>return show(1,'查询成功！',$data);</p><p>图12. 搜索结果图</p><p>}elseif ($searchdata['condition']==1){</p><p>$data= M('compwork')-&gt;where</p><p>('compname='.$searchdata['value'].'')-&gt;select();</p><p>return show(1,'公司信息查询成功！',$data);</p><p>}elseif ($searchdata['condition']==2){</p><p>$data= M('compwork')-&gt;where</p><p>('workname='.$searchdata['value'].'')-&gt;select();</p><p>return show(1,'职位查询成功！',$data);</p><p>}else{return show(0,'查询出错！');}}</p><p>//显示工作列表</p><p>public function showdetail(){</p><p>$wid=$_POST['wid'];</p><p>$compname=M('compwork')-&gt;where</p><p>('wid='.$wid.'')-&gt;find();</p><p>$workinfo=D('work')-&gt;getWorkById($wid);</p><p>$work=array_merge($workinfo,array('compname'=&gt;$compname));</p><p>return show(1,'查看成功！',$work);}</p><p>2. AJAX实现详情显示和搜索结果的显示，以搜索结果的异步数据传输为例：</p><p>search:function () {</p><p>var condition=$('select[name=condition]').val();</p><p>var value=$('input[name=value]').val();</p><p>if(condition!=0&amp;&amp;!value){dialog.error(请输入要查询的值！);}</p><p>varurl=index.php?m=Home&amp;c=BysIndex&amp;a=findwork</p><p>var data={'condition':condition,'value':value};</p><p>//执行异步请求$.post</p><p>$.post(url,data,function (result){</p><p>if(result.status==0){returndialog.error(result.message);}</p><p>if(result.status==1){</p><p>var info=result.data;</p><p>var html='';</p><p>for(vari=0;i</p><p>if(i%2==0){html+='';}</p><p>else { html+='';}</p><p>html+=''+info[i].wid+'';</p><p>html+=''+info[i].compname+'';</p><p>html+=''+info[i].workname+'';</p><p>html+='</p><p>href=#modal-detail data-toggle=modal title=查看 value='+info[i].wid+'</p><p>onclick=search.detail('+info[i].wid+')&gt;</p><p>html+='';</p><p>html+='</p><p>document.querySelector('#result_show').innerHTML=html;}},'JSON');//AJAX的post方法}</p><p>这里的jquery的$.post(url, data, function(result), ’JSON’)方法中的参数url地址值为向后台传输数据的地址，data值为页面中获取到的条件和值所组成的数组，function(result)方法中包含了对result这一数组中的status值的判读和对data值的写入，进而进行对相应的div元素进行赋值和html代码的写入，整个后台处理后的结果以JSON数组的形式进行返回。</p></sec><sec id="s7_5"><title>5.5. 管理员模块</title><p>为了能让管理员更为直观的看到后台数据的相关情况，优化用户的体验，在毕业生的图表中主要设计了一个年龄占比的扇形图和一个统计不同性别人数的条形图，在商家的图表中主要设计了商家发布的职位数的条形图。统计图表如图13所示。</p><p>前端实现是通过引入echart插件，在预设好的div元素中进行图形的绘制。绘制出的图形在交互上十分友好，鼠标悬停可以看到具体的数目和信息。</p><p>后端主要的工作是将后台的数据进行统计整理之后，以JSON数组的形式传给执行图形绘制的操作函数，进而进行绘图。</p><p>以下为TP框架的相关操作的代码(毕业生图表相关后端操作)：</p><p>public function postAgedata(){</p><p>$age=D('User')-&gt;where('type=2')-&gt;field('age,count(age)')-&gt;</p><p>group('age')-&gt;select();</p><p>$result=array();</p><p>foreach ($age as $k=&gt;$value){</p><p>$result[$k]['value']=$value['count(age)'];</p><p>$result[$k]['name']=$value['age'].'岁';}</p><p>exit(json_encode($result));</p><p>图13. 统计图表</p><p>}//扇形图</p><p>public function postSexdata(){</p><p>$sex=D('User')-&gt;where('type=2')-&gt;field('count(sex)')-&gt;group('sex')-&gt;select();</p><p>$result=array();</p><p>foreach ($sex as $value){</p><p>$result[<xref ref-type="bibr" rid="hanspub.21175-ref"></xref>]=$value['count(sex)'];}</p><p>exit(json_encode($result));}//条形图</p></sec></sec><sec id="s8"><title>6. 结束语</title><p>本文利用基于ThinkPHP框架的MVC设计模式构建了毕业生的网络招聘系统，其前端页面的开发利用了支持响应式布局的Bootstrap框架，为了实现根据用户的操作构建页面，使用了JQuery中的AJAX操作实现了无刷新更新页面。系统运行良好，可参见网址 [<xref ref-type="bibr" rid="hanspub.21175-ref4">4</xref>] 。</p></sec><sec id="s9"><title>基金项目</title><p>海南省自然基金项目(20156226)；海南大学科研启动基金项目(kyqd1533)。</p></sec><sec id="s10"><title>文章引用</title><p>王湛宇,冯思玲,李 路. 基于ThinkPHP框架的毕业生招聘系统Graduate Recruiting System Based on ThinkPHP Framework[J]. 计算机科学与应用, 2017, 07(06): 615-631. http://dx.doi.org/10.12677/CSA.2017.76072</p></sec><sec id="s11"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.21175-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">王俊芳, 李隐峰, 王池. 基于MVC模式的ThinkPHP框架研究[J]. 电子科技, 2014(4): 151-153+158.</mixed-citation></ref><ref id="hanspub.21175-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">孟丽群. 大学生求职招聘系统开发的意义与应用[J]. 科技情报开发与经济, 2015(4): 139-140+144.</mixed-citation></ref><ref id="hanspub.21175-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">魏晓海. 基于Web的人才招聘系统的设计与实现[D]: [硕士学位论文]. 吉林大学, 2015.</mixed-citation></ref><ref id="hanspub.21175-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">毕业生管理系统. &lt;br&gt;http://modai.ecdus01.win</mixed-citation></ref></ref-list></back></article>