<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">MET</journal-id><journal-title-group><journal-title>Mechanical Engineering and Technology</journal-title></journal-title-group><issn pub-type="epub">2167-6631</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/MET.2017.61006</article-id><article-id pub-id-type="publisher-id">MET-20084</article-id><article-categories><subj-group subj-group-type="heading"><subject>MET20170100000_97613581.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于Pro/Engineer的蜗杆程序化设计
  The Programmed Design of Worm Based on Pro/Engineer
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>代</surname><given-names>超</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>徐</surname><given-names>兴亮</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>赵</surname><given-names>婷</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>胡</surname><given-names>景姝</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>哈尔滨理工大学，黑龙江 哈尔滨</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>20</day><month>03</month><year>2017</year></pub-date><volume>06</volume><issue>01</issue><fpage>39</fpage><lpage>44</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  本文以便携式小型旋耕机蜗杆减速器的设计方法为基础，使用Pro/ENGINEER的二次开发软件包Pro/TOOLKIT开发了蜗杆的程序化设计系统。该设计系统界面简单、直观，操作方便，降低了设计者的工作量，缩短了蜗杆蜗轮齿廓曲线绘制的设计周期，并易于进行蜗杆传动的运动仿真及蜗杆减速器的运动分析。
   Based on the design of worm transmission in compact type rotocultivators, Pro/TOOLKIT is applied to the development of a programmed design system for the design of worm. This programmed design system is characterized by a simple and visualized interface and easy operation, which saves the labor of the designers and shortens the design process of worm tooth-profile. This design system is also helpful in the motion simulation of worm transmission and motion analysis of worm reducer.
 
</p></abstract><kwd-group><kwd>蜗杆传动，程序化设计，Pro/TOOLKIT, Worm Drive</kwd><kwd> Programmed Design</kwd><kwd> Pro/TOOLKIT</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于Pro/Engineer的蜗杆程序化设计<sup> </sup></title><p>代超，徐兴亮，赵婷，胡景姝</p><p>哈尔滨理工大学，黑龙江 哈尔滨</p><p>收稿日期：2017年3月11日；录用日期：2017年3月27日；发布日期：2017年3月31日</p><disp-formula id="hanspub.20084-formula668"><graphic xlink:href="http://html.hanspub.org/file/6-2340370x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文以便携式小型旋耕机蜗杆减速器的设计方法为基础，使用Pro/ENGINEER的二次开发软件包Pro/TOOLKIT开发了蜗杆的程序化设计系统。该设计系统界面简单、直观，操作方便，降低了设计者的工作量，缩短了蜗杆蜗轮齿廓曲线绘制的设计周期，并易于进行蜗杆传动的运动仿真及蜗杆减速器的运动分析。</p><p>关键词 :蜗杆传动，程序化设计，Pro/TOOLKIT</p><disp-formula id="hanspub.20084-formula669"><graphic xlink:href="http://html.hanspub.org/file/6-2340370x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2017 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="http://image.hanspub.org:8080\Html/htmlimages\1-2890033x\e70a10f1-7c93-45ea-9603-062237856e4b.png" /><img src="http://image.hanspub.org:8080\Html\htmlimages\1-2890033x\e898c85e-ffc4-45c9-b817-14224a4d6960.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>蜗杆传动由于传动比大，运动平稳得到了广泛使用。虽然蜗杆传动在机械制图中不用画实际的齿廓曲线，但是用软件做蜗杆传动的运动和动力分析时，需要绘制齿廓曲线，但是蜗轮和蜗杆的齿形比较复杂，绘制时比较繁琐 [<xref ref-type="bibr" rid="hanspub.20084-ref1">1</xref>] 。本文利用Pro/ENGINEER的二次开发功能进行蜗杆传动的程序化设计，使得蜗杆三维造型变得省时又简单。</p></sec><sec id="s4"><title>2. 系统的开发</title><sec id="s4_1"><title>2.1. 系统开发环境</title><p>Pro/ENGINEER安装盘所自带的Pro/TOOLKIT工具包主要提供了开发创建用户应用程序所需的各类文件，如函数库文件、头文件、用户指南等，还对各类文件的使用提供了部分示例程序。其中头文件和库文件是用Visual C++开发Pro/ENGINEER应用程序必不可少的支持文件。蜗杆传动程序化设计系统在Windows XP为平台上，在Visual C++开发环境下，采用C语言编程，以Pro/TOOLKIT接口，完成Pro/ENGINEER的二次开发。</p></sec><sec id="s4_2"><title>2.2. 系统开发策略</title><p>Pro/TOOLKIT应用程序有两种工作模式：同步模式和异步模式 [<xref ref-type="bibr" rid="hanspub.20084-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.20084-ref3">3</xref>] 。</p><p>在同步模式下，Pro/ENGINEER根据注册文件的信息启动应用程序，Pro/TOOLKIT应用程序和Pro/ENGINEER主程序分别产生不能并行工作的两个各自的进程。</p><p>而在异步模式下，包含主函数的应用程序能够独立启动并能与正在进行的Pro/ENGINEER进程连接，或者先启动应用程序后再启动Pro/ENGINEER，Pro/TOOLKIT应用程序和Pro/ENGINEER能够并行工作，换句话说就，Pro/TOOLKIT应用程序和Pro/ENGINEER主程序能够同时进行各自的工作，互不影响，本文采用了此异步模式开发蜗杆设计的程序化应用程序。</p><p>虽然Pro/TOOLKIT能通过调用几何特征创建函数完成三维模型自动建立的方法，但在零件的三维设计中，由于三维模型比较复杂，特征较多，创建时必然会涉及各类特征：如绘制草图用的点、线、面等基准；曲线、曲面和实体等，很难直接利用程序生成三维模型，即使可以也会使程序代码变得复杂，容易出错，最终使参数化程序的设计十分繁琐和复杂，满足不了简化设计者工作的初衷。因此，本文的蜗杆程序化设计系统采用了相对简单的基于三维模型的参数化程序设计方法 [<xref ref-type="bibr" rid="hanspub.20084-ref3">3</xref>] 。该方法的基本原理就是采用在Pro/ENGINEER主程序中以交互方式创建蜗杆的三维模型，再利用Pro/ENGINEER的参数功能建立相应的设计参数，然后由Pro/TOOLKIT应用程序检索出蜗杆模型的设计参数，并提供这些设计参数的编辑功能，最后根据用户输入的新的设计参数生成三维模型。图1所示流程图表明了其三维模型参数化的设计过程。图2是二次开发的应用程序执行过程。</p><p>图1. 基于三维模型的参数化设计过程</p><p>图2. 二次开发的应用程序执行过程</p></sec></sec><sec id="s5"><title>3. 系统关键技术</title><sec id="s5_1"><title>3.1. 建立三维模型</title><p>在Pro/ENGINEER环境中，用曲面，用户自定义特征、program、layout等高级功能建立模型，用“工具”→“参数”命令，添加蜗杆传动参数，中间平面的压力角，模数、蜗杆齿数，蜗轮齿数，蜗杆螺杆部分长度。这些参数名称分别为rf、m、z1、z2、b1分别赋初值，即20˚、4、4、41、65。</p><p>使用“工具”→“关系”命令将建立的蜗杆蜗轮的参数与蜗杆蜗轮的特征做链接，完成三维模型样板的建立。</p></sec><sec id="s5_2"><title>3.2. 定义对话框中编辑框的变量</title><p>在Visual C++ 6.0环境下的点选ClassWizard窗口中的Member Variables选项卡，并在列表框中设置double类型的控件IDC_EDIT1、IDC_EDIT2、IDC_EDIT3、IDC_EDIT4、IDC_EDIT5，变量名依次为m_rf、m_ms、m_z1、m_z2、m_ b1，单击OK按钮，这些变量就被定义到Cchiddlg类中 [<xref ref-type="bibr" rid="hanspub.20084-ref4">4</xref>] 。</p></sec><sec id="s5_3"><title>3.3. 添加OK按钮的动作函数</title><p>参数输入对话框中的OK按钮需要添加动作函数OnOK()，添加如下代码：</p><p>void CChilddlg:: OnOK ()</p><p>{</p><p>// TODO: Add extra validation here</p><p>UpdateData(true);</p><p>Doublerf,m,z1, z2,b1;</p><p>…………….…………….</p><p>rf =m_rf;</p><p>m = m_ms;</p><p>z1= m_z1</p><p>z2= m_z2</p><p>b1= m_b1</p><p>ProMdl part;</p><p>//将模型worm调入内存</p><p>ProMdlRetrieve(LD:\\wear.prt.1, PRO_MDL_PART, &amp;part);</p><p>//显示worm模型</p><p>ProMdlDisplay(part);</p><p>//获得当前worm模型标识</p><p>ProMdlIdGet(part,&amp;i);</p><p>//初始化worm模型</p><p>ProModelitemInit(part,i,PRO_PART,&amp;feature);</p><p>//初始化worm模型参数</p><p>Initialize model parameters</p><p>ProParameterInit(&amp;feature,L rf , &amp;param1);</p><p>ProParameterInit(&amp;feature,L m ,&amp;param2);</p><p>ProParameterInit(&amp;feature,Lz1 ,&amp;param3);</p><p>ProParameterInit(&amp;feature,Lz2,&amp;param4);</p><p>ProParameterInit(&amp;feature,Lb1 , &amp;param5);</p><p>//变量赋值</p><p>value1.type=PRO_PARAM_DOUBLE;</p><p>value1.value.i_val= rf;</p><p>value2.type=PRO_PARAM_DOUBLE;</p><p>value2.value.i_val= m;</p><p>value3.type=PRO_PARAM_DOUBLE;</p><p>value3.value.d_val= z1;</p><p>value4.type=PRO_PARAM_ DOUBLE;</p><p>value4.value.d_val= z2;</p><p>value5.type=PRO_PARAM_CHAR;</p><p>value5.value.c_val= b1;</p><p>//设置模型参数的数值</p><p>ProParameterValueSet(&amp;param1, &amp;value1);</p><p>ProParameterValueSet(&amp;param2, &amp;value2);</p><p>ProParameterValueSet(&amp;param3, &amp;value3);</p><p>ProParameterValueSet(&amp;param4, &amp;value4);</p><p>ProParameterValueSet(&amp;param5, &amp;value5);</p><p>ProParameterValueSet(&amp;param6, &amp;value6);</p><p>ProParameterValueSet(&amp;param7, &amp;value7);</p><p>//模型再生</p><p>ProSolidRegenerate((ProSolid)part, PRO_B_TRUE);</p><p>UpdateData(false);</p><p>CDialog::OnOK();</p><p>}</p><p>应用这段程序，可以将预先创建的蜗杆样本零件模型调入内存并显示，然后根据编辑框中的用户输入的蜗杆的新参数改变样板模型的参数，最后再生成新参数下的新的蜗杆模型。</p></sec><sec id="s5_4"><title>3.4. 设置Project/Settings选项</title><p>首先在Project/Settings对话框的Link选项卡中，添加下列库文件：protoolkit.lib wsock32.lib protkmd.lib pt_asynchronous.lib mpr.lib；其次在Project/Settings中的Customize中选中Force files output选项，使工程输出状态为强制输出；最后选择Use MFC将工程的基类设置为静态库类。</p></sec></sec><sec id="s6"><title>4. 程序编译连接及系统运行</title><p>执行VC主菜单命令Build|Build main program.exe生成可执行文件main program.exe。由于系统所采用的是Pro/TOOLKIT异步模式，所以首先设置环境变量。</p><p>变量名：PRO_COMM_MSG_EXE</p><p>变量值：C:\Program Files\proeWildfire 4.0\i486_nt\obj\pro_comm_msg.exe</p><p>双击可执行文件文件main program.exe，图3所示的主对话框窗口便可打开。在主对话框中单击“启动Pro/E”按钮，则 Pro/ENGINEER系统启动。单击“蜗杆设计”按钮，则会弹出蜗杆创建对话框，在图4所示对话框中输入各参数值。然后单击“输出蜗杆”按钮，系统会根据参数的输入生成相应的蜗杆模型，其中一组参数生成的蜗杆模型如图5所示。蜗杆轴的其他部分结构按照普通的轴类设计很方便就能完成，由于篇幅所限，不再赘述。</p><p>图3. 主程序对话框</p><p>图4. 创建蜗杆对话框</p><p>图5. 蜗杆模型</p></sec><sec id="s7"><title>5. 结语</title><p>本文利用Pro/ENGINEER软件中的高级功能创建了便携式小型旋耕机蜗杆减速器中蜗杆的三维模型；并使用Pro/ENGINEER软件的二次开发工具Pro/TOOLKIT在Visual C++ 6.0集成开发的环境下，采用异步模式开发了蜗杆自动化设计系统。该设计系统可以仅通过输入蜗杆传动的几何参数快速创建蜗杆三维模型，设计系统的用户操作界面简单、直观，通用性强，能提高设计人员的工作效率，缩短蜗杆传动的设计周期，可以取得良好的经济效益。</p></sec><sec id="s8"><title>基金项目</title><p>哈尔滨理工大学大学生创新创业训练项目：便携式小型旋耕机的设计。</p></sec><sec id="s9"><title>文章引用</title><p>代超,徐兴亮,赵婷,胡景姝. 基于Pro/Engineer的蜗杆程序化设计The Programmed Design of Worm Based on Pro/Engineer[J]. 机械工程与技术, 2017, 06(01): 39-44. http://dx.doi.org/10.12677/MET.2017.61006</p></sec><sec id="s10"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.20084-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">盛庆伟, 等. 基于Pro/E的发动机连杆设计系统开发[J]. 机械设计与制造, 2013(2): 94-99.</mixed-citation></ref><ref id="hanspub.20084-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">张继春. Pro/ENGINEER二次开发实用教程[M]. 北京: 北京大学出版社, 2003.</mixed-citation></ref><ref id="hanspub.20084-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">李世国. Pro/TOOLKIT程序设计[M]. 北京: 机械工业出版社, 2003.</mixed-citation></ref><ref id="hanspub.20084-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">陈天华. 面向对象程序设计与Visual C++6.0教程[M]. 北京: 清华大学出版社, 2013.</mixed-citation></ref></ref-list></back></article>