<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">MOS</journal-id><journal-title-group><journal-title>Modeling and Simulation</journal-title></journal-title-group><issn pub-type="epub">2324-8696</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/MOS.2021.102024</article-id><article-id pub-id-type="publisher-id">MOS-41820</article-id><article-categories><subj-group subj-group-type="heading"><subject>MOS20210200000_79703165.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject><subject> 工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于最短路径的外卖配送时间优化问题研究
  Research on Optimization of Takeaway Delivery Time Based on Shortest Path
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>闫</surname><given-names>碧玉</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>佀</surname><given-names>友友</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>马</surname><given-names>靖宇</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>内蒙古大学数学科学学院，内蒙古 呼和浩特</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>25</day><month>04</month><year>2021</year></pub-date><volume>10</volume><issue>02</issue><fpage>227</fpage><lpage>235</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  针对送餐行业顾客的平均等待时间问题，以最短路径原则为基础，建立相应的数学模型。以某地区某天顾客的下单情况为研究对象，运用图论理论将该地区地理简图抽象为无向赋权图，建立顾客等待时间模型，并利用Dijkstra算法得出两区域之间的最短路径，采用随机模拟算法生成动态订单，估计出顾客的平均等待时间。在此基础上，通过改变配送中心选址、增加配送人员数以缩短顾客平均等待时间，达到模型优化的效果。
   Aiming at the average waiting time of customers in the food delivery industry, a corresponding mathematical model is established based on the shortest path principle. Taking the order situation of customers in a certain area as the research object, using graph theory to abstract the geographic diagram of the area as an undirected weighted graph, building a customer waiting time model, and using Dijkstra algorithm to find the shortest distance between the two areas, using a random simulation algorithm to generate dynamic orders, and estimate the average waiting time of customers. On this basis, by changing the location of the distribution center and increasing the number of distribution personnel to shorten the average waiting time of customers, the effect of model optimization is achieved.
 
</p></abstract><kwd-group><kwd>外卖配送问题，最短路径原则，Dijkstra算法，图论，时间优化, Takeaway Delivery Issues</kwd><kwd> Shortest Path Principle</kwd><kwd> Dijkstra Algorithm</kwd><kwd> Graph Theory</kwd><kwd> Time Optimization</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>针对送餐行业顾客的平均等待时间问题，以最短路径原则为基础，建立相应的数学模型。以某地区某天顾客的下单情况为研究对象，运用图论理论将该地区地理简图抽象为无向赋权图，建立顾客等待时间模型，并利用Dijkstra算法得出两区域之间的最短路径，采用随机模拟算法生成动态订单，估计出顾客的平均等待时间。在此基础上，通过改变配送中心选址、增加配送人员数以缩短顾客平均等待时间，达到模型优化的效果。</p></sec><sec id="s2"><title>关键词</title><p>外卖配送问题，最短路径原则，Dijkstra算法，图论，时间优化</p></sec><sec id="s3"><title>Research on Optimization of Takeaway Delivery Time Based on Shortest Path<sup> </sup></title><p>Biyu Yan, Youyou Si<sup>*</sup>, Jingyu Ma<sup>*</sup></p><p>School of Mathematical Sciences, Inner Mongolia University, Hohhot Inner Mongolia</p><p><img src="//html.hanspub.org/file/1-2570355x4_hanspub.png" /></p><p>Received: Mar. 11<sup>th</sup>, 2021; accepted: Apr. 18<sup>th</sup>, 2021; published: Apr. 25<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/1-2570355x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>Aiming at the average waiting time of customers in the food delivery industry, a corresponding mathematical model is established based on the shortest path principle. Taking the order situation of customers in a certain area as the research object, using graph theory to abstract the geographic diagram of the area as an undirected weighted graph, building a customer waiting time model, and using Dijkstra algorithm to find the shortest distance between the two areas, using a random simulation algorithm to generate dynamic orders, and estimate the average waiting time of customers. On this basis, by changing the location of the distribution center and increasing the number of distribution personnel to shorten the average waiting time of customers, the effect of model optimization is achieved.</p><p>Keywords:Takeaway Delivery Issues, Shortest Path Principle, Dijkstra Algorithm, Graph Theory, Time Optimization</p><disp-formula id="hanspub.41820-formula1"><graphic xlink:href="//html.hanspub.org/file/1-2570355x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/1-2570355x8_hanspub.png" /> <img src="//html.hanspub.org/file/1-2570355x9_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>快节奏的城市生活带来送餐行业的繁荣，很多靠近城市中心的餐馆通宵营业，在接到外卖订单后，将美味的食物交给送餐员——“外卖小哥”，送到顾客手中。由于顾客耐心有限，所以“外卖小哥”需要尽可能快速地到达餐馆取餐并送到顾客所在的地址，否则会被顾客投诉导致被扣工资甚至被解雇的危险。所以如何缩短顾客等待时间成为了外卖配送的中心问题。并且在消费升级趋势下，人们对外卖配送服务的要求也日益增高，这也促使网络外卖平台不断加码以提供更高效的服务体系。要发展现代化、系统化的外卖配送系统，不容忽视的问题就是配送节点和配送线路，然而配送中心选址和配送人员数目又是对配送中心建设规划的重要问题，不仅直接影响到外卖配送的时间，而且还会影响到外卖行业的运营绩效以及未来的发展 [<xref ref-type="bibr" rid="hanspub.41820-ref1">1</xref>]。因此通过合理选取配送中心的地址，增加配送人员数，缩短顾客平均等待时间，有利于餐馆快速响应顾客需求，提高外卖行业的服务水平以及增强顾客对配送环节的满意度具有重要的现实意义。</p><p>由于配送问题在实际生活中广泛存在，目前各国学者对该问题进行了部分研究，但还有许多问题值得商榷。杨笠涵等 [<xref ref-type="bibr" rid="hanspub.41820-ref2">2</xref>] 以合肥市某知名快递企业配送路径优化问题为研究对象，分析该企业配送问题，建立以配送网络成本最小为优化目标的数学模型。范立南等 [<xref ref-type="bibr" rid="hanspub.41820-ref3">3</xref>] 利用遗传算法和TSP问题的相关理论，采用改进的自适应遗传蚁群混合算法，对沈阳大学校园内外卖配送路线进行了合理的规划，有效缩短校园外卖配送路径长度，有效提升外卖员的配送效率。黄驰等 [<xref ref-type="bibr" rid="hanspub.41820-ref4">4</xref>] 应用旅行商问题的理论，对外卖配送路径问题进行建模，建立了客户房间之间的距离矩阵，运用遗传算法、MATLAB编程得出每两个客户房间之间的对短距离、以及送完外卖后回到餐馆的最短路径。翟劲松 [<xref ref-type="bibr" rid="hanspub.41820-ref5">5</xref>] 等在满足顾客需求量和时间窗约束条件下，以配送时间最短为目标，建立了外卖配送路径优化模型，运用遗传算法得出了最优的配送路径。这样的研究不胜枚举，但是以配送中心选址和配送人员数目为优化对象的研究还是寥寥无几。</p><p>本文将以优化顾客平均等待时间为目标，对外卖配送中心选址问题进行研究。以最短路径原则为基础，建立了相应的数学模型，并运用图论理论将该城区地理简图抽象为无向赋权图，利用Dijkstra算法得出两城区之间的最短路径，以求解顾客等待时间模型，估计出顾客的平均等待时间，以及给出配送中心选址的最佳方案。与此同时，对该配送中心的配送人员数进行优化，实现两者的共同优化。</p></sec><sec id="s6"><title>2. 顾客平均等待时间模型建立</title><sec id="s6_1"><title>2.1. 问题描述</title><p>以内蒙古大学周边(如下图1所示)某天的送餐行业顾客下单情况为对象研究其顾客下单规律，并且基于配送中心选址和配送人员调度来优化顾客平均等待时间。由于利用高德地图API获取的用户路径信息包含了大量的坐标数据，实际处理难度较大，因此我们可以将该地区实际地图抽象为地理简图，其中呼和浩特乌兰夫公园和青城公园是天然屏障。在这一问题中，本文本持着区内距离尽可能小，区间距离尽可能大的分类原则，使外卖各商家客户的配送都属于同城内小区域的配送。因此借助高德地图API接口获得内蒙古大学北校区周边地区的经纬度信息和各节点间距离，抽象出地理简图(如下图2所示)。</p><p>图1. 内蒙古大学周边地图</p><p>图2. 内蒙古大学周边地理简图</p><p>上图2中直线表示可行路径——公路，每个方格表示一个区域(边长都为1公里)，方格内数字为该区域编号，其中46、47区代表天然屏障，无法直接穿越，即公司总部，顾客位置，餐馆位置不能位于46区和47区。该地区仅有一个送餐公司，总部现设在25区，有送餐员6名，送餐员每次送餐结束后，先返回公司总部，(等待)领取下一个订单(先到先得，按下单时间顺序领取)，然后再前往订单中指定的餐馆取餐，最后到下单顾客的地址送餐。根据该地区某日顾客下单情况，总结出下表1。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Customer order status tabl</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >序号</th><th align="center" valign="middle" >时间</th><th align="center" valign="middle" >顾客位置</th><th align="center" valign="middle" >餐馆位置</th><th align="center" valign="middle" >序号</th><th align="center" valign="middle" >时间</th><th align="center" valign="middle" >顾客位置</th><th align="center" valign="middle" >餐馆位置</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0:00</td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0：12</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >9</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >0:18</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >0：18</td><td align="center" valign="middle" >31</td><td align="center" valign="middle" >6</td></tr><tr><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td></tr><tr><td align="center" valign="middle" >254</td><td align="center" valign="middle" >23:12</td><td align="center" valign="middle" >41</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >255</td><td align="center" valign="middle" >23：18</td><td align="center" valign="middle" >31</td><td align="center" valign="middle" >25</td></tr><tr><td align="center" valign="middle" >256</td><td align="center" valign="middle" >23:36</td><td align="center" valign="middle" >31</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >257</td><td align="center" valign="middle" >23：48</td><td align="center" valign="middle" >38</td><td align="center" valign="middle" >17</td></tr></tbody></table></table-wrap><p>表1. 顾客下单情况示意表</p></sec><sec id="s6_2"><title>2.2. 模型的准备工作</title><sec id="s6_2_1"><title>2.2.1. Dijkstra算法</title><p>Dijkstra算法是从一个顶点 u 0 到G的其余各顶点的最短路径算法，用来解决有权图中最短路径问题。特点是从起点开始，每次遍历到距始点最近且未访问过的顶点的邻点，直到扩展到终点 v 0 为止。具体步骤如下：</p><p>Step1：令 I ( u 0 ) = 0 ，对 v ≠ u 0 ，令 I ( v ) = ∞ ， S 0 = { u 0 } ， i = 0 。</p><p>Step2：对每一个 v ∈ S i &#175; ( S i &#175; = V \ S i ) ，用 min u ∈ S i { I ( v ) , I ( u ) + w ( u v ) } 代替 I ( v ) ，这里 w ( u v ) 表示顶点u和v之间边的权值。计算 min u ∈ S i { I ( v ) } ，把达到这个最小的一个顶点记为 u i + 1 ，令 S i + 1 = S i ∪ { u i + 1 } 。</p><p>Step3：若 i = | V | − 1 ，则停止；若 i &lt; | V | − 1 ，则用 i + 1 代替i，转step2。</p></sec><sec id="s6_2_2"><title>2.2.2. 最短送餐路径模型</title><p>最短送餐路径模型的建立以送餐员从公司总部到餐馆再从餐馆到顾客，最后从顾客返回公司总部经过距离最短为目标，就可以得到每次送餐的最短路径。为了计算方便将46区和47区重新编号，将城市地理简图抽象为无向赋权图 G ( V , E ) (如下图3所示)，起到加速运算的作用。取两相邻路口之间的道路长度为其对应的权值，将其抽象成一个加权邻接矩阵 A 50 &#215; 50 ，建立初始加权邻接矩阵 A 50 &#215; 50 。</p><p>A 50 &#215; 50 = [ s 1 , 1 s 1 , 2 ⋯ s 1 , 49 s 1 , 50 s 2 , 1 s 2 , 2 ⋯ s 2 , 49 s 2 , 50 ⋮ ⋮ ⋱ ⋮ ⋮ s 49 , 1 s 49 , 2 ⋯ s 49 , 49 s 49 , 50 s 50 , 1 s 50 , 2 ⋯ s 50 , 49 s 50 , 50 ]</p><p>其中</p><p>s i , j = { 1 ,     当 v i 和 v j 之 间 有 公 路 连 通 ,     i ≠ j ∞ ,     当 v i 和 v j 不 相 邻 或 由 于 46 , 47 区 阻 隔 时 ,     i ≠ j 0 ,     i = j</p><p>由于为 G ( V , E ) 无向赋权图， A 50 &#215; 50 为对称矩阵，有 s i , j = s j , i 。</p><p>图3. 无向赋权图</p><p>通过Dijkstra算法，以公司总部位置为起始点，可以得到一个起始点与各个点之间的最短距离矩阵 l e a s t p a t h 45 &#215; 1 ，并将其总结表格(如下表2所示)，提取出餐馆与公司之间的最短距离，再将餐馆位置替换成起始点，同理可得餐馆到顾客之间的最短距离。最后在以顾客位置为起始点得到从顾客位置回到公司总部的最短距离。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Shortest distanc</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >城区</th><th align="center" valign="middle" >距离</th><th align="center" valign="middle" >城区</th><th align="center" valign="middle" >距离</th><th align="center" valign="middle" >城区</th><th align="center" valign="middle" >距离</th><th align="center" valign="middle" >城区</th><th align="center" valign="middle" >距离</th><th align="center" valign="middle" >城区</th><th align="center" valign="middle" >距离</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >7</td><td align="center" valign="middle" >19</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >28</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >37</td><td align="center" valign="middle" >3</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >11</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >20</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >19</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >38</td><td align="center" valign="middle" >4</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >30</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >39</td><td align="center" valign="middle" >5</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >13</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >22</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >31</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >40</td><td align="center" valign="middle" >6</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >14</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >23</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >32</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >41</td><td align="center" valign="middle" >6</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >24</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >33</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >42</td><td align="center" valign="middle" >5</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >16</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >25</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >34</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >43</td><td align="center" valign="middle" >4</td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >17</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >35</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >44</td><td align="center" valign="middle" >3</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >18</td><td align="center" valign="middle" >4</td><td align="center" valign="middle" >27</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >36</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >45</td><td align="center" valign="middle" >2</td></tr></tbody></table></table-wrap><p>表2. 最短距离</p></sec></sec><sec id="s6_3"><title>2.3. 模型构建</title><p>为了保证模型准确、运算简便，做出以下几点假设：</p><p>1) 假设送餐员在公路上的平均行驶速度为30公里每小时。</p><p>2) 假设每块区域的所有顾客位置、餐馆位置和公司总部都位于该地区区域的左下角。</p><p>3) 假设商家和顾客服务时间之和服从正态分布 N ( μ , σ 2 ) 。其平均值是3分钟，方差为1分钟，即 μ = 3 , σ 2 = 1 。</p><p>4) 忽略送餐员拐弯的时间，仅考虑沿道路行驶的时间。</p><p>一次完整的送餐包括送餐员从公司总部出发前往餐馆、从餐馆前往顾客位置、将外卖移交到顾客手中及从顾客位置返回公司总部四部分组成。故可将顾客的等待时间划分为送餐员回程时间，从公司到餐馆时间，从餐馆到顾客位置所需时间及服务时间四部分，分别用 t h c ( j ) , t c r ( j ) , t r b ( j ) , t d t ( j ) 表示上述四个时间(j指第j个顾客)，则顾客的等待时间模型为： t j = t h c ( j ) + t c r ( j ) + t r b ( j ) + t d t ( j ) ，上述所有的时间都应为最短时间，根据最短送餐路径模型可确定最短路径。</p><p>基于上述分析，可将参数设置如下：设T为下一次顾客下单的时间点， T ′ 为本次下单时间点， t d ( j , j + 1 ) 为上一次顾客下单和本次顾客下单之间的时间间隔，则每一次顾客下单时间点可由递推公式表示为： T = T ′ + t d ( j , j + 1 ) 。</p><p>t j 为顾客的等待时间， t h c ( j ) = T min ( j ) − T ( j ) 为回程等待时间，即最快回到公司总部的送餐人到达公司的时</p><p>刻 T min ( j ) 与顾客下单时刻 T ( j ) 之差；其中 T ( j ) 为顾客下单的时间点， T min ( j ) = min { T s 1 j , T s 2 j , T s 3 j , T s 4 j , T s 5 j , T s 6 j } 为最先返回公司的送餐员到达公司的时间点。</p><p>若在下一次顾客下单时，有送餐员位于公司，则 t h c ( j ) = 0 ，所以有 t j = t c r ( j ) + t r b ( j ) + t d t ( j ) 。我们还有如下关</p><p>系： t c r ( j ) = L c r v , t r b ( j ) = L r b v ，其中 L c r 为公司到餐馆的最短距离， L r b 为餐馆到顾客的最短距离，v代表送餐员行驶的平均速度。</p></sec></sec><sec id="s7"><title>3. 最短送餐路径模型和顾客等待时间模型求解</title><sec id="s7_1"><title>3.1. 算法概述</title></sec><sec id="s7_2"><title>3.2. 算法步骤</title><p>下单时间间隔，餐馆位置，顾客位置都为离散型分布，三者可用相同的模拟算法，步骤如下：</p><p>图4. 算法整体流程图</p><p>Step1：用计算机产生n个[0,1]之间的随机数 ξ 1 , ξ 2 , ⋯ , ξ n ；</p><p>Step2：令r = 1，判断 ξ r ，若 F 1 ( k − 1 ) ≤ ξ r &lt; F 1 ( k ) ，( k = 1 , 2 , ⋯ , 36 )，则使 ξ r = k 。</p><p>Step3：判断r是否小于n，若是，令r = r + 1，返回Step2；否则，结束。</p><p>服务时间为连续性分布，方法如下：</p><p>Step1：用计算机产生n个[0,1]之间的随机数 ξ 1 , ξ 2 , ⋯ , ξ n ；</p><p>Step2：令r = 1，判断 ξ r ，若 ξ r = F 3 ( k ) , ( k ≥ 0 ) ，则使 ξ r = k ；</p><p>Step3：判断r是否小于n，若是，令r = r + 1，返回Step2；否则，结束。</p><p>算法流程图如图4所示。</p></sec><sec id="s7_3"><title>3.3. 结果分析</title><p>经3.2节所述方法，求解得到了1000次每次5000个顾客下单的情况，得到了共1000组数据结果。用SPSS21.0对其进行描述性分析可得下表3及下图5。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Simulation solution results tabl</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >最大值</th><th align="center" valign="middle" >最小值</th><th align="center" valign="middle" >平均值</th><th align="center" valign="middle" >方差</th><th align="center" valign="middle" >标准差</th><th align="center" valign="middle" >偏度</th><th align="center" valign="middle" >峰度</th></tr></thead><tr><td align="center" valign="middle" >38.1211 min</td><td align="center" valign="middle" >23.7571 min</td><td align="center" valign="middle" >28.4644 min</td><td align="center" valign="middle" >4.241</td><td align="center" valign="middle" >2.0593</td><td align="center" valign="middle" >0.859</td><td align="center" valign="middle" >0.07</td></tr></tbody></table></table-wrap><p>表3. 模拟求解结果数据表</p><p>图5. 模拟求解结果数据分布图</p><p>由图表数据可以看出数据较为集中的分布在中部，集中于27至29.5之间。由表中数据可得顾客平均等待时间为28.4644分钟，且方差较小，证明数据幅度不大，稳定性高。所以顾客的等待时间应为28.4644分钟。</p></sec></sec><sec id="s8"><title>4. 基于配送中心选址和增加配送人员子方案的顾客平均等待时间优化</title><sec id="s8_1"><title>4.1. 基于配送中心选址子方案的顾客平均等待时间优化</title><p>当起始位置发生改变，基于顾客下单规律与最短送餐路径模型，进行顾客等待时间模型的分析，顾客的等待时间由回程等待时间，从公司到餐馆时间，从餐馆到顾客位置所需时间，服务时间四部分组成，回程等待时间和公司到餐馆所需时间均发生改变，分别用 t h c , k ( j ) , t c r , k ( j ) , t r b ( j ) , t d t ( j ) 表示上述四个时间，k代表总部位置是在k区域，j指第j个顾客，则顾客等待时间的函数模型 t j , k = t h c , k ( j ) + t c r , k ( j ) + t r b ( j ) + t d t ( j ) ， t j , k 为公司总部位于k区域时顾客的等待时间，上述所有的时间都应为最短时间，根据最短送餐路径模型可确定最短路径。参数如下： t h c , k ( j ) = T min , k ( j ) − T k ( j ) 为公司总部位于k区域的回程等待时间， T min , k ( j ) = min { T s 1 , k j , T s 2 , k j , T s 3 , k j , T s 4 , k j , T s 5 , k j , T s 6 , k j } 为公司总部位于k区域时最先返回公司的送餐员到达公司的时间点，其中 T s 1 , k j 表示对j次顾客下单时，为公司总部位于k区域时，第一位送餐员处理完手上的订单返回公司的时间点。</p><p>此外，还有如下关系式： t c r , k ( j ) = L c r , k v , t r b ( j ) = L r b v ， t c r , k ( j ) 为公司总部位于k区域公司到餐馆时间， L c r , k 为公司总部位于k区域时公司到餐馆的最短距离，v代表送餐员行驶的平均速度。</p><p>参照流程图4，设置模拟3次每次5000次下单，可输出最终位于26区左下角时，平均响应时间最短，该时间为27.6216分钟。因此，公司总部应该设置在26区。</p></sec><sec id="s8_2"><title>4.2. 基于增加配送人员子方案的顾客平均等待时间优化</title><p>当改变送餐员数量，即改变了回程等待时间。顾客等待时间的函数模型仍为 t j = t h c ( j ) + t c r ( j ) + t r b ( j ) + t d t ( j ) ，但 t h c ( j ) 会随送餐员数量增加而减小，上述所有的时间都应为最短时间，根据最短送餐路径模型可确定最短路径。则 t j 为顾客的等待时间，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/1-2570355x85_hanspub.png" xlink:type="simple"/></inline-formula>为回程等待时间，即最快回到公司总部的送餐人到达公司的时刻<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/1-2570355x86_hanspub.png" xlink:type="simple"/></inline-formula>与顾客下单时刻<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/1-2570355x87_hanspub.png" xlink:type="simple"/></inline-formula>之差；其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/1-2570355x88_hanspub.png" xlink:type="simple"/></inline-formula>为顾客下单的时间点，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/1-2570355x89_hanspub.png" xlink:type="simple"/></inline-formula>为最先返回公司的送餐员到达公司的时间点。</p><p>若在下一次顾客下单时，有送餐员位于公司，则<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/1-2570355x90_hanspub.png" xlink:type="simple"/></inline-formula>，所以有<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/1-2570355x91_hanspub.png" xlink:type="simple"/></inline-formula>，假设送餐员数量由原来的t个增加到了t + k个，则最起码可以保证前t+k个订单无需等待，即回程等待时间为0。我们还</p><p>有如下关系：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/1-2570355x92_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/1-2570355x93_hanspub.png" xlink:type="simple"/></inline-formula>为公司到餐馆的最短距离，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/1-2570355x94_hanspub.png" xlink:type="simple"/></inline-formula>为餐馆到顾客的最短距离，v代</p><p>表送餐员行驶的平均速度。</p><p>同理参照流程图4，设置模拟3次每次5000次下单的情况求解，我们得出当增加人数趋于无穷时，顾客的平均等待时间于17.113 min浮动。本持着送餐成本尽可能低以及顾客等待时间尽可能短的原则，本文取输出数据中第一次达到此值的数据，其对应的送餐员数为最小应该增加的送餐员数，即9人，可达到顾客平均等待时间所能达到的最小值。</p></sec></sec><sec id="s9"><title>5. 结论</title><p>由于当前缺少有关外卖配送优化问题的研究，故本文在多车型配送，单配送仓库条件下，通过分析内蒙古大学周边某天顾客的下单情况，建立顾客等待时间模型，并利用Dijkstra算法以及随机模拟算法进行求解，在此基础上，通过改变公司总部选址和增加送餐员数量来优化顾客平均等待时间。实验结果验证了模型的合理性以及算法的有效性，并得出以下结论：</p><p>1) 该模型基于最短路径原则，大大缩短了配送距离和顾客平均等待时间，从而提高了配送效率。所以送餐人员可以在短时间内完成配送，提高顾客满意度，有助于外卖行业的长久发展。</p><p>2) 本文建立的模型可用于确定配送中心的位置以及最优配送人员数，且可为外卖配送优化问题提供较为新颖的求解思路，使外卖配送规划更具科学性，对外卖配送领域的研究有一定的贡献。</p><p>但是该模型所用到的数据只是一天的数据，不同日期对应的下单时间间隔，顾客位置，餐馆位置会发生相应的改变，在下一步的研究中，还需结合大数据方法，用海量数据研究其动态变化规律，使模型更加优化。</p></sec><sec id="s10"><title>文章引用</title><p>闫碧玉,佀友友,马靖宇,nullnull. 基于最短路径的外卖配送时间优化问题研究Research on Optimization of Takeaway Delivery Time Based on Shortest Path[J]. 建模与仿真, 2021, 10(02): 227-235. https://doi.org/10.12677/MOS.2021.102024</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.41820-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">吴丽敏. 基于顾客满意度的多目标配送中心选址方法研究[J]. 物流科技, 2014(6): 95-97.</mixed-citation></ref><ref id="hanspub.41820-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">杨粟涵, 于蕾. 基于遗传算法的快递配送路径优化问题研究[J]. 现代信息科技, 2020, 4(9): 99-103.</mixed-citation></ref><ref id="hanspub.41820-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">范立南, 吕鹏. 基于改进遗传算法的校园外卖配送路径规划[J]. 物流科技, 2021(1): 14-19.</mixed-citation></ref><ref id="hanspub.41820-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">黄驰, 黄耿石, 朱小玲. 基于遗传算法的送外卖最短路径研究[J]. 科技传播, 2016, 12(6): 94-95.</mixed-citation></ref><ref id="hanspub.41820-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">翟劲松, 台玉红. 基于时间窗约束下的外卖配送路径优化[J]. 物流科技, 2018(3): 15-18.</mixed-citation></ref></ref-list></back></article>