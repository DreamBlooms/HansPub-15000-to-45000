<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2020.108157</article-id><article-id pub-id-type="publisher-id">CSA-37229</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20200800000_41220611.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于React Native的航空机务维修智能终端开发与实现
  Development and Implementation of Intelligent Terminal for Aviation Maintenance Based on React Native
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>汤</surname><given-names>再辉</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>崔</surname><given-names>利杰</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>童</surname><given-names>奇</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>从</surname><given-names>继平</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>空军工程大学装备管理与无人机工程学院，陕西 西安</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><aff id="aff3"><addr-line>空军工程大学研究生院，陕西 西安</addr-line></aff><pub-date pub-type="epub"><day>04</day><month>08</month><year>2020</year></pub-date><volume>10</volume><issue>08</issue><fpage>1498</fpage><lpage>1506</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对航空机务维修工作由于人员主观性大、不按规程操作以及可追溯性差等诸多问题，基于React Native框架对航空机务维修终端的功能需求、总体框架、UI、详细功能等工作开展初步分析和设计。结合维修工作流程和软件设计方法，以任务管理、专业管理、业务工作为典型模块进行功能实现，应用Spring Boot框架完成航空机务维修智能终端移动端与后台的互联以及整个系统的数据传输。通过研究，探索了航空机务维修智能终端的实现可行性，应用React Native框架实现了移动端和后台两个平台的开发，初步证明了所提终端系统的功能符合性，为后续开发其他军事智能终端提供参考。 In view of many problems of aviation maintenance work, such as large personnel subjectivity, non-compliance with procedures and poor traceability, etc., the functional requirements, overall framework, UI and detailed functions of aviation maintenance terminal are  analyzed and designed preliminarily based on the react native framework. Combined with the maintenance work-flow and software design method, the function is realized by taking task management, professional management and business work as typical modules. The Spring Boot framework is applied to complete the interconnection between the intelligent terminal of aviation maintenance and the back-stage, the data transmission of the whole system. Through the research, the feasibility of the implementation of the intelligent terminal for aviation maintenance is explored. The application of React Native framework to the development of two platforms-mobile terminal and background platform, proves the functional compliance of the idea, and provides other highlights for the follow-up development. 
  
 
</p></abstract><kwd-group><kwd>机务维修，移动智能终端，React Native框架，Android, Aviation Maintenance</kwd><kwd> Mobile Intelligent Terminal</kwd><kwd> React Native Framework</kwd><kwd> Android</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于React Native的航空机务维修智能终端开发与实现</title><p>汤再辉<sup>1</sup>，崔利杰<sup>1</sup>，童奇<sup>1</sup>，从继平<sup>2</sup></p><p><sup>1</sup>空军工程大学装备管理与无人机工程学院，陕西 西安</p><p><sup>2</sup>空军工程大学研究生院，陕西 西安</p><p>收稿日期：2020年8月3日；录用日期：2020年8月18日；发布日期：2020年8月25日</p><disp-formula id="hanspub.37229-formula1"><graphic xlink:href="//html.hanspub.org/file/10-1541846x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>针对航空机务维修工作由于人员主观性大、不按规程操作以及可追溯性差等诸多问题，基于React Native框架对航空机务维修终端的功能需求、总体框架、UI、详细功能等工作开展初步分析和设计。结合维修工作流程和软件设计方法，以任务管理、专业管理、业务工作为典型模块进行功能实现，应用Spring Boot框架完成航空机务维修智能终端移动端与后台的互联以及整个系统的数据传输。通过研究，探索了航空机务维修智能终端的实现可行性，应用React Native框架实现了移动端和后台两个平台的开发，初步证明了所提终端系统的功能符合性，为后续开发其他军事智能终端提供参考。</p><p>关键词 :机务维修，移动智能终端，React Native框架，Android</p><disp-formula id="hanspub.37229-formula2"><graphic xlink:href="//html.hanspub.org/file/10-1541846x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/10-1541846x7_hanspub.png" /> <img src="//html.hanspub.org/file/10-1541846x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>航空机务维修中由于个别保障人员依托自身经验，不按流程操作，存在误操作、漏操作、违规操作等现象 [<xref ref-type="bibr" rid="hanspub.37229-ref1">1</xref>]。这类维修差错轻则耽误飞行训练，重则造成系列飞机事故以及飞机事故症候，严重制约和限制了装备完好水平的保持和战斗力的提升。当前，世界各国军队都在大力推进信息化转型，装备保障模式也正在由传统的保障模式向信息化、网络化、智能化保障模式转变 [<xref ref-type="bibr" rid="hanspub.37229-ref2">2</xref>]。作为现代空军战斗力的重要保障，航空机务维修是航空装备保障的主要内容。将移动智能终端技术应用在航空装备维修作业领域，开发并应用交互式电子技术手册、便携式维修辅助设备等维修辅助工具，能够满足信息化战争的时效性、准确性和高质量，提高装备保障能力 [<xref ref-type="bibr" rid="hanspub.37229-ref3">3</xref>]。</p><p>各行各业都在应用智能终端解决规范性、流程性和可追溯性问题 [<xref ref-type="bibr" rid="hanspub.37229-ref4">4</xref>]，华中科技大学的曾侃基于手持终端建立的固定资产管理系统结合工作流技术，应用手持终端开发出客户端/服务器加网页/服务器的条码识别系统，完成资产清点工作 [<xref ref-type="bibr" rid="hanspub.37229-ref5">5</xref>]。南京理工大学的张立研以平板电脑为终端平台，研究炮兵射击指挥平台的设计开发 [<xref ref-type="bibr" rid="hanspub.37229-ref6">6</xref>]。电子科技大学的包江奇将维修工作与终端技术相结合，针对民用航空维修领域中大量使用数字化信息的特点，采用无线网络技术，探究了一款PMA终端系统的设计开发方法 [<xref ref-type="bibr" rid="hanspub.37229-ref7">7</xref>]。</p><p>上述这些文献对维修保障信息化进行了理论研究，建立了完整的技术模型，也给出了相应解决方案，但未深入基层实际操作，与当前航空兵机务部队实际问题有所差距。因此，本课题结合当前理论研究以及成果，在此基础上将基于Android的终端技术应用于外场机务质量检查工作，具有实际意义。</p><p>本文将紧紧围绕航空机务维修保障业务，分析基层机务维修作业的实际需求。初步构建出基于Android的机务维修终端的流程体系，应用互联网技术，实现文字、图片通信、拍照摄像等功能，完成机务维修流程电子指令发放、机务维修故障实时反馈、维修进度实时监控、辅助指挥决策等操作。提高工作效率，减少人为出错率，以创新为驱动来提高空军部队的战斗力。</p></sec><sec id="s4"><title>2. 关键技术分析</title><sec id="s4_1"><title>2.1. 智能终端</title><p>智能终端是集硬件、软件、通信协议于一体，能够通过(WI-FI)等无线网络实现前后端服务器、数据相连及设备之间互联 [<xref ref-type="bibr" rid="hanspub.37229-ref8">8</xref>]。基于开放式操作系统，用户可根据自身特定需求开发出应用程序和软件，实现工作、学习等相应功能的移动设备 [<xref ref-type="bibr" rid="hanspub.37229-ref9">9</xref>]。智能终端从个人计算机发展而来，满足了人们对于小型化、便携化、智能化的需求，通常包括：智能手机、笔记本电脑、平板电脑、PDA智能终端、可穿戴设备 [<xref ref-type="bibr" rid="hanspub.37229-ref10">10</xref>]。随着终端的迅猛发展和不断更新换代，智能手机成为一个功能强大、可靠性高的手持设备，占据着终端市场的半壁江山。特别是，当前可用于航空维修领域的智能终端拥有流畅的系统，可靠的防水、防摔、防抖能力，大容量电池的长效续航能力，适应场站内机务维修作业环境。</p></sec><sec id="s4_2"><title>2.2. React Native框架</title><p>React Native框架(简称RN)不是一个新型模式，而是将React框架应用在移动应用领域的派生物，由Facebook公司最先提出并开源化应用，它具有跨平台的优势，能够在IOS和Android两大平台应用 [<xref ref-type="bibr" rid="hanspub.37229-ref10">10</xref>]。React Native APP由JavaScript语言编写，依托Bridge实现与Native的调用 [<xref ref-type="bibr" rid="hanspub.37229-ref10">10</xref>]。随着React Native的发展越来越多互联网大公司都采用此模式，如：百度、淘宝、腾讯、Face Book，Instgram等。其具有如下优点：</p><p>(1) 可跨终端系统，代码复用率高，统一运用一套JavaScript代码，封装程度高 [<xref ref-type="bibr" rid="hanspub.37229-ref11">11</xref>]；</p><p>(2) 性能接近于原生应用；</p><p>(3) 单一技术栈，只需学习JavaScript一门语言，开发社区活跃，帮助指导多 [<xref ref-type="bibr" rid="hanspub.37229-ref12">12</xref>]。</p><p>结合现行开发趋势和实际需求，考虑到航空机务维修终端需要在一定程度上的交互及性能需求上，兼并可靠稳定特性，并且降低开发难度，所以应用React Native框架。</p></sec><sec id="s4_3"><title>2.3. 使用环境分析</title><p>基层机务维修作业环境概略地分为内场和外场，内场主要负责飞机定检及修理等主要工作，在修理厂内工作，工作环境较为干净、有序。室内工作环境能够较好地排除天气因素影响，智能终端设备能够顺利完成工作。外场主要负责保障飞行，完成简单更换件、调试工作，主要在机场跑道附近工作，要求具备全天候作业能力。根据目前智能终端使用情况来看，其能够适应气候环境的影响，正常工作 [<xref ref-type="bibr" rid="hanspub.37229-ref13">13</xref>]。</p></sec></sec><sec id="s5"><title>3. 需求分析与设计</title><sec id="s5_1"><title>3.1. 需求分析</title><p>当前多数航空机务维修人员在维修过程中仍然缺乏信息化手段，多依托纸质介质或电子卡片，通过维修作业卡片、履历本、登记簿等文档，实现任务发放、情况登记、责任人签字、问题反馈等功能。容易出现填写不规范、填写错误、填写问题纠正、反馈不及时等现象，从而导致维修差错发生。</p><p>因此，航空机务维修终端系统主要分为面向作业人员的移动端APP和面向管理者的后台端维修管理系统 [<xref ref-type="bibr" rid="hanspub.37229-ref14">14</xref>]。基层机务工作人员作为用户通过移动端主要完成验证登录、专业选择、任务选择、业务操作、故障反馈等工作。室内值班员负责运营后台维修管理系统收集数据监督整个机务工作的完成情况、各架飞机的健康状态、以及飞机故障处理情况等工作。结构如图1所示。</p><p>图1. 航空机务维修终端系统业务结构图</p><p>各主要功能模块需求如下：</p><p>(1) 任务管理模块要具备稳定、可靠的性能，并且满足在未来能够增添内容的要求；</p><p>(2) 专业选择模块具有正确链接作业内容的能力，确保工作内容不混淆，达到可靠、准确的目标，并且可扩展、可合并；</p><p>(3) 根据规定的顺序正确显示维修作业任务，合理的人机交互界面，方便基层维修人员的使用。顺利地完成信息录入，可靠地调用拍照、录像、录音等功能，可更新、升级。</p></sec><sec id="s5_2"><title>3.2. 总体设计</title><p>航空机务维修终端分为两级结构，分为智能终端和后台。后台置于总值班室内，既包括智能终端的服务器，又配套相应Web软件。后台接收前端传来的信息，负责监控整机机务维修工作进度，对反馈问题进行处理后，将解决结果返回至手持端。智能终端则交由各专业分队，由作业人员手持终端，进行信息采集，辅助完成作业。</p></sec><sec id="s5_3"><title>3.3. UI设计</title><p>航空机务维修终端配套软件UI设计总体秉持便于操作、重点突出、使用简单等理念。总体结构由一个MainActivity包含若干Activity组件和ReactRootView类构成 [<xref ref-type="bibr" rid="hanspub.37229-ref15">15</xref>]。软件的主页面是经典的登录验证界面，由Android提供的两个TextView和一个Button组件构成，从上至下是账号、密码、登录。其他页面均由RN层构成，包括任务选择界面、专业选择界面、检查界面、故障反馈界面，都存储ReactRootView类中。</p></sec><sec id="s5_4"><title>3.4. 详细功能设计</title><p>(1) 终端配套软件</p><p>结合终端需求分析，本文中航空机务维修智能终端软件典型功能结构的设计如图2所示，总共分为业务工作、任务管理、专业管理、健康状态管理四大模块。</p><p>任务管理模块主要功能是结合实际工作情况，在进行维修业务操作之前，进行任务选择。任务管理模块分为飞行日任务、机械日任务、安全警示日任务三部分，每一部分链接着当日不同的作业任务。通过任务管理模块，对工作业务进行选择，减少了任务内容纸质化记录，防止失泄密，更加保密安全。由后台控制当日作业内容，实现作业任务电子化记录。未来可基于作战装备保障模式的更新进行内容重新规划，加载新的任务记录。</p><p>图2. 终端配套软件功能结构图</p><p>专业管理模块主要根据目前飞机保障模式划分，根据不同类型的专业构成。机务维修人员通过对专业的选择，进入对应专业的作业模块，是完成下一步工作的承接模块。各个专业在同一任务下，对应不同的工作内容，且根据作业计划，在相应时间内完成。</p><p>业务工作模块是机务维修人员进行作业的主要功能模块，包含着机务作业的主要内容。业务工作模块由业务流程功能、信息采集功能、异常及故障上报功能三部分组成。在信息采集方面，机务维修人员手持终端设备，根据工作流程，按照顺序逐步进行操作，避免出现未按步骤操作现象。与此同时，维修作业的流程化、电子化固定，减少了人为因素的干扰。给机务维修人员做到了提醒、辅助的功效，简化了持卡、读卡操作等步骤，提高了机组作业效率。机务维修人员在使用时，根据终端界面内容显示，利用终端触屏、拍照、摄像、录音功能，实现实时信息采集。相对于传统的填写纸质文档，内容更加丰富、多样、纪实、完整，采集速度更快，实时记录的方式，给予工作更清楚的追溯情况，有效地防范了以往的事中不填、事后补填、乱填、无法追责的现象。并且采集到的信息都存储在后台数据库，减少了纸质文档存储，电子化存储容量更大，存储效果更好，占地面积更小，成本更低。在异常及故障上报方面，当机务维修人员在作业过程中，遇到特殊情况，无法在现场及时做出明确的决定时，机务维修终端提供利用照片、文本形式将现场问题反馈至后台。后台可结合专家系统或有经验处理类似问题的人给出初步判读，为操作人员提供辅助，指导机务维修人员继续作业，完成其余各项工作，将工作计划尽量按时完成。实时的功能上传、反馈，相比于传统登记问题反馈过程，更加简便，反馈内容更加丰富，缩短了问题处理时间，增强了机务保障能力。</p><p>(2) 后台软件</p><p>后台软件由数据库管理、系统通信、任务完成情况监督、问题反馈接收、问题处理结果下达、作业任务下达六个功能模块构成，其结构如图3所示。</p><p>数据库管理功能基于后台服务器，整个终端数据存储在后台服务器上，前端访问服务器，调用数据，更改后传回后台存储 [<xref ref-type="bibr" rid="hanspub.37229-ref16">16</xref>]。系统通信功能是后台服务器与智能终端之间进行数据传输的基础，实现后台服务器与智能终端相连 [<xref ref-type="bibr" rid="hanspub.37229-ref17">17</xref>]。作业任务下达功能是根据前端的选择，针对不同的专业不同的飞机，下达给用户今日的作业任务，实现任务下达的信息化过程。任务完成情况监督功能主要由智能终端传来实时完成进度，后台软件基于数据进行可视化操作，形成任务完成进度条，提供后台实时监督任务完成情况。问题反馈接受功能和问题处理结果下达功能是对前端反馈的作业问题进行接受，再由后台值班人员寻找其他力量去帮助处理，并将结果下达至终端。</p><p>图3. 后台软件功能图</p></sec></sec><sec id="s6"><title>4. 典型功能实现</title><sec id="s7_0_1"><title>4.1. 流程实现</title><p>根据功能流程实现界面跳转流程如图4所示，在手持终端打开应用软件后进入应用登录界面，输入账号和密码后进入任务选择页面。选择完成后进入专业选择界面。然后进入任务界面，逐步操作，遇到异常或故障，进入故障上报界面或异常上报界面。随后利用终端拍照功能，进入拍照界面，反馈完成后继续操作，直至任务完成。</p><p>图4. 页面流程图</p></sec><sec id="s7_1"><title>4.2. 功能实现效果</title><p>点击军事航空装备智能保障终端图标后，进入登录界面，键入机检人员的工作账号和其密码便可登录至终端的移动端，其后进行当日任务的选择与专业的选择，如图5。</p><p>图5. 初始界面图</p><p>后台Web应用程序部署在浏览器上，开机后，显示用户名、用户密码、登录指令框，登录以后，系统经过初始化(自主入网、部件互连、同步通讯录及共享数据列表、统一时钟、自动定位)后进入主界面如图6，界面顶端显示飞机基本状态、操作注意事项、时间信息、单位名称、终端编号信息、故障处理与各专业处理情况等。界面下方还有工作的总进度条，方便机务总指挥对进程的判断与决策。</p><p>图6. 初始界面图</p><p>选择相应的专业后进入相对应的定检界面，根据页面提示，连续进行每一步的检查，完成检查后会有相应专业提示。</p><p>机务维修人员作业过程中遇到特殊情况时，需手动退出工作流程。即可点击下方“终止检查”按钮退出检查工作。若检查其中某一步发现了异常，即可点击“故障”按钮进入故障汇报功能。此时智能终端弹出了故障上报界面，可进行故障的拍照与文字状况描述，及时将故障状况传送到后台。</p><p>当智能终端将现场故障或异常情况通过照片和文字描述返回至后台时，后台界面实时接受到信息。后台值班人员对信息进行查看、分析，通过采取查询资料、应用专家系统、咨询等方式，单击“去处理”，进入故障处理界面，给出处理意见。</p><p>智能终端实时接受后台处理信息，获取了故障解决方案或者下一步指令。根据终端界面所显示的解决方案，排查故障后，可继续进行下一步操作。</p><p>在作业完成后，智能终端又跳回专业选择界面。在已完成专业进行标记，机务维修人员可单击界面下方“查看检查记录”对检查情况进行查看。同时，后台指挥人员也可以在后台软件界面右上方进行查询，对排查故障情况进行记录。</p></sec></sec><sec id="s8"><title>5. 软件测试</title><p>软件测试是软件开发过程中必不可少的部分，不仅仅包括代码结构检查，而是按照规定的标准原则对软件各方面、各种情况进行系统、严谨的验证和确认 [<xref ref-type="bibr" rid="hanspub.37229-ref18">18</xref>]。白盒测试主要是对软件代码进行检测，在软件开发过程中应用IDEA等规范化编辑器，软件代码结构完整规范，纠错及时。并且Android studio自带Android Device Monitor工具对软件进行检看，包括UI结构、应用线程等。因此，本系统主要进行软件黑盒测试，主要根据软件功能顺序，验证功能是否正确、界面是否错误、输入输出是否错误、访问数据库是否存在问题等。最后按照实验运行结果，是否达到预期成果。如果某个模块出现错误，进行修复后，在进行回归测试。</p><p>根据功能分析，设计终端软件测试内容主要为：登录界面初始化、账号登录、任务选择、专业选择、工作检查、故障上报、处理信息接收、查看检查记录。测试结果显示软件系统能够顺利实现预期设计功能，各功能模块使用正常，页面显示正常，功能跳转正常，按照预计标准运行，运行状况稳定，无特殊情况，达到预期效果。</p></sec><sec id="s9"><title>6. 结束语</title><p>以智能手机为依托，结合机务检查工作，辅助开发了React Native应用程序，进行了系统需求分析，划分系统功能模块。通过初步设计终端系统框架，最终实现部分功能，完成机务工作案例的演示，实现机务维修终端的设计初想。论证智能手机与机务工作结合的可能性，为后续终端开发提供思路。</p><p>相信在5G时代，智能终端远不止于此，功能会更加强大与完美。未来必定是基于终端的时代，航空机务维修终端的功能也会更加丰富饱满，在后期的开发过程中还可以加入新的功能模块，如：在线学习、备件管理等。</p></sec><sec id="s10"><title>基金项目</title><p>国家自然科学基金(71701210)：“不确定环境下考虑时变因素航空安全多维预测预警及应急响应机制研究”。</p></sec><sec id="s11"><title>文章引用</title><p>汤再辉,崔利杰,童 奇,从继平. 基于React Native的航空机务维修智能终端开发与实现Development and Implementation of Intelligent Terminal for Aviation Maintenance Based on React Native[J]. 计算机科学与应用, 2020, 10(08): 1498-1506. https://doi.org/10.12677/CSA.2020.108157</p></sec><sec id="s12"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.37229-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">黄秀一. 飞机维修计划和机务维修人为因素研究[J]. 设备管理与维修, 2019, 439(1): 40-41.</mixed-citation></ref><ref id="hanspub.37229-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">郑艺辉. 浅谈军事信息化对现代军事的作用与影响[J]. 电子世界, 2017(9): 46-46.</mixed-citation></ref><ref id="hanspub.37229-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">李浩军, 黄琰, 尹东亮. 美军装备维修保障能力建设特点与启示[J]. 海军工程大学学报(综合版), 16(4): 57-59.</mixed-citation></ref><ref id="hanspub.37229-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">李铁奇, 韩启凤. 浅谈物联网时代下的移动智能终端[J]. 电脑知识与技术, 2019(28): 208-209.</mixed-citation></ref><ref id="hanspub.37229-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">曾侃. 基于手持终端的固定资产管理系统设计与实现[D]: [硕士学位论文]. 武汉: 华中科技大学, 2011.</mixed-citation></ref><ref id="hanspub.37229-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">张立研. 基于平板电脑的炮兵射击指挥平台设计方法研究[D]: [硕士学位论文]. 南京: 南京理工大学, 2016.</mixed-citation></ref><ref id="hanspub.37229-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">包江奇. 基于无线网络的便携式飞机维修辅助系统的设计[D]: [硕士学位论文]. 成都: 电子科技大学, 2011.</mixed-citation></ref><ref id="hanspub.37229-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">周洁. 智能移动终端在我国的发展与反思[J]. 传媒论坛, 2019, 2(6): 122-123.</mixed-citation></ref><ref id="hanspub.37229-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">沈超, 曹婷婷, 王一萌, 等. 基于React Native的农业气象自动化观测系统国家级平台移动应用APP设计[J]. 农业与技术, 2019, 39(18): 132-135.</mixed-citation></ref><ref id="hanspub.37229-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">冯博. 基于React Native框架的兴趣社区Android客户端设计与实现[D]: [硕士学位论文]. 哈尔滨: 哈尔滨工业大学, 2017.</mixed-citation></ref><ref id="hanspub.37229-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">张帅桐. 浅议四种移动APP的开发模式[J]. 电脑知识与技术, 2017, 13(6): 87-88.</mixed-citation></ref><ref id="hanspub.37229-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">李敬, 陈才扣, 陆羽, 等. 基于React Na-tive的学教在线一站式平台开发[J]. 电脑知识与技术, 2018, 14(27): 70, 107.</mixed-citation></ref><ref id="hanspub.37229-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">陈毓夔. 民航机务维修现状及应对[J]. 管理学家, 2019(5): 146-147.</mixed-citation></ref><ref id="hanspub.37229-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">杨尤. 关于航空维修保障装备信息化系统的研究与设计[J]. 科学与信息化, 2018(33): 29-29.</mixed-citation></ref><ref id="hanspub.37229-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">焦锋. React Native在app开发中的应用研究[J]. 数字技术与应用, 2017(6): 109.</mixed-citation></ref><ref id="hanspub.37229-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">赵永鹏. 基于React Native的物业管理系统设计[J]. 数字技术与应用, 2018(1): 165-165.</mixed-citation></ref><ref id="hanspub.37229-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">陈宇收. 基于React Native的智慧吉首APP的设计与实现[J]. 电子技术与软件工程, 2018, 141(19): 86-87.</mixed-citation></ref><ref id="hanspub.37229-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">张芳杰, 刘太君, 尚爱民, 等. 基于react-native的移动端周界入侵定位系统[J]. 无线通信技术, 2019(3): 1-5.</mixed-citation></ref></ref-list></back></article>