<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2019.912263</article-id><article-id pub-id-type="publisher-id">CSA-33550</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20191200000_24036314.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  N个Shamir门限秘密共享方案组合的通用可验证性设计
  Universal Verifiability Design for the Combination of N Shamir Threshold Secret Sharing Schemes
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郭</surname><given-names>涌浩</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>卫</surname><given-names>宏儒</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>北京科技大学数理学院，北京</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>29</day><month>11</month><year>2019</year></pub-date><volume>09</volume><issue>12</issue><fpage>2367</fpage><lpage>2374</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   秘密共享方案的可验证性是安全多方计算协议中重要的一个研究方向，该领域的研究可以作为安全计算的公平性、安全性、正确性研究基础。本文设计了一种n个Shamir门限秘密共享方案组合的通用可验证性，该方案与已有的Shamir门限秘密共享方案不同，本文将每个参与者分享的秘密数扩展到个，即个Shamir门限的组合，而不是单单的对于一个秘密的分享，使其应用的方面更加广泛；同时，弥补了现有通用方法在输入阶段和计算阶段的验证性的不足，最后实现了每个阶段、每个步骤可验证性的连续性、传递性。 The verifiability of secret sharing scheme is an important research direction in secure multi-party computing protocols. The research in this field can be used as the basis for the fairness, security and correctness of security computing. This paper designed that a universal verifiability of a n-shamir threshold secret sharing scheme is different from the existing shamir threshold secret sharing scheme. This paper extends the secret number shared by each participant to n, i.e. the combination of n-shamir thresholds, rather than a single secret sharing, makes its application more extensive; at the same time, it makes up for the lack of verification of the existing general methods in the input phase and the computing phase. Finally, the continuity and transitivity of the verifiability of each stage and every step are achieved. 
  
 
</p></abstract><kwd-group><kwd>秘密分享方案，可验证性，安全多方计算，Shamir门限, Secret Sharing</kwd><kwd> Verifiability</kwd><kwd> Secure Multiparty Computing</kwd><kwd> Shamir Threshold</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>N个Shamir门限秘密共享方案组合的通用可验证性设计<sup> </sup></title><p>郭涌浩，卫宏儒</p><p>北京科技大学数理学院，北京</p><p>收稿日期：2019年12月2日；录用日期：2019年12月13日；发布日期：2019年12月20日</p><disp-formula id="hanspub.33550-formula16"><graphic xlink:href="//html.hanspub.org/file/20-1541617x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>秘密共享方案的可验证性是安全多方计算协议中重要的一个研究方向，该领域的研究可以作为安全计算的公平性、安全性、正确性研究基础。本文设计了一种n个Shamir门限秘密共享方案组合的通用可验证性，该方案与已有的Shamir门限秘密共享方案不同，本文将每个参与者分享的秘密数扩展到个，即个Shamir门限的组合，而不是单单的对于一个秘密的分享，使其应用的方面更加广泛；同时，弥补了现有通用方法在输入阶段和计算阶段的验证性的不足，最后实现了每个阶段、每个步骤可验证性的连续性、传递性。</p><p>关键词 :秘密分享方案，可验证性，安全多方计算，Shamir门限</p><disp-formula id="hanspub.33550-formula17"><graphic xlink:href="//html.hanspub.org/file/20-1541617x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/20-1541617x7_hanspub.png" /> <img src="//html.hanspub.org/file/20-1541617x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>秘密共享是当今生活中广泛使用的技术，主要是对信息进行加密和保护，防止外泄。自Shamir和Blakley [<xref ref-type="bibr" rid="hanspub.33550-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.33550-ref2">2</xref>] 引出秘密共享的问题并给出了非常简单的问题解决方案以来，关于这一主题的研究已经深入。Shamir和Blakley的方案是在没有故障的模型中有效的解决方案。Tompa和Woll [<xref ref-type="bibr" rid="hanspub.33550-ref3">3</xref>] 以及McEliece和Sarwate [<xref ref-type="bibr" rid="hanspub.33550-ref4">4</xref>] 的方案在存在故障的模型中给出了部分解决方案。近年来，许多学者已经开始研究秘密共享技术，并提出了各种秘密共享方案，其中有中国剩余定理、双线性对技术、签密与消息恢复算法、公钥密码体制等。蒋华等人基于公钥密码体制，对其进行改进，提出了一种双向认证的方案。只要是在申请人，身份验证者和服务器之间的相互身份验证加密 [<xref ref-type="bibr" rid="hanspub.33550-ref5">5</xref>]。2014年张柄虹等人提出了一种方案，在该方案中，秘密分发的过程是独立的，并且与参与者的私钥计算分开 [<xref ref-type="bibr" rid="hanspub.33550-ref6">6</xref>]。2018年，谷婷提出了一种秘密共享方案 [<xref ref-type="bibr" rid="hanspub.33550-ref7">7</xref>]。在该方案中，秘密份额由参与者产生，利用签密与消息恢复算法，参与的所有人都可以查验分发者的份额。</p><p>在秘密共享方案飞速发展的下，对于方案的正确性、有效性和安全性变得重要起来，即秘密共享方案的可验证有着十分深远的研究意义。Chor等人 [<xref ref-type="bibr" rid="hanspub.33550-ref8">8</xref>] 第一次定义了可验证秘密共享的完整概念，并给出了问题的解决方案。接下来的研究，在各种不同假设下，不同的学者给出了问题的解决方案。只是为了实现可验证性的目标，这些协议偏离了原始解决方案的简单性。它们需要繁重的计算和广泛的零知识证明。此外，为了重建秘密，还需要进行大量计算。大量的研究和实际操作表明，简单的协议是很重要的。Gennaro的方案基于Shamir的秘密共享方案，并增加了额外的低成本结构。这种结构基本上是参与者对持有秘密的公开承诺。</p></sec><sec id="s4"><title>2. 基本知识</title><p>本文设计的可验证性秘密共享方案涉及到以下三个知识：① shamir门限秘密共享方案；② 零知识证明 [<xref ref-type="bibr" rid="hanspub.33550-ref9">9</xref>] ；③ Pedersen承诺协议 [<xref ref-type="bibr" rid="hanspub.33550-ref10">10</xref>]。</p><p>Shamir的门限秘密共享方案通过构造多项式，利用多项式进行秘密的分享，本文秘密共享是基于Shamir门限秘密共享方案实现的；本文使用的零知识证明改编自Cramer和Damgar的方案，使其更具有证明的一般性，是本文计算阶段中的重要一环；Pedersen承诺协议是一个满足无条件秘密性的同态承诺协议，作为本文可验证性设计的基本框架。</p></sec><sec id="s5"><title>3. 秘密共享方案及可验证性设计设计</title><sec id="s5_1"><title>3.1. 秘密共享方案</title><p>本文将Gennaro的VSS方案和Pedersen同态承诺方案结合，实现了对份额正确性的验证。该MPC协议将待计算函数表示为加法和乘法组成的有向图，通过进行对应的加法协议和乘法协议来实现计算，其结构如图1所示。该协议可分为初试化阶段，输入阶段，计算阶段和输出阶段。</p><p>图1. 秘密共享方案结构</p><p>初始化阶段：假设协议有n个参与者，分别记作 P 1 , P 2 , ⋯ , P n ，每个参与者分别对应一个公开身份数 x i ∈ Z ∗ ( i ≠ j ⇒ x i ≠ x j , x 0 = 0 ) ，以及一个秘密 s i ∈ Q + , i = 1 , 2 , ⋯ , n 。n个参与者协商一个大素数p，该素数满足 p = 2 q + 1 ，其中q也是素数，g为 Z p * 的q阶元，h为g生成的子群中的随机元素。上述的 p , g , h 是构造可验证性使用的承诺函数的参数。</p><p>输入阶段：每个参与者 P i ( i = 1 , 2 , ⋯ , n ) 独立随机地选择 2 t + 1 个t次多项式，使用上述多项式分别在有理数域上共享 s i , s i 2 , ⋯ , s i 2 t , s i 2 t + 1 ，即 f i 1 ( 0 ) = s i , f i 2 ( 0 ) = s i 2 , ⋯ , f i 2 t + 1 ( 0 ) = s i 2 t + 1</p><p>f i 1 ( x ) = s i + a i 1 1 x + ⋯ + a i 1 t x t f i 2 ( x ) = s i 2 + a i 2 1 x + ⋯ + a i 2 t x t             ⋮ f i 2 t + 1 ( x ) = s i 2 t + 1 + a i 2 t + 1 1 x + ⋯ + a i 2 t + 1 t x t (3-1)</p><p>其中 s i 为参与者 P i 的秘密。</p><p>同样的， P i 生成随机数 r i , c i ∈ Q + ，并独立地随机选择两个t次多项式 r i ( x ) , c i ( x ) ，分别在有理数域上分享 r i , c i ，即 r i ( 0 ) = r i , c i ( 0 ) = c i</p><p>r i ( x ) = r i + a i 1 x + a i 2 x 2 + ⋯ + a i t x t c i ( x ) = c i + b i 1 x + b i 2 x 2 + ⋯ + b i t x t 。 (3-2)</p><p>分别使用式(3-1) (3-2)计算 f i 1 ( x j ) , f i 2 ( x j ) , ⋯ , f i 2 t + 1 ( x j ) , r i ( x j ) , c i ( x j ) ，并将</p><p>( f i 1 ( x j ) , f i 2 ( x j ) , ⋯ , f i 2 t + 1 ( x j ) , r i ( x j ) , c i ( x j ) ) 发送给 P j ，其中 j = 1 , 2 , ⋯ , n 。同时， P i 将承诺集合 ( A i 1 j , A i 2 j , ⋯ , A i 2 t + 1 j , A i j ) , i ≠ j , j = 1 , 2 , ⋯ , n ，进行广播，</p><p>A i 1 j = g f i 1 ( x j ) h c i ( x j ) mod p A i 2 j = g f i 2 ( x j ) h c i ( x j ) mod p           ⋮ A i 2 t + 1 j = g f i 2 t + 1 ( x j ) h c i ( x j ) mod p A i j = g r i ( x j ) h c i ( x j ) mod p 。 (3-3)</p><p>计算阶段：步骤(1)：n个参与者约定在式(3-2)中的 r 1 ( x ) , r 2 ( x ) , ⋯ , r n ( x ) 取定 2 t + 1 个随机多项式，不妨就将这 2 t + 1 个多项式记为 r 1 ( x ) , r 2 ( x ) , ⋯ , r 2 t + 1 ( x ) ，其对应的 2 t + 1 参与者分别是 P 1 , P 2 , ⋯ , P 2 t + 1 。每个参与者 P j 计算</p><p>g i ( x j ) = r 1 ( x j ) f i 1 ( x j ) + r 2 ( x j ) f i 2 ( x j ) + ⋯ + r 2 t + 1 ( x j ) f i 2 t + 1 ( x j ) (3-4)</p><p>A = ( 1 x 1 x 1 2 ⋯ x 1 2 t 1 x 2 x 2 2 ⋯ x 2 2 t ⋮ ⋮ ⋮ ⋱ ⋮ 1 x 2 t + 1 x 2 t + 1 2 ⋯ x 2 t + 1 2 t )</p><p>A − 1 = ( λ 1 λ 2 λ 3 ⋯ λ 2 t + 1 ∗ ∗ ∗ ⋯ ∗ ⋮ ⋮ ⋮ ⋱ ⋮ ∗ ∗ ∗ ⋯ ∗ )</p><p>承诺<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x46_hanspub.png" xlink:type="simple"/></inline-formula>进行广播。</p><disp-formula id="hanspub.33550-formula18"><label>(3-5)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/20-1541617x47_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x48_hanspub.png" xlink:type="simple"/></inline-formula>为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x49_hanspub.png" xlink:type="simple"/></inline-formula>随机选择与承诺相关的t次多项式。</p><p>步骤(2)：<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x50_hanspub.png" xlink:type="simple"/></inline-formula>中的每个<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x51_hanspub.png" xlink:type="simple"/></inline-formula>随机选择n个t次多项式<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x52_hanspub.png" xlink:type="simple"/></inline-formula>分别用来共享<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x53_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x54_hanspub.png" xlink:type="simple"/></inline-formula>，接着随机选择1个t次多项式<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x55_hanspub.png" xlink:type="simple"/></inline-formula>用来共享<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x56_hanspub.png" xlink:type="simple"/></inline-formula>，即<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x57_hanspub.png" xlink:type="simple"/></inline-formula>。然后<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x58_hanspub.png" xlink:type="simple"/></inline-formula>计算<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x59_hanspub.png" xlink:type="simple"/></inline-formula>，并将<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x60_hanspub.png" xlink:type="simple"/></inline-formula>发送给<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x61_hanspub.png" xlink:type="simple"/></inline-formula>。承诺集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x62_hanspub.png" xlink:type="simple"/></inline-formula>。其中，当<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x63_hanspub.png" xlink:type="simple"/></inline-formula>时，有<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x64_hanspub.png" xlink:type="simple"/></inline-formula>。将承诺集合进行广播，</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x65_hanspub.png" xlink:type="simple"/></inline-formula>。 (3-6)</p><p>输出阶段：对于每个<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x66_hanspub.png" xlink:type="simple"/></inline-formula>，计算输出</p><disp-formula id="hanspub.33550-formula19"><label>(3-7)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/20-1541617x67_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x68_hanspub.png" xlink:type="simple"/></inline-formula>，广播承诺集合</p><disp-formula id="hanspub.33550-formula20"><label>(3-8)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/20-1541617x69_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x70_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>重构阶段：每个<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x71_hanspub.png" xlink:type="simple"/></inline-formula>具有输出<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x72_hanspub.png" xlink:type="simple"/></inline-formula>。使用拉格朗日插值公式，任意的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x73_hanspub.png" xlink:type="simple"/></inline-formula>个参与者都可以恢复<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x74_hanspub.png" xlink:type="simple"/></inline-formula>。</p></sec><sec id="s5_2"><title>3.2. 可验证性分析</title><sec id="s5_2_1"><title>3.2.1. 输入阶段的可验证性</title><p>以<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x75_hanspub.png" xlink:type="simple"/></inline-formula>为例，根据式(3-3)所示，有承诺<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x76_hanspub.png" xlink:type="simple"/></inline-formula>，则根据(3-1)式，可将多项式组写成矩阵乘积的形式</p><disp-formula id="hanspub.33550-formula21"><graphic xlink:href="//html.hanspub.org/file/20-1541617x77_hanspub.png"  xlink:type="simple"/></disp-formula><p>不妨记为：</p><disp-formula id="hanspub.33550-formula22"><graphic xlink:href="//html.hanspub.org/file/20-1541617x78_hanspub.png"  xlink:type="simple"/></disp-formula><p>根据上述多项式，容易得到矩阵V是可逆的，所以可将上式写成：</p><disp-formula id="hanspub.33550-formula23"><graphic xlink:href="//html.hanspub.org/file/20-1541617x79_hanspub.png"  xlink:type="simple"/></disp-formula><p>对于任意的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x80_hanspub.png" xlink:type="simple"/></inline-formula>，有</p><disp-formula id="hanspub.33550-formula24"><graphic xlink:href="//html.hanspub.org/file/20-1541617x81_hanspub.png"  xlink:type="simple"/></disp-formula><p>为了方便起见，记<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x82_hanspub.png" xlink:type="simple"/></inline-formula>，则上式记作</p><disp-formula id="hanspub.33550-formula25"><label>(3-9)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/20-1541617x83_hanspub.png"  xlink:type="simple"/></disp-formula><p>记<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x84_hanspub.png" xlink:type="simple"/></inline-formula>为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x85_hanspub.png" xlink:type="simple"/></inline-formula>的第m行第k列的值，所以可得<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x86_hanspub.png" xlink:type="simple"/></inline-formula>，并代入到式(3-9)中，可得</p><disp-formula id="hanspub.33550-formula26"><graphic xlink:href="//html.hanspub.org/file/20-1541617x87_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x88_hanspub.png" xlink:type="simple"/></inline-formula>，以上所述，将<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x89_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x90_hanspub.png" xlink:type="simple"/></inline-formula>作比较，即可验证自己收到的份额是否和其他参与者收到</p><p>份额出自同一组多项式(这里不妨记作VSPS性质)，从而来判断自己收到的份额是否有效，即正确性得到检验。</p></sec><sec id="s5_2_2"><title>3.2.2. 计算阶段的可验证性</title><p>第一步：经过了输入阶段的验证，每个参与方<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x91_hanspub.png" xlink:type="simple"/></inline-formula>已经收到经过输入阶段VSPS验证的正确份额<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x92_hanspub.png" xlink:type="simple"/></inline-formula>，以此承诺函数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x93_hanspub.png" xlink:type="simple"/></inline-formula>也是经过VSPS验证被证实正确的。利用正确承诺函数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x94_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x95_hanspub.png" xlink:type="simple"/></inline-formula>并使用前文提到的零知识证明方法，每一个参与者<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x96_hanspub.png" xlink:type="simple"/></inline-formula>对<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x97_hanspub.png" xlink:type="simple"/></inline-formula>广播的承诺<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x98_hanspub.png" xlink:type="simple"/></inline-formula>进行比较，来保证正确的秘密份额被使用。</p><p>第二步：根据上述第一步，参与者<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x99_hanspub.png" xlink:type="simple"/></inline-formula>有经过前面检验的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x100_hanspub.png" xlink:type="simple"/></inline-formula>，根据式(3-6)，可验证性如下：</p><p>以<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x101_hanspub.png" xlink:type="simple"/></inline-formula>为例，</p><p>1) 当<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x102_hanspub.png" xlink:type="simple"/></inline-formula>时，即<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x103_hanspub.png" xlink:type="simple"/></inline-formula>时，即：</p><disp-formula id="hanspub.33550-formula27"><graphic xlink:href="//html.hanspub.org/file/20-1541617x104_hanspub.png"  xlink:type="simple"/></disp-formula><p>所以有<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x105_hanspub.png" xlink:type="simple"/></inline-formula>，根据<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x106_hanspub.png" xlink:type="simple"/></inline-formula>的定义，原式可以写成：</p><disp-formula id="hanspub.33550-formula28"><graphic xlink:href="//html.hanspub.org/file/20-1541617x107_hanspub.png"  xlink:type="simple"/></disp-formula><p>所以，根据模的运算性质，和承诺函数集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x108_hanspub.png" xlink:type="simple"/></inline-formula>的形式，上式可以写成</p><disp-formula id="hanspub.33550-formula29"><graphic xlink:href="//html.hanspub.org/file/20-1541617x109_hanspub.png"  xlink:type="simple"/></disp-formula><p>所以，在步骤(1)中，验证正确的承诺函数集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x110_hanspub.png" xlink:type="simple"/></inline-formula>，就可以将<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x111_hanspub.png" xlink:type="simple"/></inline-formula>与<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x112_hanspub.png" xlink:type="simple"/></inline-formula>的乘积作比较，可以判断函数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x113_hanspub.png" xlink:type="simple"/></inline-formula>是否分别用来共享<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x114_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>2) 当<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x115_hanspub.png" xlink:type="simple"/></inline-formula>时，同理如输入阶段，使用VSPS验证来验证自己收到的份额是否有效。</p></sec><sec id="s5_2_3"><title>3.2.3. 输出阶段的可验证性</title><p>经过了计算阶段的验证，每个参与方<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x116_hanspub.png" xlink:type="simple"/></inline-formula>已经收到了经过验证的正确的份额</p><p><inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x117_hanspub.png" xlink:type="simple"/></inline-formula>，和验证正确的承诺<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x118_hanspub.png" xlink:type="simple"/></inline-formula></p><p>根据式(4-7)，并以式(4-8)中的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x119_hanspub.png" xlink:type="simple"/></inline-formula>为例，</p><disp-formula id="hanspub.33550-formula30"><graphic xlink:href="//html.hanspub.org/file/20-1541617x120_hanspub.png"  xlink:type="simple"/></disp-formula><p>将参与者<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x121_hanspub.png" xlink:type="simple"/></inline-formula>的承诺<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x122_hanspub.png" xlink:type="simple"/></inline-formula>与计算阶段经过验证的承诺<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x123_hanspub.png" xlink:type="simple"/></inline-formula>作比较，就可以判断对于输出的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541617x124_hanspub.png" xlink:type="simple"/></inline-formula>是否是正确的。</p></sec></sec></sec><sec id="s6"><title>4. 结束语</title><p>关于安全多方计算协议的构造一直是密码学领域中的一个难解的问题。本文针对个Shamir门限的组合的秘密共享方案的可验证性进行设计，完成了Shamir门限组合的秘密共享方案的通用可验证性。该项研究有着很重要的意义。现实中攻击者都是理性的，已有很多学者 [<xref ref-type="bibr" rid="hanspub.33550-ref11">11</xref>] 采取惩罚措施，约束恶意攻击者来实现安全多方计算中最难实现的公平性。这些利用惩戒措施实现公平性的研究，都是建立在可验证秘密共享方案的基础上，只有尽可能完全的实现可验证性，对不诚实的恶意参与者进行有效的识别，才能使惩戒措施有效的发挥作用。其次，本文的方案追求的是尽可能完整的可验证性，所以在计算上会有些复杂，这也为下一步的研究指明了方向。</p></sec><sec id="s7"><title>基金项目</title><p>国家自然科学基金(No.U1603116、No.61672509)。</p></sec><sec id="s8"><title>文章引用</title><p>郭涌浩,卫宏儒. N个Shamir门限秘密共享方案组合的通用可验证性设计Universal Verifiability Design for the Combination of N Shamir Threshold Secret Sharing Schemes[J]. 计算机科学与应用, 2019, 09(12): 2367-2374. https://doi.org/10.12677/CSA.2019.912263</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.33550-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Blakley, G.R. (1979) Safeguarding Cryptographic Keys. Proceedings of AFIPS National Computer Conference, Wash-ington DC, 4-7 June 1979, 313-317. &lt;br&gt;https://doi.org/10.1109/MARK.1979.8817296</mixed-citation></ref><ref id="hanspub.33550-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Shamir, A. (1979) How to Share a Secret. Communications of the ACM, 22, 612-613.  
&lt;br&gt;https://doi.org/10.1145/359168.359176</mixed-citation></ref><ref id="hanspub.33550-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Tompa, M. and Woll, H. (1988) How to Share a Secret with Cheaters. Journal of Cryptology, 1, 133-138.  
&lt;br&gt;https://doi.org/10.1007/BF02252871</mixed-citation></ref><ref id="hanspub.33550-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">McEliece, R.J. and Sarwate, D.V. (1981) On Sharing Secrets and Reed-Solomon Codes. Communications of the ACM, 24, 583-584. &lt;br&gt;https://doi.org/10.1145/358746.358762</mixed-citation></ref><ref id="hanspub.33550-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">蒋华, 张乐乾, 阮玲玲. 基于公钥密码体质的802.1x双向认证研究[J]. 计算机应用于软件, 2016, 33(2): 290-293.</mixed-citation></ref><ref id="hanspub.33550-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">张柄虹, 张串绒, 焦和平, 张欣威, 高胜国. 一种基于双线性对的公平可验证多秘密共享方案[J]. 空军工程大学学报(自然科学版), 2014, 15(4): 83-87.</mixed-citation></ref><ref id="hanspub.33550-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">谷婷. 无可信中心可验证可更新的向量空间秘密共享[J]. 科技与创新, 2018, 99(3): 35-39.</mixed-citation></ref><ref id="hanspub.33550-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Chor, B., Goldwasser, S., Micali, S. and Awerbuch, B. (1985) Verifiable Secret Sharing and Achieving Simultaneity in the Presence of Faults. Proceeding 26th Annual Symposium on the Foun-dations of Computer Science, Portland, 21-23 October 1985, 383-395. &lt;br&gt;https://doi.org/10.1109/SFCS.1985.64</mixed-citation></ref><ref id="hanspub.33550-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Gennaro, R. and Rabin, M.O. (1998) Simplified VSS and Fast-Track Multiparty Computations with Applications to Threshold Cryptography. Proceedings of the Seventeenth Annual ACM Symposium on Principles of Distributed Computing, Puerto Vallarta, 28 June-2 July 1998, 101-111. &lt;br&gt;https://doi.org/10.1145/277697.277716</mixed-citation></ref><ref id="hanspub.33550-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Qiu, G., Wang, H., Wei S.M. and Xiao, G.Z. (2006) Infor-mation-Theoretic Secure Verifiable Secret Sharing over RSA Modulus. Wuhan University Journal of Natural Sciences, 11, 1849-1852. &lt;br&gt;https://doi.org/10.1007/BF02831890</mixed-citation></ref><ref id="hanspub.33550-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Andrychowicz, M., Dziembowski, S., Malinowski, D., et al. (2014) Secure Multiparty Computations on Bitcoin. Proc of IEEE Symposium on Security and Privacy, San Jose, 18-21 May 2014, 76-84. &lt;br&gt;https://doi.org/10.1109/SP.2014.35</mixed-citation></ref></ref-list></back></article>