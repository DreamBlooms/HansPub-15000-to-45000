<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">PM</journal-id><journal-title-group><journal-title>Pure  Mathematics</journal-title></journal-title-group><issn pub-type="epub">2160-7583</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/PM.2020.105050</article-id><article-id pub-id-type="publisher-id">PM-35492</article-id><article-categories><subj-group subj-group-type="heading"><subject>PM20200500000_33977999.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  协同过滤算法中一种改进相似度度量的方法
  An Improved Similarity Measurement Method in Collaborative Filtering Algorithm
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>连</surname><given-names>自建</given-names></name><xref ref-type="aff" rid="aff1"><sub>1</sub></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>上海大学理学院数学系，上海</addr-line></aff><pub-date pub-type="epub"><day>30</day><month>04</month><year>2020</year></pub-date><volume>10</volume><issue>05</issue><fpage>404</fpage><lpage>413</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   信息时代，互联网上的信息量巨大，数据信息给我们的生活带来许多便利的同时，也带来了信息超载问题。协同过滤算法应运而生，作为成功的个性化推荐技术，得到了广泛的应用。它分析用户的行为，通过收集与用户兴趣一致的其他用户的评价信息来产生推荐。然而，传统的推荐算法存在数据稀疏时相似度计算不准确，以及冷启动、可扩展性问题，影响了推荐系统的应用和推广。本文研究了协同过滤推荐技术的基本原理及实现步骤，提出了一种改进的相似度度量方法，可以在不进行复杂计算的情况下，通过提高数据的使用率来很好地提高推荐的准确性。 In the information age, there is a huge amount of information on the Internet. While data infor-mation brings a lot of convenience to our life, it also brings the problem of information overload. Collaborative filtering (CF) algorithm emerges as a successful personalized recommendation technique and is widely used. It analyzes the behavior of users and generates recommendations by collecting the evaluation information of other users who are in line with their interests. However, the traditional recommendation algorithm has some problems such as inaccurate similarity cal-culation when data is sparse, cold start and scalability, which affects the application and promotion of the recommendation system. In this paper, the basic principle and implementation steps of collaborative filtering recommendation technology are studied, and an improved similarity measurement method is proposed, which can improve the accuracy of prediction by improving the utilization rate of data without complex calculation. 
 
</p></abstract><kwd-group><kwd>推荐系统，协同过滤，机器学习，K近邻，相似度, Recommendation System</kwd><kwd> Collaborative Filtering</kwd><kwd> Machine Learning</kwd><kwd> K Nearest Neighbor</kwd><kwd> Similarity</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>协同过滤算法中一种改进相似度度量的 方法<sup> </sup></title><p>连自建</p><p>上海大学理学院数学系，上海</p><p>收稿日期：2020年4月12日；录用日期：2020年5月2日；发布日期：2020年5月11日</p><disp-formula id="hanspub.35492-formula45"><graphic xlink:href="//html.hanspub.org/file/2-1251031x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>信息时代，互联网上的信息量巨大，数据信息给我们的生活带来许多便利的同时，也带来了信息超载问题。协同过滤算法应运而生，作为成功的个性化推荐技术，得到了广泛的应用。它分析用户的行为，通过收集与用户兴趣一致的其他用户的评价信息来产生推荐。然而，传统的推荐算法存在数据稀疏时相似度计算不准确，以及冷启动、可扩展性问题，影响了推荐系统的应用和推广。本文研究了协同过滤推荐技术的基本原理及实现步骤，提出了一种改进的相似度度量方法，可以在不进行复杂计算的情况下，通过提高数据的使用率来很好地提高推荐的准确性。</p><p>关键词 :推荐系统，协同过滤，机器学习，K近邻，相似度</p><disp-formula id="hanspub.35492-formula46"><graphic xlink:href="//html.hanspub.org/file/2-1251031x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/2-1251031x7_hanspub.png" /> <img src="//html.hanspub.org/file/2-1251031x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>在大数据时代，人们经常遇到信息超载的问题，搜索引擎和推荐系统是解决这一问题非常有效的工具，本文主要研究协同过滤推荐系统。如何为用户提供高质量的推荐，是推荐系统研究的重要目标。在过去十几年里，催生了非常多的推荐技术，涌现了许多的推荐系统，例如：Amazon的个性化物品推荐、Netflix的视频推荐、Facebook的好友推荐，今日头条的时事新闻推荐，最近几年，抖音、快手也是国内非常火热的视频推荐系统。推荐系统是一种软件工具和技术，根据用户的兴趣特点和购买行为，为用户提供有用的项目建议，提供的建议旨在支持用户进行各种决策，广泛被大家接受的推荐系统的定义是1997年Resnick和Varian提出的：“它是利用电子商务网站向客户提供商品信息和建议，帮助用户决定应该购买什么产品，模拟销售人员帮助客户完成购买过程”，要向指定的用户推荐项目，系统需要收集用户偏好信息 [<xref ref-type="bibr" rid="hanspub.35492-ref1">1</xref>]。</p><p>据所获得的信息的类型，可以使用许多方法来生成建议 [<xref ref-type="bibr" rid="hanspub.35492-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.35492-ref3">3</xref>]。常见的推荐算法有几种：基于协同过滤的推荐系统 [<xref ref-type="bibr" rid="hanspub.35492-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.35492-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.35492-ref6">6</xref>] 是一种成功的推荐系统，它利用一组相似用户的已知的和共同的偏好，对过去有相似偏好的其他用户的未知偏好做出适当的推荐。基于内容的推荐 [<xref ref-type="bibr" rid="hanspub.35492-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.35492-ref8">8</xref>] 试图推荐与用户过去喜欢的内容相似的内容。混合推荐系统 [<xref ref-type="bibr" rid="hanspub.35492-ref9">9</xref>] 利用集成技术将基于协同过滤的方法与基于内容的方法相结合。除了上述算法，还有基于知识的推荐 [<xref ref-type="bibr" rid="hanspub.35492-ref10">10</xref>] 和基于效用的推荐。在这些推荐算法中，基于协同过滤的推荐算法是目前电子商务系统中使用最广泛的推荐系统。协同过滤有两种类型：基于项目的协同过滤 [<xref ref-type="bibr" rid="hanspub.35492-ref11">11</xref>] 和基于用户的协同过滤 [<xref ref-type="bibr" rid="hanspub.35492-ref12">12</xref>]。这两种类型均使用识别活动用户或项目的最近邻居算法 [<xref ref-type="bibr" rid="hanspub.35492-ref13">13</xref>]。</p><p>虽然协同过滤推荐系统是一种流行的推荐系统，但它也存在一些局限性。其中一个限制是数据稀疏问题 [<xref ref-type="bibr" rid="hanspub.35492-ref14">14</xref>]，为了计算两个项目之间的相似度，它需要至少两个用户同时对相同的两个项目打分，准确的预测总是需要密集的数据，因此稀疏数据集不如密集数据集好。然而，密集数据集通常带来另一个问题，称为可扩展性问题。此外，还存在一个被称为冷启动问题的限制，它不可能为新用户或新项目找到相似的用户。当一个新项目被添加到这个系统中，没有关于它的评级信息，那么没有人可以得到关于这个项目的推荐 [<xref ref-type="bibr" rid="hanspub.35492-ref15">15</xref>]。</p><p>协同过滤算法中的一个重要组成部分就是相似度，在不同的实现中有各种各样的相似度度量来计算两对项目之间的相似度。推荐系统中常用的相似度度量有：基于欧氏距离的相似度、余弦度量相似度、调整余弦度量相似度、皮尔逊相关相似度、Tanimoto系数相似度、Log-Likelihood等 [<xref ref-type="bibr" rid="hanspub.35492-ref16">16</xref>]。对于推荐系统来说，不同的相似度度量的选择会导致不同的结果和质量。在GroupLens和MovieLens等项目中进行了值得注意的研究。本文我们在协同过滤推荐算法中，提出了一种改进的相似度度量方法，可以在不进行复杂计算的情况下，通过提高数据的使用率来很好地提高推荐的准确性。</p><p>本文的结构如下：第1部分为引言。第2部分介绍了传统相似性度量计算方法。第3部分中，我们将介绍模型的实现原理与改进思想。在第4部分，相比于传统的相似度度量，我们评估所提出的改进度量方法。第5部分为结束语。<sup> </sup></p></sec><sec id="s4"><title>2. 常用相似度度量介绍</title><p>在本节中，我们主要描述了一些常见相似度度量。如前文所述，两个项目或两个用户之间的相似度度量是影响推荐算法效果的关键因素之一。相似度度量可以大致分为两类:基于角度的和基于距离的。我们可以用向量空间法来测量相似度度量，所有的度量都可以给出两个向量之间的相似度量的概念。考虑在n维特征空间中的 P i 和 Q i 两个向量，分别用和的笛卡尔坐标表示为 ( P 1 , P 2 , ⋯ , P i , P i + 1 , ⋯ , P n ) 和 ( Q 1 , Q 2 , ⋯ , Q i , Q i + 1 , ⋯ , Q n ) 。常见相似度指标的定义如下：</p><sec id="s4_1"><title>2.1. 基于欧氏距离的相似度</title><p>在欧式空间里，欧式距离在两个向量之间广泛使用的是笛卡尔距离，欧式距离定义如(1)式：</p><p>d ( P i , Q i ) = ∑ i = 1 n ( P i − Q i ) 2 (1)</p><p>在本文中，我们可以定义 P i 向量和 Q i 向量之间的相似性度量 S P Q E u ，如下(2)式所示：</p><p>S P Q E u = 1 1 + d ( P i , Q i ) (2)</p></sec><sec id="s4_2"><title>2.2. 基于余弦度量的相似度</title><p>在内积空间里，用 P i 向量和 Q i 向量之间的夹角余弦值来作为两个向量的相似性度量。由于它是两个向量之间的标准化点积，可以通过简单的数学运算来计算，因此它是一种常用的相似性度量。相应的相似性度量 S P Q C o ，计算公式如(3)式：</p><p>S P Q C o = C o s i n e ( P i , Q i ) = ∑ i = 1 n P i &#215; Q i ∑ i = 1 n P i 2 ∑ i = 1 n Q i 2 (3)</p><p>此外，还有一种类似的修正余弦相似度 S P Q A C 定义为(4)式的形式：</p><p>S P Q A C = A d j u s t e d C o s i n e ( P i , Q i ) = ∑ i = 1 n ( P i − S &#175; ) &#215; ( Q i − S &#175; ) ∑ i = 1 n ( P i − S &#175; ) 2 ∑ i = 1 n ( Q i − S &#175; ) 2 (4)</p><p>其中， S &#175; 是 P i 向量和 Q i 向量相同元素的均值。</p></sec><sec id="s4_3"><title>2.3. 基于皮尔逊相关系数的相似度</title><p>皮尔逊相关系数公式是统计中最常用的公式之一，计算公式如(5)：</p><p>S P Q P e = P e a r s o n ( P i , Q i ) = ∑ i = 1 n ( P i − P &#175; ) &#215; ( Q i − Q &#175; ) ∑ i = 1 n ( P i − P &#175; ) 2 ∑ i = 1 n ( Q i − Q &#175; ) 2 (5)</p><p>其中， P &#175; 和 Q &#175; 分别是向量 P i 和 Q i 的均值。</p></sec><sec id="s4_4"><title>2.4. 基于Tanimoto系数的相似度</title><p>Tanimoto系数，又称Jaccard系数，是余弦相似度的扩展，多用于计算文档数据相似度。基于它的相似度和上面的相似度都不相同。简单来说，Tanimoto系数使用相交集与并集的比值作为相似性度量，具体计算公式如式(6)：</p><p>S P Q T a = | P i ∩ Q i | | P i | + | Q i | − | P i ∩ Q i | (6)</p><p>除了上面提到的这些相似度度量外，还有其他一些度量，例如基于对数似然函数值相似度、基于曼哈顿距离相似度等。相似度度量在推荐系统中起着至关重要的作用，推荐算法的性能和效率往往取决于系统使用的相似度度量。</p></sec></sec><sec id="s5"><title>3. 模型与算法</title><p>在这一节中，我们介绍了基于物品协同过滤算法的工作原理和算法步骤，通过对第2部分介绍</p><p>的传统相似性度量进行分析，指出了该模型的不足之处，并详细介绍了我们所提出的改进相似度度量方法是如何提高模型的计算精度的。</p><p>主要符号汇总：</p><sec id="s5_1"><title>3.1. 协同过滤算法思想</title><p>推荐系统应用数据分析技术，找出用户最可能喜欢的东西推荐给用户，现在很多电子商务网站都有这个应用。目前用的比较多、比较成熟的推荐算法是协同过滤(Collaborative Filtering，简称CF)推荐算法。同过滤推荐算法是诞生最早，并且较为著名的推荐算法，主要的功能是预测和推荐。算法通过对用户历史行为数据的挖掘发现用户的偏好，基于不同的偏好对用户进行群组划分并推荐品味相似的商品。主要分为三个部分：① 用户偏好描述，② 寻找最近邻居，③ 预测产生推荐。协同过滤推荐算法过程示意图如图1。</p><p>图1. 协同过滤推荐算法过程</p><p>在CF中，用 m &#215; n 的矩阵表示用户对物品的喜好情况，一般用打分表示用户对物品的喜好程度，分值定义为从1 (非常不喜欢)到5 (非常喜欢)，分数越高表示越喜欢这个物品，0表示没有买过该物品。图中行表示一个用户，列表示一个物品。CF分为两个过程，一个为预测过程，另一个为推荐过程。预测过程是预测用户对没有购买过的物品的可能打分值，推荐是根据预测阶段的结果推荐用户最可能喜欢的一个或Top-N个物品。</p></sec><sec id="s5_2"><title>3.2. 算法步骤</title><p>算法训练版块：</p><p>算法测试版块：</p></sec><sec id="s5_3"><title>3.3. 预测模型</title><p>为了在协同过滤预测中达到预测的目的，在确定了物品间相似度后，可以对推测物品相似的Top-K个物品进行加权评分总和来预测物品的评分。计算预测值得方法有三种：第一种方法如式(7)所示，直接计算目标项目K个近邻项目的评分均值；第二种方法如式(8)所示，考虑不同近邻与目标项目之间的不同权重的加权和，并进行标准化；第三种方法如式(9)所示，与式(8)的区别在于考虑了不同用户的评价风格问题，克服了不同用户之前的评分尺度不一样的缺点，相比而言具有更高的精确度。</p><p>P a , j = ∑ K j ∈ K r a , K j K (7)</p><p>P a , j = ∑ K j ∈ K s i m ( K j , j ) r a , K j ∑ K j ∈ K | s i m ( K j , j ) | (8)</p><p>本文选择第三种具有上述相似性的协同过滤预测方法，形式上，我们用 P a , j 表示用户a对物品j的评分预测，公式(9)如下：</p><p>P a , j = r a &#175; + ∑ K j ∈ K s i m ( K j , j ) * ( r a , K j − r a &#175; ) ∑ K j ∈ K | s i m ( K j , j ) | (9)</p><p>其中，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/2-1251031x47_hanspub.png" xlink:type="simple"/></inline-formula>为用户a的平均评分。</p></sec><sec id="s5_4"><title>3.4. 改进的加权度量方法</title><sec id="s5_4_1"><title>3.4.1. 改进方法的思想原理</title><p>由于推荐系统中的数据比较稀疏，而传统的相似度度量方法只关注由两个用户同时评分的物品的评分，而不考虑他们评定的其他项目评分，致使以往的推荐算法模型对数据的使用效率不高。此外，两个用户之间的相似度相同也不一定反映真实的相关性，因为两个用户之间公同打分的物品数量不同时，也可能得到相同的相似度。</p><p>一方面，假设用户p和q对k个共同物品有评分，p和q的相关性 s i m ( p , q ) = s ，而用户u和v对j个共同物品有评分，u和v的相关性 s i m ( u , v ) = s ，其中 j &lt; k 。即便两者有相同的相关性，但直觉上感觉用户p和q之间的相似度比用户u和v之间的相似度更稳定。因此，为了更好地计算相似度指标，可以将两个用户评价的公共物品的数占自己评分总数量的比重合并到相似度评分中。</p><p>另一方面，考虑用户评价的项目总数对计算相似性度量的影响。对于任何两个用户之间，两者共同评分的项目数量一定，而用户评分项目总数越少，相似度与之越密切；相反，若用户评分项目总数越多，相似度反而也小</p><p>综上两方面，在计算相似度度量时，我们提出了一种新的方法，在计算相似度时，对用户之间共同评分数量成正比放大，对于用户评分项目总数成反比缩小，按着新的权重来计算用户之间的相似度。</p></sec><sec id="s5_4_2"><title>3.4.2. 改进方法的实现</title><p>按着前文我们改进的加权方法思想，我们提出新的计算相似度量公式如下：</p><p>N e w S i m ( a , b ) = k t a S i m ( a , b ) + k t b S i m ( a , b ) 2 (10)</p><p>即</p><p>N e w S i m ( a , b ) = ( 1 t a + 1 t b ) k 2 S i m ( a , b ) (11)</p><p>其中， t a 和 t b 分别是用户a和b评分项目的总数，k是用户a和b相同评分项目总数。</p></sec></sec></sec><sec id="s6"><title>4. 实验与分析</title><p>本节中，我们对上文提出的改进相似度度量方法和传统度量方法进行评估，分别使用真实数据与传统的度量方法结果进行了分析与比较。</p><sec id="s6_1"><title>4.1. 数据集</title><p>为了评估我们的方法，我们使用了来自MovieLens数据集的实验数据。该数据集包含来自1682部电影的943名用户的100,000个评分(1~5)。每个用户至少为20部电影打分。我们随机选取80%的数据进行训练，其余的进行测试。</p></sec><sec id="s6_2"><title>4.2. 实验评估标准</title><p>推荐系统研究人员有几种方法来评估推荐算法的质量。在本文中，我们使用平均绝对误差(MAE)评估来计算实际偏好和估计偏好之间的平均差值。较低的MAE值意味着估计的首选项与实际首选项相差不大，MAE = 0表示完美的预测推荐。</p><p>MAE = ∑ a , j | r a , j − P a , j | n ，其中n为测试集总数 (10)</p></sec><sec id="s6_3"><title>4.3. 实验结果</title><p>实验结果如下表1~4，图2~5所示。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> MAE before and after improvement based on Euclidean similarit</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >最近邻数量</th><th align="center" valign="middle" >欧式距离相似度</th><th align="center" valign="middle" >改进欧式相似度</th></tr></thead><tr><td align="center" valign="middle" >25</td><td align="center" valign="middle" >0.8917</td><td align="center" valign="middle" >0.8341</td></tr><tr><td align="center" valign="middle" >50</td><td align="center" valign="middle" >0.8734</td><td align="center" valign="middle" >0.8177</td></tr><tr><td align="center" valign="middle" >75</td><td align="center" valign="middle" >0.8653</td><td align="center" valign="middle" >0.8110</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >0.8605</td><td align="center" valign="middle" >0.8093</td></tr><tr><td align="center" valign="middle" >125</td><td align="center" valign="middle" >0.8566</td><td align="center" valign="middle" >0.8104</td></tr><tr><td align="center" valign="middle" >150</td><td align="center" valign="middle" >0.8569</td><td align="center" valign="middle" >0.8111</td></tr></tbody></table></table-wrap><p>表1. 基于欧式相似度改进前后MAE</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> MAE before and after improvement based on Pearson similarit</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >最近邻数量</th><th align="center" valign="middle" >皮尔逊相似度</th><th align="center" valign="middle" >改进皮尔逊相似度</th></tr></thead><tr><td align="center" valign="middle" >25</td><td align="center" valign="middle" >0.8477</td><td align="center" valign="middle" >0.7826</td></tr><tr><td align="center" valign="middle" >50</td><td align="center" valign="middle" >0.8309</td><td align="center" valign="middle" >0.7767</td></tr><tr><td align="center" valign="middle" >75</td><td align="center" valign="middle" >0.8240</td><td align="center" valign="middle" >0.7702</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >0.8242</td><td align="center" valign="middle" >0.7646</td></tr><tr><td align="center" valign="middle" >125</td><td align="center" valign="middle" >0.8230</td><td align="center" valign="middle" >0.7615</td></tr><tr><td align="center" valign="middle" >150</td><td align="center" valign="middle" >0.8236</td><td align="center" valign="middle" >0.7613</td></tr></tbody></table></table-wrap><p>表2. 基于皮尔逊相似度改进前后MAE</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> MAE before and after improvement based on Adjusted Cosine similarit</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >最近邻数量</th><th align="center" valign="middle" >调整余弦相似度</th><th align="center" valign="middle" >改进调整余弦相似度</th></tr></thead><tr><td align="center" valign="middle" >25</td><td align="center" valign="middle" >0.7966</td><td align="center" valign="middle" >0.7502</td></tr><tr><td align="center" valign="middle" >50</td><td align="center" valign="middle" >0.8595</td><td align="center" valign="middle" >0.8036</td></tr><tr><td align="center" valign="middle" >75</td><td align="center" valign="middle" >0.9312</td><td align="center" valign="middle" >0.8644</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >1.0277</td><td align="center" valign="middle" >0.9424</td></tr><tr><td align="center" valign="middle" >125</td><td align="center" valign="middle" >1.1010</td><td align="center" valign="middle" >1.0050</td></tr><tr><td align="center" valign="middle" >150</td><td align="center" valign="middle" >1.1724</td><td align="center" valign="middle" >1.0545</td></tr></tbody></table></table-wrap><p>表3. 基于调整余弦相似度改进前后MAE</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> MAE before and after improvement based on Tanimoto similarit</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >最近邻数量</th><th align="center" valign="middle" >Tanimoto</th><th align="center" valign="middle" >改进Tanimoto</th></tr></thead><tr><td align="center" valign="middle" >25</td><td align="center" valign="middle" >0.7423</td><td align="center" valign="middle" >0.7274</td></tr><tr><td align="center" valign="middle" >50</td><td align="center" valign="middle" >0.7526</td><td align="center" valign="middle" >0.7476</td></tr><tr><td align="center" valign="middle" >75</td><td align="center" valign="middle" >0.7621</td><td align="center" valign="middle" >0.7579</td></tr><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >0.7688</td><td align="center" valign="middle" >0.7636</td></tr><tr><td align="center" valign="middle" >125</td><td align="center" valign="middle" >0.7733</td><td align="center" valign="middle" >0.7649</td></tr><tr><td align="center" valign="middle" >150</td><td align="center" valign="middle" >0.7751</td><td align="center" valign="middle" >0.7666</td></tr></tbody></table></table-wrap><p>表4. 基于Tanimoto相似度改进前后MAE</p><p>图2. 基于欧式相似度改进前后MAE曲线图</p></sec><sec id="s6_4"><title>4.4. 实验结果分析</title><p>由表1~4及图2~5可以得到下面结论：</p><p>1) 协同过滤推荐算法中，使用基于不同度量下的相似度会产生不同的预测精度，因此可以说明相似度度量是影响推荐算法效果的关键因素之一。</p><p>2) 协同过滤推荐算法中，在同一种相似度下，选择不同的最近邻数量也会产生不同的预测精度。</p><p>3) 基于不同度量相似度的预测精度，本文提出的改进度量方法可以在一定程度上降低各种度量下的相似度预测分数的MAE，提高算法预测精度。</p><p>图3. 基于皮尔逊相似度改进前后MAE曲线图</p><p>图4. 基于调整余弦相似度改进前后MAE曲线图</p><p>图5. 基于Tanimoto相似度改进前后MAE曲线图</p></sec></sec><sec id="s7"><title>5. 结束语</title><p>本文中，我们提出了一种改进的加权度量方法，通过提高稀疏矩阵的使用率，来提高算法中预测的精确度。在数据实验方面，我们使用推荐系统常用的数据集MovieLens-100 K数据集，通过与传统的几种度量方法如基于欧式距离相似度量、基于皮尔逊相关系数相似度量、基于调整余弦相似度量和基于Tanimoto系数相似度的预测精确度比较，我们提出的改进度量方法能有效提高传统度量的预测精度，在没有增加算法的复杂程度的情况下，普遍提升幅度在6%~10%之间。</p></sec><sec id="s8"><title>文章引用</title><p>连自建. 协同过滤算法中一种改进相似度度量的方法An Improved Similarity Measurement Method in Collaborative Filtering Algorithm[J]. 理论数学, 2020, 10(05): 404-413. https://doi.org/10.12677/PM.2020.105050</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.35492-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Ricci, F., Rokach, L. and Shapira, B. (2010) Introduction to Recommender Systems Handbook. In: Ricci, F., Rokach, L., Shapira, B. and Kantor, P., Eds., Recommender Systems Handbook, Springer-Verlag, New York, 1-35. &lt;br&gt;https://doi.org/10.1007/978-0-387-85820-3_1</mixed-citation></ref><ref id="hanspub.35492-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Prasad, R. (2012) A Categorical Review of Recommender Systems. International Journal of Distributed and Parallel Systems, 3, 73-83. &lt;br&gt;https://doi.org/10.5121/ijdps.2012.3507</mixed-citation></ref><ref id="hanspub.35492-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Adomavicius, G. and Tuzhilin, A. (2005) Toward the Next Genera-tion of Recommender Systems: Toward the Next Generation of Recommender Systems. IEEE Transactions on Knowledge and Data Engineering, 17, 734-749. &lt;br&gt;https://doi.org/10.1109/TKDE.2005.99</mixed-citation></ref><ref id="hanspub.35492-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">马瑞新, 孟繁成, 王涵杨. 优化的协同过滤推荐算法[J]. 计算机科学与应用, 2011, 1(3): 108-111.</mixed-citation></ref><ref id="hanspub.35492-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">崔梓凝. 基于协同过滤的推荐算法研究[J]. 数字化用户, 2017, 23(45): 160, 42.</mixed-citation></ref><ref id="hanspub.35492-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">周军锋, 汤显, 郭景峰. 一种优化的协同过滤推荐算法[J]. 计算机研究与发展, 2004, 41(10): 1842-1847.</mixed-citation></ref><ref id="hanspub.35492-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Balabanovic, M. and Shoham, Y. (1997) Fab: Content-Based, Collaborative Recommendation. Communications of the ACM, 40, 66-72. &lt;br&gt;https://doi.org/10.1145/245108.245124</mixed-citation></ref><ref id="hanspub.35492-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Aciar, S., Zhang, D., Simoff, S. and Debenham, J. (2007) Informed Recommender: Basing Recommendations on Consumer Product Reviews. IEEE Intelligent Systems, 22, 39-47. &lt;br&gt;https://doi.org/10.1109/MIS.2007.55</mixed-citation></ref><ref id="hanspub.35492-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">de Campos, L.M., Fernandez-Luna, J.M., Huete, J.F. and Rueda-Morales, M.A. (2010) Combining Content-Based and Collaborative Recommendations: A Hybrid Approach Based on Bayesian Networks. International Journal of Approximate Reasoning, 51, 785-799. &lt;br&gt;https://doi.org/10.1016/j.ijar.2010.04.001</mixed-citation></ref><ref id="hanspub.35492-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">刘平峰, 聂规划, 陈冬林. 基于知识的电子商务智能推荐系统平台设计[J]. 计算机工程与应用, 2007(19): 203-205+220.</mixed-citation></ref><ref id="hanspub.35492-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Sarwar, B., Karypis, G., Konstan, J. and Riedl, J. (2001) Item-Based Collaborative Filtering Recommendation Algorithms. Proceedings of the International Conference on the World Wide Web, New York, 1-5 May 2001, 285-295. &lt;br&gt;https://doi.org/10.1145/371920.372071</mixed-citation></ref><ref id="hanspub.35492-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">王成, 朱志刚, 张玉侠, 等. 基于用户的协同过滤算法的推荐效率和个性化改进[J]. 小型微型计算机系统, 2016, 37(3): 30-34.</mixed-citation></ref><ref id="hanspub.35492-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">李聪, 梁昌勇, 马丽. 基于领域最近邻的协同过滤推荐算法[J]. 计算机研究与发展, 2008, 45(9): 1532-1538.</mixed-citation></ref><ref id="hanspub.35492-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">吴颜, 沈洁, 顾天竺, 等. 协同过滤推荐系统中数据稀疏问题的解决[J]. 计算机应用研究, 2007, 24(6): 94-97.</mixed-citation></ref><ref id="hanspub.35492-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">李改, 李磊. 一种解决协同过滤系统冷启动问题的新算法[J]. 山东大学学报(工学版), 2012, 42(2): 11-17.</mixed-citation></ref><ref id="hanspub.35492-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Laveti, R.N., Ch, J., Pal, S.N. and Babu, N.S.C. (2016) A Hybrid Recommender System Using Weighted Ensemble Similarity Metrics and Digital Filters. Processings of the 23rd International Conference on High Performance Computing Workshops (HiPCW), Hyderabad, 2016, 32-38. &lt;br&gt;https://doi.org/10.1109/HiPCW.2016.013</mixed-citation></ref></ref-list></back></article>