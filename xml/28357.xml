<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2019.91001</article-id><article-id pub-id-type="publisher-id">CSA-28357</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20190100000_71583366.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于Delaunay三角剖分的空间离群点检测算法研究
  Spatial Outlier Detection Based on TEN Mod-el and Weighted Attribute
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>朱</surname><given-names>跃忠</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>江西理工大学，建筑与测绘学院，江西 赣州</addr-line></aff><pub-date pub-type="epub"><day>08</day><month>01</month><year>2019</year></pub-date><volume>09</volume><issue>01</issue><fpage>1</fpage><lpage>8</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对传统空间离群检测算法在空间邻居构建上存在算法复杂度过高、人为影响较大等问题，提出一种基于Delaunay三角剖分的空间离群检测算法。该算法通过对空间数据点进行Delaunay三角剖分，建立空间邻域，根据生成的空间邻域，依据SLOF算法定义空间邻域内离群因子。结合某地区矿山具体钻孔数据对该算法进行实验，实验结果表明该算法能有效检测出空间离群点，算法复杂度较低，人为影响较低。 A Delaunay triangulation based spatial outlier detection algorithm is proposed to solve the problems of the traditional spatial outlier detection algorithm, such as the high complexity of the algorithm and the large human influence on the construction of spatial neighbors. In this algorithm, Delaunay triangulation is carried out on the spatial data points to establish the spatial neighbor-hood. Based on the generated spatial neighborhood, outlier factors in the spatial neighborhood are defined according to SLOF algorithm, combined with the specific drilling data of a mine in a certain area. Experimental results show that this algorithm can effectively detect spatial outliers with low complexity and low human influence. 
  
 
</p></abstract><kwd-group><kwd>空间离群点，Delaunay三角剖分，SLOF离群因子, Spatial Outliers</kwd><kwd> Delaunay Triangulation</kwd><kwd> SLOF Outlier Factor</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于Delaunay三角剖分的空间离群点检测算法研究<sup> </sup></title><p>朱跃忠</p><p>江西理工大学，建筑与测绘学院，江西 赣州</p><p><img src="//html.hanspub.org/file/1-1541241x1_hanspub.png" /></p><p>收稿日期：2018年11月20日；录用日期：2019年1月1日；发布日期：2019年1月8日</p><disp-formula id="hanspub.28357-formula1"><graphic xlink:href="//html.hanspub.org/file/1-1541241x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>针对传统空间离群检测算法在空间邻居构建上存在算法复杂度过高、人为影响较大等问题，提出一种基于Delaunay三角剖分的空间离群检测算法。该算法通过对空间数据点进行Delaunay三角剖分，建立空间邻域，根据生成的空间邻域，依据SLOF算法定义空间邻域内离群因子。结合某地区矿山具体钻孔数据对该算法进行实验，实验结果表明该算法能有效检测出空间离群点，算法复杂度较低，人为影响较低。</p><p>关键词 :空间离群点，Delaunay三角剖分，SLOF离群因子</p><disp-formula id="hanspub.28357-formula2"><graphic xlink:href="//html.hanspub.org/file/1-1541241x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/1-1541241x7_hanspub.png" /> <img src="//html.hanspub.org/file/1-1541241x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>随着地理空间信息技术和卫星遥感等数据采集器的越发先进，空间数据的数量和质量呈海量增长。如何有效从空间数据中发掘、检测出有效的信息和知识已经成为了当前研究的重要方向。将数据挖掘技术应用到空间数据中，即空间数据挖掘，是解决当前问题的重要手段。空间数据挖掘主要功能包括关联分析、聚类分析、组合分析、离群检测等方面。</p><p>其中空间数据的离群检测作为空间数据挖掘研究的重要前提和方法，是空间数据挖掘不可或缺的部分，目前已经广泛应用在地质灾害监测、成矿预测、环境监测、矿山水文检测、疾病控制和监测 [<xref ref-type="bibr" rid="hanspub.28357-ref1">1</xref>] 等众多领域。</p><p>空间数据是用来描述现实世界中的事物的大小、位置、轮廓、属性等信息的数据，空间数据相比于普通数据具有的特性是空间自相关性和异质性。因此普通的离群点检测方法不适用于空间数据的离群点检测，需要充分考虑空间数据的特性，才能有效的检测出空间异常点。</p><p>最早的空间数据离群检测是由地学统计学发展而来，主要分为空间数据可视化和属性定标两种方法，其中空间数据可视化方法主要有变差云图 [<xref ref-type="bibr" rid="hanspub.28357-ref2">2</xref>] ，qqplot图 [<xref ref-type="bibr" rid="hanspub.28357-ref3">3</xref>] 等方法，而属性定量的方法主要包括Moran散点图 [<xref ref-type="bibr" rid="hanspub.28357-ref4">4</xref>] 、Z-Value法等方法 [<xref ref-type="bibr" rid="hanspub.28357-ref5">5</xref>] 。</p><p>Shekhar等人从空间数据的本质出发，首次提出了二分法(SLZ) [<xref ref-type="bibr" rid="hanspub.28357-ref6">6</xref>] ，将空间数据分为空间属性和非空间属性，根据空间属性确定空间对象的空间邻域，通过计算非空间属性确定空间对象邻域内的差异，计算离群因子。但是SLZ算法使用的是全局的阈值，求出的是全局的空间离群点。</p><p>对于多维非空间属性的处理，文俊浩 [<xref ref-type="bibr" rid="hanspub.28357-ref7">7</xref>] 等人提出使用马氏距离计算各个维度非空间属性的差异。但是马氏距离并不能有效的表示数据的自相关性。Sun等人在SLZ的算法中加入波动参数提出了SlOM算法 [<xref ref-type="bibr" rid="hanspub.28357-ref8">8</xref>] ，国内薛安荣等人提出了普适的SLOF算法 [<xref ref-type="bibr" rid="hanspub.28357-ref9">9</xref>] ，并针对混合类型的非空间属性提出了相关算法。张忠平等人提出了基于KNN图 [<xref ref-type="bibr" rid="hanspub.28357-ref10">10</xref>] 的空间离群检测算法，利用KNN图来构建空间邻域，KNN图的时间复杂度较高，不适用于海量数据。综合上诉算法可以发现存在两个问题：在空间邻域的构建方面，算法大多时间复杂度过高，不适合处理空间高维数据，人为影响较大；在非空间属性的度量方面，对空间数据的研究不够深入，离群因子的定义存在误差。</p><p>本文针对上述算法在空间邻域的构建方面存在的问题，引入Delaunay三角剖分的思想，通过Delaunay三角剖分来构建空间数据的空间邻域，利用空间。并结合某矿山钻孔数据进行实验，最终依据实验结果，从算法的检测率、时间复杂度、算法鲁棒性等方面对该算法的性能进行分析。</p></sec><sec id="s4"><title>2. 基于Delaunay三角剖分的空间离群检测算法</title><p>本文提出的基于Delaunay三角剖分的空间离群检测算法的具体思路如下：首先根据 3 σ 准则，选取各个维度的全局离群点，再依据Delauanay三角剖分生成空间邻域，然后将数据预处理中选取的离群点的值用改点邻域内对象的均值代替，建立相应的空间权重矩阵，在确定的空间权重矩阵下，依据SLOF离群因子的计算方法，度量空间邻域内的差异，选取SLOF离群因子前n个大的值作为离群点输出。</p><p>具体的算法流程如图1所示：</p><p>图1. 基于Delaunay三角剖分的空间离群检测算法</p><sec id="s4_1"><title>2.1. 相关定义</title><p>存在空间对象集 S = { s 1 , s 2 , … , s n } ，由n个对象组成，其中 θ p 表示对象间在p条件下相连接，对于对象s s ∈ S ， k ( s ) 表示空间属性， f ( s ) 表示非空间属性。</p><p>定义1：(空间邻居)当对象 s 1 和 s n 符合条件 θ p ，那么 s 1 就是 s n 的空间邻居。</p><p>定义2：(空间邻域)空间对象 s 1 所有的空间邻居的集合称为 s 1 的空间邻域。</p><p>定义3：( 3 σ 准则)计算数据集的分布误差，将数值分布在 ( μ − 3 σ , μ + 3 σ ) 的点设定为全局离群点。</p><p>定义4：(Delaunay三角剖分)对空间数据进行三角网划分，其中当划分成的三角网满足以下两个特性，a：空球准则，单个三角形或不规则的四面体的外接圆或外接球内部不包含除顶点外的其它点。b：最大-最小角准则每个三角的角度都满足是所有可能三角形中最小的。</p><p>定义5：(空间权重)对象 s 1 和对象 s n 是空间邻居，那么选取反距离公式 W s 1 , s 2 = 1 / d i s t ( s 1 , s 2 ) 为空间权重，dist表示对象间的距离，当对象 s 1 和 s n 不满足空间邻居关系时，那么W的值为0。</p><p>定义6：(邻居加权距离) dist ( s i , s j , w )表示对象与对象间的邻域距离如公式2所示，W<sub>k</sub>表示是第k维度的权值， f ( s i k ) 表示 s i − 对象的在k维的权重。</p><p>d i s t ( s i , s j , w ) = ∑ k = 1 d w k ( f ( s i k ) − f ( s j k ) ) 2 (公式2.1)</p><p>定义7：(邻域距离) N d i s t ( s , w ) 表示表示对象所有空间邻域内的邻域距离，其中 N B ( s ) 表示邻域内所有对象的数量。</p><p>N d i s t ( s , w ) = ∑ p ∈ N B ( s ) d i s t ( p , s , w ) | N B ( s ) | (公式2.2)</p><p>定义8：(离群因子)存在数学公式能够计量对象在空间邻域内的非空间属性的差异，该数学公式可以认为是是离群因子。</p><p>定义9：(SLOF离群因子) SLOF的离群因子定义公式如下，选择SLOF值最大的前n个点作为空间离群点。</p><p>SLOF ( s ) = N d i s t ( s , w ) ∑ p ∈ N B ( o ) N d i s t ( s , w ) | N B ( o ) | (公式2.3)</p></sec><sec id="s4_2"><title>2.2. 数据预处理</title><p>将获取的数据集，进行数据格式转换，整合操作，空间异常点会影响到局部离群因子的度量，根据定义3，鉴别出空间数据集中的全局离群点，并将其保存。</p></sec><sec id="s4_3"><title>2.3. 通过Delaunay三角剖分构建空间邻域</title><p>传统的空间邻域构建方法存在参数选择困难，构建时间复杂度过高，人为因素较大等问题。而基于Delaunay的三角剖分算法，常见的实现方法有逐点法，三角网增长法等，这些算法的时间复杂度最优能达到 O ( n log n ) ，Delaunay三角剖分本身具有严格的数据验证和坚实的理论基础。具有能有效维护空间数据的拓扑信息，便于三维分析和显示等良好的几何特性。</p></sec><sec id="s4_4"><title>2.4. 建立空间权重矩阵</title><p>根据生成的空间邻域，建立相应的空间邻域矩阵，表1表示生成的相应的空间对象邻域表。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Generating spatial neighborhood table based on Delaunay triangulatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >对象ID</th><th align="center" valign="middle" >X坐标</th><th align="center" valign="middle" >Y坐标</th><th align="center" valign="middle" >Z坐标</th><th align="center" valign="middle" >空间邻居ID</th><th align="center" valign="middle" >数量</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >411,708.5</td><td align="center" valign="middle" >2,774,154</td><td align="center" valign="middle" >323.212</td><td align="center" valign="middle" >2，8，21，33，45，55，63，78，99</td><td align="center" valign="middle" >9</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >411,708.5</td><td align="center" valign="middle" >2,774,154</td><td align="center" valign="middle" >324.212</td><td align="center" valign="middle" >1，23，35，66，79，88，94，123，135，156</td><td align="center" valign="middle" >10</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >411,708.5</td><td align="center" valign="middle" >2,774,154</td><td align="center" valign="middle" >325.212</td><td align="center" valign="middle" >5，15，23，45，56，88，99，122，167，182</td><td align="center" valign="middle" >11</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >411,708.5</td><td align="center" valign="middle" >2,774,154</td><td align="center" valign="middle" >326.212</td><td align="center" valign="middle" >6，12，23，31，55，67，88，102</td><td align="center" valign="middle" >8</td></tr><tr><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td></tr><tr><td align="center" valign="middle" >158</td><td align="center" valign="middle" >411,723.396</td><td align="center" valign="middle" >2,774,135.456</td><td align="center" valign="middle" >331.655</td><td align="center" valign="middle" >159，164，168，183，201，222，238，240</td><td align="center" valign="middle" >8</td></tr><tr><td align="center" valign="middle" >159</td><td align="center" valign="middle" >411,723.396</td><td align="center" valign="middle" >2,774,135.456</td><td align="center" valign="middle" >332.655</td><td align="center" valign="middle" >158，162，183，203，205，221，238</td><td align="center" valign="middle" >7</td></tr><tr><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td><td align="center" valign="middle" >…</td></tr></tbody></table></table-wrap><p>表1. 基于Delaunay三角剖分生成空间邻域表</p><p>结合表1和定义5建立空间权重矩阵。示例给定简单空间数据集，生成Delaunay剖分四面体如图2(a)所示，p1~p5表示空间对象，图2(b)为生成的相应空间权重矩阵。</p></sec><sec id="s4_5"><title>2.5. 空间邻域离群因子的度量</title><p>依据定义8中的SLOF算法的离群因子的计算复方式，结合上文生成的空间邻域矩阵，生成空间离群因子，其中空间权重选取反距离权重公式进行计算，为了防止SLOF的值为0，将公式2.3改为公式2.4所示：</p><p>SLOF ( s ) = N d i s t ( s , w ) + δ ∑ p ∈ N B ( s ) N d i s t ( s , w ) | N B ( s ) | + δ (公式2.4)</p><p>δ 一般取值为1 * 10<sup>−6</sup>左右，当SLOF的值大于1时，离群程度开始变高，当小于1时，表示离群程度正常。最终选取SLOF值前n个大的点作为空间离群点。</p><p>图2. 空间权重矩阵示意图</p></sec><sec id="s4_6"><title>2.6. 算法的描述与复杂度分析</title><p>基于Delaunay三角剖分的空间离群检测算法(数据包含N个对象)</p><p>输入：空间数据集</p><p>输出：空间离群点</p><p>Step 1：对空间数据集进行预处理，甄选出全局离群点，需要求取数据集合的均值方差等，时间复杂度为 O ( N ) 。</p><p>Step 2：建立空间邻域，通过Delaunay三角剖分对空间数据集进行处理，建立空间邻域，时间复杂度为 O ( N log N )</p><p>Step 3：计算空间权重矩阵，利用Delaunay三角剖分生成的空间邻域，将全局离群点灯值用邻域均值代替，最后建立空间权重矩阵，时间复杂度为 O ( N log N ) 。</p><p>Step 4：计算空间邻域内的空间离群因子，结合SLOF算法，根据生成的空间邻域矩阵生成空间离群因子，时间复杂度为 O ( N log N ) 。</p><p>综上所诉本文时间复杂度为 O ( N log N ) 。</p></sec></sec><sec id="s5"><title>3. 实验和分析</title><p>本文算法结合某地区稀土矿区具体钻孔数据，使用k邻域图法和本文所提算法做具体实验对比。实验环境为win10操作系统，采用MATLAB2017b和C语言编程。</p><sec id="s5_1"><title>3.1. 算法实验</title><p>结合某地矿区的钻孔的数据集对算法进行分析，其中X，Y，Z表示空间坐标，非空间属性为各个采样点的品味，共有240个值。</p><p>通过 3 σ 准则没有发现全局离群点，使用k邻域图法和Delaunay三角剖分建立空间邻域，根据生成的空间邻域结合SLOF离群因子定义，计算相应的空间离群点。</p><p>其中图3(a)表示矿山某钻孔具体采样散点图如图3(b)根据Delaunay生成的空间邻域算法的时间复杂度度对比如图4所示。</p><p>图3. 钻孔采样点散点图和空间邻域示意图</p><p>图4. 两种算法时间复杂度对比</p></sec><sec id="s5_2"><title>3.2. 实验结果分析</title><p>表2为Delaunay三角剖分检测出的离群点，表3为K邻域法检测出的离群点。</p><p>1) 从检测精度对两种方法进行分析：结合现场采集数据具体情况，可以发现基于Delaunay三角剖分方法检测出的离群点，其检测精度达到80%，而k邻域的方法，其检测精度仅在k值为5时，最高达到80%，因此可以得出本文所提算法的检测精度高于k邻域方法。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Outliers detected from Delaunay triangulatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >序号</th><th align="center" valign="middle" >离群因子</th><th align="center" valign="middle" >离群点ID</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >−3.2</td><td align="center" valign="middle" >30</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >−2.5</td><td align="center" valign="middle" >61</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >−2.2</td><td align="center" valign="middle" >93</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >−1.7</td><td align="center" valign="middle" >231</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >−1.5</td><td align="center" valign="middle" >156</td></tr></tbody></table></table-wrap><p>表2. 基于Delaunay三角剖分检测出的离群点</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> SLOF algorithm detects different k value</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >序号</th><th align="center" valign="middle" >K值</th><th align="center" valign="middle" >离群点ID</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >306,193,231,156</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >306,093,231,155</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >7</td><td align="center" valign="middle" >307,593,231,156</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >9</td><td align="center" valign="middle" >293,290,159,210</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >304,969,231,156</td></tr></tbody></table></table-wrap><p>表3. SLOF算法不同k值检测结果</p><p>2) 从人为因素进行分析：k邻域的算法，在k值选取方面存在人为因素，最优k值难以选择。而本文算法，完全基于Delaunay三角剖分建立空间邻域，无需对k值进行设定和检测。</p><p>3) 从算法时间复杂度进行分析：如图4所示，当数据量增长较快时，本文算法时间复杂度增长较为缓慢，而k邻域算法时间复杂度增长呈指数增长，因此可得本文算法在时间复杂度方面优于k邻域算法。</p></sec></sec><sec id="s6"><title>4. 结束语</title><p>传统的基于KNN邻域图的空间离群检测算法，在空间邻域构建方面，存在算法时间复杂度过高，最优k值受人为因素影响大等不足，而Delaunay三角剖分对空间数据在空间邻域构建方面具有优势，算法本身也较为成熟，背后也具有深厚的数学理论基础。因此本文引入Delaunay三角剖分的方法，构建空间数据的空间邻域，并结合SLOF算法中对空间邻域离群因子的计算方法，求出空间数据的离群点。但是空间数据往往不是单个点存在，可能是多个点、线、面组成的，空间数据的非空间属性大多也是多维的。为此下一步将研究多维属性的复杂空间数据的空间离群点检测算法。</p></sec><sec id="s7"><title>文章引用</title><p>朱跃忠. 基于Delaunay三角剖分的空间离群点检测算法研究 Spatial Outlier Detection Based on TEN Mod-el and Weighted Attribute[J]. 计算机科学与应用, 2019, 09(01): 1-8. https://doi.org/10.12677/CSA.2019.91001</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.28357-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Chen, D., Lu, C.T., Kou, Y., et al. (2008) On Detecting Spatial Outliers. Geoinformatica, 12, 455-475. 
&lt;br&gt;https://doi.org/10.1007/s10707-007-0038-8</mixed-citation></ref><ref id="hanspub.28357-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Wackernagel, H. (2003) Variogram Cloud. Multivariate Geostatistics. &lt;br&gt;https://doi.org/10.1007/978-3-662-05294-5_6</mixed-citation></ref><ref id="hanspub.28357-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Das, B.R.S.I. and Plots, Q.Q. (2008) Random Sets and Data from a Heavy Tailed Distribution. Communications in Statistics Stochastic Models, 24, 103-132. &lt;br&gt;https://doi.org/10.1080/15326340701828308</mixed-citation></ref><ref id="hanspub.28357-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Anselin, L. (2003) Spatial Externalities, Spatial Multipliers, and Spatial Econometrics. International Regional Science Review, 26, 153-166. &lt;br&gt;https://doi.org/10.1177/0160017602250972</mixed-citation></ref><ref id="hanspub.28357-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Shekhar, S., Lu, C. and Zhang, P. (2003) A Unified Approach to Detecting Spatial Outliers. Geoinformatica, 7, 139-166. &lt;br&gt;https://doi.org/10.1023/A:1023455925009</mixed-citation></ref><ref id="hanspub.28357-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Shekhar, S., Lu, C. and Zhang, P. (2003) A Unified Approach to Detecting Spa-tial Outliers. Geoinformatica, 7, 139-166. &lt;br&gt;https://doi.org/10.1023/A:1023455925009</mixed-citation></ref><ref id="hanspub.28357-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">文俊浩, 吴中福, 吴红艳. 空间孤立点检测[J]. 计算机科学, 2006(5): 186-187 + 210.</mixed-citation></ref><ref id="hanspub.28357-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Chawla, S. and Sun, P. (2006) SLOM: A New Measure for Local Spatial Outliers. Springer-Verlag, New York.</mixed-citation></ref><ref id="hanspub.28357-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">薛安荣, 鞠时光, 何伟光, 等. 局部离群点挖掘算法研究[J]. 计算机学报, 2007, 30(8): 1455-1463.</mixed-citation></ref><ref id="hanspub.28357-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">张忠平, 徐晓云, 王培. 基于KNN图的空间离群点挖掘算法[J]. 计算机工程, 2011, 37(4): 37-39.</mixed-citation></ref></ref-list></back></article>