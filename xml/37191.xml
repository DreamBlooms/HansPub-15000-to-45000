<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2020.98154</article-id><article-id pub-id-type="publisher-id">AAM-37191</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20200800000_41495026.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  求解有向必经节点最短路径问题的算法
  An Algorithm for Solving the Shortest Path Problem of Directed and Necessary Nodes
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>白</surname><given-names>彩云</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>阳</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>越</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郭</surname><given-names>爽</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>孙</surname><given-names>欣宇</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>覃</surname><given-names>昶潔</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>大连民族大学理学院，辽宁 大连</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>04</day><month>08</month><year>2020</year></pub-date><volume>09</volume><issue>08</issue><fpage>1313</fpage><lpage>1316</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    具有必经节点的最短路径问题有着广泛的实际应用。但是在有向图的情况下，很多算法会因为所求最优路径中的必经节点顺序与实际不符而不得不进行大量重复性计算。本文针对这种情况提出了一种求解有向图必经节点最短路径问题的算法，可以更早检验是否存在符合路径顺序要求的最短路径并进行有效求解。
    The shortest path problem with necessary nodes has a wide range of practical applications. However, in the case of directed graph, many algorithms will have to perform a lot of repetitive calculations because the order of the required nodes in the optimal path is not consistent with the reality. In this paper, an algorithm is proposed to solve the shortest path problem of required nodes in a directed graph, which can verify the existence of the shortest path conforming to the path order and solve the problem effectively. 
  
 
</p></abstract><kwd-group><kwd>必经节点，最短路径，Dijkstra算法, Necessary Nodes</kwd><kwd> Shortest Path</kwd><kwd> Dijkstra Algorithm</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>求解有向必经节点最短路径问题的算法</title><p>白彩云，李阳<sup>*</sup>，王越，郭爽，孙欣宇，覃昶潔</p><p>大连民族大学理学院，辽宁 大连</p><p>收稿日期：2020年8月1日；录用日期：2020年8月17日；发布日期：2020年8月24日</p><disp-formula id="hanspub.37191-formula35"><graphic xlink:href="//html.hanspub.org/file/24-2621291x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>具有必经节点的最短路径问题有着广泛的实际应用。但是在有向图的情况下，很多算法会因为所求最优路径中的必经节点顺序与实际不符而不得不进行大量重复性计算。本文针对这种情况提出了一种求解有向图必经节点最短路径问题的算法，可以更早检验是否存在符合路径顺序要求的最短路径并进行有效求解。</p><p>关键词 :必经节点，最短路径，Dijkstra算法</p><disp-formula id="hanspub.37191-formula36"><graphic xlink:href="//html.hanspub.org/file/24-2621291x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/24-2621291x8_hanspub.png" /> <img src="//html.hanspub.org/file/24-2621291x9_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>随着社会的进步和经济的蓬勃发展，人们通过网络进行货品交易的方式使得交通和物流规划成为一个越来越受人关注的研究课题。最短路径的理论在交通和物流规划中有着广泛的应用。例如Dijkstra算法，Flyod等经典算法被人们沿用至今 [<xref ref-type="bibr" rid="hanspub.37191-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.37191-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.37191-ref3">3</xref>]。</p><p>现代的交通和物流问题往往不是单一的起点和终点的简单的路径规划问题。其中有一类问题叫做具有必经节的路径规划问题 [<xref ref-type="bibr" rid="hanspub.37191-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.37191-ref5">5</xref>]。从起始点到终点的过程中，有多重路径可选，但是有一些节点是必须要经过的节点。即可描述为如何寻找有必经节点的最短路径问题。该类问题的求解方式也较多，但是，在有向图中，必经节点是有顺序的，一旦算出的最短路径中所含必经节点的顺序不符合现实要求，就需要重新规划路径。若不存在符合有向图要求的最短路径，很多算法在发现这个结论前付出了太多的计算代价。针对这一点，本文给出了另一种求解有向图必经节点的方法，可以更早地检验是否存在符合有向图方向要求的必经节点路径。并用实例证实了方法的有效性。</p></sec><sec id="s4"><title>2. 算法介绍</title><p>本文给出一种求解有向必经节点的最短路径问题的算法，利用合并节点的技术将问题简化。把求解最短路径的一个问题化为多个小问题来进行求解。成功回避了所求最短路径中不包含必经节点，或者必经节点的顺序不满足方向要求。这个算法还可以快速发现是否存在满足有向图的带有必经节点最短路径存在与否，避免计算代价。</p><p>算法步骤</p><p>第一步找到所有必经节点，按照已知的路径方向将必经节点排序，将集合记为 X = { x 1 , ⋯ , x n } ，其中 x i , i = 1 , ⋯ , n 是必经节点，下角标为经过节点的顺序；</p><p>第二步将直接连通(中间没有任何其他节点)的若干必经节点合并为一个点(即假设若 x i 和 x j ( i &lt; j )直接连通，则合并为一个点，记为 x i j )；</p><p>第三步利用Dijkstra算法寻找每两个必经节点之间的最短路径，(即 x 1 与 x 2 之间， ⋯ ， x i − 1 与 x i j 之间， x i j 与 x j + 1 之间， ⋯ ， x n − 1 与 x n 之间)及起点到 x 1 的最短路径与 x n 到终点之间的最短路径；(若有任何两点之间不存在满足方向的连通路径，则不存在有向最短路径)；</p><p>第四步把所有最短路径链接起来就构成有向图的最短路径。</p></sec><sec id="s5"><title>3. 一个有向必经节点最短路径问题</title><p>如图1所示，这是一个有向网络图。</p><p>假设起点为1，终点为11，而路径要求必须经过的节点为3，6，9。两个节点之间的数字代表路径长度。现在，我们要求解经过上述三个必经节点的最短路径。</p><p>图1. 有向网络图</p><p>假设起点为1，终点为11，而路径要求必须经过的节点为3，6，9。两个节点之间的数字代表路径长度。现在，我们要求解经过上述三个必经节点的最短路径。</p></sec><sec id="s6"><title>4. 利用算法求解</title><p>首先我们找到图1中所有必经节点，为节点3，6，9。这样我们就找到了必经节点的集合，记为 X = { x 1 , x 2 , x 3 | x 1 = 3 , x 2 = 6 , x 3 = 9 } 。如图2所示，有向的带有必经节点的路径为：</p><p>图2. 必经节点路径图</p><p>在这里，节点3和6直接连通，因此合并为一个点，记为36。这样，只剩下两个必经节点，为36和9，(即， x 1 与 x 2 合并为 x 12 ，这时必经节点集合变为 X = { x 12 , x 3 } )。如图3所示：</p><p>图3. 合并必经节点路径图</p><p>接着，利用经典的Dijkstra算法求出合并节点36到9之间的最短路径。为36&#174;8&#174;9。</p><p>然后，我们接着使用Dijkstra算法求解出起点1到第一个必经节点3的最短路径为1&#174;2&#174;3。以及最后一个必经节点9到终点的最短路径为9&#174;11。最终，得到该有向必经节点最短路径问题的最短路径为1&#174;2&#174;3&#174;6&#174;8&#174;9&#174;11。</p></sec><sec id="s7"><title>5. 结论</title><p>本文给出了一种求解有向必经节点最短路径问题的算法。针对通常的算法存在的求解出的最短路径不满足问题的方向要求，以及花费大量计算才发现路径的不存在的问题。本文给出的算法首先将必经节点排序，并且利用合并连通节点的手段简化了计算。并且，在计算某两个必经节点间最短路径问题时如果无法得出结果，即可以判断出所求最短路径不存在。在后续工作中，我们将对大规模的问题进行计算，检验算法的计算速度。</p></sec><sec id="s8"><title>基金项目</title><p>大连民族大学大学生创新创业项目(201912026039，201912026449)，大连民族大学理学院信息与计算科学专业建设项目。</p></sec><sec id="s9"><title>文章引用</title><p>白彩云,李 阳,王 越,郭 爽,孙欣宇,覃昶潔. 求解有向必经节点最短路径问题的算法An Algorithm for Solving the Shortest Path Problem of Directed and Necessary Nodes[J]. 应用数学进展, 2020, 09(08): 1313-1316. https://doi.org/10.12677/AAM.2020.98154</p></sec><sec id="s10"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.37191-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">王小会, 薛延刚, 李晓青. 基于Dijkstra算法过必经点的最短路径设计[J]. 陕西理工大学学报(自然科学版), 2020, 36(3): 68-73.</mixed-citation></ref><ref id="hanspub.37191-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">曹祥红, 李欣妍, 魏晓鸽, 李森, 黄梦溪, 李栋禄. 基于Dijkstra-ACO混合算法的应急疏散路径动态规划[J]. 电子与信息学报, 2020, 42(6): 1502-1509.</mixed-citation></ref><ref id="hanspub.37191-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">李阳, 高艳春, 全艳. 最短路径理论在紧急通道设计中的应用[J]. 工业控制计算机, 2012, 25(11): 91-92.</mixed-citation></ref><ref id="hanspub.37191-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">余才志. 必经节点的最短路径算法研究[D]: [硕士学位论文]. 天津: 天津大学, 2016.</mixed-citation></ref><ref id="hanspub.37191-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">张引发, 刘乾, 王鲸鱼. 必经节点约束下的光网络最短路径算法[J]. 光通信技术, 2018, 42(10): 30-32.</mixed-citation></ref></ref-list></back></article>