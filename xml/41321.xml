<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2021.113072</article-id><article-id pub-id-type="publisher-id">CSA-41321</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20210300000_79440162.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于模型驱动架构的软件快速开发技术研究
  Research on Software Rapid Development Technology of Model Driven Architecture
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郑</surname><given-names>文斌</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>池</surname><given-names>晓金</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>蔡</surname><given-names>怡挺</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>高</surname><given-names>旭初</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>晓东</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>何</surname><given-names>佩</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff4"><addr-line>西北工业大学计算机学院，陕西 西安;西北工业大学深圳研究院，广东 深圳</addr-line></aff><aff id="aff3"><addr-line>西北工业大学计算机学院，陕西 西安</addr-line></aff><aff id="aff2"><addr-line>国网浙江省电力有限公司温州供电公司，浙江 温州</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>09</day><month>03</month><year>2021</year></pub-date><volume>11</volume><issue>03</issue><fpage>703</fpage><lpage>709</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   企业信息化战略使得信息管理系统等应用性软件需求不断增大，针对传统开发技术存在开发效率低、人力资源成本高、开发周期长，软件可移植性和扩展性有待进一步提高等问题，研究并建立了基于模型驱动架构的软件开发方法。该方法利用模型思想，建立平台无关模型，通过模型转换技术转换为平台相关模型，然后生成WEB应用系统。论文梳理了传统软件开发技术存在的不足，分析了模型驱动架构相关技术，研究了基于模型驱动架构的软件开发框架的总体设计思路，并通过模块设计、模块实现和在中小企业信息管理系统二次开发中的实践应用实现证明了基于模型驱动架构的软件开发框架的有效性和实用性。 The demand of application software such as information management system is increasing. Aiming at the problems of low development efficiency, high cost of human resources, long development cycle, software portability and scalability need to be further improved in traditional development technology, a software development method based on Model Driven Architecture(MDA) is studied and established. The core of the method bases on the model conversion technology and builds platform independent mode, and then generates WEB application system. The article combs the shortcomings of the traditional software development technology, analyzes the related technologies of MDA, studies the overall design ideas of the software development framework based on MDA. Through the module design and the module implementation, the framework is applied in the secondary development of SME information management system for practical application. The practical application proves the validity and practicability of the software development framework based on model-driven architecture. 
  
 
</p></abstract><kwd-group><kwd>模型驱动架构，模型转换，平台无关模型，平台相关模型, Model Driven Architecture</kwd><kwd> Model Conversion</kwd><kwd> Platform-Independent Model</kwd><kwd> Platform-Related Model</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>企业信息化战略使得信息管理系统等应用性软件需求不断增大，针对传统开发技术存在开发效率低、人力资源成本高、开发周期长，软件可移植性和扩展性有待进一步提高等问题，研究并建立了基于模型驱动架构的软件开发方法。该方法利用模型思想，建立平台无关模型，通过模型转换技术转换为平台相关模型，然后生成WEB应用系统。论文梳理了传统软件开发技术存在的不足，分析了模型驱动架构相关技术，研究了基于模型驱动架构的软件开发框架的总体设计思路，并通过模块设计、模块实现和在中小企业信息管理系统二次开发中的实践应用实现证明了基于模型驱动架构的软件开发框架的有效性和实用性。</p></sec><sec id="s2"><title>关键词</title><p>模型驱动架构，模型转换，平台无关模型，平台相关模型</p></sec><sec id="s3"><title>Research on Software Rapid Development Technology of Model Driven Architecture</title><p>Wenbin Zheng<sup>1</sup>, Xiaojin Chi<sup>1</sup>, Yiting Cai<sup>1</sup>, Xuchu Gao<sup>2</sup>, Xiaodong Wang<sup>2</sup><sup>,3</sup>, Pei He<sup>2 </sup></p><p><sup>1</sup>State Grid Wenzhou Electric Power Co., Ltd., Wenzhou Zhejiang</p><p><sup>2</sup>School of Computer Science, Northwestern Polytechnical University, Xi'an Shaanxi</p><p><sup>3</sup>Research and Development Institute of Northwestern Polytechnical University in Shenzhen, Shenzhen Guangdong</p><p><img src="//html.hanspub.org/file/26-1542046x4_hanspub.png" /></p><p>Received: Feb. 25<sup>th</sup>, 2021; accepted: Mar. 19<sup>th</sup>, 2021; published: Mar. 30<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/26-1542046x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>The demand of application software such as information management system is increasing. Aiming at the problems of low development efficiency, high cost of human resources, long development cycle, software portability and scalability need to be further improved in traditional development technology, a software development method based on Model Driven Architecture(MDA) is studied and established. The core of the method bases on the model conversion technology and builds platform independent mode, and then generates WEB application system. The article combs the shortcomings of the traditional software development technology, analyzes the related technologies of MDA, studies the overall design ideas of the software development framework based on MDA. Through the module design and the module implementation, the framework is applied in the secondary development of SME information management system for practical application. The practical application proves the validity and practicability of the software development framework based on model-driven architecture.</p><p>Keywords:Model Driven Architecture, Model Conversion, Platform-Independent Model, Platform-Related Model</p><disp-formula id="hanspub.41321-formula34"><graphic xlink:href="//html.hanspub.org/file/26-1542046x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/26-1542046x7_hanspub.png" /> <img src="//html.hanspub.org/file/26-1542046x8_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>随着信息技术的飞速发展，企业纷纷实施信息化战略，使得信息管理系统等应用性软件需求较大。然而由于传统开发技术存在开发效率低、人力资源成本高、开发周期长，软件可移植性和扩展性有待进一步提高等情况。针对这些情况，业界先后提出了基于软件工程的开发方法、软件设计模式、软件设计框架等改进措施。之后，对象管理组织(OMG, Object Management Group)定义的一个软件开发框架 [<xref ref-type="bibr" rid="hanspub.41321-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.41321-ref2">2</xref>]，即模型驱动架构(MDA, Model Driven Architecture)并在软件行业得到了高度关注和广泛应用 [<xref ref-type="bibr" rid="hanspub.41321-ref3">3</xref>]。</p><p>MDA在工业界的发展非常迅速，它提供了一个中立于各开发商的开放的方法，以应对业务和技术变化带来的挑战。核心思想是抽象出与实现技术无关、完整描述业务功能的核心平台无关模型(PIM，Platform Independent Model)，然后针对不同实现技术制定多个转换规则，通过这些转换规则及辅助工具将 PIM 转换成与具体实现技术相关的平台相关模型(PSM，Platform Specific Model)，最后将经过充实的 PSM 转换成代码 [<xref ref-type="bibr" rid="hanspub.41321-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.41321-ref4">4</xref>]。通过PIM和PSM、MDA 的目的是分离业务建模与底层平台技术，以保护建模的成果不受技术变迁的影响。</p><p>论文结合课题组多年来从事企业信息管理系统的开发经验，以及对模型驱动架构开发技术的研究，针对用户应对业务和技术变化带来的挑战，分析研究了基于模型驱动架构将业务和应用逻辑与底层平台技术分离开来的设计思路，构建了面向中小型企业日常信息管理软件系统开发所需的基于Web的快速开发框架。</p></sec><sec id="s6"><title>2. 模型驱动架构介绍</title><sec id="s6_1"><title>2.1. 模型驱动架构</title><p>模型驱动架构源自于把系统操作的规范从系统利用底层平台能力的方式细节中分离出来的思想 [<xref ref-type="bibr" rid="hanspub.41321-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.41321-ref6">6</xref>]。模型驱动架构包括模型技术、中间件、普适服务和解决方案，如图1所示。</p><p>图1. 模型驱动架构的体系结构</p><p>模型驱动架构的框架包括模型、变换定义语言、变换定义以及变换工具等，如图2所示。其中，模型是对系统的功能、行为、性能以及系统结构等因素的描述或表示 [<xref ref-type="bibr" rid="hanspub.41321-ref7">7</xref>]。模型包括平台无关模型PIM和平台相关模型PSM。平台无关模型PIM从功能设计角度描述系统的体系结构，不涉及最终实现平台的知识，与技术细节无关；平台相关模型PSM描述基于特定软件开发环境的模型，包含最终实现平台的全部知识。此外，变换定义描述了源语言表述的模型如何变换到目标语言表述的模型。变换工具 [<xref ref-type="bibr" rid="hanspub.41321-ref8">8</xref>] 按照变换定义，为特定源模型执行变换。元语言在MDA框架中扮演的角色不同于建模语言，它是描述建模语言的特殊语言。</p><p>图2. 模型驱动架构的框架</p></sec><sec id="s6_2"><title>2.2. 模型驱动架构的开发模式</title><p>在基于模型驱动架构的软件开发过程中，核心是对可被机器化读取的形式化模型的构建，首先针对业务需求建立平台无关模型(PIM)，然后采用模型映射技术和代码自动生成技术转换为平台相关模型(PSM)，最后按照某种规则生产应用代码，这种开发模式实现了模型在不同平台中的复用。其开发模式关注的是对系统的建模，包括对模型的理解、设计、创建、维护和修改，如图3所示。同时，模型驱动架构还涉及到XML [<xref ref-type="bibr" rid="hanspub.41321-ref9">9</xref>] 等可扩展标记语言、AJAX技术等 [<xref ref-type="bibr" rid="hanspub.41321-ref10">10</xref>] [<xref ref-type="bibr" rid="hanspub.41321-ref11">11</xref>] [<xref ref-type="bibr" rid="hanspub.41321-ref12">12</xref>]。</p><p>图3. 模型驱动架构的开发模式</p></sec></sec><sec id="s7"><title>3. 模型驱动架构的总体设计及实现</title><sec id="s7_1"><title>3.1. 总体设计思路</title><p>基于模型驱动架构的软件快速开发平台 [<xref ref-type="bibr" rid="hanspub.41321-ref12">12</xref>] [<xref ref-type="bibr" rid="hanspub.41321-ref13">13</xref>] 的基本设计思路为：</p><p>第一，建立一套XML文档标签的书写标准，利用建立的标准XML文档对企业业务建模进行描述。</p><p>第二，搭建一套完整的模型驱动运行环境(框架)，该框架要求能够支持对标准XML标签的有效性验证、标签识别、XML解析存储并根据解析完成的标签自动生成HTML+JAVASCRIPT+CSS页面源码。</p><p>第三，利用框架和业务建模描述的XML文档，实现系统的自动生成。</p></sec><sec id="s7_2"><title>3.2. 模块结构设计</title><p>基于模型驱动的软件开发框架主要包括XML建模文档、MDR运行时环境(XML解析器、HTML生成器、JavaScript脚本、CSS脚本、XML执行机制)、DBOperation等，其基本关系如图4所示。</p><p>图4. 模块关系图</p><p>MDR运行时环境主要用来解释和执行由建模子系统生成的XML持久化文档，并最终生成可执行的系统。该子系统包括以下几个模块：XML解析模块、界面生成引擎模块、XML工作流处理模块等。其中，XML解析模块首先利用预置的Shema模型对文档进行有效性验证 [<xref ref-type="bibr" rid="hanspub.41321-ref14">14</xref>]，验证通过则获取XML文档所包含的模型信息，包括界面中每个组件的具体信息，之后将获取的信息装填在对应组件实例，存储在公共静态容器中。</p><p>界面生成引擎首先封装一组创建基本HTML组件的API，然后构建XML文档模型与目标语言之间的映射转换关系；各类映射相互作用和相互促进，完成系统的数据处理、业务处理、逻辑调度、界面显示等功能。XML最初设计的时候是面向静态数据的,主要用于数据存储和展示，它在处理动态数据方面表现很弱。在考虑管理信息系统的动态交互方面，创新性地在XML标签中增加了几种类似C/C++中常用逻辑语法，如if、elseif、endif、else、goto等，并为上述元素添加了可执行模块的支持。此外，本文还采用了XML的数据格式表示能力，将不同的信息格式进行统一，实现了应用程序之间的数据交换，保证了数据的正确接收。</p></sec><sec id="s7_3"><title>3.3. 设计框架的实现</title><p>设计框架的实现主要包括静态界面模型的建模和动态界面模型的建模。</p><p>1) XML标签规范</p><p>通过构建自定义标签及界面组件，完成对静态界面模型的建模。即采用Table控件类、Form控件类，Menu控件类三大类界面组件，实现数据的显示，数据的采集及分块显示和建立界面菜单索引等功能。同时，为了更好地快速完成静态界面模型的建模，论文预置一套包含基本的标签名称、定义、属性、父元素、子元素、实例等基本属性XML页面建模标签规范。</p><p>2) 组件规范(XML可执行动作)</p><p>静态界面模型是依靠XML标签规范对业务逻辑进行静态描述。动态界面模型建模是为用户提供信息交互功能，一般以需求业务逻辑引擎作为支撑，在业务逻辑静态描述的基础上，添加可执行的标签语句，实际运行业务过程。而业务逻辑引擎由连接组件和业务组件构成。连接组件可以使界面组件和数据库实体关联起来，针对不同的数据显示与数据存储需求，可以定义满足不同需求的连接组件，一般可以实现数据的增加、删除、加载等工作。业务组件是具有执行特定的业务处理操作的功能，通过提炼系统中可重用业务模块，并封装成业务组件，帮助用户完成应用系统的业务建模工作。连接组件关注的是数据库实体与界面之间的数据传递，而业务组件则关注的是如何实现可重用的业务处理流程。</p><p>3) XML建模</p><p>标签规范和组件规范是框架实现的前提和基础，进行XML建模是框架实现的关键。XML建模包括首页建模、菜单建模以及业务建模等。以首页建模为例，通常情况下，企业信息管理系统首页主要为登录及注册。就拿登录来讲，假设登录页面上有用户名、密码及登录按钮，并且在点击登录按钮时对输入的用户名进行判断，如果为空则警示ERROR消息，如果对照数据库中相应人力资源表中的用户名、密码完全正确则跳转到信息系统的内部首页。</p></sec></sec><sec id="s8"><title>4. 应用实例</title><p>论文将构建好的框架实际应用到企业信息管理系统的二次开发平台中。开发人员使用框架可以快速完成一个业务逻辑应用的开发：</p><p>1) 页面布局。把描述用户交互界面布局的ASPX文件，放置界面组件容器。</p><p>2) 菜单建模。描述页面导航的XML文件，实现业务菜单对应的页面跳转。跳转网址的后面附带一个Action参数，根据页面配置区分该Action要加载的页面描述XML文件，使得页面布局得到重用。</p><p>3) 页面配置。描述菜单模型中与Action参数对应的页面模型、流程模型以及业务处理类的XML文件。一个业务流程对应唯一的跳转Action参数以及页面模型，对于业务逻辑操作完全一致的流程，可以使用相同的流程模型。</p><p>4) 页面建模。描述用户界面的内容(各种组件)的XML文件。</p><p>5) 流程建模。描述页面使用的业务流程的XML文件。</p><p>如图5所示结合管理信息系统中备忘录的设计实现的实例应用。</p><p>图5. 备忘录数据库设计</p><p>图5中，备忘录的数据库设计，包括备忘名称、内容、时间等信息，数据库设计时需要每个表单信息的数据类型等。随后，通过备忘录菜单建模和备忘录XML建模得到如图6所示的备忘录显示效果图。快速而有效地开发过程，证明了已构建模型在企业信息管理系统的二次开发平台中应用的有效性和实用性。</p><p>图6. 备忘录显示效果图</p></sec><sec id="s9"><title>基金项目</title><p>国网浙江省电力有限公司科技项目资助。</p></sec><sec id="s10"><title>文章引用</title><p>郑文斌,池晓金,蔡怡挺,高旭初,王晓东,何 佩. 基于模型驱动架构的软件快速开发技术研究Research on Software Rapid Development Technology of Model Driven Architecture[J]. 计算机科学与应用, 2021, 11(03): 703-709. https://doi.org/10.12677/CSA.2021.113072</p></sec><sec id="s11"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.41321-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">叶发忠, 何希琼, 钟勇. 模型驱动架构的研究[J]. 计算机应用, 2006, 26(zl): 248-249+257.</mixed-citation></ref><ref id="hanspub.41321-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">OMG (Object Management Group) (2021). MDA Guide.  
http://www.omg.org/cgi-bin/apps/doc?omg/03-06-01.pdf</mixed-citation></ref><ref id="hanspub.41321-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">施蓓莉. 基于模型驱动架构的个人理财资产配置系统开发应用研究[J]. 电子技术与软件工程, 2016(12): 171.</mixed-citation></ref><ref id="hanspub.41321-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">邓禹. 基于MDA的面向微服务模型转换研究[D]: [硕士学位论文]. 昆明理工大学, 2018.</mixed-citation></ref><ref id="hanspub.41321-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">陈勇, 李静燕, 王志坚. 模型驱动体系结构浅析[J]. 计算机应用研究, 2004, 21(12): 19-22.</mixed-citation></ref><ref id="hanspub.41321-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">张行知. 模型驱动体系结构研究[J]. 信息通信, 2016(5): 16-17.</mixed-citation></ref><ref id="hanspub.41321-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Mellor, S.J. and Scott, K. (2004) MDA Distilled. Addison-Wesley, Boston.</mixed-citation></ref><ref id="hanspub.41321-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">余秋惠, 何成万. 一种基于角色的MDA模型转换方法[J]. 武汉化工学院学报, 2006, 28(2): 70-73.</mixed-citation></ref><ref id="hanspub.41321-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Harold, E.R. XML宝典[M]. 马云, 钟萍, 等, 译. 北京: 电子工业出版社, 2002.</mixed-citation></ref><ref id="hanspub.41321-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">冯文堂, 胡强, 万建成. 基于XML的界面自动生成[J]. 计算机应用研究, 2006(9): 75-77.</mixed-citation></ref><ref id="hanspub.41321-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">韩萌. 基于Ajax技术的Web应用[J]. 宁夏师范学院学报(自然科学), 2010, 31(3): 67-71.</mixed-citation></ref><ref id="hanspub.41321-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">罗异. 基于模型驱动架构的Web代码生成方法研究与应用[D]: [硕士学位论文]. 重庆邮电大学, 2018.</mixed-citation></ref><ref id="hanspub.41321-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">石双元. Web应用开发技术[M]. 北京: 清华大学出版社, 2010: 1-5.</mixed-citation></ref><ref id="hanspub.41321-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">吉奥特, 等, 著. 系统工程Petri网建模、验证与应用指南[M]. 王生原, 等, 译. 北京: 电子工业出版社, 2005.</mixed-citation></ref></ref-list></back></article>