<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2017.75058</article-id><article-id pub-id-type="publisher-id">CSA-20831</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20170500000_62622371.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于巴氏系数的协同过滤算法
  Collaborative Filtering Algorithm Based Bhattacharyya Coefficient
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>姜</surname><given-names>少鑫</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陈</surname><given-names>彩</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>梁</surname><given-names>毅</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>北京工业大学计算机学院，北京</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>xin5926270@163.com(姜少)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>22</day><month>05</month><year>2017</year></pub-date><volume>07</volume><issue>05</issue><fpage>473</fpage><lpage>480</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   为了克服协同过滤算法的稀疏性问题和传统相似度计算方法过度依赖共同评分的问题，本文引入巴氏系数改进修正余弦相似度，进而提出基于巴氏系数的协同过滤算法（CFBC）。改进的算法考虑了项目全局评分信息和局部评分信息，克服了对于共同评分项的依赖。为了证明CFBC算法的有效性，我们基于已有的相似度计算方法实现了协同过滤算法，实验结果表明CFBC算法提高了推荐的准确性。 In order to solve the problems of Collaborative Filtering in terms of sparsely and the traditional similarity calculation method which relys on co-rated ratings too much, we utilize Bhattacharyya coefficient to improve the adjusted-cosine method. In this paper, we propose a Collaborative Fil-tering Algorithm based on Bhattacharyya Coefficient (CFBC). The proposed algorithm has considered both the global ratings and the local ratings，and overcomes the dependence of co-rated items. To prove the efficiency of CFBC, this paper has compared the neighborhood based on CFs using state-of-the-art similarity measures with the proposed algorithm based on CF in terms of performance. As a result, the CFBC has improved the accuracy of recommendation.
    
  
 
</p></abstract><kwd-group><kwd>协同过滤算法，修正余弦相似度，巴氏系数，稀疏性问题, Collaborative Filtering Algorithm</kwd><kwd> Similarity</kwd><kwd> Bhattacharyya Coefficient</kwd><kwd> Sparsely</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于巴氏系数的协同过滤算法<sup> </sup></title><p>姜少鑫，陈彩，梁毅</p><p>北京工业大学计算机学院，北京</p><p>收稿日期：2017年5月13日；录用日期：2017年5月28日；发布日期：2017年5月31日</p><disp-formula id="hanspub.20831-formula20"><graphic xlink:href="http://html.hanspub.org/file/10-1540763x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>为了克服协同过滤算法的稀疏性问题和传统相似度计算方法过度依赖共同评分的问题，本文引入巴氏系数改进修正余弦相似度，进而提出基于巴氏系数的协同过滤算法（CFBC）。改进的算法考虑了项目全局评分信息和局部评分信息，克服了对于共同评分项的依赖。为了证明CFBC算法的有效性，我们基于已有的相似度计算方法实现了协同过滤算法，实验结果表明CFBC算法提高了推荐的准确性。</p><p>关键词 :协同过滤算法，修正余弦相似度，巴氏系数，稀疏性问题</p><disp-formula id="hanspub.20831-formula21"><graphic xlink:href="http://html.hanspub.org/file/10-1540763x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2017 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="http://image.hanspub.org:8080\Html/htmlimages\1-2890033x\e70a10f1-7c93-45ea-9603-062237856e4b.png" /><img src="http://image.hanspub.org:8080\Html\htmlimages\1-2890033x\e898c85e-ffc4-45c9-b817-14224a4d6960.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>推荐系统 [<xref ref-type="bibr" rid="hanspub.20831-ref1">1</xref>] 成功帮助人们解决了“信息过载” [<xref ref-type="bibr" rid="hanspub.20831-ref1">1</xref>] 问题，并成功运用于商业领域。推荐系统的核心是推荐算法，协同过滤算法是其中最为广泛使用的协同过滤算法，其优点是它与领域知识无关并且准确性也比其他算法高 [<xref ref-type="bibr" rid="hanspub.20831-ref2">2</xref>] 。可分为：基于用户的的协同过滤推荐算法 [<xref ref-type="bibr" rid="hanspub.20831-ref3">3</xref>] 和基于项目的协同过滤推荐算法 [<xref ref-type="bibr" rid="hanspub.20831-ref4">4</xref>] 。协同过滤推荐算法的基本思想是：与目标用户相似的用户喜欢的项目目标用户也可能喜欢 [<xref ref-type="bibr" rid="hanspub.20831-ref5">5</xref>] ，其核心是相似度计算。传统的相似度计算方法大都依赖共同评分项来计算目标用户的近邻，而稀疏性 [<xref ref-type="bibr" rid="hanspub.20831-ref6">6</xref>] 使得这些方法失效甚至适得其反。经过多年的发展，出现了各种不同的相似度计算方法：皮尔森相关系数(PC)是衡量两个用户(项目)的线性相关性。皮尔森相关系数(PC) [<xref ref-type="bibr" rid="hanspub.20831-ref7">7</xref>] 在共同评分项较少的情形下无法判定两个用户的相似性，而且没有充分利用全局评分信息；Ahn [<xref ref-type="bibr" rid="hanspub.20831-ref8">8</xref>] 提出了PIP (Proximity-Impact-Popularity)只考虑评分的片面信息：接近、影响度和普及度，而没有考虑全局评分信息的利用；Jaccard相似度 [<xref ref-type="bibr" rid="hanspub.20831-ref9">9</xref>] 计算方法考虑到使用全局评分信息，但是没有考虑评分的数值的大小，而是简单的处理为0和1；Bobadilla等 [<xref ref-type="bibr" rid="hanspub.20831-ref10">10</xref>] 提出了多个相似度计算方法来克服其之前的相似度计算方法的缺点。1) 结合了均方差(Mean squared-difference, MSD)和Jaccard提出JMSD [<xref ref-type="bibr" rid="hanspub.20831-ref11">11</xref>] 计算方法，让两者克服彼此的缺点；2) 他们提出Mean-Jaccard-Difference (MJD) [<xref ref-type="bibr" rid="hanspub.20831-ref12">12</xref>] ，在一定程度上克服了稀疏性问题。但上述的所有相似度计算方法在共同评分项较少的时候性能变得很差。</p><p>由前面的讨论可以看出传统的相似性计算方法并不适用于稀疏用户–项目评分的场景，因为它们都依赖共同评分项。在此，我们提出一个基于巴氏系数的协同过滤算法(Collaborative Filtering Based on Bhattacharyya Coefficient, CFBC)，该算法通过巴氏系数来度量项目间的相似度，巴氏系数通过计算项目的全局评分信息从而克服对共同评分项的依赖问题。CFBC算法有效缓解传统相似度在用户–项目评分数据非常稀疏场景下推荐质量低的问题。</p></sec><sec id="s4"><title>2. 相关工作分析</title><p>推荐系统中，用户–项目评分矩阵 [<xref ref-type="bibr" rid="hanspub.20831-ref13">13</xref>] 是一个包含了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x9_hanspub.png" xlink:type="simple"/></inline-formula>个用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x10_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x11_hanspub.png" xlink:type="simple"/></inline-formula>个项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x12_hanspub.png" xlink:type="simple"/></inline-formula>二维矩阵，表示如下：</p><disp-formula id="hanspub.20831-formula22"><graphic xlink:href="http://html.hanspub.org/file/10-1540763x13_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x14_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x15_hanspub.png" xlink:type="simple"/></inline-formula>对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x16_hanspub.png" xlink:type="simple"/></inline-formula>的评分，体现用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x17_hanspub.png" xlink:type="simple"/></inline-formula>对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x18_hanspub.png" xlink:type="simple"/></inline-formula>的喜好程度。</p><sec id="s4_1"><title>2.1. 传统相似度</title><p>1) 皮尔森相关系数(Pearson’s Correlation, PC)</p><p>皮尔森相关系数经常使用在基于用户的协同过滤算法中。PC能够度量两个用户或项目的线性相关性。皮尔森相关系数取值范围[−1,+1]，值+1表示两个用户相关性最高，而−1表示两个用户相关性最低。同样，它也可以度量两个项目间的相似度。用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x19_hanspub.png" xlink:type="simple"/></inline-formula>和用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x20_hanspub.png" xlink:type="simple"/></inline-formula>相似度由下式确定：</p><disp-formula id="hanspub.20831-formula23"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x21_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x22_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x23_hanspub.png" xlink:type="simple"/></inline-formula>在项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x24_hanspub.png" xlink:type="simple"/></inline-formula>上的评分，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x25_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x26_hanspub.png" xlink:type="simple"/></inline-formula>在所有项目上的平均评分；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x27_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x28_hanspub.png" xlink:type="simple"/></inline-formula>和用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x29_hanspub.png" xlink:type="simple"/></inline-formula>共同评分项集。</p><p>2) PIP相似度(Proximity-Impact-Popularity, PIP)</p><p>PIP相似度综合了接近度、影响度和流行度三个因子来确定最终相似度。计算公式如下：</p><disp-formula id="hanspub.20831-formula24"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x30_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x31_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x32_hanspub.png" xlink:type="simple"/></inline-formula>对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x33_hanspub.png" xlink:type="simple"/></inline-formula>的评分。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x34_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x35_hanspub.png" xlink:type="simple"/></inline-formula>和用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x36_hanspub.png" xlink:type="simple"/></inline-formula>的共同评分项集合。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x37_hanspub.png" xlink:type="simple"/></inline-formula>表示两个评分<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x38_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x39_hanspub.png" xlink:type="simple"/></inline-formula>的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x40_hanspub.png" xlink:type="simple"/></inline-formula>值。对于两个评分<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x41_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x42_hanspub.png" xlink:type="simple"/></inline-formula>来说，它们的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x43_hanspub.png" xlink:type="simple"/></inline-formula>值由下式表示，</p><disp-formula id="hanspub.20831-formula25"><graphic xlink:href="http://html.hanspub.org/file/10-1540763x44_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x45_hanspub.png" xlink:type="simple"/></inline-formula>仅考虑两个评分<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x46_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x47_hanspub.png" xlink:type="simple"/></inline-formula>的算数差异，依据它们是否一致来确定一个惩罚值，一致性的判定标准是评分区间的中位数，比如评分区间为[1, 5]，那么就依据两个评分在3的同一侧还是另一侧来决定惩罚值。如果评分都在同一侧则它俩是一致的，如果在两侧则是不一致的。公式如下：</p><disp-formula id="hanspub.20831-formula26"><graphic xlink:href="http://html.hanspub.org/file/10-1540763x48_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x49_hanspub.png" xlink:type="simple"/></inline-formula>表示用户对项目的喜好程度。如果两个用户非常喜欢一个项目，那么这个喜好程度能够增加他们之间的相似度。当两个评分的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x50_hanspub.png" xlink:type="simple"/></inline-formula>值相同时，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x51_hanspub.png" xlink:type="simple"/></inline-formula>能够体现出它们相似的程度。公式如下：</p><disp-formula id="hanspub.20831-formula27"><graphic xlink:href="http://html.hanspub.org/file/10-1540763x52_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x53_hanspub.png" xlink:type="simple"/></inline-formula>考察的是流行项目和非流行项目评分对相似度的影响，如果两个用户对非流行项目都表现出兴趣来，那么他们相似度肯定较高。公式如下：</p><disp-formula id="hanspub.20831-formula28"><graphic xlink:href="http://html.hanspub.org/file/10-1540763x54_hanspub.png"  xlink:type="simple"/></disp-formula><p>所有等式中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x55_hanspub.png" xlink:type="simple"/></inline-formula>表示项目评分最大值，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x56_hanspub.png" xlink:type="simple"/></inline-formula>表示项目评分最小值，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x57_hanspub.png" xlink:type="simple"/></inline-formula>表示所有评分的中位数，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x58_hanspub.png" xlink:type="simple"/></inline-formula>表示对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x59_hanspub.png" xlink:type="simple"/></inline-formula>评分的平均值。</p><p>3) MJD相似度</p><p>MJD按某种比例来组合相关的共同评分项目、不相关共同评分项目的均方差值，用评分数值信息来代替评分的分布。计算公式如下：</p><disp-formula id="hanspub.20831-formula29"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x60_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x61_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x62_hanspub.png" xlink:type="simple"/></inline-formula>和用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x63_hanspub.png" xlink:type="simple"/></inline-formula>评分为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x64_hanspub.png" xlink:type="simple"/></inline-formula>的项目差集。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x65_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x66_hanspub.png" xlink:type="simple"/></inline-formula>和用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x67_hanspub.png" xlink:type="simple"/></inline-formula>的均方根差，由公式<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x68_hanspub.png" xlink:type="simple"/></inline-formula>确定。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x69_hanspub.png" xlink:type="simple"/></inline-formula>表示权重。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x70_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x71_hanspub.png" xlink:type="simple"/></inline-formula>对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x72_hanspub.png" xlink:type="simple"/></inline-formula>的评分。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x73_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x74_hanspub.png" xlink:type="simple"/></inline-formula>和用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x75_hanspub.png" xlink:type="simple"/></inline-formula>的共同评分项集合，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x76_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x77_hanspub.png" xlink:type="simple"/></inline-formula>评分项集合。</p><p>4) JMSD相似度</p><p>JMSD相似度既考虑了共同评分的占比又考虑了评分绝对值，计算公式如下：</p><disp-formula id="hanspub.20831-formula30"><label>(4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x78_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x79_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x80_hanspub.png" xlink:type="simple"/></inline-formula>对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x81_hanspub.png" xlink:type="simple"/></inline-formula>的评分。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x82_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x83_hanspub.png" xlink:type="simple"/></inline-formula>和用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x84_hanspub.png" xlink:type="simple"/></inline-formula>的共同评分项集合。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x85_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x86_hanspub.png" xlink:type="simple"/></inline-formula>评分项集合。</p></sec><sec id="s4_2"><title>2.1. 修正余弦相似度</title><p>余弦相似度未考虑到用户评分量纲问题 [<xref ref-type="bibr" rid="hanspub.20831-ref3">3</xref>] ，为了消除这个问题，修正的余弦相似性在基本余弦相似性的基础上减去了用户对所有项目的平均评分。计算公式如下：</p><disp-formula id="hanspub.20831-formula31"><label>(5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x87_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x88_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x89_hanspub.png" xlink:type="simple"/></inline-formula>在项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x90_hanspub.png" xlink:type="simple"/></inline-formula>上的评分，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x91_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x92_hanspub.png" xlink:type="simple"/></inline-formula>在所有项目上的平均评分；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x93_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x94_hanspub.png" xlink:type="simple"/></inline-formula>和用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x95_hanspub.png" xlink:type="simple"/></inline-formula>共同评分项集。</p></sec><sec id="s4_3"><title>2.2. 巴氏系数</title><p>巴氏系数 [<xref ref-type="bibr" rid="hanspub.20831-ref5">5</xref>] 大量应用于信号处理、图像处理以及模式识别领域。基于离散区间的巴氏距离公式定义如下：</p><disp-formula id="hanspub.20831-formula32"><label>(6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x96_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x97_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x98_hanspub.png" xlink:type="simple"/></inline-formula>表示评分数据矩阵中项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x99_hanspub.png" xlink:type="simple"/></inline-formula>和项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x100_hanspub.png" xlink:type="simple"/></inline-formula>的离散密度估计。那么，项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x101_hanspub.png" xlink:type="simple"/></inline-formula>和项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x102_hanspub.png" xlink:type="simple"/></inline-formula>的巴氏相似度可以表示成：</p><disp-formula id="hanspub.20831-formula33"><label>(7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x103_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x104_hanspub.png" xlink:type="simple"/></inline-formula>是项目的评分最大值；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x105_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x106_hanspub.png" xlink:type="simple"/></inline-formula>是评价过项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x107_hanspub.png" xlink:type="simple"/></inline-formula>的用户总数，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x108_hanspub.png" xlink:type="simple"/></inline-formula>是给项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x109_hanspub.png" xlink:type="simple"/></inline-formula>评分数为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x110_hanspub.png" xlink:type="simple"/></inline-formula>的用户总数，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x111_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>下面我们举个例子，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x112_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x113_hanspub.png" xlink:type="simple"/></inline-formula>表示项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x114_hanspub.png" xlink:type="simple"/></inline-formula>和项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x115_hanspub.png" xlink:type="simple"/></inline-formula>的用户评分向量，且评分范围为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x116_hanspub.png" xlink:type="simple"/></inline-formula>，根据公式(3)</p><disp-formula id="hanspub.20831-formula34"><graphic xlink:href="http://html.hanspub.org/file/10-1540763x117_hanspub.png"  xlink:type="simple"/></disp-formula><p>而从评分向量中我们可以看出没有一个用户同时评价过项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x118_hanspub.png" xlink:type="simple"/></inline-formula>和项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x119_hanspub.png" xlink:type="simple"/></inline-formula>，现有的相似度计算公式是无法在这种情形下进行项目相似度计算的。</p></sec></sec><sec id="s5"><title>3. 基于巴氏系数的协同过滤算法</title><p>协同过滤算法中的关键步骤是根据相似度来确定目标用户的近邻。而传统的相似度计算公式，在共同平分项很少甚至没有共同评分项时很难取得令人满意的结果。在此，本文通过结合巴氏系数提出的相似度计算方法不仅考虑了项目的局部评分信息，还考虑了项目的全局评分信息，这样在共同评分项较少甚至没有共同评分项时，仍能有效计算出两个用户的相似度，进而提高协同过滤算法准确性。</p><sec id="s5_1"><title>3.1. 引入巴氏系数</title><p>传统的相似度计算方法依赖共同评分项目，在共同评分项目很少甚至没有的时候往往产生很差的效果。本文通过结合巴氏系数，在计算一对用户相似度时既考虑他们的局部评分信息，又考虑了非共同评分项目，两者结合起来确定最终的相似度。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x120_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x121_hanspub.png" xlink:type="simple"/></inline-formula>分别表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x122_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x123_hanspub.png" xlink:type="simple"/></inline-formula>评价过的项目集。实际应用中，用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x124_hanspub.png" xlink:type="simple"/></inline-formula>和用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x125_hanspub.png" xlink:type="simple"/></inline-formula>可能没有共同评分项目，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x126_hanspub.png" xlink:type="simple"/></inline-formula>。因此，用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x127_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x128_hanspub.png" xlink:type="simple"/></inline-formula>的相似度既体现<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x129_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x130_hanspub.png" xlink:type="simple"/></inline-formula>的共同评分项目也要考虑他们对于其他项目的评分。本文中，我们将用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x131_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x132_hanspub.png" xlink:type="simple"/></inline-formula>的相似度定义为：</p><disp-formula id="hanspub.20831-formula35"><label>(8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x133_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x134_hanspub.png" xlink:type="simple"/></inline-formula>表示项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x135_hanspub.png" xlink:type="simple"/></inline-formula>和项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x136_hanspub.png" xlink:type="simple"/></inline-formula>的全局相似度，通过2.2节介绍可知即便没有用户既对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x137_hanspub.png" xlink:type="simple"/></inline-formula>又对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x138_hanspub.png" xlink:type="simple"/></inline-formula>进行评分，仍能从其他用户对这两个项目的评分中计算得到项目全局相似度，有效利用了一对项目的全局评分信息，而<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x139_hanspub.png" xlink:type="simple"/></inline-formula>表示在项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x140_hanspub.png" xlink:type="simple"/></inline-formula>和项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x141_hanspub.png" xlink:type="simple"/></inline-formula>的上评分的局部相似度，只考察当前用户对项目的评分。如果两个项目在全局的角度上比较相似，那么<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x142_hanspub.png" xlink:type="simple"/></inline-formula>会提高它们的局部相似度所占的比重。如果他们在全局角度上不相似，那么<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x143_hanspub.png" xlink:type="simple"/></inline-formula>会减少它们局部相似度的比重。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x144_hanspub.png" xlink:type="simple"/></inline-formula>由公式(5)的变形得到：</p><disp-formula id="hanspub.20831-formula36"><label>(9)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x145_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s5_2"><title>3.2. Top-N推荐</title><p>根据本文提出的相似度计算方法得到目标用户的近邻，下一步是得到Top-N推荐列表。通过相关文献了解到，推荐列表的排序大多是基于评分产生的，在此，本文通过下式来预测评分：</p><disp-formula id="hanspub.20831-formula37"><label>(10)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x146_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x147_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x148_hanspub.png" xlink:type="simple"/></inline-formula>的相似近邻；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x149_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x150_hanspub.png" xlink:type="simple"/></inline-formula>对项目的平均评分；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x151_hanspub.png" xlink:type="simple"/></inline-formula>表示用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x152_hanspub.png" xlink:type="simple"/></inline-formula>和用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x153_hanspub.png" xlink:type="simple"/></inline-formula>之间的相似度，由公式(4)确定；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x154_hanspub.png" xlink:type="simple"/></inline-formula>表示用户近邻中的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x155_hanspub.png" xlink:type="simple"/></inline-formula>对项目的平均评分；<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x156_hanspub.png" xlink:type="simple"/></inline-formula>表示近邻中第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x157_hanspub.png" xlink:type="simple"/></inline-formula>个用户对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x158_hanspub.png" xlink:type="simple"/></inline-formula>的评分。</p></sec><sec id="s5_3"><title>3.3. 算法流程</title><p>通过前面的讨论，我们了解到，尽管许多文献提出了各种不同的相似度计算方法，但这些相似度计算方法都在一定程度上依赖共同评分项。本文通过结合巴氏系数和修正余弦相似度提出了基于巴氏系数的相似度计算方法，在为某个目标用户推荐项目时，我们采用公式(8)来搜索目标用户的k-近邻，然后在根据公式(9)计算邻居的对目标用户没有评价过的项目预测评分，并按评分由高到低排序，将前N个项目推荐给目标用户。算法流程见表1。</p></sec></sec><sec id="s6"><title>4. 实验及分析</title><p>为了验证CFBC算法的有效性，我们用基于4种不同相似度计算方法实现的协同过滤推荐算法对比本文算法，算法以及采用的相似度公式见表2。</p><sec id="s6_1"><title>4.1. 实验环境</title><p>本文的实验环境见表3。</p></sec><sec id="s6_2"><title>4.2. 评估标准</title><p>研究推荐技术的各个组织及人员在推荐系统中一般使用的评价指标是预测准确度。预测准确度一般用来评价目标项目评分的预测精度。有两个比较流行的评价指标：平均绝对误差(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x159_hanspub.png" xlink:type="simple"/></inline-formula>)和均方根误差(<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x160_hanspub.png" xlink:type="simple"/></inline-formula>)。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Collaborative filtering based on Bhattacharyya coefficien</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >基于巴氏系数的协同过滤算法</th></tr></thead><tr><td align="center" valign="middle" >输入：用户-项目评分矩阵R，目标用户U，目标项目I 输出：目标用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x161_hanspub.png" xlink:type="simple"/></inline-formula>对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x162_hanspub.png" xlink:type="simple"/></inline-formula>的评分 步骤： (1) 在整个用户-项目评分矩阵R中计算对项目I评分过的用户数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x163_hanspub.png" xlink:type="simple"/></inline-formula>、评分为v的用户数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x164_hanspub.png" xlink:type="simple"/></inline-formula> (2) 结合公式(5)和公式(8)计算目标用户与其他用户的相似度值； (3) 相似度值由小到大排序，选出<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x165_hanspub.png" xlink:type="simple"/></inline-formula>个目标用户的近邻<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x166_hanspub.png" xlink:type="simple"/></inline-formula>； (4) 根据公式(10)预测评分</td></tr></tbody></table></table-wrap><p>表1. 基于巴氏系数的协同过滤算法</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Similarities and the corresponding algorithm</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法名</th><th align="center" valign="middle" >相似度公式</th></tr></thead><tr><td align="center" valign="middle" >CFPIP</td><td align="center" valign="middle" >PIP</td></tr><tr><td align="center" valign="middle" >CFJMSD</td><td align="center" valign="middle" >JMSD</td></tr><tr><td align="center" valign="middle" >CFPC</td><td align="center" valign="middle" >PC</td></tr><tr><td align="center" valign="middle" >CFMJD</td><td align="center" valign="middle" >MJD</td></tr></tbody></table></table-wrap><p>表2. 相似度及其对应算法</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Environments of experimen</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >CPU</th><th align="center" valign="middle" >Intel(R) Xeon(R) CPU E5-1607 v2</th></tr></thead><tr><td align="center" valign="middle" >内存</td><td align="center" valign="middle" >8G</td></tr><tr><td align="center" valign="middle" >硬盘</td><td align="center" valign="middle" >1T</td></tr><tr><td align="center" valign="middle" >操作系统</td><td align="center" valign="middle" >CentOs操作系统</td></tr><tr><td align="center" valign="middle" >开发语言</td><td align="center" valign="middle" >Python</td></tr></tbody></table></table-wrap><p>表3. 实验环境</p><p>1) 平均绝对偏差</p><p>推荐系统中最简单但也是最常用的一种性能评价标准，它通过比较系统中所有用户的预测评分值与实际评分值之间的偏差来衡量预测的准确程度。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x167_hanspub.png" xlink:type="simple"/></inline-formula>值越低，评分偏差越小，准确度越高。</p><disp-formula id="hanspub.20831-formula38"><label>(11)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x168_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x169_hanspub.png" xlink:type="simple"/></inline-formula>为用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x170_hanspub.png" xlink:type="simple"/></inline-formula>对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x171_hanspub.png" xlink:type="simple"/></inline-formula>预测评分，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x172_hanspub.png" xlink:type="simple"/></inline-formula>为用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x173_hanspub.png" xlink:type="simple"/></inline-formula>对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x174_hanspub.png" xlink:type="simple"/></inline-formula>实际评分，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x175_hanspub.png" xlink:type="simple"/></inline-formula>表示测试集的所有项目。</p><p>2) 均方根误差</p><p>均方根误差对一组测量中的特大或特小误差非常敏感，所以，均方根误差能够很好地反映出测量的精密度，反映了测量数据偏离真实值的程度，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x176_hanspub.png" xlink:type="simple"/></inline-formula>越小，表示测量精度越高。</p><disp-formula id="hanspub.20831-formula39"><label>(12)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/10-1540763x177_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x178_hanspub.png" xlink:type="simple"/></inline-formula>为用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x179_hanspub.png" xlink:type="simple"/></inline-formula>对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x180_hanspub.png" xlink:type="simple"/></inline-formula>预测评分，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x181_hanspub.png" xlink:type="simple"/></inline-formula>为用户<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x182_hanspub.png" xlink:type="simple"/></inline-formula>对项目<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x183_hanspub.png" xlink:type="simple"/></inline-formula>实际评分，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/10-1540763x184_hanspub.png" xlink:type="simple"/></inline-formula>表示测试集的所有项目。</p></sec><sec id="s6_3"><title>4.3. 实验数据</title><p>在实验中我们使用的MovieLens数据集，为了方便大家理解，我们首先简单介绍下这个数据集。该数据集包含了6040个用户、3706部电影、评分数据条数40,955，评分最小值为1，最大值为5。在这6040个用户中只有275个用户有1个共同评分项，只有6个用户有2个共同评分项，由此可见，我们选取的数据集非常稀疏。</p></sec><sec id="s6_4"><title>4.4. 实验结果分析</title><p>图1和图2显示了在实验数据集上不同的协同过滤算法时的MAE和RMSE值在不同的k-近邻时的变化，这两个值反映了算法评分预测值与实际评分的接近程度。从图中1和图2可以看出，CFPIP、CFJMSD、CFPC和CFMJD算法的MAE值和RMSE值都要远大于CFBC算法的。由图1可以看出在共同评分很少时，本文的CFBC算法的MAE值小于0.75，而其他算法的值在0.82以上。由图2可以看出CFBC算法的RMSE值随着k-近邻数在0.97到1之间变化，而其他算法的值在1.07以上。综合各个算法的MAE值和RMSE值可以看出本文的算法在共同评分项较少(实验数据中只有275个用户有1个共同评分项，只有6个用户有2个共同评分项)的情形下仍能较为准确预测评分值，本文算法在克服了对共同评分项的依赖。</p><p>图1. k近邻的MAE值对比</p><p>图2. k近邻RMSE值对比</p></sec></sec><sec id="s7"><title>5. 结语</title><p>本文提出了基于巴氏系数的协同过滤算法，通过利用项目的全部评分信息摆脱了相似度计算对共同评分项的依赖。对比实验结果表明CFBC算法在几乎没有共同评分项时，仍能做出较为准确的评分预测，进而有效提高了推荐准确度。由于推荐系统数据量庞大，今后考虑结合聚类算法提高CFBC算法的扩展性。</p></sec><sec id="s8"><title>文章引用</title><p>姜少鑫,陈 彩,梁 毅. 基于巴氏系数的协同过滤算法Collaborative Filtering Algorithm Based Bhattacharyya Coefficient[J]. 计算机科学与应用, 2017, 07(05): 473-480. http://dx.doi.org/10.12677/CSA.2017.75058</p></sec><sec id="s9"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.20831-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">曾春, 邢春晓, 周立柱. 个性化服务技术综述[J]. 软件学报, 2002, 13(10): 1952-1961.</mixed-citation></ref><ref id="hanspub.20831-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">徐海玲, 吴潇, 李晓东, 阎保平. 互联网推荐系统比较研究[J] 软件学报, 2009, 20(2): 350-360.</mixed-citation></ref><ref id="hanspub.20831-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">杨强, 杨有, 余春君. 协同过滤推荐系统研究综述[J]. 现代计算机, 2015.</mixed-citation></ref><ref id="hanspub.20831-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Deshpande, M. and Karppis, G. (2004) Item-Based Top-N Recommendation Algorithms. ACM Transactions on Information System, 22, 143-177. &lt;br&gt;https://doi.org/10.1145/963770.963776</mixed-citation></ref><ref id="hanspub.20831-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">陈健, 印鉴. 基于影响集的协作过滤推荐算法[J]. 软件学报, 2007, 18(7): 1685-1694.</mixed-citation></ref><ref id="hanspub.20831-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">张光卫, 李德毅, 李鹏, 唐建初, 陈桂生. 基于云模型的协同过滤推荐算法[J]. 软件学报, 2007, 18(10): 2403- 2411.</mixed-citation></ref><ref id="hanspub.20831-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">吴湖, 王永吉, 王哲, 王秀利, 杜栓柱. 两阶段联合聚类协同过滤算法[J].软件学报, 2010, 21(5): 2403-2411.</mixed-citation></ref><ref id="hanspub.20831-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Bobadilia, J.O. and Hernandoa, A (2012) Collaborative Filtering Similarity Measure Based on Singularities. Information Processing &amp; Management, 48, 204-217.</mixed-citation></ref><ref id="hanspub.20831-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Herlocker, J.L., Konstan, J.A., Borchers, A. and Riedl, J. (1999) An Algorithmic Framework for Performing Collaborative Filtering. Proceedings of 22nd Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, Berkeley, 15-19 August 1999, 230-237.</mixed-citation></ref><ref id="hanspub.20831-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Yan D.W. (2007) Research on Knowledge Service Oriented Intelligent Recommendation System. Nanjing University of Science and Technology, Nanjing.</mixed-citation></ref><ref id="hanspub.20831-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Adomavicius, G. and Tuzhilin, A. (2005) Toward the Next Generation of Recommender Systems: A Survey of the State-Of-The-Art and Possible Extensions. IEEE Trans on Knowledge and Data Engineering, 17, 734-749. 
&lt;br&gt;https://doi.org/10.1109/TKDE.2005.99</mixed-citation></ref><ref id="hanspub.20831-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">刘鲁, 任晓丽. 推荐系统研究进展及展望[J]. 信息系统学报, 2008, 2(2): 82 -90.</mixed-citation></ref><ref id="hanspub.20831-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Joachims, T., Freitag, D. and Mitchetal, T. (1997) WebWatcher: A Tour Guide for the World Wide Web. Proceedings of the 1997 IJCAI, Nagoya, 23-24 August 1997, 770-775.</mixed-citation></ref></ref-list></back></article>