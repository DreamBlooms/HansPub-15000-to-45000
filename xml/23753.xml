<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2018.72019</article-id><article-id pub-id-type="publisher-id">AAM-23753</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20180200000_58889742.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  自适应爆炸半径和差分变异的增强烟花算法
  Enhanced Fireworks Algorithm with Adaptive Explosion Amplitude and Differential Variation
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>叶</surname><given-names>雯雯</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>温</surname><given-names>洁嫦</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>广东工业大学应用数学学院，广东 广州</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>11</day><month>02</month><year>2018</year></pub-date><volume>07</volume><issue>02</issue><fpage>152</fpage><lpage>162</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    增强烟花算法对烟花算法存在的性能缺陷进行改进，并在许多优化问题中显示出不错的效果。然而，增强烟花算法在某些函数上寻优精度低、且容易过早地陷入局部最优解。为了改善这种缺陷，将其最大爆炸半径设置为模拟退火因子来自适应地加速其搜索过程，并借鉴差分变异中的思想以增加种群的多样性，达到跳出局部最优解的目的。改进后的算法在10个Benchmark函数上进行测试，实验结果表明改进后的算法效果明显优于增强烟花算法。
    Enhanced fireworks algorithm improves the performance defect of the fireworks algorithm, and shows good effect in many optimization problems. However, it still has low precision and is easy to fall into local optimal solution prematurely in some functions. In order to improve the above men-tioned problems, the maximum explosion amplitude is set as the simulated annealing factor to accelerate its search process, and we learn from the idea of differential variation to increase the diversity of the population, so as to jump out of the local optimal solution. The proposed algorithm is tested on 10 benchmark functions and the experimental results show that the proposed algorithm significantly outperforms the enhanced fireworks algorithm and the fireworks algorithm. 
  
 
</p></abstract><kwd-group><kwd>增强烟花算法，模拟退火，自适应爆炸半径，差分变异, Enhanced Fireworks Algorithm</kwd><kwd> Simulated Annealing</kwd><kwd> Adaptive Explosion Amplitude</kwd><kwd> Differential Variation</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>自适应爆炸半径和差分变异的增强烟花算法<sup> </sup></title><p>叶雯雯，温洁嫦</p><p>广东工业大学应用数学学院，广东 广州</p><p>收稿日期：2018年1月18日；录用日期：2018年2月3日；发布日期：2018年2月13日</p><disp-formula id="hanspub.23753-formula49"><graphic xlink:href="//html.hanspub.org/file/3-2620586x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>增强烟花算法对烟花算法存在的性能缺陷进行改进，并在许多优化问题中显示出不错的效果。然而，增强烟花算法在某些函数上寻优精度低、且容易过早地陷入局部最优解。为了改善这种缺陷，将其最大爆炸半径设置为模拟退火因子来自适应地加速其搜索过程，并借鉴差分变异中的思想以增加种群的多样性，达到跳出局部最优解的目的。改进后的算法在10个Benchmark函数上进行测试，实验结果表明改进后的算法效果明显优于增强烟花算法。</p><p>关键词 :增强烟花算法，模拟退火，自适应爆炸半径，差分变异</p><disp-formula id="hanspub.23753-formula50"><graphic xlink:href="//html.hanspub.org/file/3-2620586x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/3-2620586x7_hanspub.png" /> <img src="//html.hanspub.org/file/3-2620586x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>烟花算法(Fireworks Algorithm, FWA) [<xref ref-type="bibr" rid="hanspub.23753-ref1">1</xref>] 是近年来新提出的群体智能算法，其思想来源于生活中的烟花爆炸过程。FWA同其他群智能算法类似，产生初始种群后，经过爆炸、变异、选择等操作产生下一代个体。</p><p>烟花算法自2010年谭营教授提出来就吸引了越来越多的科研工作者的研究，其中对传统烟花算法的改进分为两个方面：一是对烟花算法的四个算子进行分析和改进；二是和其它进化算法互补结合成混合算法。Pei [<xref ref-type="bibr" rid="hanspub.23753-ref2">2</xref>] 等人利用烟花算法迭代过程中产生的爆炸火花和高斯变异火花等的种群位置和适应值信息对目标函数的搜索空间形状进行估计，为算法提供启发式加速信息。Tapas Si [<xref ref-type="bibr" rid="hanspub.23753-ref3">3</xref>] 等人构造了一种新的计算烟花爆炸数目和幅度的方法，达到控制烟花爆炸数量、算法的开发性和探索性等效果。Zheng [<xref ref-type="bibr" rid="hanspub.23753-ref4">4</xref>] 等人针对烟花算法性能上存在的缺陷，给出了对应的改进方法和策略，提出了增强烟花算法(Enhanced Fireworks Algorithm, EFWA)。Zheng [<xref ref-type="bibr" rid="hanspub.23753-ref5">5</xref>] 等人提出动态烟花算法，即将烟花种群按适应度值的优劣划分成核心烟花和非核心烟花，并对核心烟花的爆炸半径进行自适应地调整来改善搜索性能。Li [<xref ref-type="bibr" rid="hanspub.23753-ref6">6</xref>] 等人提出自适应烟花算法，即一种自适应爆炸半径机制，能够根据搜索结果进行自适应调节。Yu [<xref ref-type="bibr" rid="hanspub.23753-ref7">7</xref>] 等人提出带有差分变异算子的新型烟花算法，以增加种群的多样性。Zheng [<xref ref-type="bibr" rid="hanspub.23753-ref8">8</xref>] 等人将烟花算法和差分算法结合起来形成一种有效的混合算法，种群多样性增加达到跳出局部最优的效果。Zheng [<xref ref-type="bibr" rid="hanspub.23753-ref9">9</xref>] 等人为了克服核心烟花比非核心占有绝对优势以及高斯变异算子不够有效的缺陷，通过提出合作框架即一种独立选择的方法提高开发能力，结合避免拥挤的合作策略提高搜索能力。Zhang [<xref ref-type="bibr" rid="hanspub.23753-ref10">10</xref>] 等人提出基于生物地理学优化的烟花算法，即在三个方面提高烟花算法的交互能力：新的变异算子提高烟花的学习能力；爆炸操作中引入BBO的偏移算子，增强信息共享能力；新的选择策略使好的个体有更大的几率被选择到下一代。Li [<xref ref-type="bibr" rid="hanspub.23753-ref11">11</xref>] 等人在烟花算法中引入引导火花(GS)，增强算法信息的利用率，同时构建一个有方向和有自适应长度的指导向量(GV)形成精英解决方案，大大加强了烟花算法的探索和开发能力。Gao [<xref ref-type="bibr" rid="hanspub.23753-ref12">12</xref>] 等人提出文化烟花算法在烟花爆炸中获取相应的知识，保存在知识库中，使个体能够学习知识库中的经验。</p><p>增强烟花算法是一种已被证明能够解决优化问题的不错算法，但在某些函数上寻优精度低、且容易过早地寻找到局部最优解，本文对增强烟花算法进行改进，提出一种自适应爆炸半径和差分变异的增强烟花算法(SAEFA)。将最大爆炸半径设置为模拟退火因子，来自适应地调节其搜索过程，使前期有利于全局搜索而后期有利于局部搜素。并在变异的过程中借鉴差分变异中的思想以增加种群的多样性，达到跳出局部最优解的目的。</p><p>本文的组织结构如下：第2章介绍增强烟花算法；第3章详细讨论最大爆炸半径为模拟退火因子和变异方式为差分变异以及算法的总流程；第4章为实验设置和结果分析；第5章总结全文。</p></sec><sec id="s4"><title>2. 增强烟花算法</title><p>假设增强烟花算法 [<xref ref-type="bibr" rid="hanspub.23753-ref4">4</xref>] 所求解的单目标无约束优化问题式子如下：</p><p>min f ( x ) ∈ R , x ∈ Ω (1)</p><p>其中 Ω 为可行域。假设烟花的个数为 N ，求解的函数为 d 维，则初始化时在 Ω 内随机产生 N 个烟花作为初始解，其中 x i = ( x i 1 , x i 2 , ⋅ ⋅ ⋅ , x i d ) 表示第 i 个烟花的位置。通过对初始烟花进行爆炸操作、变异操作和选择操作得到下一代个体，直到找到函数的全局最优点。</p><sec id="s4_1"><title>2.1. 爆炸算子</title><p>增强烟花算法产生子代的方式是，在 N 个烟花附近的规定区域内使用爆炸操作生成新的火花。先确定第 i 个爆炸火花数量 S i 和爆炸的半径 A i ：</p><p>S i = m y max − f ( x i ) + ε ∑ i = 1 N ( y max − f ( x i ) ) + ε (2)</p><p>A i = A f ( x i ) − y min + ε ∑ i = 1 N ( f ( x i ) − y min ) + ε (3)</p><p>其中 m 和 A 为常数； ε 为一个非常小的数；若 f ( x i ) 表示个体 x i 的适应函数值；则：</p><p>y max = max ( f ( x i ) ) , ( i = 1 , 2 , ⋅ ⋅ ⋅ , N ) ,     y min = min ( f ( x i ) ) , ( i = 1 , 2 , ⋅ ⋅ ⋅ , N )</p><p>为了避免爆炸操作产生烟花的数量太多或太少，限制每个烟花产生的数量：</p><p>s ^ i = { r o u n d ( a m ) , S &lt; a m r o u n d ( b m ) , S &gt; b m , a &lt; b &lt; 1 r o u n d ( S i ) , 其 它 (4)</p><p>其中， s ^ i 是第 i 烟花最终产生的烟花个数； r o u n d (   ) 表示四舍五入取整函数； a 和 b 为给定的常数。</p><p>为了避免适应度值最小的烟花由于爆炸半径太小而发挥不出挖掘的作用。增强烟花算法引入最小爆炸半径检测策略，则在维度 k 上烟花 i 的爆炸半径设置为：</p><disp-formula id="hanspub.23753-formula51"><label>(5)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/3-2620586x37_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中， A min , k 是在第 k 维上的爆炸半径最低的阈值，有两种不同的选择策略，其中非线性递减爆炸半径检测策略为：</p><p>A min , k ( t ) = A i n i t − A i n i t − A f i n a l e v a l s max ( 2 e v a l s max − t ) t (6)</p><p>烟花的爆炸首先要确定每个烟花爆炸的半径和产生火花的数量。同时在爆炸的过程中，烟花会进行相应的位移操作。不同于传统烟花算法产生火花时在每个维度具有相等的位移偏移。增强烟花算法在烟花产生火花的过程中在各个维度各个不同位置产生位移偏移来增加种群的多样性。</p></sec><sec id="s4_2"><title>2.2. 变异操作</title><p>为了避免高斯变异时在原点位置附近产生很多火花，导致最优值为原点的测试函数占优，EFWA提出的变异操作为在当前解 x i k 和当前种群中最好的个体 x B k 之间进行变异，其计算公式为：</p><p>x i k = x i k + ( x B k − x i k ) &#215; e (7)</p><p>其中， e 为高斯随机变量，其均值和方差分别为0和1。</p></sec><sec id="s4_3"><title>2.3. 映射规则</title><p>EFWA为了避免原始烟花算法造成智能加速收敛的假象，提出一种随机映射规则，其公式为：</p><p>x i k = x l b , k + U ( 0 , 1 ) ⋅ ( x u b , k − x l b , k ) (8)</p><p>其中， U ( 0 , 1 ) 是在0到1区间上的均匀分布随机数。</p></sec><sec id="s4_4"><title>2.4. 选择策略</title><p>增强烟花算法提出一种精英-随机选择策略，即首先从烟花、爆炸火花、高斯变异火花中选择一个适应度值最低的个体，再从剩下的烟花中随机选择 N − 1 个烟花，共同作为下一代烟花种群的烟花。</p></sec></sec><sec id="s5"><title>3. 自适应爆炸半径和差分变异的增强烟花算法</title><p>SAEFA是在EFWA的基础上改进的。它们的不同之处是改进的算法将最大爆炸半径设置为模拟退火因子，并且借鉴了差分变异的思想将新型高斯变异方式变为差分变异方式。改进的算法由爆炸算子、变异操作和选择操作组成，同时为了防止越界也使用了映射规则。</p><sec id="s5_1"><title>3.1. 最大爆炸半径的设置</title><p>EFWA中将最大爆炸半径设置为常数，这将造成算法后期精细搜索能力被减弱，使算法的求解精度不高。受到动态搜索思想的启发，若最大爆炸半径总体上呈现出非线性递减的变化趋势，算法前期将有利于全局搜索，后期则有利于局部搜索，达到自适应加速的效果。</p><p>本文将最大爆炸半径设置为模拟退火因子。模拟退火 [<xref ref-type="bibr" rid="hanspub.23753-ref13">13</xref>] 的思想受固体退火过程的启发，先让固体内部的温度升至充分高，当温度升高时，固体内的颗粒会随着温度上升变成无序状态，内能变大；再让固体逐渐冷却，颗粒随着温度降低渐趋有序而达到平衡态，最终下降到常温时变成基态，内能降到最小。其算法步骤为：</p><p>Step1：初始温度 T ，初始解状态 S ，每个 T 值的迭代次数 L ；</p><p>Step2：对 k = 1 , ⋅ ⋅ ⋅ , L 执行Step3至Step6；</p><p>Step3：产生新解 S ′ ；</p><p>Step4：计算增量 Δ t ′ = C ( S ′ ) − C ( S ) ，其中 C ( S ) 为评价函数；</p><p>Step5：若 Δ t ′ &lt; 0 ，则新解为 S ′ ，否则以概率 exp ( − Δ t ′ / k T ) 接受 S ′ 为新的当前解；</p><p>Step6：终止条件满足则输出 S ′ 作为最优解；</p><p>Step7： T 逐渐减少趋于0，转至Step2。</p><p>设 R 为初始最大爆炸半径， G e n 为当前迭代次数， M a x G e n 为最高的迭代次数，则第 i 个烟花最大爆炸半径公式为：</p><p>R i = R ( 1 − G e n M a x G e n ) 5 (9)</p><p>因此最大爆炸半径为模拟退火因子的烟花爆炸半径公式为：</p><p>A i = R i f ( x i ) − y min + ε ∑ i = 1 N ( f ( x i ) − y min ) + ε (10)</p></sec><sec id="s5_2"><title>3.2. 变异操作</title><p>在EFWA中，变异算子非常重要。通过变异操作，一个烟花不仅可以在其附近的位置搜索，甚至可以在其较远的位置产生火花进行搜索。受到差分进化(Differential Evolution, DE) [<xref ref-type="bibr" rid="hanspub.23753-ref14">14</xref>] 中变异算子的启发，在SAEFA的进化中引入差分向量，再增加随机扰动，具体如下。</p><p>在子群中随机选择两个解 x j 1 k 和 x j 2 k ，其差分向量记为 x j 1 k − x j 2 k ，其值越小，扰动越小，每次变异进行如下操作：</p><p>x i k = c 1 x b e s t k + c 2 ( x j 1 k − x j 2 k ) (11)</p><p>其中 x b e s t k 为当前代中适应度值最优的个体， c 1 和 c 2 为缩放因子，本文实验中取 c 1 为1， c 2 为0.03。</p></sec><sec id="s5_3"><title>3.3. 基于模拟退火和差分变异的搜索策略</title><p>SAEFA沿用了EFWA计算爆炸火花的数量公式，采用同样的爆炸火花产生方式和选择策略，而采用公式(10)计算爆炸半径和采用公式(11)进行变异操作。SAEFA的基本流程如下：</p><p>Step1：初始时随机生成 n 个烟花的位置；</p><p>Step2：计算所有烟花的适应度值；</p><p>Step3：循环执行a至e，直到满足终止条件；</p><p>a：使用公式(2)和(4)计算烟花个数；</p><p>b：使用公式(10)计算烟花的爆炸半径；</p><p>c：生成爆炸火花；</p><p>d：使用公式(11)生成变异火花；</p><p>e：用选择策略选择 N 个个体进入下一代；</p><p>Step4：输出最优个体的位置和其适应度值。</p></sec></sec><sec id="s6"><title>4. 实验设置和结果分析</title><p>为了比较分析SAEFA的性能，本文将SAEFA算法、FWA算法和EFWA算法用于10个典型的Benchmark函数 [<xref ref-type="bibr" rid="hanspub.23753-ref15">15</xref>] [<xref ref-type="bibr" rid="hanspub.23753-ref16">16</xref>] 上进行测试，并对实验结果进行对比。Benchmark函数如表1所示。由于一些函数的名称太长，这里用符号表示。其中 F 1 ( x ) 表示Six-Hump-Camel-back函数， F 2 ( x ) 表示Axis parallel-hyper-ellipsoid函数， F 3 ( x ) 表示Rotated-hyper-ellipsoid函数。*代表此函数有好几个最优点。</p><sec id="s6_1"><title>4.1. 实验设置</title><p>由于选取的Benchmark函数中的许多函数的全局最优点在原点附近，烟花算法由于高斯变异在原点附近有很强的搜索能力。SAEFA因此为测试函数集使用了位置偏移，不同优化问题的搜索区域位置偏移也不同，如表2所示，其中 M a x 与 M i n 是优化问题的搜索范围。</p><p>仿真实验使用的平台是MATLAB2014a，为了使对比实验更加有效，三种算法采用相同的参数设置：初始时生成5个烟花，种群规模为50，变异个数为5，函数的评估次数最大设置为300,000，在同一条件下独立运行50次。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Benchmark function</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >函数名</th><th align="center" valign="middle" >维数</th><th align="center" valign="middle" >搜索范围</th><th align="center" valign="middle" >最优点</th><th align="center" valign="middle" >最优值</th></tr></thead><tr><td align="center" valign="middle" >Sphere</td><td align="center" valign="middle" >30</td><td align="center" valign="middle" >[−100,100]</td><td align="center" valign="middle" >(0,...,0)</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >Schwefel</td><td align="center" valign="middle" >30</td><td align="center" valign="middle" >[−100,100]</td><td align="center" valign="middle" >(0,...,0)</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >Ackley</td><td align="center" valign="middle" >30</td><td align="center" valign="middle" >[−32,32]</td><td align="center" valign="middle" >(0,...,0)</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >Griewank</td><td align="center" valign="middle" >30</td><td align="center" valign="middle" >[−600,600]</td><td align="center" valign="middle" >(0,...,0)</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >Penalized</td><td align="center" valign="middle" >30</td><td align="center" valign="middle" >[−50,50]</td><td align="center" valign="middle" >(1,...,1)</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >F 1 ( x )</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >[−5,5]</td><td align="center" valign="middle" >*</td><td align="center" valign="middle" >−1.0316285</td></tr><tr><td align="center" valign="middle" >Goldstein-Price</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >[−2,2]</td><td align="center" valign="middle" >(0,−1)</td><td align="center" valign="middle" >3</td></tr><tr><td align="center" valign="middle" >Schaffer</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >[−100,100]</td><td align="center" valign="middle" >(0,0)</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >F 2 ( x )</td><td align="center" valign="middle" >30</td><td align="center" valign="middle" >[−5.12,5.12]</td><td align="center" valign="middle" >(0,...,0)</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >F 3 ( x )</td><td align="center" valign="middle" >30</td><td align="center" valign="middle" >[−65.535,65.536]</td><td align="center" valign="middle" >(0,...,0)</td><td align="center" valign="middle" >0</td></tr></tbody></table></table-wrap><p>表1. Benchmark函数</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> The position of the Benchmark function</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >SI (偏移索引)</th><th align="center" valign="middle" >SV (偏移值大小)</th></tr></thead><tr><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0.05 &#215; M a x − M i n 2</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0.1 &#215; M a x − M i n 2</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >0.2 &#215; M a x − M i n 2</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >0.3 &#215; M a x − M i n 2</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >0.5 &#215; M a x − M i n 2</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >0.7 &#215; M a x − M i n 2</td></tr></tbody></table></table-wrap><p>表2. Benchmark函数的位置偏移</p></sec><sec id="s6_2"><title>4.2. 实验结果分析</title><p>为了分析SAEFA的效果，在同一条件下，三个算法对表1中的10个Benchmark函数进行实验仿真，对每个位置偏移索引，下面给出函数平均最优值的表格，如表3到表12所示。</p><p>由表3至表7，表11，表12可知，FWA在无位置偏移的时候均能取得最优值，但是随着位置发生偏移，函数的仿真值越来越偏离最优值。而SAEFA和EFWA在所有测试函数中随着位置的偏移而不会发生太大影响，均能保持稳定。而在表4，表6和表12中，EFWA没有找到测试函数的最优解，进入局部最优。表8和表9显示SAEFA、EFWA和FWA三个算法均能够随着位置的偏移保持非常好的性能，都寻找到 F 1 ( x ) 函数和Goldstein Price函数的全局最优值。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Comparison of global optimal mean of Sphere function (SI is offset index</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SI = 0</th><th align="center" valign="middle" >SI = 1</th><th align="center" valign="middle" >SI = 2</th><th align="center" valign="middle" >SI = 3</th><th align="center" valign="middle" >SI = 4</th><th align="center" valign="middle" >SI = 5</th><th align="center" valign="middle" >SI = 6</th></tr></thead><tr><td align="center" valign="middle" >FWA</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0.259016</td><td align="center" valign="middle" >1.896952</td><td align="center" valign="middle" >18.041002</td><td align="center" valign="middle" >43.875453</td><td align="center" valign="middle" >121.01039</td><td align="center" valign="middle" >198.58711</td></tr><tr><td align="center" valign="middle" >EFWA</td><td align="center" valign="middle" >0.080583</td><td align="center" valign="middle" >0.078879</td><td align="center" valign="middle" >0.07936</td><td align="center" valign="middle" >0.079119</td><td align="center" valign="middle" >0.0771</td><td align="center" valign="middle" >0.081641</td><td align="center" valign="middle" >0.077676</td></tr><tr><td align="center" valign="middle" >SAEFA</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr></tbody></table></table-wrap><p>表3. Sphere函数全局最优平均值的对比(SI为偏移索引)</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Comparison of global optimal mean of Schwefel function (SI is offset index</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SI = 0</th><th align="center" valign="middle" >SI = 1</th><th align="center" valign="middle" >SI = 2</th><th align="center" valign="middle" >SI = 3</th><th align="center" valign="middle" >SI = 4</th><th align="center" valign="middle" >SI = 5</th><th align="center" valign="middle" >SI = 6</th></tr></thead><tr><td align="center" valign="middle" >FWA</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >567.41627</td><td align="center" valign="middle" >1954.4070</td><td align="center" valign="middle" >4273.8175</td><td align="center" valign="middle" >5040.0143</td><td align="center" valign="middle" >5515.6789</td><td align="center" valign="middle" >4823.1137</td></tr><tr><td align="center" valign="middle" >EFWA</td><td align="center" valign="middle" >0.327639</td><td align="center" valign="middle" >0.303336</td><td align="center" valign="middle" >0.318864</td><td align="center" valign="middle" >0.32688</td><td align="center" valign="middle" >0.313821</td><td align="center" valign="middle" >0.316406</td><td align="center" valign="middle" >0.309674</td></tr><tr><td align="center" valign="middle" >SAEFA</td><td align="center" valign="middle" >0.014518</td><td align="center" valign="middle" >0.013493</td><td align="center" valign="middle" >0.012076</td><td align="center" valign="middle" >0.012857</td><td align="center" valign="middle" >0.012698</td><td align="center" valign="middle" >0.015377</td><td align="center" valign="middle" >0.027172</td></tr></tbody></table></table-wrap><p>表4. Schwefel函数全局最优平均值的对比(SI为偏移索引)</p><table-wrap id="table5" ><label><xref ref-type="table" rid="table5">Table 5</xref></label><caption><title> Comparison of global optimal mean of Ackley function (SI is offset index</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SI = 0</th><th align="center" valign="middle" >SI = 1</th><th align="center" valign="middle" >SI = 2</th><th align="center" valign="middle" >SI = 3</th><th align="center" valign="middle" >SI = 4</th><th align="center" valign="middle" >SI = 5</th><th align="center" valign="middle" >SI = 6</th></tr></thead><tr><td align="center" valign="middle" >FWA</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >3.667334</td><td align="center" valign="middle" >3.919792</td><td align="center" valign="middle" >3.510247</td><td align="center" valign="middle" >3.815807</td><td align="center" valign="middle" >16.435764</td><td align="center" valign="middle" >19.608222</td></tr><tr><td align="center" valign="middle" >EFWA</td><td align="center" valign="middle" >10.209394</td><td align="center" valign="middle" >14.788456</td><td align="center" valign="middle" >17.501181</td><td align="center" valign="middle" >19.537629</td><td align="center" valign="middle" >19.976466</td><td align="center" valign="middle" >20.00438</td><td align="center" valign="middle" >20.010942</td></tr><tr><td align="center" valign="middle" >SAEFA</td><td align="center" valign="middle" >16.995873</td><td align="center" valign="middle" >19.043891</td><td align="center" valign="middle" >18.904865</td><td align="center" valign="middle" >19.86018</td><td align="center" valign="middle" >19.95723</td><td align="center" valign="middle" >19.988987</td><td align="center" valign="middle" >19.997008</td></tr></tbody></table></table-wrap><p>表5. Ackley函数全局最优平均值的对比(SI为偏移索引)</p><table-wrap id="table6" ><label><xref ref-type="table" rid="table6">Table 6</xref></label><caption><title> Comparison of global optimal mean of Griewank function (SI is offset index</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SI = 0</th><th align="center" valign="middle" >SI = 1</th><th align="center" valign="middle" >SI = 2</th><th align="center" valign="middle" >SI = 3</th><th align="center" valign="middle" >SI = 4</th><th align="center" valign="middle" >SI = 5</th><th align="center" valign="middle" >SI = 6</th></tr></thead><tr><td align="center" valign="middle" >FWA</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0.034059</td><td align="center" valign="middle" >0.054588</td><td align="center" valign="middle" >0.205115</td><td align="center" valign="middle" >0.683953</td><td align="center" valign="middle" >0.9717</td><td align="center" valign="middle" >1.021696</td></tr><tr><td align="center" valign="middle" >EFWA</td><td align="center" valign="middle" >0.134513</td><td align="center" valign="middle" >0.131399</td><td align="center" valign="middle" >0.13835</td><td align="center" valign="middle" >0.135506</td><td align="center" valign="middle" >0.135921</td><td align="center" valign="middle" >0.132523</td><td align="center" valign="middle" >0.133103</td></tr><tr><td align="center" valign="middle" >SAEFA</td><td align="center" valign="middle" >0.009604</td><td align="center" valign="middle" >0.007967</td><td align="center" valign="middle" >0.011242</td><td align="center" valign="middle" >0.013357</td><td align="center" valign="middle" >0.012885</td><td align="center" valign="middle" >0.012676</td><td align="center" valign="middle" >0.012015</td></tr></tbody></table></table-wrap><p>表6. Griewank函数全局最优平均值的对比(SI为偏移索引)</p><table-wrap id="table7" ><label><xref ref-type="table" rid="table7">Table 7</xref></label><caption><title> Comparison of global optimal mean of Penalized function (SI is offset index</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SI = 0</th><th align="center" valign="middle" >SI = 1</th><th align="center" valign="middle" >SI = 2</th><th align="center" valign="middle" >SI = 3</th><th align="center" valign="middle" >SI = 4</th><th align="center" valign="middle" >SI = 5</th><th align="center" valign="middle" >SI = 6</th></tr></thead><tr><td align="center" valign="middle" >FWA</td><td align="center" valign="middle" >0.018924</td><td align="center" valign="middle" >0.029145</td><td align="center" valign="middle" >5.502877</td><td align="center" valign="middle" >157.05845</td><td align="center" valign="middle" >130.89703</td><td align="center" valign="middle" >1756.6532</td><td align="center" valign="middle" >25977.161</td></tr><tr><td align="center" valign="middle" >EFWA</td><td align="center" valign="middle" >0.003541</td><td align="center" valign="middle" >0.002475</td><td align="center" valign="middle" >0.003581</td><td align="center" valign="middle" >0.00263</td><td align="center" valign="middle" >0.002854</td><td align="center" valign="middle" >0.002545</td><td align="center" valign="middle" >0.002874</td></tr><tr><td align="center" valign="middle" >SAEFA</td><td align="center" valign="middle" >0.007463</td><td align="center" valign="middle" >0.008789</td><td align="center" valign="middle" >0.010211</td><td align="center" valign="middle" >0.008468</td><td align="center" valign="middle" >0.011909</td><td align="center" valign="middle" >0.008992</td><td align="center" valign="middle" >0.009087</td></tr></tbody></table></table-wrap><p>表7. Penalized函数全局最优平均值的对比(SI为偏移索引)</p><table-wrap id="table8" ><label><xref ref-type="table" rid="table8">Table 8</xref></label><caption><title> Comparison of global optimal mean of F 1 ( x ) function (SI is offset index</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SI = 0</th><th align="center" valign="middle" >SI = 1</th><th align="center" valign="middle" >SI = 2</th><th align="center" valign="middle" >SI = 3</th><th align="center" valign="middle" >SI = 4</th><th align="center" valign="middle" >SI = 5</th><th align="center" valign="middle" >SI = 6</th></tr></thead><tr><td align="center" valign="middle" >FWA</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td></tr><tr><td align="center" valign="middle" >EFWA</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td></tr><tr><td align="center" valign="middle" >SAEFA</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td><td align="center" valign="middle" >−1.031628</td></tr></tbody></table></table-wrap><p>表8. F 1 ( x ) 函数全局最优平均值的对比(SI为偏移索引)</p><table-wrap id="table9" ><label><xref ref-type="table" rid="table9">Table 9</xref></label><caption><title> Comparison of global optimal mean of Goldstein-Price function (SI is offset index</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SI = 0</th><th align="center" valign="middle" >SI = 1</th><th align="center" valign="middle" >SI = 2</th><th align="center" valign="middle" >SI = 3</th><th align="center" valign="middle" >SI = 4</th><th align="center" valign="middle" >SI = 5</th><th align="center" valign="middle" >SI = 6</th></tr></thead><tr><td align="center" valign="middle" >FWA</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >30.000037</td></tr><tr><td align="center" valign="middle" >EFWA</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >30</td></tr><tr><td align="center" valign="middle" >SAEFA</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >31.058824</td></tr></tbody></table></table-wrap><p>表9. Goldstein-Price函数全局最优平均值的对比(SI为偏移索引)</p><table-wrap id="table10" ><label><xref ref-type="table" rid="table1">Table 1</xref>0</label><caption><title> Comparison of global optimal mean of Schaffer function (SI is offset index</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SI = 0</th><th align="center" valign="middle" >SI = 1</th><th align="center" valign="middle" >SI = 2</th><th align="center" valign="middle" >SI = 3</th><th align="center" valign="middle" >SI = 4</th><th align="center" valign="middle" >SI = 5</th><th align="center" valign="middle" >SI = 6</th></tr></thead><tr><td align="center" valign="middle" >FWA</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0.000762</td><td align="center" valign="middle" >0.002286</td><td align="center" valign="middle" >0.001906</td><td align="center" valign="middle" >0.00248</td><td align="center" valign="middle" >0.001905</td><td align="center" valign="middle" >0.003049</td></tr><tr><td align="center" valign="middle" >EFWA</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >SAEFA</td><td align="center" valign="middle" >0.001905</td><td align="center" valign="middle" >0.001905</td><td align="center" valign="middle" >0.001524</td><td align="center" valign="middle" >0.001334</td><td align="center" valign="middle" >0.001524</td><td align="center" valign="middle" >0.000572</td><td align="center" valign="middle" >0.001715</td></tr></tbody></table></table-wrap><p>表10. Schaffer函数全局最优平均值的对比(SI为偏移索引)</p><table-wrap id="table11" ><label><xref ref-type="table" rid="table1">Table 1</xref>1</label><caption><title> Comparison of global optimal mean of F 2 ( x ) function (SI is offset index</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SI = 0</th><th align="center" valign="middle" >SI = 1</th><th align="center" valign="middle" >SI = 2</th><th align="center" valign="middle" >SI = 3</th><th align="center" valign="middle" >SI = 4</th><th align="center" valign="middle" >SI = 5</th><th align="center" valign="middle" >SI = 6</th></tr></thead><tr><td align="center" valign="middle" >FWA</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0.078245</td><td align="center" valign="middle" >0.308127</td><td align="center" valign="middle" >1.532319</td><td align="center" valign="middle" >4.571801</td><td align="center" valign="middle" >15.182234</td><td align="center" valign="middle" >55.750759</td></tr><tr><td align="center" valign="middle" >EFWA</td><td align="center" valign="middle" >0.003003</td><td align="center" valign="middle" >0.002899</td><td align="center" valign="middle" >0.003049</td><td align="center" valign="middle" >0.002853</td><td align="center" valign="middle" >0.003034</td><td align="center" valign="middle" >0.002859</td><td align="center" valign="middle" >0.002851</td></tr><tr><td align="center" valign="middle" >SAEFA</td><td align="center" valign="middle" >0.000002</td><td align="center" valign="middle" >0.000001</td><td align="center" valign="middle" >0.000002</td><td align="center" valign="middle" >0.000002</td><td align="center" valign="middle" >0.000002</td><td align="center" valign="middle" >0.000003</td><td align="center" valign="middle" >0.000004</td></tr></tbody></table></table-wrap><p>表11. F 2 ( x ) 函数全局最优平均值的对比(SI为偏移索引)</p><table-wrap id="table12" ><label><xref ref-type="table" rid="table1">Table 1</xref>2</label><caption><title> Comparison of global optimal mean of F 3 ( x ) function (SI is offset index</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >算法</th><th align="center" valign="middle" >SI = 0</th><th align="center" valign="middle" >SI = 1</th><th align="center" valign="middle" >SI = 2</th><th align="center" valign="middle" >SI = 3</th><th align="center" valign="middle" >SI = 4</th><th align="center" valign="middle" >SI = 5</th><th align="center" valign="middle" >SI = 6</th></tr></thead><tr><td align="center" valign="middle" >FWA</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >48.232453</td><td align="center" valign="middle" >316.91266</td><td align="center" valign="middle" >1260.4623</td><td align="center" valign="middle" >2487.7016</td><td align="center" valign="middle" >5142.8280</td><td align="center" valign="middle" >6808.9586</td></tr><tr><td align="center" valign="middle" >EFWA</td><td align="center" valign="middle" >0.477472</td><td align="center" valign="middle" >0.47585</td><td align="center" valign="middle" >0.487051</td><td align="center" valign="middle" >0.479914</td><td align="center" valign="middle" >0.492438</td><td align="center" valign="middle" >0.48436</td><td align="center" valign="middle" >0.486137</td></tr><tr><td align="center" valign="middle" >SAEFA</td><td align="center" valign="middle" >0.00026</td><td align="center" valign="middle" >0.000354</td><td align="center" valign="middle" >0.000333</td><td align="center" valign="middle" >0.000292</td><td align="center" valign="middle" >0.00038</td><td align="center" valign="middle" >0.000585</td><td align="center" valign="middle" >0.000574</td></tr></tbody></table></table-wrap><p>表12. F 3 ( x ) 函数全局最优平均值的对比(SI为偏移索引)</p><p>上图的10个小图分别给出了3个算法对于10个Benchmark函数的进化曲线。为了更加清晰地展示各种算法的性能差异，图像纵坐标为函数适应值差取以10为底的对数值。如图1所示，SAEFA在Sphere函数中快速找到最优值，而在Schwefel函数中取得比EFWA和FWA较精确的值；如图2所示，SAEFA在Generalized Griewank函数中取得比EFWA和FWA较精确的值，在Ackley函数中虽然寻找的最优值与函数实际最优值有些差距，但是从迭代趋势来看，如果给出足够的迭代次数，最终还是可以找到最优值；如图3、图4和图5所示，SAEFA在 F 1 ( x ) 和Goldstein函数中均能够快速找到最优值，而在penalized、 F 2 ( x ) 和 F 3 ( x ) 函数取得比EFWA和FWA较精确的值。总体来看，SAEFA在10个测试函数中均表现出不错的效果。</p></sec></sec><sec id="s7"><title>5. 总结</title><p>增强烟花算法对某些函数寻优精度低，容易过早地陷入局部最优解，本文提出一种自适应爆炸半径和差分变异的增强烟花算法(SAEFA)。通过将最大爆炸半径设置为模拟退火因子自适应地加速算法搜索</p><p>图1. Sphere和Schwefel函数进化曲线</p><p>图2. Ackley和Generalize-Griewank函数进化曲线</p><p>图3. Penalized和 F 1 ( x ) 函数进化曲线</p><p>图4. Goldstein和Schaffer函数进化曲线</p><p>图5. F 2 ( x ) 和 F 3 ( x ) 函数进化曲线</p><p>过程，使算法迭代过程中全局搜索和局部搜索能力之间能够平衡，提高搜索性能。同时变异操作时借鉴差分变异的思想引入差分变异，使种群的多样性增加更有机会跳出局部区域。并在10个Benchmark函数中进行仿真实验，与EFWA和FWA进行对比，表明SAEFA能够随着位置偏移保持良好的性能，并且取得不错的搜索效果。</p></sec><sec id="s8"><title>致谢</title><p>感谢导师温洁嫦老师在写作期间给予我的指导和鼓励，还有感谢刘海林老师的指导，感谢同门的陪伴和关怀。</p></sec><sec id="s9"><title>基金项目</title><p>广州市科技计划项目(502150155)。</p></sec><sec id="s10"><title>文章引用</title><p>叶雯雯,温洁嫦. 自适应爆炸半径和差分变异的增强烟花算法Enhanced Fireworks Algorithm with Adaptive Explosion Amplitude and Differential Variation[J]. 应用数学进展, 2018, 07(02): 152-162. http://dx.doi.org/10.12677/AAM.2018.72019</p></sec><sec id="s11"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.23753-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Tan, Y. and Zhu, Y. (2010) Fireworks Algorithm for Optimization. International Conference on Advances in Swarm Intelligence. Springer-Verlag, 355-364.</mixed-citation></ref><ref id="hanspub.23753-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Pei, Y., Zheng, S., Tan, Y. and Hideyuki, T. (2012) An Empirical Study on Influence of Approximation Approaches on Enhancing Fireworks Algorithm. 2014 IEEE International Conference on Systems, 1322-1327.  
https://doi.org/10.1109/ICSMC.2012.6377916</mixed-citation></ref><ref id="hanspub.23753-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Si, T. and Ghosh, R. (2015) Explosion Sparks Generation Using Adaptive Transfer Function in Firework Algorithm. 2015 IEEE International Conference on Signal Processing, Communication and Networking, 1-9.  
https://doi.org/10.1109/ICSCN.2015.7219917</mixed-citation></ref><ref id="hanspub.23753-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Zheng, S., Janecek, A. and Tan, Y. (2013) Enhanced Fire-works Algorithm. 2013 IEEE Congress on Evolutionary Computation (CEC), 2069-2077. https://doi.org/10.1109/CEC.2013.6557813</mixed-citation></ref><ref id="hanspub.23753-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Zheng, S.Q., Janecek, A., Li, J.Z. and Tan, Y. (2014) Dynamic Search in Fireworks Algorithm. 2014 IEEE Congress on Evolutionary Computation (CEC), 3222-3229. https://doi.org/10.1109/CEC.2014.6900485</mixed-citation></ref><ref id="hanspub.23753-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Li, J., Zheng, S. and Tan, Y. (2014) Adaptive Fireworks Algo-rithm. 2014 IEEE Congress on Evolutionary Computation (CEC), 3214-3221. https://doi.org/10.1109/CEC.2014.6900418</mixed-citation></ref><ref id="hanspub.23753-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Yu, C., Li, J. and Tan, Y. (2014) Improve Enhanced Fireworks Algorithm with Differential Mutation. IEEE International Conference on Systems, Man and Cybernetics. IEEE, 264-269.</mixed-citation></ref><ref id="hanspub.23753-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Zheng, Y.J., Xu, X.L., Ling, H.F. and Chen, S.Y. (2015) A Hybrid Fireworks Optimization Method with Differential Evolution Operators. 3rd International Conference on Swarm Intelligence (ICSI), 75-82</mixed-citation></ref><ref id="hanspub.23753-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Zheng, S.Q., Li, J.Z., Janecek, A. and Tan, Y. (2016) A Cooperative Framework for Fireworks Algorithm. IEEE/ACM Transactions on Computational Biology and Bioinformatics, 1-14.</mixed-citation></ref><ref id="hanspub.23753-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, B., Zheng, Y.J., Zhang, M.X., et al. (2017) Fireworks Algorithm with Enhanced Fireworks Interaction. IEEE/ACM Transactions on Computational Biology &amp; Bioinformatics, 14, 42.  
https://doi.org/10.1109/TCBB.2015.2446487</mixed-citation></ref><ref id="hanspub.23753-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Li, J., Zheng, S. and Tan, Y. (2017) The Effect of Information Utilization: Introducing a Novel Guiding Spark in the Fireworks Algorithm. IEEE Transactions on Evolutionary Computation, 21, 153-166.  
https://doi.org/10.1109/TEVC.2016.2589821</mixed-citation></ref><ref id="hanspub.23753-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Gao, H. and Diao, M. (2011) Cultural Firework Algorithm and Its Application for Digital Filters Design. International Journal of Modelling Identification &amp; Control, 14, 324-331. https://doi.org/10.1504/IJMIC.2011.043157</mixed-citation></ref><ref id="hanspub.23753-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">赵晶, 唐焕文, 朱训芝. 模拟退火算法的一种改进及其应用研究[J]. 大连理工大学学报, 2006, 46(5): 775-780.</mixed-citation></ref><ref id="hanspub.23753-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Storn, R. and Price, K. (1997) Differential Evolution—A Simple and Efficient Heuristic for Global Optimization over Continuous Spaces. Journal of Global Optimization, 11, 341-359. https://doi.org/10.1023/A:1008202821328</mixed-citation></ref><ref id="hanspub.23753-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Liang, J., Nsuganthan, P. and Ghernandez Diaz, A. (2013) Problem Definitions and Evaluation Criteria for the CEC2013 Special Session on Real-Parameter Opti-mization.</mixed-citation></ref><ref id="hanspub.23753-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Liang, J.J., Qu, B.Y. and Nsuganthan, P. (2014) Problem Definitions and Evaluation Criteria for the CEC2013 Special Session and Competition on Single Objective Real-Parameter Numerical Optimization.</mixed-citation></ref></ref-list></back></article>