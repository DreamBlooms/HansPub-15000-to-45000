<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">ORF</journal-id><journal-title-group><journal-title>Operations Research and Fuzziology</journal-title></journal-title-group><issn pub-type="epub">2163-1476</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/ORF.2018.83015</article-id><article-id pub-id-type="publisher-id">ORF-26459</article-id><article-categories><subj-group subj-group-type="heading"><subject>ORF20180300000_48186998.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  凸三角多面体的快速搜索
  Fast Searching on Convex Deltahedra
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>韩</surname><given-names>小东</given-names></name><xref ref-type="aff" rid="aff1"><sub>1</sub></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>浙江师范大学数理与信息工程学院，浙江 金华</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>1328447839@qq.com </email></corresp></author-notes><pub-date pub-type="epub"><day>29</day><month>06</month><year>2018</year></pub-date><volume>08</volume><issue>03</issue><fpage>119</fpage><lpage>126</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  本文研究的图搜索模型是快速搜索，该模型与边搜索的区别仅是：搜索者不能“跳跃”且每条边只能被访问一次。本文研究的图是凸三角多面体，求解所有凸三角多面体的快速搜索数，提出关于凸三角多面体快速搜索数的相关推论。
   In this paper, we study fast searching graph searching model, which differs from the classical edge searching in one way: every edge is traversed exactly once and searchers are not allowed to jump. The graph of this paper is convex deltahedra. We will examine the fast search number (i.e., the minimum number of searchers required for capturing the fugitive) of all the convex deltahedra. We provide an explicit formula for the fast search number of convex deltahedra.
  
 
</p></abstract><kwd-group><kwd>快速搜索，图搜索，追逃对策，警察和小偷博弈, Fast Searching</kwd><kwd> Graph Searching</kwd><kwd> Pursuit-Evasion Strategy</kwd><kwd> Cops and Robber Game</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>凸三角多面体的快速搜索<sup> </sup></title><p>韩小东</p><p>浙江师范大学数理与信息工程学院，浙江 金华</p><p><img src="//html.hanspub.org/file/6-1700129x1_hanspub.png" /></p><p>收稿日期：2018年7月27日；录用日期：2018年8月9日；发布日期：2018年8月16日</p><disp-formula id="hanspub.26459-formula53"><graphic xlink:href="//html.hanspub.org/file/6-1700129x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文研究的图搜索模型是快速搜索，该模型与边搜索的区别仅是：搜索者不能“跳跃”且每条边只能被访问一次。本文研究的图是凸三角多面体，求解所有凸三角多面体的快速搜索数，提出关于凸三角多面体快速搜索数的相关推论。</p><p>关键词 :快速搜索，图搜索，追逃对策，警察和小偷博弈</p><disp-formula id="hanspub.26459-formula54"><graphic xlink:href="//html.hanspub.org/file/6-1700129x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by author and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/6-1700129x7_hanspub.png" /> <img src="//html.hanspub.org/file/6-1700129x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>上世纪六七十年代Breisch [<xref ref-type="bibr" rid="hanspub.26459-ref1">1</xref>] 与Parsons [<xref ref-type="bibr" rid="hanspub.26459-ref2">2</xref>] 研究组建一支搜救队在洞穴里寻找丢失人员所需要的探勘人员的最少人数，称之为洞穴问题。Kirousis等在1986年提出了节点搜索 [<xref ref-type="bibr" rid="hanspub.26459-ref3">3</xref>] 。Megiddo等在1988年提出了离散型的洞穴问题，称之为边搜索 [<xref ref-type="bibr" rid="hanspub.26459-ref4">4</xref>] ，其核心问题是：在图上成功抓获入侵者最少需要多少个搜索者。节点搜索和边搜索是搜索博弈的两个基本模型。</p><p>本文研究的快速搜索是Dyer和Yang在2008年提出的一个改版的边搜索 [<xref ref-type="bibr" rid="hanspub.26459-ref5">5</xref>] 。每条边只允许被搜索者访问一次且搜索者不允许有“跳跃”动作的单调的搜索博弈模型。数个搜索者在图上搜索一个自由且不可见的入侵者，即搜索者不知道入侵者的位置，入侵者却掌握搜索者的位置移动等信息。入侵者藏在要么顶点要么边上，并且可以在任一时间从当前顶点u沿着一条不含有搜索者的路径以非常快的速度移动到顶点v。当搜索者和入侵者占据同一个顶点时，入侵者被搜索者抓捕。搜索者的目的是成功抓捕入侵者，入侵者的目的是避免被抓捕并且总是选择最优策略进行逃脱。</p><p>在快速搜索中，搜索者可以有以下两种动作：</p><p>1) 放置：某一搜索者被放置到图上的一个顶点；</p><p>2) 移动：搜索者从当前顶点沿着一条未被清理过的邻边移动到邻点。</p><p>满足以下两个条件之一，搜索者就可以从顶点u沿邻边uv移动到邻点v：</p><p>1) 如果搜索者从顶点u移动到顶点v后，顶点u上还至少有一个搜索者；</p><p>2) 除边uv以外，顶点u的所有邻边都已被清理。</p><p>如果一条边uv可能藏有入侵者，则称该边是被污染的。如果可以确定一条边不藏有入侵者，则称该边是干净的。在某一时刻，如果图G的某一个顶点上至少有一个搜索者，则称该点被搜索者守卫。每条边通过搜索者的移动动作被清理。在博弈开始时，图上的每一条边都是被污染的，我们的目的是放置最少的搜索者来一步一步的清理该图的每一条边。</p><p>在快速搜索中，清理图G所需要的最少搜索者的数量称为图G的快速搜索数，记为 f s ( G ) 。一个快速搜索策略是由满足最后一个动作结束整个图G被清理的一系列移动动作所组成的集合。以 f s ( G ) 个搜索者清理图G的快速搜索策略被称为最优快速搜索策略。</p><p>单调性是搜索博弈的一个核心问题。一条边被搜索者清理后保持干净状态直至整个搜索策略结束，称这样的搜索策略具有单调性。以往的研究已证明边搜索、节点搜索和混合搜索具有单调性 [<xref ref-type="bibr" rid="hanspub.26459-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.26459-ref7">7</xref>] ，连通边搜索不具有单调性 [<xref ref-type="bibr" rid="hanspub.26459-ref8">8</xref>] 。</p><p>Dyer和Yang设计了一个线性时间复杂度的图搜索算法用来计算树的快速搜索数，并对二部图的快速搜索数做了相关研究 [<xref ref-type="bibr" rid="hanspub.26459-ref5">5</xref>] 。2011年Stanley和Yang提出了一个快速搜索数的下界，并设计了计算立方体图和哈林图等的快速搜索数的图搜索算法 [<xref ref-type="bibr" rid="hanspub.26459-ref9">9</xref>] 。2013年Yang等撰写了关于图搜索及其相关问题的综合性研究论文 [<xref ref-type="bibr" rid="hanspub.26459-ref10">10</xref>] 。2016年Yang等得出了完全k部图的快速搜索数的一个上界与下界，并对完全二部图和完全分割图这两个特殊的完全k部图做了详细的研究 [<xref ref-type="bibr" rid="hanspub.26459-ref11">11</xref>] 。2017年Xue和Yang提出了快速搜索的一个新下界，并提出了欧拉图和路径的笛卡尔积图的快速搜索数 [<xref ref-type="bibr" rid="hanspub.26459-ref12">12</xref>] 。在两个基本模型的基础上，研究人员还提出了混合搜索、快速边搜索等搜索博弈的模型 [<xref ref-type="bibr" rid="hanspub.26459-ref13">13</xref>] [<xref ref-type="bibr" rid="hanspub.26459-ref14">14</xref>] [<xref ref-type="bibr" rid="hanspub.26459-ref15">15</xref>] [<xref ref-type="bibr" rid="hanspub.26459-ref16">16</xref>] [<xref ref-type="bibr" rid="hanspub.26459-ref17">17</xref>] 。</p><p>图搜索在计算机科学、数学、物理领域引起了研究人员的浓厚兴趣。随着网络信息安全越来越得到重视，图搜索在网络安全、计算机游戏设计等领域得到了广泛的应用 [<xref ref-type="bibr" rid="hanspub.26459-ref18">18</xref>] [<xref ref-type="bibr" rid="hanspub.26459-ref19">19</xref>] 。经过多年的演进，在人工智能的很多分支领域都有所涉及图搜索 [<xref ref-type="bibr" rid="hanspub.26459-ref20">20</xref>] [<xref ref-type="bibr" rid="hanspub.26459-ref21">21</xref>] 。</p><p>本文研究在凸三角多面体上的快速搜索，目标求出凸三角多面体的快速搜索数。本文结构如下：第二部分给出相关的概念，第三部分求解凸三角多面体的快速搜索数并得出相关推论，第四部分进行全文总结。</p></sec><sec id="s4"><title>2. 概念</title><p>本文分别用本文分别用 V ( G ) 、 E ( G ) 表示图 G = ( V , E ) 的顶点集和边集，文中仅考虑简单连通图，即无环和无重边的图。</p><p>我们用uv表示连接顶点u和v的边，如果 u v ∈ E ( G ) ，则称u和v是相邻的。对于图G中的任一顶点v的度是指v的邻边个数，记为 deg G ( v ) 。如果一个顶点的度为奇数，称该顶点为奇点。类似的，当一个顶点的度数为偶数，称该顶点为偶点。当一个图的顶点都是奇点，称该图为奇图。对于任一点 v ∈ V ( G ) ，集合 { u : u v ∈ E ( G ) } 表示点v的所有邻点，记为 N G ( v ) 。 δ ( G ) = min ( | N G ( v ) | : v ∈ V ( G ) ) ，表示图G中最小的顶点度数。</p><p>三角多面体是指每一个面都是等边三角形的多面体。在凸三角多面体中，正四面体、正八面体和正二十面体是正则多面体。其余图属于约翰逊固体，一些顶点度数为3，一些顶点度数为4，一些顶点度数为5。值得注意的是，不存在18个面的凸三角多面体。</p></sec><sec id="s5"><title>3. 凸三角多面体的快速搜索</title><p>首先求解所有凸三角多面体的快速搜索数，接着提出相关推论。</p><p>2011年Stanley和Yang [<xref ref-type="bibr" rid="hanspub.26459-ref6">6</xref>] 提出如下推论和定理：</p><p>推论1：对于一个没有叶子节点的图 G = ( V , E ) ，有 f s ( G ) ≥ 1 2 | V o d d | + 2 。</p><p>定理1：对于一个连通立体图 G = ( V , E ) ，设 τ 是图G的切点块图的叶子节块的数量，如果图G不包含切点，则 τ = 2 ，那么 f s ( G ) = | V | 2 + τ 。</p><p>2011年Yang [<xref ref-type="bibr" rid="hanspub.26459-ref13">13</xref>] 提出如下定理：</p><p>定理2：对于一个满足 δ ( G ) ≥ 3 的连通图G，有 f s ( G ) ≥ max { δ ( G ) + 1 , ⌈ δ ( G ) + | V o d d ( G ) | − 1 2 ⌉ }</p><p>引理1：对于正四面体 C 4 ，有 f s ( C 4 ) = 4 。</p><p>证：正四面体是一个连通立体图，显然不含有切点，又已知 | V ( C 4 ) | = 4 ，根据定理1得： f s ( C 4 ) = 4 (图1)。</p><p>引理2：对于双三角锥 C 6 ，有 f s ( C 6 ) = 4 。</p><p>证：首先提出一个由4个搜索者组成的快速搜索策略：</p><p>图1. 完全正四面体 C 4 、双三角锥 C 6</p><p>1) 我们把搜索者 λ 1 、 λ 2 、 λ 3 均放置到顶点 v 1 ，把 λ 4 放置到顶点 v 2 ；</p><p>2) λ 1 、 λ 2 、 λ 3 分别沿边 v 1 v 2 、 v 1 v 3 、 v 1 v 4 移动，使得 v 2 、 v 3 、 v 4 分别被1个搜索者守卫；</p><p>3) λ 4 从 v 2 沿环 v 2 v 3 v 4 v 2 清理回到 v 2 ；</p><p>4) λ 1 、 λ 2 、 λ 3 分别沿 v 2 v 5 、 v 3 v 5 、 v 4 v 5 移动到 v 5 ，完成对图 C 6 的清理。即 f s ( C 6 ) ≤ 4 。</p><p>其次已知 δ ( C 6 ) = 3 ， | V o d d ( C 6 ) | = 2 ，根据定理2得： f s ( C 6 ) = 4 (图1)。</p><p>引理3：对于正八面体 C 8 ，有 f s ( C 8 ) = 5 。</p><p>证：首先提出一个由5个搜索者组成的快速搜索策略：</p><p>1) 我们把搜索者 λ 1 、 λ 2 、 λ 3 、 λ 4 均放置到顶点 v 1 ，把 λ 5 放置到顶点 v 2 ；</p><p>2) λ 1 、 λ 2 、 λ 3 、 λ 4 分别沿边 v 1 v 2 、 v 1 v 3 、 v 1 v 4 、 v 1 v 5 移动，使得 v 2 、 v 3 、 v 4 、 v 5 分别被1个搜索者守卫；</p><p>3) λ 4 从 v 2 沿环 v 2 v 3 v 4 v 5 v 2 清理回到 v 2 ；</p><p>4) λ 1 、 λ 2 、 λ 3 、 λ 4 分别沿 v 2 v 6 、 v 3 v 6 、 v 4 v 6 、 v 5 v 6 移动到 v 6 ，完成对图 C 8 的清理。即 f s ( C 8 ) ≤ 5 。</p><p>其次已知 δ ( C 8 ) = 4 ， | V o d d ( C 8 ) | = 0 ，根据定理2得： f s ( C 8 ) = 5 (图2)。</p><p>引理4：对于双五角锥 C 10 ，有 f s ( C 10 ) = 5 。</p><p>证：首先提出一个由5个搜索者组成的快速搜索策略清理图 C 10 ：</p><p>1) 我们把搜索者 λ 1 、 λ 2 、 λ 3 、 λ 4 均放置到顶点 v 2 ，把 λ 5 放置到顶点 v 6 ；</p><p>2) λ 1 、 λ 2 、 λ 3 、 λ 4 分别沿边 v 2 v 1 、 v 2 v 3 、 v 2 v 5 、 v 2 v 6 移动，使得 v 1 、 v 3 、 v 5 、 v 6 分别被至少1个搜索者守卫, λ 5 从 v 6 沿环 v 6 v 4 v 3 v 7 v 6 清理回到 v 6 ；</p><p>3) λ 1 、 λ 3 分别沿 v 1 v 4 、 v 5 v 7 移动，使得 v 4 、 v 7 被一个搜索者守卫；</p><p>4) λ 5 从 v 6 沿环 v 6 v 4 v 3 v 7 v 6 清理回到 v 6 ， v 6 上的 λ 3 清理 v 7 v 4 ，完成对图 C 8 的清理。即 f s ( C 10 ) ≤ 5 。</p><p>其次已知 δ ( C 10 ) = 4 ， | V o d d ( C 10 ) | = 2 ，根据定理2得： f s ( C 10 ) = 5 (图2)。</p><p>引理5：对于变稜双五角椎 C 12 ，有 f s ( C 12 ) = 5 。</p><p>证：首先提出一个由5个搜索者组成的快速搜索策略：</p><p>1) 把搜索者 λ 1 、 λ 2 、 λ 3 、 λ 4 均放置到顶点 v 2 ，把 λ 5 放置到顶点 v 4 ；</p><p>2) λ 1 、 λ 2 、 λ 3 、 λ 4 分别沿边 v 2 v 1 、 v 2 v 3 、 v 2 v 4 、 v 2 v 5 移动，使得 v 1 、 v 3 、 v 4 、 v 5 分别至少被1个搜索者守卫, λ 5 从 v 4 沿环 v 4 v 5 v 3 v 1 v 4 清理回到 v 4 ；</p><p>3) λ 1 、 λ 5 分别沿 v 1 v 6 、 v 4 v 6 移动(此时 v 6 被2个搜索者守卫)；</p><p>4) λ 4 沿 v 4 v 7 移动到顶点 v 7 ， v 6 上的 λ 5 沿路径 v 6 v 7 v 5 v 8 移动到 v 8 ；</p><p>5) λ 4 沿 v 7 v 8 移动到 v 8 ，然后 v 8 上的 λ 5 沿 v 8 v 3 移动到 v 3 ；</p><p>6) v 3 上的 λ 5 清理 v 3 v 6 ，完成对图 C 12 的清理。即 f s ( C 12 ) ≤ 5 。</p><p>其次已知 δ ( C 12 ) = 4 ， | V o d d ( C 12 ) | = 4 ，根据定理2得： f s ( C 12 ) = 5 (图3)。</p><p>图2. 完全正八面体 C 8 、双五角锥 C 10</p><p>图3. 变稜双五角椎 C 12 、三侧锥三角柱 C 14</p><p>引理6：对于三侧锥三角柱 C 14 ，有 f s ( C 14 ) = 6 。</p><p>证：三侧锥三角柱的顶点布局为： 3 &#215; 3 4 、 6 &#215; 3 5 。根据搜索者放置的初始顶点的度数，我们分为两种情况：</p><p>Case 1：初始顶点的度数为4，不失一般性，我们选取 v 1 作为初始顶点。</p><p>1) 搜索者 λ 1 、 λ 2 、 λ 3 、 λ 4 均放置到顶点 v 1 ；</p><p>2) λ 1 、 λ 2 、 λ 3 、 λ 4 从 v 1 沿领边进行清理，移动到其4个邻点 v 2 、 v 3 、 v 4 、 v 6 (此时这4个搜索者不满足继续移动清理图的条件而只能守卫)；</p><p>3) 不失一般性，放置 λ 5 到 v 3 ；</p><p>4) λ 5 沿环 v 3 v 2 v 6 v 4 v 3 清理回到 v 3 (此时 v 3 有两条邻边未被清理且有2个搜索者 λ 2 、 λ 5 )；</p><p>5) λ 2 、 λ 5 从 v 3 分别沿邻边进行清理，移动到 v 8 、 v 5 ；</p><p>此时5个搜索者所在的顶点上只有1个搜索者且其未被清理的邻边不止一条，所以这5个搜索者不满足继续移动清理图的条件。</p><p>Case 2：初始顶点的度数为5，不失一般性，我们选取 v 2 作为初始顶点。</p><p>1) 放置 λ 1 、 λ 2 、 λ 3 、 λ 4 、 λ 5 到 v 2 ，然后 λ 1 、 λ 2 、 λ 3 、 λ 4 、 λ 5 分别沿邻边进行清理，移动到其5个邻点 λ 1 、 λ 3 、 λ 4 、 λ 5 、 λ 7 ，此时5个搜索者所在的顶点上只有1个搜索者且其未被清理的邻边不止一条，因此这5个搜索者不满足继续移动清理图的条件。</p><p>由上面分析可以得出：5个搜索者不足以成功地清理图 C 14 ，即 f s ( C 14 ) &gt; 5 。</p><p>其次需要证明 f s ( C 14 ) ≤ 6 。接着Case 1的第5步：</p><p>2) 我们再放置第6个搜索者 λ 6 到 v 6 ，然后 λ 6 从 v 6 沿路径 v 6 v 8 v 5 v 2 v 7 清理移动到 v 7 ；</p><p>3) λ 4 从 v 6 沿邻边 v 6 v 9 移动到 v 9 ，然后 λ 2 从 v 8 沿路径 v 8 v 9 v 4 v 7 v 5 v 9 v 7 清理，完成对图 C 14 的清理， 即 f s ( C 14 ) ≤ 6 。综上得证： f s ( C 14 ) = 6 (图3)。</p><p>引理7：对于双四角锥反角柱 C 16 ，有 f s ( C 16 ) = 7 。</p><p>证：首先由于双四角锥反角柱的对称性，只要证明必要的几何元素具有某种性质，就足以概括其余，这是显然的。双四角锥反角柱的顶点布局为： 2 &#215; 3 4 、 8 &#215; 3 5 。根据搜索者放置的初始顶点的度数，我们分为两种情况：</p><p>Case 1：初始顶点的度数为5，不失一般性，我们选取顶点 v 3 作为初始顶点。</p><p>1) 放置 λ 1 、 λ 2 、 λ 3 、 λ 4 、 λ 5 到 v 3 ；</p><p>2) λ 1 、 λ 2 、 λ 3 、 λ 4 、 λ 5 从 v 3 分别沿邻边进行清理，到其5个邻点 v 1 、 v 2 、 v 6 、 v 9 、 v 4 (此时这5个搜索者不满足继续移动清理图的条件而只能守卫)；</p><p>3) 放置 λ 6 到顶点度数为4的顶点 v 1 的邻点 v 2 处(此时 v 2 上有2个搜索者 λ 2 、 λ 6 )；</p><p>4) λ 6 沿环 v 2 v 6 v 9 v 4 v 1 v 2 清理回到 v 2 (此时 v 1 有一条邻边未被清理且有1个搜索者 λ 1 )；</p><p>5) λ 1 沿着邻边 v 1 v 5 到 v 5 ， λ 2 沿邻边 v 2 v 5 到 v 5 (此时 v 2 有一条邻边未被清理且有1个搜索者 λ 6 ， v 5 上有2个搜索者 λ 1 、 λ 2 )；</p><p>6) λ 6 沿邻边 v 2 v 7 到 v 7 ；</p><p>由于 v 5 上有2个搜索者，移动其中1个。此时根据 v 5 的邻边未被清理的边的个数，可以分为以下两种情形：</p><p>(A) 选择有两条邻边未被清理的顶点</p><p>a) λ 2 沿 v 5 v 4 移动到 v 4 (此时 v 4 上有2个搜索者 λ 2 、 λ 5 ，且只有一条邻边 v 4 v 8 未被清理)；</p><p>b) λ 2 沿 v 4 v 8 移动到 v 8 ；</p><p>此时清理情况： λ 1 、 λ 2 、 λ 3 、 λ 4 及其所有邻边已经被清理；顶点 v 5 、 v 6 、 v 9 有两条邻边未被清理(各点上1个搜索者)； v 7 、 v 8 、 v 10 有两条邻边未被清理(各点上1个搜索者)，此时不满足继续移动清理图的条件；</p><p>(B) 选择有三条邻边未被清理的顶点</p><p>a) λ 2 沿 v 5 v 7 移动到 v 7 ，此时 v 7 上有2个搜索者 λ 2 、 λ 6 ，可以移动其中1个；但是有三条邻边 v 7 v 6 、 v 7 v 8 、 v 7 v 10 未被清理，此时不满足继续移动清理图的条件；</p><p>b) 如果 λ 6 沿边 v 7 v 8 移动到 v 8 ，由于此时 v 8 上1个搜索者且四条邻边，此时不满足继续移动清理图的条件；</p><p>c) 如果 λ 6 沿边 v 7 v 10 移动到 v 10 ，由于此时 v 10 上1个搜索者且四条邻边，此时不满足继续移动清理图的条件；</p><p>i) 如果 λ 6 沿 v 7 v 6 移动到 v 6 (此时 v 6 有2个搜索者 λ 3 、 λ 6 ，可以移动其中1个；且只有一条邻边 v 6 v 10 未被清理)；</p><p>ii) λ 3 沿 v 6 v 10 移动到 v 10 ；</p><p>此时清理情况： v 1 、 v 2 、 v 3 、 v 6 及其所有邻边已经被清理( v 6 上1个搜索者)； v 4 、 v 5 、 v 7 、 v 9 有两条邻边未被清理(各顶点上有1个搜索者)； v 8 有五条邻边未被清理(0个搜索者)； v 10 有三条邻边未被清理(1个搜索者)，此时不满足继续移动清理图的条件；</p><p>Case 2：初始顶点的度数为4，不失一般性，我们选取顶点 v 1 作为初始顶点。</p><p>1) 放置 λ 1 、 λ 2 、 λ 3 、 λ 4 到 v 1 ；然后 λ 1 、 λ 2 、 λ 3 、 λ 4 从 v 1 分别沿邻边进行清理，到其四个邻点 v 2 、 v 3 、 v 4 、 v 5 ，此时这4个搜索者只能守卫而不能再移动；</p><p>2) 不失一般性，为了使清理继续下去，放置 λ 5 到顶点 v 2 ；</p><p>3) λ 5 沿环 v 2 v 3 v 4 v 5 v 2 清理回到 v 2 (此时 v 2 上上有2个搜索者 λ 1 、 λ 5 且有两条未被清理的边)；</p><p>4) v 2 上的 λ 1 、 λ 5 沿邻边 v 2 v 7 、 v 2 v 6 到移动 v 7 、 v 6 ；</p><p>此时清理情况： v 1 、 v 2 及其所有邻边已经被清理； v 3 、 v 4 、 v 5 有两条邻边未被清理(各点上1个搜索者)； v 6 、 v 7 有三条邻边未被清理(各点上1个搜索者)； v 8 、 v 9 、 v 10 及其所有邻边已经被清理；</p><p>显然此时这5个搜索者只能守卫而不能再移动；</p><p>5) 为了使清理继续下去，我们需要放置第6个搜索者 λ 6 到图中，根据放置顶点处，未被清理边的个数，可以分为以下3种情形：</p><p>(A) 不失一般性，放置 λ 6 到 v 5 (此时 v 5 上有2个搜索者 λ 4 、 λ 6 )；</p><p>a) λ 4 、 λ 6 移动到其邻点 v 7 、 v 8 (此时 v 7 上有2个搜索者 λ 1 、 λ 4 )；</p><p>b) 移动 λ 4 到 v 10 ，此时 v 10 上只有1个搜索者，清理不能继续下去；</p><p>c) 移动 λ 4 到 v 8 ，此时 v 8 上有2个搜索者 λ 4 、 λ 6 ，移动 λ 6 到其一个邻点 v 4 ，再移动 λ 6 到 v 4 一个邻点 v 9 ，此时 v 3 、 v 6 、 v 7 、 v 8 、 v 9 上有且只有1个搜索者且不止一条未被清理的邻边；显然此时这6个搜索者只能守卫而不能再移动，清理不能继续下去；</p><p>(B) 放置 λ 6 到有四条邻边未被清理的顶点上；类上同证!</p><p>(C) 放置 λ 6 到有五条邻边未被清理的顶点上；类上同证!</p><p>由上面分析可以得出：6个搜索者不足以成功清理图 C 16 ，即 f s ( C 16 ) &gt; 6 。</p><p>其次需要证明 f s ( C 16 ) ≤ 7 。接着Case 1(a)的第2步结束后，只需要在 v 7 处放置1个搜索者 λ 7 ；然后 λ 7 移动到 v 8 ； v 7 上的 λ 6 沿着路径 v 7 v 6 v 10 v 9 v 8 v 4 v 3 v 5 v 8 v 10 移动到 v 10 ，即完成对图 C 16 的清理。</p><p>因此7个搜索者足以成功地清理图 C 16 ，即 f s ( C 16 ) = 7 (图4)。</p><p>引理8：对于正二十面体 C 20 ，有 f s ( C 20 ) = 9 。</p><p>证明：首先需要证明 f s ( C 20 ) &gt; 8 。由于正二十面体的高度对称性，只需要证明一种情形，就足以概括其余，这是显然的。</p><p>1) 不失一般性，放置搜索者 λ 1 、 λ 2 、 λ 3 、 λ 4 、 λ 5 到顶点 v 1 ，然后 λ 1 、 λ 2 、 λ 3 、 λ 4 、 λ 5 分别沿着其邻边移动到 v 2 、 v 3 、 v 4 、 v 5 、 v 6 (此时显然不满足继续移动清理的条件)；</p><p>2) 分别放置 λ 6 、 λ 7 、 λ 8 到 v 2 、 v 3 、 v 4 上；</p><p>3) 移动 λ 1 、 λ 6 分别到 v 7 、 v 8 ，移动 λ 2 、 λ 7 分别到 v 8 、 v 9 ，移动 λ 3 、 λ 8 分别到 v 9 、 v 10 (此时 v 8 上有2个搜索者 λ 6 、 λ 2 ，三条未被清理的邻边； v 9 上有2个搜索者 λ 7 、 λ 8 ，三条未被清理的邻边)；</p><p>4) λ 6 、 λ 7 分别沿 v 8 v 12 、 v 9 v 12 移动到 v 12 ，然后 λ 6 分别沿 v 12 v 11 移动到 v 11 ；</p><p>此时未被清理的顶点上都有1个搜索者，并且这些顶点不止一条邻边未被清理，所以8个搜索者不足以成功地清理图 C 20 ，即 f s ( C 20 ) &gt; 8 。</p><p>其次未被清理的边构成欧拉子图且其每个顶点上都有1个搜索者，那么我们只需要放置1个搜索者到该欧拉子图的任一顶点上，该搜索者沿着欧拉回路就可以完成对图 C 20 的清理。因此9个搜索者足以成功地清理图 C 20 ，即 f s ( C 20 ) ≤ 9 。综上得证： f s ( C 20 ) = 9 (图4)。</p><p>根据引理1~8我们得出如下推论：</p><p>推论1：对于凸三角多面体 C n ，有 f s ( C n ) = max { δ ( C n ) + 1 , ⌊ δ ( C n ) + | V o d d ( C n ) | 2 ⌋ + 1 } 。</p></sec><sec id="s6"><title>4. 总结</title><p>本文研究的是凸三角多面体的快速搜索问题。首先求解了凸三角多面体的快速搜索数，最后提出 f s ( C n ) = max { δ ( C n ) + 1 , ⌊ δ ( C n ) + | V o d d ( C n ) | 2 ⌋ + 1 } 。在后续的研究中，我们也将对其他具有研究意义的</p><p>图4. 双四角锥反角柱 C 16 、正二十面体 C 20</p><p>快速搜索问题展开研究。例如，树 T n 和路径 P n 的笛卡尔积图的快速搜索等都有待研究。</p></sec><sec id="s7"><title>文章引用</title><p>韩小东. 凸三角多面体的快速搜索 Fast Searching on Convex Deltahedra[J]. 运筹与模糊学, 2018, 08(03): 119-126. https://doi.org/10.12677/ORF.2018.83015</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.26459-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Breisch, R. (1967) An Intuitive Approach to Speleotopology. Southwestern Cavers, 5, 72-78.</mixed-citation></ref><ref id="hanspub.26459-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Parsons, T.D. (1978) Pursuit-Evasion in a Graph. Theory and Applications of Graphs, 642, 426-441. 
&lt;br&gt;https://doi.org/10.1007/BFb0070400</mixed-citation></ref><ref id="hanspub.26459-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Kirousis, L.M. and Papadimitriou, C.H. (1986) Searching and Pebbling. Theoretical Computer Science, 47, 205-218. 
&lt;br&gt;https://doi.org/10.1016/0304-3975(86)90146-5</mixed-citation></ref><ref id="hanspub.26459-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Megiddo, N., Hakimi, S.L., Garey, M.R., Johnson, D.S. and Papadimitriou, C.H. (1988) The Complexity of Searching a Graph. Association for Computing Machinery, 35, 18-44. &lt;br&gt;https://doi.org/10.1145/42267.42268</mixed-citation></ref><ref id="hanspub.26459-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Dyer, D., Yang, B. and Yaşar, Ö. (2008) On the Fast Searching Prob-lem. AAIM 2008, LNCS, 5034, 143-154.  
&lt;br&gt;https://doi.org/10.1007/978-3-540-68880-8_15</mixed-citation></ref><ref id="hanspub.26459-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Stanley, D. and Yang, B. (2011) Fast Searching Games on Graphs. Journal of Combinatorial Optimization, 22, 763-777. &lt;br&gt;https://doi.org/10.1007/s10878-010-9328-4</mixed-citation></ref><ref id="hanspub.26459-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Yang, B. (2013) Fast-Mixed Searching and Related Problems on Graph. Theoretical Computer Science, 507, 100-113. 
&lt;br&gt;https://doi.org/10.1016/j.tcs.2013.04.015</mixed-citation></ref><ref id="hanspub.26459-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Xue, Y., Yang, B., Zhong, F. and Zilles, S. (2016) Fast Searching on Complete k-Partite Graphs. Conference on Combinatorial Optimization and Applications, 10043, 159-174. &lt;br&gt;https://doi.org/10.1007/978-3-319-48749-6_12</mixed-citation></ref><ref id="hanspub.26459-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Xue, Y. and Yang, B. (2017) The Fast Search Number of a Cartesian Product of Graphs. Discrete Applied Mathematics. &lt;br&gt;https://doi.org/10.1016/j.dam.2017.03.003</mixed-citation></ref><ref id="hanspub.26459-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Dendris, N.D., Kirousis, L.M. and Thilikos, D.M. (1995) Fugi-tive-Search Games on Graphs and Related Parameters. Graph-Theoretic Concepts in Computer Science. Springer, Berlin, Heidelberg.  
&lt;br&gt;https://doi.org/10.1007/3-540-59071-4_59</mixed-citation></ref><ref id="hanspub.26459-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Yang, B. and Cao, Y. (2008) Monotonicity in Digraph Search Problems. Theoretical Computer Science, 407, 532-544. 
&lt;br&gt;https://doi.org/10.1016/j.tcs.2008.08.025</mixed-citation></ref><ref id="hanspub.26459-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Richerby, D. and Thilikos, D.M. (2007) Graph Searching in a Crime Wave. International Conference on Graph-Theoretic Concepts in Computer Science, 4769, 21-32. &lt;br&gt;https://doi.org/10.1007/978-3-540-74839-7_3b</mixed-citation></ref><ref id="hanspub.26459-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Yang, B. (2011) Fast Edge Searching and Fast Searching on Graphs. Theoretical Computer Science, 412, 1208-1219. 
&lt;br&gt;https://doi.org/10.1016/j.tcs.2010.12.065</mixed-citation></ref><ref id="hanspub.26459-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Bonato, A. and Yang, B. (2013) Graph Searching and Related Problems. Handbook of Combinatorial Optimization, 1511-1558. &lt;br&gt;https://doi.org/10.1007/978-1-4419-7997-1_76</mixed-citation></ref><ref id="hanspub.26459-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Bienstock, D. and Seymour, P. (1991) Monotonicity in Graph Searching. Academic Press, Inc., 239-245.</mixed-citation></ref><ref id="hanspub.26459-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Lapaugh, A.S. (1993) Recontamination Does Not Help to Search a Graph. Journal of the ACM, 40, 224-245. 
&lt;br&gt;https://doi.org/10.1145/151261.151263</mixed-citation></ref><ref id="hanspub.26459-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Yang, B., Dyer, D. and Alspach, B. (2009) Sweeping Graphs with Large Clique Number. Elsevier Science Publishers B. V.</mixed-citation></ref><ref id="hanspub.26459-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">Flocchini, P., Fraigniaud, P. and Santoro, N. (2002) Capture of an Intruder by Mobile Agents. ACM, 200-209.</mixed-citation></ref><ref id="hanspub.26459-ref19"><label>19</label><mixed-citation publication-type="other" xlink:type="simple">Kinnersley, N.G. (1992) The Vertex Separation Number of a Graph Equals Its Path-Width. Information Processing Letters, 42, 345-350. &lt;br&gt;https://doi.org/10.1016/0020-0190(92)90234-M</mixed-citation></ref><ref id="hanspub.26459-ref20"><label>20</label><mixed-citation publication-type="other" xlink:type="simple">Isaza, A., Lu, J., Bulitko, V., et al. (2008) A Cover-Based Approach to Multi-Agent Moving Target Pursuit. Artificial Intelligence and Interactive Digital Entertainment Conference, Stanford, California, 22-24 October 2008, 54-59.</mixed-citation></ref><ref id="hanspub.26459-ref21"><label>21</label><mixed-citation publication-type="other" xlink:type="simple">Moldenhauer, C. and Sturtevant, N.R. (2009) Evaluating Strategies for Running from the Cops. International Joint Conference on Artificial Intelligence, Morgan Kaufmann Publishers Inc., 584-589.</mixed-citation></ref></ref-list></back></article>