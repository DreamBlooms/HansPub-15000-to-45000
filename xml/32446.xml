<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">SA</journal-id><journal-title-group><journal-title>Statistics and Application</journal-title></journal-title-group><issn pub-type="epub">2325-2251</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/SA.2019.85082</article-id><article-id pub-id-type="publisher-id">SA-32446</article-id><article-categories><subj-group subj-group-type="heading"><subject>SA20190500000_21962702.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于CART决策树和RBF神经网络的山东省空气污染状况预测评估
   Prediction and Assessment of Air Pollution in Shandong Province Based on CART Decision Tree and Radial Basis Function Neural Network
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>赵</surname><given-names>亚男</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>中国海洋大学数学科学学院，山东 青岛</addr-line></aff><pub-date pub-type="epub"><day>09</day><month>10</month><year>2019</year></pub-date><volume>08</volume><issue>05</issue><fpage>725</fpage><lpage>733</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   为了更好地监测空气质量，作出相应的空气保护措施，本文运用CART树对山东省2018年的空气质量级别进行建模，并用2019年上半年的数据进行分类预测，并将此方法与RBF网络进行对比，实证分析表明CART树拟合效果更好，模型准确率更高。而此模型也可以运用到山东省空气污染情况的预测治理上。 In order to better monitor air quality and make corresponding air protection measures, this paper uses CART tree to model the air quality level of Shandong Province in 2018, and the data from the first half of 2019 for classifying and predicting. Compared with RBF network, empirical analysis shows that the CART tree has a better fitting effect with higher model accuracy, and this model can also be applied to the forecasting and control of air pollution in Shandong Province. 
  
 
</p></abstract><kwd-group><kwd>AQI，CART树，RBF网络，模型优劣对比,  AQI</kwd><kwd> CART Tree</kwd><kwd> RBF Neural Network</kwd><kwd> Model Pros and Cons</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于CART决策树和RBF神经网络的山东省空气污染状况预测评估<sup> </sup></title><p>赵亚男</p><p>中国海洋大学数学科学学院，山东 青岛</p><p><img src="//html.hanspub.org/file/1-2580532x1_hanspub.png" /></p><p>收稿日期：2019年9月18日；录用日期：2019年10月2日；发布日期：2019年10月9日</p><disp-formula id="hanspub.32446-formula4"><graphic xlink:href="//html.hanspub.org/file/1-2580532x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>为了更好地监测空气质量，作出相应的空气保护措施，本文运用CART树对山东省2018年的空气质量级别进行建模，并用2019年上半年的数据进行分类预测，并将此方法与RBF网络进行对比，实证分析表明CART树拟合效果更好，模型准确率更高。而此模型也可以运用到山东省空气污染情况的预测治理上。</p><p>关键词 :AQI，CART树，RBF网络，模型优劣对比</p><disp-formula id="hanspub.32446-formula5"><graphic xlink:href="//html.hanspub.org/file/1-2580532x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/1-2580532x7_hanspub.png" /> <img src="//html.hanspub.org/file/1-2580532x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>空气质量指数(AQI)，就是根据环境空气质量标准和各项污染物对人体健康、生态、环境的影响，将常规监测的几种空气污染物浓度简化成为单一的概念性指数值形式，它将空气污染程度和空气质量状况分级表示，适合于表示城市的短期空气质量状况和变化趋势 [<xref ref-type="bibr" rid="hanspub.32446-ref1">1</xref>] 。参与空气质量评价的主要污染物为细颗粒物、可吸入颗粒物、二氧化硫、二氧化氮、臭氧、一氧化碳等六项。</p><p>空气污染指数的取值范围定为0~500，其中0~50、51~100、101~200、201~300和大于300，分别对应国家空气质量标准中日均值的I级、II级、III级、IV级和V级标准的污染物浓度限定数值，在实际应用中，又把III级和IV级分为III(1)级、III(2)级和IV(1)级、IV(2)级。I级，空气质量评估为优，对人体健康无影响；II级，空气质量评估为良，对人体健康无显著影响；III级，为轻度污染，健康人群出现刺激症状；IV级，中度污染，健康人群普遍出现刺激症状；V级，严重污染，健康人群出现严重刺激症状 [<xref ref-type="bibr" rid="hanspub.32446-ref2">2</xref>] ，见表1。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> AQI air quality classificatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >AQI</th><th align="center" valign="middle" >0~50</th><th align="center" valign="middle" >51~100</th><th align="center" valign="middle" >101~150</th><th align="center" valign="middle" >151~200</th><th align="center" valign="middle" >201~300</th><th align="center" valign="middle" >&gt;300</th></tr></thead><tr><td align="center" valign="middle" >级别</td><td align="center" valign="middle" >一级</td><td align="center" valign="middle" >二级</td><td align="center" valign="middle" >三级</td><td align="center" valign="middle" >四级</td><td align="center" valign="middle" >五级</td><td align="center" valign="middle" >六级</td></tr><tr><td align="center" valign="middle" >类别</td><td align="center" valign="middle" >优</td><td align="center" valign="middle" >良</td><td align="center" valign="middle" >轻度污染</td><td align="center" valign="middle" >中度污染</td><td align="center" valign="middle" >重度污染</td><td align="center" valign="middle" >严重污染</td></tr></tbody></table></table-wrap><p>表1. AQI空气质量类别划分</p><p>本文获取了2018年山东省各市的空气质量状况数据(共5853条数据)，基于R软件和SPSS软件运用CART分类树和径向基函数神经网络模型进行了建模，用2019年上半年的数据(共2335条数据)进行模型验证，比较两种模型的优劣。</p></sec><sec id="s4"><title>2. CART树原理</title><sec id="s4_1"><title>2.1. CART树</title><p>分类与回归树模型(Classification and Regression Tree，简写为CART)由Breiman等人在1984年提出，是应用广泛的决策树学习方法。CART假设决策树是二叉树，内部结点特征的取值为“是”和“否”，左分支为“是”，右分支为“否”，等价于递归的二分每个特征，将输入空间即特征空间划分为有限个单元，并在这些单元上确定预测的概率分布，也就是在输入给定的条件下输出的条件概率分布。分类树的输出是样本的类别，回归树的输出是一个实数 [<xref ref-type="bibr" rid="hanspub.32446-ref3">3</xref>] 。</p></sec><sec id="s4_2"><title>2.2. 分类树</title><sec id="s4_2_1"><title>2.2.1. Gini指数</title><p>1) 假设有K个类，样本点属于第K类的概率为 p k ，则概率分布的基尼指数定义为</p><p>Gini ( p ) = ∑ k = 1 K p k ( 1 − p k ) (1)</p><p>2) 对于二类分类问题，若样本点属于第1个类的概率为p，则概率分布的基尼指数为</p><p>Gini ( p ) = p ( 1 − p ) (2)</p><p>3) 对于给定的样本集合D，其基尼指数为</p><p>G ini ( D ) = 1 − ∑ k = 1 K ( | C k | | D | ) 2 (3)</p><p>其中， C k 是D中属于第k类的样本子集，K是类的个数。</p><p>如果样本集合D根据特征A是否取某一可能值a被分割成 D 1 和 D 2 两部分，即</p><p>D 1 = { ( x , y ) ∈ D | A ( x ) = a } , D 2 = D − D 1 (4)</p><p>则在特征A的条件下，集合D的基尼指数为</p><p>Gini ( D , A ) = | D 1 | | D | G ini ( D 1 ) + | D 2 | | D | Gini ( D 2 ) (5)</p><p>Gini ( D , A ) 表示经 A = a 分割后集合D的不确定性，基尼指数值越大，不确定性越大 [<xref ref-type="bibr" rid="hanspub.32446-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.32446-ref5">5</xref>] 。</p></sec><sec id="s4_2_2"><title>2.2.2. CART树算法</title><p>输入：训练数据集D，停止计算的条件；</p><p>输出：CART决策树。</p><p>1) 根据训练数据集D，从根结点开始，递归地对每个结点进行以下操作，构建二叉树：</p><p>2) 设结点的训练数据集为D，计算现有特征对该数据集的Gini系数。此时，对每一个特征A，对其可能取的每个值a，根据样本点对A = a的测试为“是”或“否”将D分割成 D 1 和 D 2 两部分，计算A = a时的Gini系数。</p><p>3) 在所有可能的特征A以及它们所有可能的切分点a中，选择Gini系数最小的特征及其对应的切分点作为最优特征与最优切分点。依最优特征与最优切分点，从现结点生成两个子结点，将训练数据集依特征分配到两个子结点中去。</p><p>4) 对两个子结点递归地调用步骤l~2，直至满足停止条件。</p><p>5) 生成CART决策树。</p></sec></sec><sec id="s4_3"><title>2.3. 剪枝</title><p>输入：CART算法生成的决策树 T 0 ；</p><p>输出：最优决策树 T α</p><p>1) 设 k = 0 , T = T 0 , α = + ∞ ；</p><p>2) 自上而下地对各内部结点t计算 C ( T t ) , | T t | 以及 g ( t ) = C ( T ) − C ( T t ) | T t | − 1 , α = min ( α , g ( t ) ) ；这里， T t 表示以t为根结点的子树， C ( T t ) 是对训练数据的预测误差， | T t | 是 T t 的叶节点个数；</p><p>3) 自上而下地访问内部结点t，如果有个 g ( t ) = a ，进行剪枝，并对叶结点t以多数表决法决定其类，得到树T；</p><p>4) 设 k = k + 1 , α k = α , T k = T ；</p><p>5) 如果T不是由根节点单独构成的树，则回到步骤(4)；</p><p>6) 采用交叉验证法在子树序列 T 0 , T 1 , ⋯ , T n 中选择最优子树 T α [<xref ref-type="bibr" rid="hanspub.32446-ref6">6</xref>] - [<xref ref-type="bibr" rid="hanspub.32446-ref11">11</xref>] 。</p></sec></sec><sec id="s5"><title>3. 径向基神经网络</title><sec id="s5_1"><title>3.1. RBF神经网络</title><p>径向基(Radial Basis Function)网络是由Powell M.J.D.于1985年提出的，以函数逼近理论为基础构造的一类前向型网络，具有自学习、自组织和自适应等特点，相较于BP神经网络和灰色关联度，RBF神经网络具有学习速度快、精度高以及建立网络和训练网络时间少等优点。径向基函数网络是一个只有两层的网络，在中间层，它以对局部响应的径向基函数代替传统的全局响应的激发函数。由于局部相应的特性，它对函数的逼近是最优的，而且训练过程很短，它具有简单的结构、快速的训练过程及与初始权值无关的优良特性。</p><p>RBF神经网络的基本思想：用RBF作为隐单元的“基”构成隐藏层空间，隐藏层对输入矢量进行变换，将低维的模式输入数据变换到高维空间内，使得在低维空间内的线性不可分问题在高维空间内线性可分。就是用RBF的隐单元的“基”构成隐藏层空间，这样就可以将输入矢量直接(不通过权连接)映射到隐空间。当RBF的中心点确定以后，这种映射关系也就确定了。</p></sec><sec id="s5_2"><title>3.2. RBF算法</title><p>采用径向基函数(RBF)神经网络，是具有单隐层的3层前向网络。</p><p>1) 输入层X：由信号源节点构成，仅起到数据信息的传递作用，对输入信息不作任何变换。</p><p>2) 隐藏层H：节点数视需要而定. 隐含层神经元核函数(作用函数)是高斯函数，对输入信息进行空间映射的变换。</p><p>3) 输出层Y：对输入模式作出响应. 输出层神经元的作用函数为线性函数，对隐含层神经元输出的信息进行线性加权后输出，作为整个神经网络的输出结果。</p><p>径向基神经网络的数学模型为</p><p>y i = ∑ i = 1 n c w i g ( ‖ x − c i ‖ / σ i ) + b (6)</p><p>式中：x为神经网络输入的n维向量； w i 为输出层权重； g ( ∗ ) 为径向基函数； c i 为径向基函数中心； σ i 为宽度；b为输出层阈值； n c 为隐藏层神经元数目； ‖ x − c i ‖ 为向量 x − c i 的范数，通常表示x与 c i 间的距离。</p><p>通常选择高斯基函数为径向基函数，输出层阈值为0，该层神经元i的输出为</p><p>R i ( x ) = exp [ − ‖ x − c i ‖ 2 / ( 2 σ i 2 ) ] (7)</p><p>则隐藏层与输出层的映射关系为</p><p>Y = f ( x ) = W R = ∑ i = 1 n c w i R i ( x ) (8)</p><p>式中：Y是输出向量， Y = [ y 1 , y 2 , ⋯ , y q ] T ，其中，q是输出层的单元数，W为输出层的权值，R为隐藏层神经元的输出值。</p></sec></sec><sec id="s6"><title>4. 描述性统计</title><p>首先对山东省2018年的空气质量数据进行了简单的描述性统计，得出2018年间各月份的空气污染状况。由图1可以看出，各月份空气质量类别为良的天数占的比重最大，其次为轻度污染，说明山东省整体的空气质量较为良好。各月份中出现空气质量类别为优的月份主要为七月、八月和九月，占比分别为25.2%、21.77%和12.29%，即山东省夏季的空气质量状况较好。各月份中出现严重污染的月份依次为一月、十一月和四月，占比分别为2.42%、1.25%和0.21%，各月份中出现重度污染的月份依次为一月、十一月、十二月等，占比分别为13.51%、9.17%和7.26%，即较为严重的空气污染主要集中在冬季和春季。</p><p>图1. 各月份空气质量类别</p></sec><sec id="s7"><title>5. 预测模型</title><sec id="s7_1"><title>5.1. CART决策树</title><sec id="s7_1_1"><title>5.1.1. 模型建立</title><p>空气质量预测模型的建立使用了空气质量等级作为最终的预测变量，该变量为离散型。选取PM<sub>2.5</sub>、PM<sub>10</sub>、SO<sub>2</sub>、NO<sub>2</sub>、O<sub>3</sub>_8h、CO，一共6个自变量进行预测模型的训练与测试，得到图2 CART树：</p><p>图2. 决策树模型</p><p>可以看到，训练之后，采用了PM<sub>2.5</sub>、O<sub>3</sub>_8h和PM<sub>10</sub>三个指标作为分支节点来建立决策树，而忽略了很多与AQI相关性不高的的特征。</p><p>上述决策树的分支过程如下：</p><p>首先，将PM<sub>2.5</sub>作为节点的第一特征，分为左支D<sub>1</sub>— PM 2.5 &lt; 76 ；右支D<sub>2</sub>— PM 2.5 ≥ 76 ；</p><p>对于D<sub>1</sub>，将O<sub>3</sub>_8h作为节点的第二特征，进一步分为左支C<sub>1</sub>— O 3 _ 8 h &lt; 161 ；右支C<sub>2</sub>— O 3 _ 8 h ≥ 161 。对于D<sub>2</sub>，将PM<sub>2.5</sub>继续作为节点的第二特征，进一步划分为左支C<sub>1</sub>— PM 2.5 &lt; 116 ；右支C<sub>2</sub>— PM 2.5 ≥ 116 。</p><p>如此进行下去，得到最终的CART树。</p><p>由上述CART树可以得出如下结论：</p><p>1) PM<sub>2.5</sub>、PM<sub>10</sub>和O<sub>3</sub>_8h是影响空气质量级别的主要因素。</p><p>2) 当 PM 2.5 ≥ 151 时空气质量级别直接划分为重度污染；</p><p>3) PM 2.5 &lt; 151 ， 161 ≤ O 3 _ 8 h &lt; 215 .5 或 116 ≤ PM 2.5 &lt; 156 时，空气质量级别划分为中度污染；</p><p>4) 76 ≤ PM 2.5 &lt; 116 或 PM 2.5 &lt; 76 ， 161 ≤ O 3 _ 8 h &lt; 216 或 PM 2.5 &lt; 76 ， O 3 _ 8 h &lt; 161 ， 51 ≤ PM 10 &lt; 151 时，空气质量级别划分为轻度污染；</p><p>5) 当 PM 2.5 &lt; 76 ， O 3 _ 8 h &lt; 161 ， PM 10 &lt; 151 或 PM 2.5 &lt; 76 ， O 3 _ 8 h &lt; 161 ， O 3 _ 8 h ≥ 101 时，空气质量级别划分为良；</p><p>6) 当 PM 2.5 &lt; 76 ， O 3 _ 8 h &lt; 101 ， PM 10 &lt; 51 时，空气质量级别划分为优。</p></sec><sec id="s7_1_2"><title>5.1.2. 决策树的剪枝</title><p>剪枝是决策树学习算法解决模型“过拟合”的主要手段，在决策树学习中，为了尽可能正确分类训练样本，结合划分过程将不断重复，有时会造成决策树分支过多，这时就可能因训练样本拟合的准确度很高，以致于把训练集自身的一些特点当作所有数据都具有的一般性质而导致过拟合。因此，可通过主动去掉一些分支来降低过拟合的风险 [<xref ref-type="bibr" rid="hanspub.32446-ref12">12</xref>] 。</p><p>建立树模型要权衡两方面问题，一个是要拟合得使分组后的变异较小，另一个是要防止过度拟合，而使模型的误差过大，前者的参数是CP，后者的参数是Xerror。CP是参数复杂度(complexity parameter)作为控制树规模的惩罚因子，简而言之，就是CP越大，树分裂规模(nsplit)越小。输出参数(rel error)指示了当前分类模型树与空树之间的平均偏差比值。Xerror为交叉验证误差，Xstd为交叉验证误差的标准差 [<xref ref-type="bibr" rid="hanspub.32446-ref13">13</xref>] 。所以要在Xerror最小的情况下，也使CP尽量小。如果认为树模型过于复杂，我们需要对其进行修剪，下面列出了CP值与Xerror值。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> CART - tree complexity parameter tabl</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >CP</th><th align="center" valign="middle" >nsplit</th><th align="center" valign="middle" >rel error</th><th align="center" valign="middle" >xerror</th><th align="center" valign="middle" >xstd</th></tr></thead><tr><td align="center" valign="middle" >0.249251</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1.000000</td><td align="center" valign="middle" >1.000000</td><td align="center" valign="middle" >0.0112859</td></tr><tr><td align="center" valign="middle" >0.094311</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0.501497</td><td align="center" valign="middle" >0.501497</td><td align="center" valign="middle" >0.0097164</td></tr><tr><td align="center" valign="middle" >0.089696</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >0.407186</td><td align="center" valign="middle" >0.419162</td><td align="center" valign="middle" >0.0091172</td></tr><tr><td align="center" valign="middle" >0.072106</td><td align="center" valign="middle" >5</td><td align="center" valign="middle" >0.227794</td><td align="center" valign="middle" >0.227794</td><td align="center" valign="middle" >0.0071062</td></tr><tr><td align="center" valign="middle" >0.065868</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >0.155689</td><td align="center" valign="middle" >0.155689</td><td align="center" valign="middle" >0.0059903</td></tr><tr><td align="center" valign="middle" >0.047904</td><td align="center" valign="middle" >7</td><td align="center" valign="middle" >0.089820</td><td align="center" valign="middle" >0.089820</td><td align="center" valign="middle" >0.0046287</td></tr><tr><td align="center" valign="middle" >0.010000</td><td align="center" valign="middle" >8</td><td align="center" valign="middle" >0.041916</td><td align="center" valign="middle" >0.041916</td><td align="center" valign="middle" >0.0032006</td></tr></tbody></table></table-wrap><p>表2. 决策树的复杂性参数表</p><p>由表2可以看出，可以看到，当nsplit为8的时候，即有四个叶子结点的树，要比nsplit为7，即八个叶子结点的树的交叉误差要小。而决策树剪枝的目的就是为了得到更小交叉误差(xerror)的树。因为本模型较为简单，所以不需要修剪。</p></sec><sec id="s7_1_3"><title>5.1.3. 决策树的模型预测</title><p>从表3可以看出，模型的预测准确率为(1163 + 637 + 0 + 148 + 218 + 141)/2335 = 92.46%。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Confusion matri</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >预测值 真实值</th><th align="center" valign="middle" >良</th><th align="center" valign="middle" >轻度污染</th><th align="center" valign="middle" >严重污染</th><th align="center" valign="middle" >优</th><th align="center" valign="middle" >中度污染</th><th align="center" valign="middle" >重度污染</th></tr></thead><tr><td align="center" valign="middle" >良</td><td align="center" valign="middle" >1163</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >3</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >轻度污染</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >637</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >严重污染</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >11</td></tr><tr><td align="center" valign="middle" >优</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >148</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >中度污染</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >218</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >重度污染</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >141</td></tr></tbody></table></table-wrap><p>表3. 混淆矩阵</p></sec></sec><sec id="s7_2"><title>5.2. 径向基函数神经网络</title><sec id="s7_2_1"><title>5.2.1. 模型建立</title><p>在本模型中，训练集采用5853个样本，占总样本量的64%，测试集采用2335个样本，占总样本量的36%。RBF神经网络模型的输入参数和输入层的神经元数量根据实验因素确定，输出参数和输出层的神经元数量根据评价指标确定。在本文之中，输入参数为PM<sub>2.5</sub>、PM<sub>10</sub>、SO<sub>2</sub>、NO<sub>2</sub>、CO、O<sub>3</sub>_8h，输入层的神经元有6个，输出层的参数为优、良、轻度污染、中度污染、重度污染、严重污染，输出层的神经元有6个，隐藏层的隐藏函数为Softmax函数。建立如下图3：</p><p>图3. RBF神经网络模型</p></sec><sec id="s7_2_2"><title>5.2.2. 模型评价</title><p>ROC曲线指受试者工作特征曲线(Receiver Operating Characteristic Curve)，是反映敏感性和特异性连续变量的综合指标，是用构图法揭示敏感性和特异性的相互关系，它通过将连续变量设定出多个不同的临界值，从而计算出一系列敏感性和特异性，再以敏感性为纵坐标、特异性为横坐标绘制成曲线，曲线下面积越大，诊断准确性越高。在ROC曲线上，最靠近坐标图左上方的点为敏感性和特异性均较高的临界值。</p><p>图4. ROC曲线</p><p>由上述ROC曲线图4可知，径向基神经网络模型对空气质量类别的拟合效果较好 [<xref ref-type="bibr" rid="hanspub.32446-ref14">14</xref>] [<xref ref-type="bibr" rid="hanspub.32446-ref15">15</xref>] [<xref ref-type="bibr" rid="hanspub.32446-ref16">16</xref>] [<xref ref-type="bibr" rid="hanspub.32446-ref17">17</xref>] [<xref ref-type="bibr" rid="hanspub.32446-ref18">18</xref>] 。</p><p>由表4和表5可知，训练集的预测准确率为83.5%，测试集的预测准确率为84.2%，模型准确率相较于CART树模型的准确率不高。</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> Confusion matrix of training se</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >预测值 真实值</th><th align="center" valign="middle" >良</th><th align="center" valign="middle" >轻度污染</th><th align="center" valign="middle" >严重污染</th><th align="center" valign="middle" >优</th><th align="center" valign="middle" >中度污染</th><th align="center" valign="middle" >重度污染</th></tr></thead><tr><td align="center" valign="middle" >良</td><td align="center" valign="middle" >2545</td><td align="center" valign="middle" >286</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >95</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >轻度污染</td><td align="center" valign="middle" >118</td><td align="center" valign="middle" >1286</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >78</td><td align="center" valign="middle" >9</td></tr><tr><td align="center" valign="middle" >严重污染</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >16</td></tr><tr><td align="center" valign="middle" >优</td><td align="center" valign="middle" >110</td><td align="center" valign="middle" >6</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >426</td><td align="center" valign="middle" >12</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >中度污染</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >106</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >339</td><td align="center" valign="middle" >38</td></tr><tr><td align="center" valign="middle" >重度污染</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >65</td><td align="center" valign="middle" >165</td></tr></tbody></table></table-wrap><p>表4. 训练集的混淆矩阵</p><table-wrap id="table5" ><label><xref ref-type="table" rid="table5">Table 5</xref></label><caption><title> Confusion matrix of testing se</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >预测值 真实值</th><th align="center" valign="middle" >良</th><th align="center" valign="middle" >轻度污染</th><th align="center" valign="middle" >严重污染</th><th align="center" valign="middle" >优</th><th align="center" valign="middle" >中度污染</th><th align="center" valign="middle" >重度污染</th></tr></thead><tr><td align="center" valign="middle" >良</td><td align="center" valign="middle" >1102</td><td align="center" valign="middle" >116</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >31</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >轻度污染</td><td align="center" valign="middle" >53</td><td align="center" valign="middle" >619</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >34</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >严重污染</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >14</td></tr><tr><td align="center" valign="middle" >优</td><td align="center" valign="middle" >52</td><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >165</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >中度污染</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >49</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >140</td><td align="center" valign="middle" >11</td></tr><tr><td align="center" valign="middle" >重度污染</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >66</td></tr></tbody></table></table-wrap><p>表5. 测试集的混淆矩阵</p></sec></sec><sec id="s7_3"><title>5.3. 模型优劣对比</title><p>CART树既可以做分类算法，也可以做回归。其优点为：1) 可以生成可以理解的规则。2) 计算量相对来说不是很大。3) 决策树可以清晰的显示哪些字段比较重要。缺点为：1) 当类别太多时，错误可能就会增加的比较快。2) 一般的算法分类的时候，只是根据一个字段来分类。</p><p>径向基神经网络的优点是：1) 分类能力好，学习过程收敛速度快。2) 具有唯一最佳逼近特性，且无局部极小问题存在。缺点是：RBF神经网络的非线性映射能力体现在隐层基函数上，而基函数的特性主要是由基函数的中心确定的，从数据点中任意选取中心构造出来的RBF神经网络的性能显然不能令人满意。</p><p>在上述对2018年1月至2019年6月的山东省空气质量类别预测的模型建立过程中可以看到，CART树模型的预测准确率为92.46%，而径向基函数神经网络模型的预测准确率为84.2%，显然，CART树模型的建立更有效。</p></sec></sec><sec id="s8"><title>文章引用</title><p>赵亚男. 基于CART决策树和RBF神经网络的山东省空气污染状况预测评估 Prediction and Assessment of Air Pollution in Shandong Province Based on CART Decision Tree and Radial Basis Function Neural Network[J]. 统计学与应用, 2019, 08(05): 725-733. https://doi.org/10.12677/SA.2019.85082</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.32446-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Kampa, M. and Castanas, E. (2008) Human Health Effects of Air Pollution. Environmental Pollution, 151, 362-367.  
&lt;br&gt;https://doi.org/10.1016/j.envpol.2007.06.012</mixed-citation></ref><ref id="hanspub.32446-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Zhan, D.S., Kwan, M.-P., Zhang, W.Z., et al. (2018) The Driving Factors of Air Quality Index in China. Journal of Cleaner Production, 197, 1342-1351. &lt;br&gt;https://doi.org/10.1016/j.jclepro.2018.06.108</mixed-citation></ref><ref id="hanspub.32446-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">张松林. CART分类与回归树方法介绍[J]. 火山地质与矿产, 1997(1): 67-75.</mixed-citation></ref><ref id="hanspub.32446-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Kim, B. and Kim, J. (2016) Stochastic Ordering of Gini Indexes for Multivariate Elliptical Risks. Insurance Mathematics and Economics, 68, 84-91.</mixed-citation></ref><ref id="hanspub.32446-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">刘云翔, 吴浩. 基于改进CART决策树建立水华预警模型[J]. 中国农村水利水电, 2018(1): 26-28.</mixed-citation></ref><ref id="hanspub.32446-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">蔡丽清. 基于CART算法的高校超市服务应用研究[J]. 电脑知识与技术, 2016, 12(13): 261-263.</mixed-citation></ref><ref id="hanspub.32446-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">黄晓君. 基于变化检测CART决策树模式自动识别沙漠化信息[J]. 灾害学, 2017, 32(1): 36-42.</mixed-citation></ref><ref id="hanspub.32446-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">孔颖. 基于CART算法的垃圾邮件过滤模型设计与实现[J]. 计算机应用, 2009, 29(2): 374-376.</mixed-citation></ref><ref id="hanspub.32446-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">钱揖丽. 基于分类回归树CART的汉语韵律短语边界识别[J]. 计算机工程与应用, 2006, 44(6): 169-171.</mixed-citation></ref><ref id="hanspub.32446-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">刘玉茹. CART分析及其在故障趋势预测中的应用[J]. 计算机应用, 2017(S2): 57-59.</mixed-citation></ref><ref id="hanspub.32446-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">冯洁. CART算法在银行CRM中的应用研究[J]. 高效理科研究, 2011(26): 111-112.</mixed-citation></ref><ref id="hanspub.32446-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Shang, Z.G., Deng, T., He, J.Q. and Duan, X.H. (2019) A Novel Model for Hourly PM2.5 Concentration Prediction Based on CART and EELM. Sci-ence of the Total Environment, 651, 3043-3052.  
&lt;br&gt;https://doi.org/10.1016/j.scitotenv.2018.10.193</mixed-citation></ref><ref id="hanspub.32446-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Breiman, L., Friedman, J.H., Olshen, R.A. and Stone, C.J. (1984) Classification and Regression Trees, Wadsworth.</mixed-citation></ref><ref id="hanspub.32446-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Bai, Y., Li, Y., Wang, X.X., Xie, J.J., et al. (2016) Air Pollutants Concentrations Forecasting Using Back Propagation Neural Network Based on Wavelet Decomposition with Meteorological Conditions. Atmospheric Pollution Research, 7, 557-566. &lt;br&gt;https://doi.org/10.1016/j.apr.2016.01.004</mixed-citation></ref><ref id="hanspub.32446-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Zhu, S.L., Lian, X.Y., Liu, H.X., Hu, J.M., Wang, Y.Y. and Che, J.X. (2017) Daily Air Quality Index Forecasting with Hybrid Models: A Case in China. Environmental Pollution, 231, 1232-1244.  
&lt;br&gt;https://doi.org/10.1016/j.envpol.2017.08.069</mixed-citation></ref><ref id="hanspub.32446-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">He, Q.F., Shahabi, H. and Shirzadi, A. (2019) Landslide Spatial Modelling Using Novel Bivariate Statistical Based Naïve Bayes, RBF Classifier, and RBF Network Machine Learning Algorithms. Science of the Total Environment, 663, 1-15. &lt;br&gt;https://doi.org/10.1016/j.scitotenv.2019.01.329</mixed-citation></ref><ref id="hanspub.32446-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Park, J. and Sandberg, I.W. (1993) Approximation and Radial-Basis-Function Networks. Neural Computation, 5, 305-316. &lt;br&gt;https://doi.org/10.1162/neco.1993.5.2.305</mixed-citation></ref><ref id="hanspub.32446-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">Dong, J., Zhao, Y.X. and Liu, C. (2019) Orthogonal Least Squares Based Center Selection for Fault-Tolerant RBF Networks. Neurocomputing, 339, 217-231. &lt;br&gt;https://doi.org/10.1016/j.neucom.2019.02.039</mixed-citation></ref></ref-list></back></article>