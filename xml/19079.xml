<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2016.611090</article-id><article-id pub-id-type="publisher-id">CSA-19079</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20161100000_49120178.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于柔性逻辑的词语相似度计算方法的改进
  The Improvement of the Computational Method of Words’ Similarity Based on Flexible Logic
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>刘</surname><given-names>城霞</given-names></name><xref ref-type="aff" rid="aff1"><sub>1</sub></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>北京信息科技大学网络文化与数字传播北京市重点实验室，北京;北京信息科技大学计算机学院，北京</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>cecilia7812@163.com</email></corresp></author-notes><pub-date pub-type="epub"><day>09</day><month>11</month><year>2016</year></pub-date><volume>06</volume><issue>11</issue><fpage>755</fpage><lpage>760</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   为了更好的进行文本挖掘，本文对词语间的相似度计算方法进行了研究及分析，并对其进行了柔性化改进，使之能适应不同的环境需求。具体为引入泛非柔性运算因子，在不同情况下使用不同的柔性参数，可以用统一的运算模型适应不同的应用需求，并对将来进一步的研究打下基础。 In order to improve the text mining efficiency, the computational method of words’ similarity is studied and analyzed in this article. Flexible logic is used to improve the adaptability of the words’ similarity computational method. The flexible factor can be changed according to the different requirements but the computational method is consistent. This is the base and the further study will be carried out in future research.
    
  
 
</p></abstract><kwd-group><kwd>文本挖掘，词语相似度，柔性逻辑, Text Mining</kwd><kwd> The Words’ Similarity</kwd><kwd> Flexible Logic</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于柔性逻辑的词语相似度计算方法的改进<sup> </sup></title><p>刘城霞<sup>1,2</sup></p><p><sup>1</sup>北京信息科技大学网络文化与数字传播北京市重点实验室，北京</p><p><sup>2</sup>北京信息科技大学计算机学院，北京</p><disp-formula id="hanspub.19079-formula335"><graphic xlink:href="http://html.hanspub.org/file/14-1540663x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2016年11月12日；录用日期：2016年11月26日；发布日期：2016年11月29日</p><disp-formula id="hanspub.19079-formula336"><graphic xlink:href="http://html.hanspub.org/file/14-1540663x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>为了更好的进行文本挖掘，本文对词语间的相似度计算方法进行了研究及分析，并对其进行了柔性化改进，使之能适应不同的环境需求。具体为引入泛非柔性运算因子，在不同情况下使用不同的柔性参数，可以用统一的运算模型适应不同的应用需求，并对将来进一步的研究打下基础。</p><p>关键词 :文本挖掘，词语相似度，柔性逻辑</p><disp-formula id="hanspub.19079-formula337"><graphic xlink:href="http://html.hanspub.org/file/14-1540663x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>在数据挖掘中除了针对数据库中数据的挖掘研究外还有对文本的挖掘研究。在互联网成为生活必不可少的组成部分的今天，网络信息充斥生活，而海量数据中哪些是有用的、需要的，而哪些又是垃圾信息，需要剔除的，如何能自动轻松的完成筛选？本文中研究的就是基于Web的文本挖掘。在进行web挖掘的时候，如何计算词语的相似度会影响到最终挖掘的效果。传统的基于知网的词语相似度算法有它的局限性，很多学者对其也进行了改进，比如文献 [<xref ref-type="bibr" rid="hanspub.19079-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.19079-ref2">2</xref>] 中提到的。本文从柔性逻辑的角度改进该词语相似度算法，使之能根据需要自适应的改变。</p></sec><sec id="s4"><title>2. 柔性逻辑基础</title><p>20世纪以来，数十种适用于不同的背景的逻辑学被先后提出，用于满足各新兴学科的不同需要。为了满足智能应用的需要，在刚性逻辑中引入现实世界的柔性因子，去补充刚性的不足，本世纪初何华灿教授提出了一种新的柔性逻辑–泛逻辑学 [<xref ref-type="bibr" rid="hanspub.19079-ref3">3</xref>] 。泛逻辑理论利用二值逻辑、多值逻辑和模糊逻辑的理论体系去研究人工智能领域中的不确定性、不完全性以及模糊性。其中它对命题的真值域、命题连接词、量词等都进行了柔性化 [<xref ref-type="bibr" rid="hanspub.19079-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.19079-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.19079-ref6">6</xref>] ，可以全面反映命题真值的不确定性、真值误差的不确定性、命题之间相关关系的不确定性和相对权重的不确定性对逻辑推理的影响，使之更适合于现实世界的推理规则。目前对泛逻辑的研究已经建立并证明了各级泛运算的模型和算子并进行了证明和应用，形成了一套形式推理系统。在本文中只应用了泛逻辑中的泛非运算，下面就着重介绍一下泛非运算的逻辑公式。</p><sec id="s4_1"><title>2.1. 泛非命题连接词及其逻辑公式</title><p>在泛逻辑中，泛逻辑学中非运算(算子)以三角范数理论中的N范数作为其数学原型。在三角范数研究中很早就研究了模糊非算子，称为N范数，文献 [<xref ref-type="bibr" rid="hanspub.19079-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.19079-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.19079-ref9">9</xref>] [<xref ref-type="bibr" rid="hanspub.19079-ref10">10</xref>] [<xref ref-type="bibr" rid="hanspub.19079-ref11">11</xref>] 对其进行了研究，得到的结果不尽相同。</p><p>1. N范数的一般定义 [<xref ref-type="bibr" rid="hanspub.19079-ref3">3</xref>]</p><p>设一元运算N(x)是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x9_hanspub.png" xlink:type="simple"/></inline-formula>的，则关于N(x)有以下条件:</p><p>边界条件N1<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x10_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x11_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>单调性N2<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x12_hanspub.png" xlink:type="simple"/></inline-formula>，若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x13_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x14_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>严格单调性N2’<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x15_hanspub.png" xlink:type="simple"/></inline-formula>，若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x16_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x17_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>连续性N3<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x18_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x19_hanspub.png" xlink:type="simple"/></inline-formula>，x<sup>−</sup>, x<sup>+</sup>是x的左右邻元；</p><p>逆等性N4<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x20_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x21_hanspub.png" xlink:type="simple"/></inline-formula>，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x22_hanspub.png" xlink:type="simple"/></inline-formula>是N(x)的逆。</p><p>定义1：满足条件N1和N2的N(x)称为弱N范数(Weak n-norm)；如果满足条件N1、N2和N4，则称为N范数；如果满足条件N1、N2和N3，则称为连续(弱)N范数；如果满足条件N1、N2和N2’，则称为严格单调(弱)N范数；</p><p>例如<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x23_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x24_hanspub.png" xlink:type="simple"/></inline-formula>，N<sub>2</sub>, N<sub>1</sub>和Sugeno算子簇都是严格单调连续弱N范数(簇)。而N<sub>3</sub>和N<sub>0</sub>中都存在间断点，不是连续N范数，只是弱N范数(簇)。一般情况下讨论的都是连续的严格单调N范数。</p><p>2. N性生成元及其性质</p><p>在特征空间E中，当每一个模糊测度m(X)可以精确得到时，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x25_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x26_hanspub.png" xlink:type="simple"/></inline-formula>，中心非算子成立，它是泛非运算的基模型。但当得到的模糊测度m(X)的值x不精确时，设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x27_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x28_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x29_hanspub.png" xlink:type="simple"/></inline-formula>，若需要在一定约束条件下对N(x<sup>*</sup>)进行估计，则一般约束条件如下</p><disp-formula id="hanspub.19079-formula338"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/14-1540663x30_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x31_hanspub.png" xlink:type="simple"/></inline-formula>为N性生成元，它是连续的严格单调增函数，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x32_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x33_hanspub.png" xlink:type="simple"/></inline-formula>，作用是修正误差对模糊测度值x<sup>*</sup>的影响。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x34_hanspub.png" xlink:type="simple"/></inline-formula>是特殊的N性生成元，它表示模糊测度是精确的。</p><p>3. N范数完整簇及广义自相关系数</p><p>有了N性生成元及生成方法，下面来研究用它们来生成N范数完整簇。</p><p>广义自相关系数k值：N范数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x35_hanspub.png" xlink:type="simple"/></inline-formula>是连续的严格单调减的，它的不动点即广义自相关系数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x36_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>研究表明，N性生成元完整簇的模型有无穷多种，它们与误差分布的形式有关。因而由N性生成元完整簇生成的N范数完整簇也有无穷多种，最常用的是多项式模型和指数模型。下面用<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x37_hanspub.png" xlink:type="simple"/></inline-formula>表示误差分布函数完整簇，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x38_hanspub.png" xlink:type="simple"/></inline-formula>表示N性生成元完整簇，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x39_hanspub.png" xlink:type="simple"/></inline-formula>表示N范数完整簇.</p><p>定义2：设N性生成元簇<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x40_hanspub.png" xlink:type="simple"/></inline-formula>,<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x41_hanspub.png" xlink:type="simple"/></inline-formula>，对某个特定的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x42_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x43_hanspub.png" xlink:type="simple"/></inline-formula>是一个N性生成元，若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x44_hanspub.png" xlink:type="simple"/></inline-formula>满足：</p><p>1)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x45_hanspub.png" xlink:type="simple"/></inline-formula>可随k连续的严格单调减地变化；</p><p>2)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x46_hanspub.png" xlink:type="simple"/></inline-formula>，且当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x47_hanspub.png" xlink:type="simple"/></inline-formula>时<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x48_hanspub.png" xlink:type="simple"/></inline-formula>;</p><p>3) 当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x49_hanspub.png" xlink:type="simple"/></inline-formula>时<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x50_hanspub.png" xlink:type="simple"/></inline-formula>，当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x51_hanspub.png" xlink:type="simple"/></inline-formula>时<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x52_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>4) 对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x53_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x54_hanspub.png" xlink:type="simple"/></inline-formula>，使<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x55_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>5) 对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x56_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x57_hanspub.png" xlink:type="simple"/></inline-formula>，使<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x58_hanspub.png" xlink:type="simple"/></inline-formula>.</p><p>则称<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x59_hanspub.png" xlink:type="simple"/></inline-formula>是N性生成元完整簇，简称N元簇(N-generate cluster).</p><p>这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x60_hanspub.png" xlink:type="simple"/></inline-formula>表示以x为变元对<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x61_hanspub.png" xlink:type="simple"/></inline-formula>求逆。</p></sec><sec id="s4_2"><title>2.2. 泛非命题连接词的相关性质</title><p>泛非命题连接词即具有一级不确定性的泛非运算，由于模糊测度的不精确性导致了它的不确定性，这种不确定性由认识偏差或测量误差引起，用广义自相关系数也称误差系数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x62_hanspub.png" xlink:type="simple"/></inline-formula>来表示。使用一级泛非运算的条件是命题和它的非命题都服从相同的误差分布<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x63_hanspub.png" xlink:type="simple"/></inline-formula>，并有相同的误差水平k。</p><p>泛非命题连接词的运算模型是一个N范数完整簇<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x64_hanspub.png" xlink:type="simple"/></inline-formula>，其中位置标志参数k是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x65_hanspub.png" xlink:type="simple"/></inline-formula>的不动点，也是非运算中的阈元，它代表否定中的风险程度。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x66_hanspub.png" xlink:type="simple"/></inline-formula>是一个可在其存在域内随k连续变化的非算子完整簇，它的存在域是：<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x67_hanspub.png" xlink:type="simple"/></inline-formula>，最大非算子是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x68_hanspub.png" xlink:type="simple"/></inline-formula>，中心非算子是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x69_hanspub.png" xlink:type="simple"/></inline-formula>，最小非算子是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x70_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>N范数完整簇<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x71_hanspub.png" xlink:type="simple"/></inline-formula>由泛非运算模型的生成基<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x72_hanspub.png" xlink:type="simple"/></inline-formula>和N性生成元完整簇<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x73_hanspub.png" xlink:type="simple"/></inline-formula>相互作用生成<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x74_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>其中泛非运算模型的生成基<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x75_hanspub.png" xlink:type="simple"/></inline-formula>是精确命题真值的非运算即中心非算子。N性生成元完整簇<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x76_hanspub.png" xlink:type="simple"/></inline-formula>的逻辑意义是修正模糊测度误差对命题真值的影响，它与模糊测度的误差分布函数簇<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x77_hanspub.png" xlink:type="simple"/></inline-formula>有关。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x78_hanspub.png" xlink:type="simple"/></inline-formula>簇有无限多种，故<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x79_hanspub.png" xlink:type="simple"/></inline-formula>簇也有无限多种。一个逻辑推理系统中一般只需要使用同一个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x80_hanspub.png" xlink:type="simple"/></inline-formula>簇和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x81_hanspub.png" xlink:type="simple"/></inline-formula>簇。常用的是多项式模型和指数模型。</p><p>多项式模型:</p><disp-formula id="hanspub.19079-formula339"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/14-1540663x82_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.19079-formula340"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/14-1540663x83_hanspub.png"  xlink:type="simple"/></disp-formula><p>指数模型:</p><disp-formula id="hanspub.19079-formula341"><label>(4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/14-1540663x84_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.19079-formula342"><label>(5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/14-1540663x85_hanspub.png"  xlink:type="simple"/></disp-formula><p>由于泛非命题连接词是由N范数完整簇定义的，所以N范数和N范数完整簇的性质就是线序连续值逻辑泛非命题连接词的性质，归纳起来有：</p><p>封闭性<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x86_hanspub.png" xlink:type="simple"/></inline-formula>：命题p的泛非命题<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x87_hanspub.png" xlink:type="simple"/></inline-formula>仍是命题。</p><p>对合律<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x88_hanspub.png" xlink:type="simple"/></inline-formula>：命题经过2 (偶数)次相同误差水平k的泛非运算后回到原命题。</p><p>泛非性如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x89_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x90_hanspub.png" xlink:type="simple"/></inline-formula>;如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x91_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x92_hanspub.png" xlink:type="simple"/></inline-formula>：不假命题的泛非命题一定不真；不真命题的泛非命题一定不假。</p><p>对偶律<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x93_hanspub.png" xlink:type="simple"/></inline-formula>, <inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x94_hanspub.png" xlink:type="simple"/></inline-formula>,<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x95_hanspub.png" xlink:type="simple"/></inline-formula>：泛非运算模型簇<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x96_hanspub.png" xlink:type="simple"/></inline-formula>满足对偶律，它以中心非算子N(x)为中心，零级对偶和一级对偶都在簇中。</p><p>偶等性<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x97_hanspub.png" xlink:type="simple"/></inline-formula>：任何泛非运算的自对偶仍然是自己。</p></sec></sec><sec id="s5"><title>3. 词语相似度计算及其改进</title><sec id="s5_1"><title>3.1. 词语相似度计算</title><p>设有词语W<sub>1</sub>和W<sub>2</sub>，如果W<sub>1</sub>用<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x98_hanspub.png" xlink:type="simple"/></inline-formula>n个概念来描述，W<sub>2</sub>用<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x99_hanspub.png" xlink:type="simple"/></inline-formula>m个概念描述，则计算词语间的相似度即计算概念集合间的相似度。</p><p>1. 义原相似度的计算</p><p>要计算两组概念的相似度首先要计算义原间的相似度，因为所有概念都是用义原来表示的。文献 [<xref ref-type="bibr" rid="hanspub.19079-ref12">12</xref>] 中采用通过语义距离来计算义原结点间相似度的办法，即假设两个义原在此层次体系中的路径距离为d，则这两个义原间的语义相似度可由</p><disp-formula id="hanspub.19079-formula343"><label>(6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/14-1540663x100_hanspub.png"  xlink:type="simple"/></disp-formula><p>2. 虚词概念的相似度计算</p><p>基于“知网”的知识描述语言的，虚词用“{句法义原}”或“{关系义原}”描述，所以虚词的相似度就可以通过对应的“句法义原”或“关系义原”间的相似度计算来得到。</p><p>3. 实词概念的相似度计算</p><p>实词概念采用的相似度计算方法是通过部分相似度的合成来代替整体的相似度。首先要将两个整体的各个部分之间建立起一一对应的关系，随后计算各个配对间的相似度，加权求和。若某一部分的对应为空时其相似度定义为一个比较小的常数δ，和具体词与义原的相似度定义为同一级别。</p><p>得到词语的概念集合后，建立起两个集合元素的一一对应关系，之后集合的相似度计算就等于其元素对相似度的算术平均值。具体算法在文献 [<xref ref-type="bibr" rid="hanspub.19079-ref13">13</xref>] 中曾有详细描述，这里不再重复。</p></sec><sec id="s5_2"><title>3.2. 义原相似度的计算及其改进</title><p>要计算两组概念的相似度首先要计算义原间的相似度，因为所有概念都是用义原来表示的。文献 [<xref ref-type="bibr" rid="hanspub.19079-ref12">12</xref>] 中采用通过语义距离来计算义原结点间相似度的办法，即假设两个义原在此层次体系中的路径距离为d，则这两个义原间的语义相似度可由式(6)计算得来，具体化为：</p><disp-formula id="hanspub.19079-formula344"><label>(7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/14-1540663x101_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中a为可调节参数，通常a是指相似度为0.5时的词语距离值。p<sub>1</sub>和p<sub>2</sub>为两个不同的义原，d是在层次树中p<sub>1</sub>和p<sub>2</sub>间路径的长度，为一正整数。具体的计算方法：找到p<sub>1</sub>和p<sub>2</sub>的最近共同双亲结点cp，如果cp存在，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x102_hanspub.png" xlink:type="simple"/></inline-formula>；否则d = 20。</p><p>在柔性逻辑中，泛非运算模型为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x103_hanspub.png" xlink:type="simple"/></inline-formula>，常用的多项式模型为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x104_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x105_hanspub.png" xlink:type="simple"/></inline-formula>，k为广义自相关系数。</p><p>这里采用柔性逻辑来分析义原相似度，由原义原相似度计算公式</p><disp-formula id="hanspub.19079-formula345"><label>(8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/14-1540663x106_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中d是p<sub>1</sub>和p<sub>2</sub>在层次树中的路径长度。</p><p>将泛非运算因子引入，即将泛非运算模型和式(8)结合，对d进行归一化处理，令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x107_hanspub.png" xlink:type="simple"/></inline-formula>，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x108_hanspub.png" xlink:type="simple"/></inline-formula>，代入式(7)得到</p><disp-formula id="hanspub.19079-formula346"><label>(9)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/14-1540663x109_hanspub.png"  xlink:type="simple"/></disp-formula><p>也就是说，原来的义原相似度定义可以由泛非运算来定义。如此以来使相似度的计算更加的柔性化，可以随着不同的要求来改变使用的相似度计算方法，在簇中选取适合计算的范数。比如当前的义原相似度计算中只考虑了义原在层次树中的深度及相互的路径长度，并没有考虑区域密度等影响因素，而实际使用中密度的影响会更大，所以就需要修改当前的相似度计算方法，比如在文献 [<xref ref-type="bibr" rid="hanspub.19079-ref14">14</xref>] 中修改了其义原距离d计算公式为</p><disp-formula id="hanspub.19079-formula347"><label>(10)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/14-1540663x110_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x111_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x112_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x113_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x114_hanspub.png" xlink:type="simple"/></inline-formula>为可调节参数。</p><p>该定义中考虑了深度及区域密度的共同影响，并且设定了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/14-1540663x115_hanspub.png" xlink:type="simple"/></inline-formula>为可调节参数，更符合实际。但这样的定义的距离和原来定义的距离不同，需要全部重新计算，而且该定义假设义原的深度和区域密度对义原相似度的贡献是独立的，深度对相似度的影响比密度对相似度的影响要小，但实际深度和密度是有相互关联的，如此又需要改进该计算方法。</p></sec></sec><sec id="s6"><title>4. 总结与展望</title><p>使用泛非算子后，可以通过调节广义相关系数k来体现不同因素对相似度计算的影响。广义相关系数原意是修正测度误差的，在这里可以通过不同的k值得到不同的泛非运算模型，也即新相似度计算模型，如此使得相似度计算能在不同的情况下有不同的计算结果。如此可为文本挖掘的研究提供了新的思路和方向，以期能更方便有效的进行相似度的计算，帮助企业及用户更有效的挖掘需要的数据。</p></sec><sec id="s7"><title>基金项目</title><p>本项目得到网络文化与数字传播北京市重点实验室开放课题资助(ICDD201610)；2015课程建设“数据结构教学方式改革的研究项目”资助。</p></sec><sec id="s8"><title>文章引用</title><p>刘城霞. 基于柔性逻辑的词语相似度计算方法的改进The Improvement of the Computational Method of Words’ Similarity Based on Flexible Logic[J]. 计算机科学与应用, 2016, 06(11): 755-760. http://dx.doi.org/10.12677/CSA.2016.611090</p></sec><sec id="s9"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.19079-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">江敏, 肖诗斌, 王弘蔚, 施水才. 一种改进的基于《知网》的词语语义相似度计算[J]. 中文信息学报, 2008, 22(5): 84-89.</mixed-citation></ref><ref id="hanspub.19079-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">王小林, 王义. 改进的基于知网的词语相似度算法[J]. 计算机应用, 2011, 31(11): 3075-3090.</mixed-citation></ref><ref id="hanspub.19079-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">何华灿, 王华, 刘永怀, 等. 泛逻辑学原理[M]. 北京: 科学出版社, 2001.</mixed-citation></ref><ref id="hanspub.19079-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">马盈仓. 命题泛逻辑的演算理论及推理研究[D]: [博士学位论文]. 西安: 西北工业大学, 2005.</mixed-citation></ref><ref id="hanspub.19079-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">王华. 命题泛逻辑学的包容性研究[D]: [硕士学位论文]. 西安: 西北工业大学, 2004.</mixed-citation></ref><ref id="hanspub.19079-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">徐章艳, 汤服成, 李凡. 泛逻辑中的泛或和泛与的逻辑运算公式[J]. 模糊系统与数学, 2002(16): 152-155.</mixed-citation></ref><ref id="hanspub.19079-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Luo, M.X. and He, H.C. (2010) Algebraic Method to Study Universal Logic. Science Press, Beijing.</mixed-citation></ref><ref id="hanspub.19079-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Esteva, F., Trillas, E. and Domingo, X. (1981) Weak and Strong Negation Functions for Fuzzy Set Theory. System on Multiple-Valued Logic.</mixed-citation></ref><ref id="hanspub.19079-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Ovchinnikov, S.V. (1983) General Negations in Fuzzy Set Theory. Journal of Mathematical Analysis and Applications, 92, 234-239. &lt;br&gt;https://doi.org/10.1016/0022-247X(83)90282-2</mixed-citation></ref><ref id="hanspub.19079-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Weber, S. (1983) A General Concept of Fuzzy Connectives: Negations and Implications Based on t-Norms and t-Conorms. Fuzzy Sets and Systems, 11, 115-134. &lt;br&gt;https://doi.org/10.1016/S0165-0114(83)80073-6</mixed-citation></ref><ref id="hanspub.19079-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Mizumoto, M. (1989) Pictorial Representations of Fuzzy Connectives, Part I: Cases of T-Norms, T-Conorms and Averaging Operators. Fuzzy Sets and Systems, 31, 217-242. &lt;br&gt;https://doi.org/10.1016/0165-0114(89)90005-5</mixed-citation></ref><ref id="hanspub.19079-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">刘群, 李素建. 基于《知网》的词汇语义相似度计算[J]. 中文计算语言学, 2002, 7(2): 59-76.</mixed-citation></ref><ref id="hanspub.19079-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">刘城霞, 吴菲滢. 基于关键词相似度的Web用户挖掘研究与实现[J]. 计算机科学与应用, 2013, 3(4): 232-238.</mixed-citation></ref><ref id="hanspub.19079-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">袁晓峰. 《知网》义原相似度计算的研究[J]. 辽宁大学学报, 2011, 38(4): 358-361.</mixed-citation></ref></ref-list></back></article>