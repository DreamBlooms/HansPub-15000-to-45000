<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2021.114108</article-id><article-id pub-id-type="publisher-id">CSA-41885</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20210400000_38026183.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  供应商和零售商之间定价关系的因果关系分析M
  Causal Analysis of Pricing Relationship between Suppliers and Retailers
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>马</surname><given-names>泽龙</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>东北大学，辽宁 沈阳</addr-line></aff><pub-date pub-type="epub"><day>13</day><month>04</month><year>2021</year></pub-date><volume>11</volume><issue>04</issue><fpage>1053</fpage><lpage>1060</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   本文考虑使用两种机器学习算法来识别零售价格、供应商价格和销售量之间的因果关系，目的是找到零售和供应商之间动态博弈下的定价权。本文使用最早期的PC算法和LiNGAM (线性非高斯无环模型)。所研究的数据集为某地区大型零售超市的食品产品的数据。PC算法不能在三个节点，即零售价格、供应商价格和销售数量之间找到因果方向，而基于非高斯分布误差数据下的LiNGAM算法能够找到三节点下的因果方向。 In this paper, two machine learning algorithms are used to identify the causal relationship among retail price, supplier price and sales volume in order to find the pricing power under the dynamic game between retail and supplier. This paper uses the earliest PC algorithm and lingam (linear non-Gaussian acyclic model). The data set studied is the data of food products of a large retail supermarket in a certain area. PC algorithm cannot find the causal direction among three nodes, namely retail price, supplier price and sales quantity, while lingam algorithm based on non Gaussian error data can find the causal direction under three nodes. 
  
 
</p></abstract><kwd-group><kwd>因果关系，PC算法，定价权发现，线性非高斯无环型模型, Causality</kwd><kwd> PC Algorithm</kwd><kwd> Pricing Discovery</kwd><kwd> Linear Non-Gaussian Acyclic Model</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>本文考虑使用两种机器学习算法来识别零售价格、供应商价格和销售量之间的因果关系，目的是找到零售和供应商之间动态博弈下的定价权。本文使用最早期的PC算法和LiNGAM (线性非高斯无环模型)。所研究的数据集为某地区大型零售超市的食品产品的数据。PC算法不能在三个节点，即零售价格、供应商价格和销售数量之间找到因果方向，而基于非高斯分布误差数据下的LiNGAM算法能够找到三节点下的因果方向。</p></sec><sec id="s2"><title>关键词</title><p>因果关系，PC算法，定价权发现，线性非高斯无环型模型</p></sec><sec id="s3"><title>Causal Analysis of Pricing Relationship between Suppliers and Retailers<sup> </sup></title><p>Zelong Ma</p><p>Northeastern University, Shenyang Liaoning</p><p><img src="//html.hanspub.org/file/29-1542068x4_hanspub.png" /></p><p>Received: Mar. 23<sup>rd</sup>, 2021; accepted: Apr. 19<sup>th</sup>, 2021; published: Apr. 27<sup>th</sup>, 2021</p><p><img src="//html.hanspub.org/file/29-1542068x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>In this paper, two machine learning algorithms are used to identify the causal relationship among retail price, supplier price and sales volume in order to find the pricing power under the dynamic game between retail and supplier. This paper uses the earliest PC algorithm and lingam (linear non-Gaussian acyclic model). The data set studied is the data of food products of a large retail supermarket in a certain area. PC algorithm cannot find the causal direction among three nodes, namely retail price, supplier price and sales quantity, while lingam algorithm based on non Gaussian error data can find the causal direction under three nodes.</p><p>Keywords:Causality, PC Algorithm, Pricing Discovery, Linear Non-Gaussian Acyclic Model</p><disp-formula id="hanspub.41885-formula20"><graphic xlink:href="//html.hanspub.org/file/29-1542068x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/29-1542068x7_hanspub.png" /> <img src="//html.hanspub.org/file/29-1542068x8_hanspub.png" /></p></sec><sec id="s5"><title>1. 前言</title><p>本文研究了以薯片为代表的零售食品行业的制造商和零售商之间的定价权。本文使用两种经典的算法：PC算法和LiNGAM(线性非高斯无环模型算法)。本文将两者都应用于推断某地区大型零售超市中收集的薯片零售价格、供应商价格和销售数量之间的因果关系。</p><p>本文所使用的两种机器学习算法，它们试图从观测数据中揭示变量之间的因果关系，而不是做结构的先验假设。两种算法在无环图结构上做搜索，得到的输出结果为有向无环图(DAG)。DAG被广泛用于表示非时间变量之间的因果关系 [<xref ref-type="bibr" rid="hanspub.41885-ref1">1</xref>]。PC算法是对该领域的早期算法，它对数据进行了高斯假设，使用条件独立性关系来发现因果关系。高斯数据的假设否定了对高阶矩结构信息的需要 [<xref ref-type="bibr" rid="hanspub.41885-ref2">2</xref>]。然而，PC算法往往导致一组不可区分的因果模式(马尔科夫等价类)。例如，当x、y和z正态分布时，数据无法区分两个图：x ← y → z和x → y → z。这两个图都兼容相同的概率分布，因此是不可区分的和观测等效的。</p><p>LiNGAM的一个关键特征是假设变量(或扰动)的非高斯性。如果数据是非高斯的，本文可以应用高阶矩来识别因果模式。数据离正态性越远，LiNGAM确定的最终因果模式就越准确。本文阐明了PC和LiNGAM算法的异同。通过假设检验的方法，本文的数据拒绝正态原假设，因此可以使用LiNGAM识别变量中的因果结构。</p></sec><sec id="s6"><title>2. PC算法</title><sec id="s6_1"><title>2.1. 条件独立性与因果图</title><p>PC算法是最早和广泛使用的机器学习算法之一。为了便于解释，先描述依赖模型的概念。设X、Y、Z表示三个互不相交的变量的子集。“X在给定Z的情况下独立于Y”可以用独立性声明 I ( X , Y | Z ) 来表示。假设M是一个依赖模型，用来规定 I ( X , Y | Z ) 是否为真。如果无向图 G = ( V , E ) 中的M变量与V中的顶点集有直接对应关系，则G的拓扑结构反映了M模型中的一些性质。图G中Z的子集节点截断了所有的X节点到Y节点之间的路径，可以写作 〈 X | Z | Y 〉 G 。当X和Y的子节点集合通过集合Z连接时，控制Z可以理解为阻断以上路径 [<xref ref-type="bibr" rid="hanspub.41885-ref3">3</xref>]，并且引出了以下定义。</p><p>在满足元素的所有子集X、Y和Z不相交的情况下，如果M的变量和G的节点V之间存在一对一的对应关系，无向图G是依赖模型M的依赖性映射(或D-映射)。</p><p>I ( X , Y | Z ) M ⇒ 〈 X | Z | Y 〉 G</p><p>类似地，G是M的一个独立映射(或I-映射)如果：</p><p>I ( X , Y | Z ) M ⇐ 〈 X | Z | Y 〉 G</p><p>如果G同时是D——映射和I——映射，则称G是M的完美映射(P-map)，即：</p><p>I ( X , Y | Z ) M ⇔ 〈 X | Z | Y 〉 G</p><p>给定一个满足因果马尔可夫条件和稳定性条件的概率分布P，对于连续正态分布和离散多项式分布，DAG (或贝叶斯网络)是P的一个完美映射。</p></sec><sec id="s6_2"><title>2.2. 因果马尔科夫条件</title><p>PC算法中常用的分布假设是连续变量的高斯分布。从更广义的意义上说，一个参数化的数据集是一对 G , Θ G ，其中G是一个数据集， Θ G 是一个自由参数集，它把图G映射到一个概率分布上。为了给参数指定一个概率分布，必须对参数施加一些限制，例如标准差不能为负。DAG G所代表任意的联合概率分布，且可按照如下因子分解定理分解：</p><p>p ( X 1 = x 1 , ⋯ , X n = x n ) = ∏ i = 1 n p ( X i = x i | P a i G = p a i G , Θ G ) (1)</p><p>P a i G 是G中 X i 节点的父节点集合。根据G因子分解，其等价于DAG中的每个变量X独立于所有的(既不是X的父变量也不是X的后代节点)的变量，而依赖于G中X的所有父变量。满足式(1)中的性质的概率分布，称为G的因果马尔可夫条件 [<xref ref-type="bibr" rid="hanspub.41885-ref4">4</xref>]。Pearl提出了d分离的概念来确定满足因果马尔可夫条件所包含的条件独立关系。</p></sec><sec id="s6_3"><title>2.3. d分离</title><p>阻断：连个节点集合X,Y被Z阻断包含如下几个情况：</p><p>在链结构和叉结构中→ Z →，← Z →，其中Z是被控制的变量节点；</p><p>在对撞结构中→ Z ←，Z不被控制，并且Z的后代节点也不被控制。</p><p>d分离：两个节点集合X,Y被集合Z所d分离当且仅当XY节点之间全部路径被Z节点所阻断。</p><p>PC发现算法伪代码如下所示。</p></sec></sec><sec id="s7"><title>3. 线性非高斯无环模型(LINGAM)</title><p>PC算法通常是基于条件独立性来搜索因果模式，而LiNGAM算法则是基于函数组成发现因果方向。LiNGAM的识别依赖于独立成分分析(ICA)。对于高斯变量，ICA不能找到正确的混合矩阵，因为许多不同的混合矩阵产生完全相同的高斯联合密度。ICA仅适用于非高斯数据。如果数据是非高斯的，本文可以利用变量的高阶统计量来获得更强的识别结果。</p><sec id="s7_1"><title>3.1. 基于独立成分分析(ICA)的LINGAM</title><p>中心极限定理(CLT)指出，任何独立源信号的混合通常具有比任何构成的原始变量更接近正态分布的分布 [<xref ref-type="bibr" rid="hanspub.41885-ref5">5</xref>]。假设本文观察混合变量的独立信号 S = ( S 1 , ⋯ , S n ) ，本文有</p><p>X = A s (2)</p><p>其中s是相互独立的分量。根据CLT，任意一个s都比混合变量x更加的非高斯，本文可以把独立分量写成混合变量的逆矩阵形式。ICA的目标是找到“分离矩阵”W，其中W使统计独立分量的非高斯性之和最大化。</p><p>S ˜ = W ˜ X and W ˜ = A − 1 (3)</p></sec><sec id="s7_2"><title>3.2. 线性非高斯无环模型(LiNGAM)</title><p>Shimizu，Hoyer等人开发了LiNGAM，基于独立分布非高斯扰动的假设，实现了对非高斯分布变量 X = ( X 1 , X 2 , ⋯ , X n ) 的搜索策略。假设向量之间存在因果关系，可以用如下结构方程模型表示：</p><p>x i = ∑ k ( j ) &lt; k ( i ) b i j x j + e i (4)</p><p>其中k(i)表示x<sub>i</sub>的因果顺序,并且 X i 是 X j 的直接原因。扰动项e是相互独立的非高斯分布，且方差非零。如果每个变量都有一个零均值，本文就得到以下方程组：</p><p>e = ( I − B ) X = B ˜ X (5)</p><p>B ˜ = I ˜ − W ˜ (6)</p><p>( I − B ) X = e ⇒ X = ( I − B ) − 1 e = A e (7)</p><p>PC发现算法伪代码如下所示。</p></sec></sec><sec id="s8"><title>4. 结构向量自回归模型(SVAR)</title><p>上述讨论没有提到变量之间的时间顺序及其可能的复杂性。一般来说，这类问题是通过使用向量自回归来解决的。由于Sims (1980)提出的向量自回归模型(VAR模型)不能提供足够的信息来研究同一时期经济变量之间的因果影响。所以本文使用改良的结构向量自回归模型(SVAR)。</p><p>假设t时刻有n个相关变量，定义SVAR模型为</p><p>X t = B 0 X t + B 1 X t − 1 + ⋯ + B p X t − p + e t (8)</p><p>其中p为使用滞后时间的个数，B<sub>0</sub>为瞬时效应，反映变量在同一时间的因果顺序。由SVAR模型导出简化后的VAR模型为：</p><p>X t = ∑ i = 1 p ( I − B 0 ) − 1 B i X t − i + ( I − B 0 ) − 1 e t = ∑ i = 1 p M i X t − i + ( I − B 0 ) − 1 e t (9)</p><p>u ^ t = ( I − B 0 ) − 1 e t (10)</p><p>( I − B 0 ) u ^ t = e t ⇒ u ^ t = B 0 u ^ t + e t (11)</p><p>本文使用图模型在SVAR识别中的寻找 B 0 (10)中的矩阵。在使用PC算法时，本文从测试 u ^ 之间的条件独立性关系开始。如果误差项是非正态分布的，则用LiNGAM算法求出矩阵。</p></sec><sec id="s9"><title>5. 数据与试验结果</title><sec id="s9_1"><title>5.1. 数据描述</title><p>本文使用中国某大型零售超市的商品扫描数据Data.A，该超市是该地区最大的连锁超市之一。数据来自调研的五年期间的88个商店。Data.A将产品按16个区域分为4个价格等级进行定价：促销价格、便宜、中等、高价位。Data.A数据库是一个不平衡的面板数据，有些商店的数据存在大量缺失值。其中1号、15号店、21号店。有本文所调查产品上好佳薯片和乐事薯片的完整销售数据，因此使用这两个店的数据作为实证数据。</p><p>本文将本文的案例视为两个制造商(上好佳食品、乐事公司)与一个零售商的交互，因为这些商店属于同一零售链，通过对比两种商品能够更好的说明定价权的问题。本文假定两家制造商为每家商店预先设定了批发价。为了找到定价关系，本文使用其中最核心的三个边变量：零售价格(Pr)、制造商价格(Pm)和销量量(Q)。</p></sec><sec id="s9_2"><title>5.2. 实证结果</title><p>LiNGAM算法的剪枝策略采用bootstrapping的一个简化版本。首先，将数据分成m个大小相等的组，然后在每组上运行LiNGAM算法，为每组生成一个B估计矩阵，然后求的平均值，并计算其标准差。</p><p>本文首先估计了一个简化的VAR模型(8)，然后分析了方程上的估计残差。本文使用Schwarz信息准则(SIC)来选择最优时滞。本文直接使用1号15号21号店的原始数据，而不是使用残差数据，因为这些数据没有滞后效应。在实证检验上，几乎所有的变量序列都使用增强Dickey-Fuller检验拒绝平稳性的原假设。本文在0.05显著性水平下验证了两个店(销售数据)在平稳漂移的情况下，拒绝了增强Dickey-Fuller检验。相关的假设检验见表1。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Enhanced Dickey fuller test and P value of original data structure residual</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >产品</th><th align="center" valign="middle" >商店</th><th align="center" valign="middle" >Q</th><th align="center" valign="middle" >Pr</th><th align="center" valign="middle" >Pm</th></tr></thead><tr><td align="center" valign="middle" >Oishi</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >–15.808 (0.001)</td><td align="center" valign="middle" >–16.801 (0.001)</td><td align="center" valign="middle" >–18.231 (0.001)</td></tr><tr><td align="center" valign="middle" >Lay’s</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >–15.817 (0.001)</td><td align="center" valign="middle" >–15.547 (0.001)</td><td align="center" valign="middle" >–18.645 (0.001)</td></tr><tr><td align="center" valign="middle" >Oishi</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >–11.909 (0.001)</td><td align="center" valign="middle" >–1.631 (0.097)</td><td align="center" valign="middle" >–2.658 (0.008)</td></tr><tr><td align="center" valign="middle" >Lay’s</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >–15.434 (0.001)</td><td align="center" valign="middle" >–15.396 (0.001)</td><td align="center" valign="middle" >–17.662 (0.001)</td></tr><tr><td align="center" valign="middle" >Oishi</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >–12.116 (0.001)</td><td align="center" valign="middle" >–1.808 (0.067)</td><td align="center" valign="middle" >–2.699 (0.007)</td></tr><tr><td align="center" valign="middle" >Lay’s</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >–15.796 (0.001)</td><td align="center" valign="middle" >–15.619 (0.001)</td><td align="center" valign="middle" >–17.140 (0.001)</td></tr></tbody></table></table-wrap><p>表1. 原始数据结构残差的增强Dickey-Fuller检验及P值</p><p>此外，本文在0.05显著性水平下使用Jarque-Bera检验非高斯性的结构残差，见表2。Jarque-Bera测试结果发现商店1的Oishi的Pr数据的结构残差不拒绝零假设的正态分布。“在只有一个高斯分量的情况下，本文可以估计模型，因为单个高斯分量没有任何其他可以与之混合的高斯分量”。本文可以可靠地发现唯一正确的LiNGAM结果，当且仅当最多有一个误差项是高斯的。因此，本文认为对1号店的该数据应用LiNGAM算法是合适的。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Enhanced Dickey fuller test and P-value of original data structure residual</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >产品</th><th align="center" valign="middle" >商店</th><th align="center" valign="middle" >Q</th><th align="center" valign="middle" >Pr</th><th align="center" valign="middle" >Pm</th></tr></thead><tr><td align="center" valign="middle" >Oishi</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >6470.851 (0.001)</td><td align="center" valign="middle" >2.545 (0.234)</td><td align="center" valign="middle" >258.760 (0.001)</td></tr><tr><td align="center" valign="middle" >Lay’s</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1043.772 (0.001)</td><td align="center" valign="middle" >253.373 (0.001)</td><td align="center" valign="middle" >350.698 (0.001)</td></tr><tr><td align="center" valign="middle" >Oishi</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >539.005 (0.001)</td><td align="center" valign="middle" >35.447 (0.001)</td><td align="center" valign="middle" >398.893 (0.001)</td></tr><tr><td align="center" valign="middle" >Lay’s</td><td align="center" valign="middle" >15</td><td align="center" valign="middle" >279.538 (0.001)</td><td align="center" valign="middle" >65.192 (0.001)</td><td align="center" valign="middle" >0.204 (0.001)</td></tr><tr><td align="center" valign="middle" >Oishi</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >1138.068 (0.001)</td><td align="center" valign="middle" >19.452 (0.002)</td><td align="center" valign="middle" >103.201 (0.001)</td></tr><tr><td align="center" valign="middle" >Lay’s</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >1306.867 (0.001)</td><td align="center" valign="middle" >90.927 (0.001)</td><td align="center" valign="middle" >424.459 (0.001)</td></tr></tbody></table></table-wrap><p>表2. 原始数据结构残差的增强Dickey-Fuller检验及P值</p><p>图1显示了原始数据经验分布的直方图，从上到下依次对应Pm、Pr、Q。在各个商店的数据中，可以看到在各个变量间，至多只有一个类高斯分布。</p><p>图1. 结构残差的直方图</p><p>从图2可以看出，PC算法在0.1的显著性水平下返回无向边，说明该算法没办法有效发现三个节点之间的因果关系。另一方面，VAR-LiNGAM的结果很好地表明了定价模式，即 p r → p m 。换句话说，该零售商店有能力影响这两个著名的薯片制造商的价格这意味着零售商有更大的定价权。</p><p>图2. Oishi数据的VAR-PC和VAR-LiNGAM的因果图</p></sec></sec><sec id="s10"><title>6. 结论</title><p>本文探讨了两种机器学习算法，PC算法和LiNGAM算法，试图揭示变量之间的因果关系，包括零售价格，制造商价格，和销售数量，以确定更大的定价权的一方。本文的VAR-LiNGAM图表清楚地表明，零售价格影响了两家主要的薯片制造商的出厂价格，并且具有非常明显的结构因果效应。通过额外的市场研究结果表明，零售商超的巨大定价权可能来自其在超市行业的市场份额，其自有品牌产品的销售，或来自两个薯片制造商之间的激烈竞争。然而，由于缺乏数据来估计制造商间的竞争，本文无法验证后一种猜想。而且该商超数据库缺乏关于制造商利润的信息，如果通过利润分析可能会从额外的角度去验证二者之间的定价关系。验证发现零售商相对于酸奶制造商具有更高的议价能力，这一发现与本文的VAR-LiNGAM结果一致。但是值得注意的是，对于通用的因果问题发现仍然是误差项是否足够非正态，以保证LiNGAM能够生效，即数据的质量足以诱导正确的估计。</p></sec><sec id="s11"><title>文章引用</title><p>马泽龙. 供应商和零售商之间定价关系的因果关系分析MCausal Analysis of Pricing Relationship between Suppliers and Retailers[J]. 计算机科学与应用, 2021, 11(04): 1053-1060. https://doi.org/10.12677/CSA.2021.114108</p></sec><sec id="s12"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.41885-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Pearl, J. (2009) Causality: Models, Reasoning, and Inference. 2nd edition, Cambridge University Press, Los Angeles.  
&lt;br&gt;https://doi.org/10.1017/CBO9780511803161</mixed-citation></ref><ref id="hanspub.41885-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Shimizu, S., Hyvärinen, A., Kano, Y. and Hoyer, P.O. (2005) Discovery of Non-Gaussian Linear Causal Models Using ICA. Proceedings of the Eleventh Conference on Uncertainty in Artificial Intelligence (UAI-2005), Quebec. non-Gaussianity.</mixed-citation></ref><ref id="hanspub.41885-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Hyvärinen, A., Zhang, K., Shimizu, S. and Hoyer, P.O. (2010). Estimation of a Structural Vector Autoregression Model Using Non-Gaussianity. Journal of Machine Learning Research, 11, 1709-1731.</mixed-citation></ref><ref id="hanspub.41885-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Spirtes, P. (2010) Introduction to Causal Inference. The Journal of Machine Learning Research, 99, 1643-1662.</mixed-citation></ref><ref id="hanspub.41885-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Stone, J.V. (2004) Independent Component Analysis: A Tutorial Introduction. Cambridge, MA: MIT Press.  
&lt;br&gt;https://doi.org/10.7551/mitpress/3717.001.0001</mixed-citation></ref></ref-list></back></article>