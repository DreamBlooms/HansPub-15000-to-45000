<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2019.911240</article-id><article-id pub-id-type="publisher-id">CSA-33141</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20191100000_63894797.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于分层注意力机制的细粒度情感分析
  Fine-Grained Sentiment Analysis Based on Hierarchical Attention Networks
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>邵</surname><given-names>兴林</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>牛</surname><given-names>少彰</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>北京邮电大学智能通信软件与多媒体北京重点实验室，北京</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>31</day><month>10</month><year>2019</year></pub-date><volume>09</volume><issue>11</issue><fpage>2143</fpage><lpage>2153</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   细粒度情感分析从多个角度对文本情感极性进行分析，越来越成为情感分析领域的热点问题。不同于以往算法使用属性信息作为嵌入向量和单层注意力机制的LSTM网络，本文提出了一种基于分层注意力机制的多层网络，一方面可以对单词和句子分别给予不同的注意力权重，帮助模型增加对重要部分的注意力，另一方面使用实体信息作为嵌入向量，比属性信息更能表示目标短语的含义。实验结果表明，该模型在SemEval 2014数据集上取得了出色的效果，优于现有的算法。 Fine-grained sentiment analysis analyzes the emotional polarity of text from multiple angles, and it has become a hot issue in the field of sentiment analysis. Different from previous LSTM networks in which the algorithm uses attribute information as the embedded vector and single-layer attention mechanism, this paper proposes a multi-layer network based on hierarchical attention mechanism, which can give different attention weights to words and sentences. To help the model increase the attention to important parts, on the other hand use the entity information as the embedded vector, which is more representative of the meaning of the target phrase than the attribute information. The experimental results show that the model has achieved excellent results on the SemEval 2014 dataset and is superior to the existing algorithms. 
  
 
</p></abstract><kwd-group><kwd>注意力机制，LSTM，细粒度情感分析, Attention Mechanism</kwd><kwd> LSTM</kwd><kwd> Fine-Grained Sentiment Analysis</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于分层注意力机制的细粒度情感分析<sup> </sup></title><p>邵兴林，牛少彰</p><p>北京邮电大学智能通信软件与多媒体北京重点实验室，北京</p><p><img src="//html.hanspub.org/file/20-1541573x1_hanspub.png" /></p><p>收稿日期：2019年11月6日；录用日期：2019年11月19日；发布日期：2019年11月26日</p><disp-formula id="hanspub.33141-formula22"><graphic xlink:href="//html.hanspub.org/file/20-1541573x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>细粒度情感分析从多个角度对文本情感极性进行分析，越来越成为情感分析领域的热点问题。不同于以往算法使用属性信息作为嵌入向量和单层注意力机制的LSTM网络，本文提出了一种基于分层注意力机制的多层网络，一方面可以对单词和句子分别给予不同的注意力权重，帮助模型增加对重要部分的注意力，另一方面使用实体信息作为嵌入向量，比属性信息更能表示目标短语的含义。实验结果表明，该模型在SemEval 2014数据集上取得了出色的效果，优于现有的算法。</p><p>关键词 :注意力机制，LSTM，细粒度情感分析</p><disp-formula id="hanspub.33141-formula23"><graphic xlink:href="//html.hanspub.org/file/20-1541573x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/20-1541573x7_hanspub.png" /> <img src="//html.hanspub.org/file/20-1541573x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 背景与简介</title><p>情感分析 [<xref ref-type="bibr" rid="hanspub.33141-ref1">1</xref>] 是自然语言处理领域的基本任务之一，特别是aspect-level级别的细粒度情感分析越来越成为研究热点，对于商品评论、舆情分析等领域有重要的现实意义。一般来说情感分析只能对一整段文本进行情感极性判断，而细粒度情感分析针对文本的不同属性做出具体的情感分析。例如，“苹果派很美味，但服务员真的太没礼貌了”。对于这段评论，针对实体“食物(苹果派)”，情感极性判断为“积极”，对于实体“服务(服务员)”，情感极性判断为“消极”。针对一段评论的不同方面，情感极性的判断有可能完全相反。</p><p>近来深度学习方法对于自然语言处理领域的各种任务都取得了很好的效果。比如机器翻译 [<xref ref-type="bibr" rid="hanspub.33141-ref2">2</xref>]，文本分类 [<xref ref-type="bibr" rid="hanspub.33141-ref3">3</xref>]，问答 [<xref ref-type="bibr" rid="hanspub.33141-ref4">4</xref>]，文本摘要 [<xref ref-type="bibr" rid="hanspub.33141-ref5">5</xref>] 等等。情感分析作为文本分类的子领域之一，也出现了很多优秀成果。Yoon kim [<xref ref-type="bibr" rid="hanspub.33141-ref6">6</xref>] 提出基于卷积神经网络(CNN)的文本分类模型，成为文本分类问题的一个基准；D Tang [<xref ref-type="bibr" rid="hanspub.33141-ref7">7</xref>] 提出用分层注意力机制分别对句子和文档建模，对文档级别文本进行情感分析；Zhang [<xref ref-type="bibr" rid="hanspub.33141-ref8">8</xref>] 等采用了新的的思路，采用字符级别词嵌入实现文本分类，也取得了很好的效果；D Tang [<xref ref-type="bibr" rid="hanspub.33141-ref9">9</xref>] 提出用记忆网络实现细粒度情感分析。文档和句子级别的情感分析取得了不错的效果，但难度更高、更有实际价值的aspect-level级别的情感分析的研究还处于初级阶段。D Tang [<xref ref-type="bibr" rid="hanspub.33141-ref10">10</xref>] 提出的Target-Dependent LSTM (TD-LSTM)和Target-Connection LSTM (TC-LSTM)实现了不错的效果，通过加入属性嵌入向量，考虑具体的属性信息，实现细粒度情感分析。这些模型仅仅考虑了属性信息，但在aspect-level级别的情感分析中，实体信息更为重要，同时由于一段文本通常会有多个句子，选出那些对情感极性判断有更重要作用的句子也有很重要的意义。</p><p>本文提出了一种基于分层注意力机制的多层网络，采取实体信息作为嵌入向量，实现细粒度情感分析。首先，提取实体信息作为嵌入向量，比如“苹果派很美味，但服务员真的太没礼貌了”。这段评论，属性“苹果派”属于实体“食物”，则把“食物”对应的向量表示作为嵌入向量。aspect-level级别的情感分析中，实体信息的提取对结果有重要影响。另外，模型引入了多级注意力机制，注意力机制最先开始被应用于计算机视觉领域，后来被证实在包括机器翻译 [<xref ref-type="bibr" rid="hanspub.33141-ref11">11</xref>]，文本摘要，文本分类等多个自然语言处理处理领域也有重要的作用。由于文本通常包含多个句子，构成了单词–句子的层次结构，因此相应地可以构建句子–文档分层表示，而且由于上下文语境的不同，不同的单词和句子会对语义表达有不同的影响，而分层注意力机制则是很好的解决办法。通过加入多级注意力机制，帮助模型对不同单词、不同句子赋予不同的注意力权重，从而对情感极性做出更为准确的判断。</p><p>本文的主要贡献有以下两点：一是采取实体信息而不是属性信息作为嵌入向量，二是使用了分层注意力机制，对不同的单词和句子分别赋予不同的注意力权重。</p></sec><sec id="s4"><title>2. 相关工作</title><sec id="s4_1"><title>2.1. 注意力机制</title><p>Volodymyr Mnih等人首先将注意力机制应用于图像领域，他们研究的动机也是受到人类注意力机制的启发。该模型是在传统的RNN上加入了attention机制，通过attention去学习一幅图像要处理的部分，每次当前状态，都会根据前一个状态学习得到的要关注的位置和当前输入的图像，去处理注意力部分像素，而不是图像的全部像素。这样的好处就是更少的像素需要处理，减少了任务的复杂度。随后注意力机制也被应用于NLP领域。Bahdanau等人在2014年第一次将注意力机制用于机器翻译，使用encoder-decoder框架，并且在翻译之前使用注意力机制来选择对应外语单词的原始语言的参考单词，基于attention的机器翻译系统把源语言端的每个词学到的表达和当前要预测翻译的词联系了起来。T Luong等人的工作 [<xref ref-type="bibr" rid="hanspub.33141-ref12">12</xref>] 将attention在RNN中进行扩展，这篇论文对后续各种基于attention的模型在NLP应用起到了很大的促进作用。在论文中他们提出了两种attention机制，一种是全局(global)机制，一种是局部(local)机制。Z. Yang等人提出一种分层注意力机制，对句子和单词级别分别使用注意力机制，用于分别对句子和文档中的单词、句子的重要性进行建模。更多注意力机制的应用还包括自然语言问答 [<xref ref-type="bibr" rid="hanspub.33141-ref13">13</xref>]，图像问答 [<xref ref-type="bibr" rid="hanspub.33141-ref14">14</xref>] 等等。注意力机制在图像和文本领域都取得了显而易见的成效。本文将使用一种分层注意力机制，对不同的单词和句子分别赋予不同的注意力权重，提高分类正确率。</p></sec><sec id="s4_2"><title>2.2. Aspect-Level级别情感分析</title><p>aspect-level级别的情感分析是典型的分类问题，正如我们之前提到的，aspect-level级别的情感分析作为一种细粒度的情感分析，能够从多个角度对文本情感极性进行分析，越来越成为情感分析领域的热点问题。目前的大多数方法都是对一个句子整体进行情感极性的分析，而很少针对句子某个方面进行分析。传统的解决这些问题的方法是手动设置一系列特征。Ravichandran等人基于情感词汇的丰富 [<xref ref-type="bibr" rid="hanspub.33141-ref15">15</xref>]、Mohammad等人基于词典的特征 [<xref ref-type="bibr" rid="hanspub.33141-ref16">16</xref>] 来进行细粒度的情感分析，这些研究都是构建具有特征的情感分类器。但是这些方法大都依赖于提取特征的质量，而特征工程本身就是一项繁重的工程。</p><p>LSTM网络已经被证明在NLP各个领域都取得了很好的效果。Tang等人提出的TD-LSTM和TC-LSTM在判断句子情感极性时考虑了属性信息，在细粒度情感分析上取得了不错的效果。TC-LSTM通过取目标短语包含的单词的向量平均值来获得嵌入向量，然而，简单地平均目标短语的单词嵌入不足以表示目标短语的语义，效果并不理想。</p><p>尽管这些方法取得了一定的效果，但是细粒度的情感分析仍然具有很大的挑战性。本文基于之前的工作提出了一种改进的基于分层注意力机制的网络，可以充分利用实体信息进行细粒度情感分析。</p></sec></sec><sec id="s5"><title>3. 用于细粒度情感分析的分层注意力机制网络</title><sec id="s5_1"><title>3.1. 长短期记忆网络</title><p>循环神经网络(RNN)能够把以前的信息联系到现在，从而解决现在的问题。这种记忆单元使其成为自然语言处理领域最常用的网络架构，然而标准的RNN会出现梯度爆炸和梯度消失问题，为了解决这些问题，LSTM网络于1997年由Hochreiter等人提出，被广泛地应用于解决各类问题，并取得了非常棒的效果。LSTM的结构主要包括三个门和一个记忆单元。图1展示了标准LSTM的架构。</p><p>图1. 标准LSTM网络架构</p><p>每一个记忆单元的计算如下：</p><p>遗忘门：</p><p>f t = σ ( W f ∗ [ h t − 1 , x t ] + b f ) (1)</p><p>传入门：</p><p>i t = σ ( W i ∗ [ h t − 1 , x t ] + b i ) (2)</p><p>Δ C t = tanh ( W C ∗ [ h t − 1 , x t ] + b C ) (3)</p><p>C t = f t ∗ C t − 1 + i t ∗ Δ C t (4)</p><p>输出门：</p><p>o t = σ ( W o ∗ [ h t − 1 , x t ] + b o ) (5)</p><p>h t = o t ∗ tanh ( C t ) (6)</p><p>其中， W f ， W i ， W o 是权重矩阵， b f ， b i ， b o 是偏置。 σ 是激活函数，此处是sigmoid函数。 x t 代表记忆单元的输入，具体是指单词的词嵌入向量。 h t 代表隐层的输出向量。实验中将隐层的最后一个输出向量作为句子的向量表示并且将其经过softmax层处理最终输出每个类别的预测概率。</p></sec><sec id="s5_2"><title>3.2. 分层注意力机制网络</title><p>实体信息对于aspect-level级别的细粒度情感分析有着重要的作用，不同于Tang等人将作为属性信息的单词词向量进行平均求值，本文采用实体信息作为嵌入向量。对于一段评论的情感极性，如果考虑的实体信息不同，情感极性可能会有相反的结果。</p><p>标准的LSTM只能判断句子的情感极性，但不能检测句子的哪一部分、哪个单词对句子情感极性的判断具有重要作用。因此本文提出一种分层注意力机制网络，在给定具体的实体信息后，通过赋予不同单词、不同句子不同的注意力权重，让网络更注意那些对句子情感极性判断有更重要作用的部分。分层即在句子级别，单词级别分别加入注意力机制，在句子级别，注意力机制可以给予重要的单词更大的注意力权重，在句子级别，注意力机制可以给予重要的句子更大的注意力权重。这样不仅每一个单词有其向量表示，每一个句子也有其向量表示，并且单词和句子都有自己的注意力权重。图2代表了新提出的的分层注意力机制网络。</p><p>图2. 分层注意力网络</p><p>单词级别：</p><p>给定一个包含N个单词的句子，表示为 [ w i 1 , ⋯ , w i N ] ，通过一个词向量矩阵 W e ，得到每个单词的词向量表示 x i j = W e w i j ，作为输入。然后使用LSTM网络得到单词级别的隐层表示，即将输入的单词向量抽象成隐层表示，隐层表示包含了输入的信息。</p><p>x i j = W e w i j ,     j ∈ [ 1 , N ] (7)</p><disp-formula id="hanspub.33141-formula24"><label>(8)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/20-1541573x30_hanspub.png"  xlink:type="simple"/></disp-formula><p>然后加入实体信息作为嵌入向量，相比于TC-LSTM通过取目标短语包含的单词的向量平均值来获得嵌入向量，实体信息更能表示目标短语的含义。其中嵌入向量 v a ∈ R N &#215; d ，N表示句子长度，d表示隐藏层神经元个数。</p><p>并不是所有单词对句子的意义表示都有相同重要的作用，因此引入注意力机制来提取那些对句子意义有更重要作用的单词，通过得到的注意力权重 α 与隐层表示 h i j 加权求和就可以得到句子的向量表示。</p><p>M 1 = tanh ( W w [ H 1 , v a ] ) (9)</p><p>α w = softmax ( u w T M 1 ) (10)</p><p>s i = H 1 α w T (11)</p><p>首先将嵌入向量 v a 与LSTM输出的隐层表示 h i j 进行拼接作为输入，通过一层MLP网络得到 M i j ，然后用单词级别的向量 u w 来衡量单词的重要程度，通过softmax激活函数得到归一化的注意力权重 α i j ，接下来将注意力权重 α i j 与LSTM的隐层表示进行加权求和，就可以得到一个句子的向量表示 s i 。其中向量 随机初始化，在训练过程与其他参数一起参与训练。</p><p>句子级别：</p><p>Y. Wang等人提出的Attention-based LSTM网络加入嵌入向量后考虑了单词级别的注意力机制，本文提出的分层注意力机制网络则新加入一层句子级别的注意力机制，除了对单词的不同重要程度进行标明，对于一段评论，可能包含多个句子，通过对句子加入注意力机制，可以使模型提取那些跟嵌入向量更符合的句子作为情感极性分析的依据。</p><p>将输出的句子表示<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541573x44_hanspub.png" xlink:type="simple"/></inline-formula>作为LSTM网络新的输入，即 [ s 1 , ⋯ , s T ] ，T表示句子长度，经过LSTM网络输出句子级别的隐层表示 h i ，此时隐层表示抽象后的句子信息。</p><p>h i = LSTM ( s i ) ,     i ∈ [ 1 , T ] (12)</p><p>然后再一次加入实体信息作为嵌入向量。然后在句子级别引入注意力机制，来提取那些对评论的情感极性有更重要作用的句子，通过得到的注意力权重 α 与隐层表示 h i 的输入加权求和就可以得到整个评论的向量表示。</p><p>M 2 = tanh ( W s [ H 2 , v a ] ) (13)</p><p>α s = softmax ( u s T M 2 ) (14)</p><p>v = H 2 α s T (15)</p><p>这里引入句子级别的向量 u s 来衡量句子的重要程度，最终得到的向量v就是整个评论的向量表示，类似的，向量 u s 也是随机初始化，在训练过程与其他参数一起参与训练。本文参考Rocktaschel的想法，将句子级别的隐层表示 h T 加入最后整个评论的表示。</p><p>h * = tanh ( W 1 v + W 2 h T ) (16)</p><p>y = softmax ( W h * + b ) (17)</p><p>h * 就是一个高层次的最终的整个评论的向量表示，将 h * 经过softmax层就可以得到最终的分类结果，其中W，b分别是softmax层的权重与偏置。实验结果标明加入隐层表示 h T 后取得了更好的实验结果。</p></sec><sec id="s5_3"><title>3.3. 模型训练</title><p>本文模型使用交叉熵损失作为损失函数，y代表目标评论对应的真实分类结果， y ^ 代表预测的分类结果，训练目标则是最小化交叉熵损失。</p><p>loss = − ∑ i ∑ j y i j log y ^ i j + λ ‖ θ ‖ (18)</p><p>其中，i代表评论的下标，j代表类别的下标。本文是一个三分类问题。 λ 代表 L 2 正则系数， θ 则代表参数集合。与标准的LSTM网络类似，参数集合包括 { W f , b f , W i , b i , W C , b C , W o , b o , W , b } ,除此之外，网络加入了嵌入向量 v a ，MLP网络的参数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541573x68_hanspub.png" xlink:type="simple"/></inline-formula>， W s ，衡量单词和句子重要程度的参数 u w ， u s ，以及 W 1 ，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/20-1541573x73_hanspub.png" xlink:type="simple"/></inline-formula>。因此除了包含标准LSTM网络的参数外，分层注意力机制网络还包括以下参数 { v a , W w , W s , u w , u s , W 1 , W 2 } 。其中词向量和嵌入向量也是在训练过程不断优化。</p><p>训练集中大约有5%的单词不在已有的词向量矩阵中，本文将这些单词随机初始化。最后，本文实验采用Adam算法作为我们的优化算法。</p></sec></sec><sec id="s6"><title>4. 实验</title><p>本文将提出的分层注意力模型应用于细粒度的情感分析。实验中训练集的所有词向量都通过Glove初始化。词嵌入向量是在未标记的语料库上预先训练的，其大小约为8400亿，其他参数都是随机初始化得到。词嵌入向量的维度大小为300，方面嵌入向量和隐藏层神经元的数目也为300。单词级别的注意力机制权重 α w 长度与每个句子包含的单词数相同，句子级别的注意力机制权重长度 α s 与每篇评论包含的句子数相同。本文采用tensorflow来进行实验，其中batch size大小为64， L 2 正则化系数为0.5，学习率为0.001。</p><sec id="s6_1"><title>4.1. 数据集</title><p>本文实验采用的数据集是SemEval 2014 Task 4。数据集由顾客评论组成，每一篇评论对应一个实体信息以及相应的情感极性。我们的目标就是给定特定实体判断相应的情感极性。具体的数据统计见表1。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Data set emotional polarity classification statistics tabl</title></caption><table><tbody><thead><tr><th align="center" valign="middle"  rowspan="2"  >Asp</th><th align="center" valign="middle"  colspan="2"  >Positive</th><th align="center" valign="middle"  colspan="2"  >Negative</th><th align="center" valign="middle"  colspan="2"  >Neural</th></tr></thead><tr><td align="center" valign="middle" >Train</td><td align="center" valign="middle" >Test</td><td align="center" valign="middle" >Train</td><td align="center" valign="middle" >Test</td><td align="center" valign="middle" >Train</td><td align="center" valign="middle" >Test</td></tr><tr><td align="center" valign="middle" >Fo</td><td align="center" valign="middle" >867</td><td align="center" valign="middle" >302</td><td align="center" valign="middle" >209</td><td align="center" valign="middle" >69</td><td align="center" valign="middle" >90</td><td align="center" valign="middle" >31</td></tr><tr><td align="center" valign="middle" >Pr</td><td align="center" valign="middle" >179</td><td align="center" valign="middle" >51</td><td align="center" valign="middle" >115</td><td align="center" valign="middle" >28</td><td align="center" valign="middle" >10</td><td align="center" valign="middle" >1</td></tr><tr><td align="center" valign="middle" >Se</td><td align="center" valign="middle" >324</td><td align="center" valign="middle" >101</td><td align="center" valign="middle" >218</td><td align="center" valign="middle" >63</td><td align="center" valign="middle" >20</td><td align="center" valign="middle" >3</td></tr><tr><td align="center" valign="middle" >Am</td><td align="center" valign="middle" >263</td><td align="center" valign="middle" >76</td><td align="center" valign="middle" >98</td><td align="center" valign="middle" >21</td><td align="center" valign="middle" >23</td><td align="center" valign="middle" >8</td></tr><tr><td align="center" valign="middle" >An</td><td align="center" valign="middle" >546</td><td align="center" valign="middle" >127</td><td align="center" valign="middle" >199</td><td align="center" valign="middle" >41</td><td align="center" valign="middle" >357</td><td align="center" valign="middle" >51</td></tr><tr><td align="center" valign="middle" >Total</td><td align="center" valign="middle" >2179</td><td align="center" valign="middle" >657</td><td align="center" valign="middle" >839</td><td align="center" valign="middle" >222</td><td align="center" valign="middle" >500</td><td align="center" valign="middle" >94</td></tr></tbody></table></table-wrap><p>表1. 数据集情感极性分类统计表</p></sec><sec id="s6_2"><title>4.2. 实验结果</title><sec id="s6_2_1"><title>4.2.1. 模型效果对比</title><p>本文首先将改进的模型与TC-LSTM，TD-LSTM等进行了对比。采用的是SemEval 2014 Task 4下的“restaurants”数据集，该数据集包含aspect与aspect-term两个嵌入信息，对分别应“实体”，“属性”信息。对于给定的句子，采用实体信息作为嵌入信息，来判断给定实体对应的句子情感极性。比如，“这家餐厅实在是太贵了”，实体信息对应的是“价格”，数据集总共包含了五种实体信息，分别为食物，价格，服务，环境，其他。表2是实验结果。</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Entity information as the classification accuracy of each model of embedded informatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >Models</th><th align="center" valign="middle" >Three-way</th><th align="center" valign="middle" >Two-way</th></tr></thead><tr><td align="center" valign="middle" >LSTM</td><td align="center" valign="middle" >82.0</td><td align="center" valign="middle" >88.3</td></tr><tr><td align="center" valign="middle" >TD-LSTM</td><td align="center" valign="middle" >82.6</td><td align="center" valign="middle" >89.1</td></tr><tr><td align="center" valign="middle" >TC-LSTM</td><td align="center" valign="middle" >81.9</td><td align="center" valign="middle" >89.2</td></tr><tr><td align="center" valign="middle" >AE-LSTM</td><td align="center" valign="middle" >82.5</td><td align="center" valign="middle" >88.9</td></tr><tr><td align="center" valign="middle" >AT-LSTM</td><td align="center" valign="middle" >83.1</td><td align="center" valign="middle" >89.6</td></tr><tr><td align="center" valign="middle" >ATAE-LSTM</td><td align="center" valign="middle" >84.0</td><td align="center" valign="middle" >89.9</td></tr><tr><td align="center" valign="middle" >HAT-LSTM</td><td align="center" valign="middle" >85.1</td><td align="center" valign="middle" >91.3</td></tr></tbody></table></table-wrap><p>表2. 实体信息作为嵌入信息的各模型分类准确率</p><p>在将实体信息作为嵌入信息的前提下，可以看出新改进的模型在实验结果上有了一定的提升，特别是在二分类问题上已经能够达到90%的准确率。</p></sec><sec id="s6_2_2"><title>4.2.2. 嵌入信息效果对比</title><p>实验还是采用SemEval 2014 Task 4下的“restaurants”数据集，模型也跟之前的基本相同，不同的是于给定的句子，采用属性信息作为嵌入信息，来判断给定实体对应的句子情感极性。比如，“这家餐厅实在是太贵了”，将“餐厅”作为嵌入信息，来判断对应的情感极性。表3是实验结果。</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Attribute information as the classification accuracy of each model of embedded informatio</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >Models</th><th align="center" valign="middle" >Three-way</th><th align="center" valign="middle" >Two-way</th></tr></thead><tr><td align="center" valign="middle" >TD-LSTM</td><td align="center" valign="middle" >75.6</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >TC-LSTM</td><td align="center" valign="middle" >74.3</td><td align="center" valign="middle" >-</td></tr><tr><td align="center" valign="middle" >AE-LSTM</td><td align="center" valign="middle" >76.6</td><td align="center" valign="middle" >89.6</td></tr><tr><td align="center" valign="middle" >ATAE-LSTM</td><td align="center" valign="middle" >77.2</td><td align="center" valign="middle" >90.9</td></tr><tr><td align="center" valign="middle" >HAT-LSTM</td><td align="center" valign="middle" >78.3</td><td align="center" valign="middle" >90.3</td></tr></tbody></table></table-wrap><p>表3. 属性信息作为嵌入信息的各模型分类准确率</p><p>可以看出相对于实体信息，属性信息作为嵌入信息实验效果会有明显的下滑，说明在细粒度情感分析中实体信息比属性信息更重要。</p></sec></sec><sec id="s6_3"><title>4.3. 注意力机制的有效性</title><p>本文采用了注意力机制来赋予不同的单词和句子不同的权重，来更好的进行情感极性的判断。通过公式(10)，(14)可以得到注意力权重的具体数值，下面通过可视化的注意力机制的图来展示注意力机制的有效性。</p><p>对于例句，“The noodles tastes good, and the price is reasonable, but the service is not good”，图3展示了在给定实体为“food”的时候，句子中每个单词被赋予的注意力权重，可以看出“noodles”，“good”被赋予了更高的权重，说明在句子情感极性的判断中二者起到了重要的作用，这也与我们的预期相符。</p><p>图3. 单词级别注意力权重分布示意图</p><p>更进一步，对于该评论中的三个句子，“The noodles tastes good”，“and the price is reasonable”，“but the service is not good”，得到每个句子的注意力权重并且可视化，结果如图4，可以看出第一个句子在情感极性的判断中起到了重要作用，而这一句子正是实体“food”所对应的句子。</p><p>图4. 句子级别注意力权重分布示意图</p><p>类似的，将实体“service”作为嵌入信息时，每个单词及句子的注意力权重可视化如图5和图6。</p><p>图5. 单词级别注意力权重分布示意图</p><p>与预期的结果相同，在单次级别的注意力权重计算中，“service”，“not”，“good”占有比较大的权重，而在句子级别的注意力权重计算中，“but the service is not good”占有的权重则最大。</p></sec></sec><sec id="s7"><title>5. 结论</title><p>本文提出了一种用于细粒度情感分析的分层注意力机制网络，一方面加入实体信息作为嵌入信息，生成包含实体信息的句子表示，使模型能够在给定实体下更好地判定相应情感极性，另一方面采用分层注意力机制，在单词，句子两个层面分别加入注意力机制，使模型能赋予那些更重要的单词，句子更大</p><p>图6. 句子级别注意力权重分布示意图</p><p>的权重。实验结果表明新改进的HAT-LSTM比之前的模型取得了更好的效果。对注意力权重的可视化也说明了模型可以有效地挑选出那些更重要的单词和句子。</p></sec><sec id="s8"><title>文章引用</title><p>邵兴林,牛少彰. 基于分层注意力机制的细粒度情感分析Fine-Grained Sentiment Analysis Based on Hierarchical Attention Networks[J]. 计算机科学与应用, 2019, 09(11): 2143-2153. https://doi.org/10.12677/CSA.2019.911240</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.33141-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Nasukawa, T. and Yi, J. (2003) Sentiment Analysis: Capturing Favorability Using Natural Language Processing. In: Proceedings of the 2nd International Conference on Knowledge Capture, ACM, New York, 70-77.  
&lt;br&gt;https://doi.org/10.1145/945649.945658</mixed-citation></ref><ref id="hanspub.33141-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Lample, G., Ballesteros, M., Subramanian, S., Kawakami, K. and Dyer, C. (2016) Neural Architectures for Named Entity Recognition. Proceedings of the 2016 Conference of the North Ameri-can Chapter of the Association for Computational Linguistics: Human Language Technologies, San Diego, June 2016, 260-270.  
&lt;br&gt;https://doi.org/10.18653/v1/N16-1030</mixed-citation></ref><ref id="hanspub.33141-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Yin, W.P., Schutze, H., Xiang, B. and Zhou, B. (2015) ABCNN: At-tention-Based Convolutional Neural Network for Modeling Sentence Pairs.</mixed-citation></ref><ref id="hanspub.33141-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Golub, D. and He, X.D. (2016) Char-acter-Level Question Answering with Attention.</mixed-citation></ref><ref id="hanspub.33141-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Rush, A.M., Chopra, S. and Weston, J. (2015) A Neural Attention Model for Abstractive Sentence Summarization.</mixed-citation></ref><ref id="hanspub.33141-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Kim, Y. (2014) Convolutional Neural Networks for Sentence Classification. Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing, Doha, Oc-tober 2014, 1746-1751.  
&lt;br&gt;https://doi.org/10.3115/v1/D14-1181</mixed-citation></ref><ref id="hanspub.33141-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Tang, D., Qin, B. and Liu, T. (2015) Document Modeling with Gated Recurrent Neural Network for Sentiment Classification. Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, Lisbon, 17-21 September 2015, 1422-1432. &lt;br&gt;https://doi.org/10.18653/v1/D15-1167</mixed-citation></ref><ref id="hanspub.33141-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, X., Zhao, J.B. and Le Cun, Y. (2015) Character-Level Convo-lutional Networks for Text Classification.</mixed-citation></ref><ref id="hanspub.33141-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Tang, D., Wei, F., Yang, N., Zhou, M., Liu, T. and Qin, B. (2014) Learning Sentiment-Specific Word Embedding for Twitter Sentiment Classification. Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, Volume 1, 1555-1565. &lt;br&gt;https://doi.org/10.3115/v1/P14-1146</mixed-citation></ref><ref id="hanspub.33141-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Tang, D., Qin, B., Feng, X.C. and Liu, T. (2015) Target-Dependent Sen-timent Classification with Long Short Term Memory.</mixed-citation></ref><ref id="hanspub.33141-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Bahdanau, D., Cho, K. and Bengio, Y. (2014) Neural Ma-chine Translation by Jointly Learning to Align and Translate.</mixed-citation></ref><ref id="hanspub.33141-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Li, J.W., Luong, M.-T. and Jurafsky, D. (2015) A Hierarchical Neural Autoencoder for Paragraphs and Documents.</mixed-citation></ref><ref id="hanspub.33141-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Sukhbaatar, S., Szlam, A., Weston, J. and Fergus, R. (2015) End-to-End Memory Networks.</mixed-citation></ref><ref id="hanspub.33141-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Yang, Z.C., He, X.D., Gao, J.F., Deng, L. and Smola, A. (2015) Stacked Attention Networks for Image Question Answering. IEEE Conference on Computer Vision and Pattern Recog-nition, Las Vegas, 27-30 June 2016, 8-10.  
&lt;br&gt;https://doi.org/10.1109/CVPR.2016.10</mixed-citation></ref><ref id="hanspub.33141-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Rao, D. and Ravichandran, D. (2009) Semisupervised Polarity Lexi-con Induction. In: Proceedings of the 12th Conference of the European Chapter of the Association for Computational Linguistics, Association for Computational Linguistics, Stroudsburg, 675-682. &lt;br&gt;https://doi.org/10.3115/1609067.1609142</mixed-citation></ref><ref id="hanspub.33141-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Mohammad, S.M., Kiritchenko, S. and Zhu, X.D. (2013) NRC-Canada: Building the State-of-the-Art in Sentiment Analysis of Tweets.</mixed-citation></ref></ref-list></back></article>