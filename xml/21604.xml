<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2017.78084</article-id><article-id pub-id-type="publisher-id">CSA-21604</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20170800000_83940787.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  无线传感网多参数路由均衡机制研究
  A Competing Metric Balancing Mechanism for Routing in Wireless Sensor Network
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>罗</surname><given-names>恒</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>邹</surname><given-names>优敏</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>陆</surname><given-names>家欣</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郁</surname><given-names>志豪</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>苏州科技大学江苏省建筑智慧节能重点实验室，江苏 苏州;苏州科技大学苏州市移动网络技术与应用重点实验室，江苏 苏州</addr-line></aff><aff id="aff4"><addr-line>苏州科技大学苏州市移动网络技术与应用重点实验室，江苏 苏州</addr-line></aff><aff id="aff3"><addr-line>苏州科技大学苏州市移动网络技术与应用重点实验室，江苏 苏州 </addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>03</day><month>08</month><year>2017</year></pub-date><volume>07</volume><issue>08</issue><fpage>729</fpage><lpage>737</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   无线传感器网络能够实时监测覆盖区域内各种物理量的动态变化情况，在军事、环境监测等领域获得了广泛应用。由于无线链路的时变特性、网络结构的动态变化等因素，使得无线传感网的路由设计一直是研究的热点和难点。当前的路由算法主要是基于单目标的性能优化，算法性能随着应用的差异产生很大的不同。针对多参数系统在实际情况中的应用需求，以传包率、时延、抖动、吞吐量、能耗等为衡量指标，结合模糊理论，提出一种基于GRC的多参数均衡的路由机制。实验结果表明，基于GRC的方法可以有效选择最优化算法，依据评估结果动态选择最优化算法，在中等流量情况下，系统能够获得32%的整体性能增益。方法实现了算法性能的定量分析、性能排序，结果可以为无线传感网性能评估提供一定的理论依据，也可以为算法优化提供方向。 Wireless Sensor Network (WSN) is capable of measuring parameters within its coverage area. It gains wide applications in the areas such as military fields, environment monitoring for the sake of safety, efficiency as well as on-time nature. Nevertheless, factors such as time dependent nature of wireless links, dynamic topology make it different for proliferation of wireless sensor network. Routing is a key but the most difficult part in the design as well as optimization of wireless sensor networks. Specific speaking, routing in WSN is designed to improve one or at most two performance metrics, leading to its performance deterioration when the application fields change. An adaptive routing mechanism based on GRC, with five metrics considered, is proposed, targeting at multiple parameters such as packet delivery ratio, delay, jitter, throughput and energy cost evaluation, in this paper to rank the alternative protocols and thus rank them accordingly using fuzzy logics. Competing metrics are balanced and therefore our method is able to obtain the optimal routing algorithm. Simulation results show that a 32% gain may be achieved by using the proposed method in terms of middle traffic flow. Our method is able to provide a quantitative method for performance evaluation for wireless sensor network. It also aims at providing benchmark for algorithm optimization. 
   
  
 
</p></abstract><kwd-group><kwd>无线传感网，多参数均衡，路由机制，模糊逻辑, Wireless Sensor Network</kwd><kwd> Multi-Parameter Balancing</kwd><kwd> Routing</kwd><kwd> Fuzzy Logics</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>无线传感网多参数路由均衡机制研究<sup> </sup></title><p>罗恒<sup>1,2</sup>，邹优敏<sup>2</sup>，陆家欣<sup>2</sup>，郁志豪<sup>2</sup></p><p><sup>1</sup>苏州科技大学江苏省建筑智慧节能重点实验室，江苏 苏州</p><p><sup>2</sup>苏州科技大学苏州市移动网络技术与应用重点实验室，江苏 苏州</p><p>收稿日期：2017年7月18日；录用日期：2017年8月4日；发布日期：2017年8月7日</p><disp-formula id="hanspub.21604-formula47"><graphic xlink:href="http://html.hanspub.org/file/3-1540819x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>无线传感器网络能够实时监测覆盖区域内各种物理量的动态变化情况，在军事、环境监测等领域获得了广泛应用。由于无线链路的时变特性、网络结构的动态变化等因素，使得无线传感网的路由设计一直是研究的热点和难点。当前的路由算法主要是基于单目标的性能优化，算法性能随着应用的差异产生很大的不同。针对多参数系统在实际情况中的应用需求，以传包率、时延、抖动、吞吐量、能耗等为衡量指标，结合模糊理论，提出一种基于GRC的多参数均衡的路由机制。实验结果表明，基于GRC的方法可以有效选择最优化算法，依据评估结果动态选择最优化算法，在中等流量情况下，系统能够获得32%的整体性能增益。方法实现了算法性能的定量分析、性能排序，结果可以为无线传感网性能评估提供一定的理论依据，也可以为算法优化提供方向。</p><p>关键词 :无线传感网，多参数均衡，路由机制，模糊逻辑</p><disp-formula id="hanspub.21604-formula48"><graphic xlink:href="http://html.hanspub.org/file/3-1540819x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2017 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="http://image.hanspub.org:8080\Html/htmlimages\1-2890033x\e70a10f1-7c93-45ea-9603-062237856e4b.png" /><img src="http://image.hanspub.org:8080\Html\htmlimages\1-2890033x\e898c85e-ffc4-45c9-b817-14224a4d6960.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>无线自组网是由一组带有无线收发装置的移动节点组成的自治系统。除作为终端节点外，网络中的每个节点还充当中继的角色。无需基础设施支持的特性令无线自组网在军事、应急救援、移动会议等领域有着广泛的应用前景。自组网的研究始于上世纪70年代，兴盛于本世纪初。IETF专门成立了IP协议工作小组，着力研究路由协议，用以应对无线链路的不稳定性、拓扑结构时变性等导致的自组网性能下降问题。</p><p>虽然研究人员提出了诸如DSDV [<xref ref-type="bibr" rid="hanspub.21604-ref1">1</xref>] , DSR [<xref ref-type="bibr" rid="hanspub.21604-ref2">2</xref>] , AODV [<xref ref-type="bibr" rid="hanspub.21604-ref3">3</xref>] and OLSR [<xref ref-type="bibr" rid="hanspub.21604-ref4">4</xref>] 等路由协议，但是如表1所示，这些算法的性能因为边界条件的改变而产生差异。产生这一现象的根本原因在于，当前算法的设计都是基于单一目标的(如改善时延等)。</p><p>本文从多目标角度提出一种自组网环境下的自适应算法，根据应用要求，动态选择路由协议，达到路由最优化的目的。</p></sec><sec id="s4"><title>2. 自适应算法模型</title><p>自适应算法如图1所示。具体流程如下：①通过分析应用要求，确定算法需要达到的多目标(即性能指标)；②根据应用条件，使用两两比较的方法确定指标间的相互重要性，计算指标权重；③使用基于GRC的评估模型，对算法性能进行排序；④依据排序，实现路由算法自适应选择。</p></sec><sec id="s5"><title>3. 算法实现</title><p>主要通过系统仿真的研究方法研究自适应算法的性能，使用开源的仿真软件NS-2 [<xref ref-type="bibr" rid="hanspub.21604-ref8">8</xref>] 作为主要仿真工具。以DSDV和DSR为例，描述自适应算法。DSDV是一种主动式路由，不管是否有节点间的数据传</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Routing performance compariso</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >协议</th><th align="center" valign="middle" >指标</th><th align="center" valign="middle" >性能表现</th><th align="center" valign="middle" >应用条件</th></tr></thead><tr><td align="center" valign="middle"  rowspan="4"  >AODV DSR DSDV [<xref ref-type="bibr" rid="hanspub.21604-ref5">5</xref>]</td><td align="center" valign="middle"  rowspan="2"  >传包 特性</td><td align="center" valign="middle" >AODV &gt; DSR &gt; DSDV</td><td align="center" valign="middle" >停留时间：0~200 s</td></tr><tr><td align="center" valign="middle" >DSDV &lt; AODV &lt; DSR</td><td align="center" valign="middle" >停留时间：25~80 s</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >时延</td><td align="center" valign="middle" >DSDV &lt; AODV &lt; DSR</td><td align="center" valign="middle" >停留时间：120~160 s</td></tr><tr><td align="center" valign="middle" >DSR = DSDV &lt; AODV</td><td align="center" valign="middle" >停留时间：160~200 s</td></tr><tr><td align="center" valign="middle"  rowspan="8"  >AODV DSR OLSR [<xref ref-type="bibr" rid="hanspub.21604-ref6">6</xref>]</td><td align="center" valign="middle"  rowspan="2"  >传包 特性</td><td align="center" valign="middle" >OLSR &gt; AODV &gt; DSR</td><td align="center" valign="middle" >移动速度：0~6 m/s</td></tr><tr><td align="center" valign="middle" >AODV &gt; DSR &gt; OLSR</td><td align="center" valign="middle" >移动速度：6~20 m/s</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >时延</td><td align="center" valign="middle" >AODV &gt; DSR &gt; OLSR</td><td align="center" valign="middle" >移动速度：0~6 m/s</td></tr><tr><td align="center" valign="middle" >DSR &gt; AODV &gt; OLSR</td><td align="center" valign="middle" >移动速度：6~20 m/s</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >传包 特性</td><td align="center" valign="middle" >AODV &gt; DSR &gt; OLSR</td><td align="center" valign="middle" >0~35组数据流</td></tr><tr><td align="center" valign="middle" >OLSR &gt; AODV &gt; DSR</td><td align="center" valign="middle" >35~100组数据流</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >时延</td><td align="center" valign="middle" >AODV &gt; DSR &gt; OLSR</td><td align="center" valign="middle" >8~15组数据流</td></tr><tr><td align="center" valign="middle" >DSR &gt; AODV &gt; OLSR</td><td align="center" valign="middle" >25~100组数据流</td></tr><tr><td align="center" valign="middle"  rowspan="2"  >AODV DSR, TORA DSDV [<xref ref-type="bibr" rid="hanspub.21604-ref7">7</xref>]</td><td align="center" valign="middle"  rowspan="2"  >传包 特性</td><td align="center" valign="middle" >DSR &gt; AODV &gt; TORA &gt; DSDV</td><td align="center" valign="middle" >停留时间：0~300 s</td></tr><tr><td align="center" valign="middle" >DSR &gt; AODV &gt; DSDV &gt; TORA</td><td align="center" valign="middle" >停留时间：300~1000 s</td></tr></tbody></table></table-wrap><p>表1. 路由算法性能比较</p><p>图1. 算法框架图</p><p>输需求，每个节点都会定期维护路由表。DSR是一种被动式路由，当信源节点有数据传输需求时，节点动态寻找路由。整体而言，DSDV在路由建立时间上优于DSR，但是DSDV存在路由维护负担大、路由过期等问题。</p><sec id="s5_1"><title>3.1. 仿真环境</title><p>仿真环境如图2所示，多个移动节点以自组织网络的形式，连接到接入点。表2列出了各仿真参数，每个仿真持续3000秒，避免初始化问题。使用不同的随机数产生器得到50组仿真结果，结果作数学平均，得到如表3所示的最终结果。</p><p>由表3可见，DSDV在传输时延、抖动和吞吐量方面性能较好，这与其主动式路由方法有关，DSR在丢包率和能耗方面性能更佳，因为DSR只对有数据传输需求的情况下，进行路由寻找，因此可以有效避免DSDV的路由过期和过度能耗问题。但是，从表3中无法具体得出特定条件下的最优算法。针对这种情况，拟使用GRC对算法性能进行量化，从而得到性能排序。</p><p>图2. 仿真场景</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Simulation parameter</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >参数</th><th align="center" valign="middle" >描述</th><th align="center" valign="middle" >参数</th><th align="center" valign="middle" >描述</th></tr></thead><tr><td align="center" valign="middle" >仿真时间</td><td align="center" valign="middle" >3000 s</td><td align="center" valign="middle" >传输控制协议</td><td align="center" valign="middle" >TCP</td></tr><tr><td align="center" valign="middle" >仿真次数</td><td align="center" valign="middle" >50</td><td align="center" valign="middle" >路由协议</td><td align="center" valign="middle" >DSDV and DSR</td></tr><tr><td align="center" valign="middle" >节点个数</td><td align="center" valign="middle" >32</td><td align="center" valign="middle" >MAC层协议</td><td align="center" valign="middle" >802.11</td></tr><tr><td align="center" valign="middle" >节点移动模型</td><td align="center" valign="middle" >Random Way Point model</td><td align="center" valign="middle" >衰落模型</td><td align="center" valign="middle" >瑞丽模型</td></tr><tr><td align="center" valign="middle" >节点移动速度</td><td align="center" valign="middle" >[0, 1.5] m/s均匀分布</td><td align="center" valign="middle" >流量</td><td align="center" valign="middle" >2对节点</td></tr><tr><td align="center" valign="middle" >传输距离</td><td align="center" valign="middle" >25 m</td><td align="center" valign="middle" >拓扑结构</td><td align="center" valign="middle" >100 m * 100 m</td></tr></tbody></table></table-wrap><p>表2. 仿真参数</p><table-wrap id="table3" ><label><xref ref-type="table" rid="table3">Table 3</xref></label><caption><title> Simulation result</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >性能指标</th><th align="center" valign="middle" >DSDV</th><th align="center" valign="middle" >DSR</th></tr></thead><tr><td align="center" valign="middle" >传包率 (%)</td><td align="center" valign="middle" >69.10</td><td align="center" valign="middle" >85.00</td></tr><tr><td align="center" valign="middle" >时延 (ms)</td><td align="center" valign="middle" >3.63</td><td align="center" valign="middle" >7.88</td></tr><tr><td align="center" valign="middle" >抖动 (ms)</td><td align="center" valign="middle" >4.01</td><td align="center" valign="middle" >13.90</td></tr><tr><td align="center" valign="middle" >吞吐量 (Mbps)</td><td align="center" valign="middle" >3.57</td><td align="center" valign="middle" >3.29</td></tr><tr><td align="center" valign="middle" >能耗 (J/pkt)</td><td align="center" valign="middle" >0.29</td><td align="center" valign="middle" >0.17</td></tr></tbody></table></table-wrap><p>表3. 仿真结果</p></sec><sec id="s5_2"><title>3.2. 自适应算法实现</title><sec id="s5_2_1"><title>3.2.1 . 确定性能指标</title><p>影响一个协议性能的因素很多，评价指标各异，本文以传包率、时延、抖动、吞吐量和能耗来综合衡量DSDV和DSR的性能。在确定性能指标后，建立如图3所示的层次结构。</p></sec><sec id="s5_2_2"><title>3.2.2 . 计算指标权重</title><p>根据图3的层次结构，基于表4所示的重要性标度，构造两两比较矩阵，计算指标权重。</p><p>图3. 层次结构图</p><table-wrap id="table4" ><label><xref ref-type="table" rid="table4">Table 4</xref></label><caption><title> The scal</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >尺度</th><th align="center" valign="middle" >含义</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >元素i与元素j同等重要</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >元素i比元素j稍重要</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >元素i比元素j重要</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >元素i比元素j非常重要</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >元素i比元素绝对重要</td></tr><tr><td align="center" valign="middle"  colspan="2"  >2, 4, 6, 8表示元素i比元素j的重要性介于上述两个相邻等级之间</td></tr></tbody></table></table-wrap><p>表4. 比较尺度</p><p>为了方便起见，不妨设①传包率比时延、抖动和能耗等三个指标都稍重要；②传包率和吞吐量同等重要；③时延和抖动、能耗等指标同等重要；④吞吐量比时延、抖动和能耗等指标都稍重要。则由表4可得两两比较矩阵。</p><disp-formula id="hanspub.21604-formula49"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/3-1540819x12_hanspub.png"  xlink:type="simple"/></disp-formula><p>由矩阵(1)获得指标权重的方法较多，其中的几何均值法是一种最常用、最有效的方法 [<xref ref-type="bibr" rid="hanspub.21604-ref9">9</xref>] 。通过</p><disp-formula id="hanspub.21604-formula50"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/3-1540819x13_hanspub.png"  xlink:type="simple"/></disp-formula><p>可获得如表5所示的归一化指标权重。</p></sec><sec id="s5_2_3"><title>3.2.3. 算法性能评估</title><p>首先确定各性能指标的属性。如表6所示，对于路由算法而言，希望能够最大限度地提高传包率和网络吞吐量，同时降低时延、抖动以及能耗。</p><p>由于性能指标的单位不同，需进行归一化处理。对于属性为“越大越好”的指标，归一化方法为</p><disp-formula id="hanspub.21604-formula51"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/3-1540819x14_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中S<sub>ij</sub>, d<sub>ij</sub>分布为算法的归一化和仿真值，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540819x15_hanspub.png" xlink:type="simple"/></inline-formula>,<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540819x16_hanspub.png" xlink:type="simple"/></inline-formula>。对于属性为“越小越好”的指标，归一化方法为</p><disp-formula id="hanspub.21604-formula52"><label>(4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/3-1540819x17_hanspub.png"  xlink:type="simple"/></disp-formula><p>根据表3中结果以及式(3)、(4)，可得表7所示的归一化结果。</p><p>性能评估的最后一步是计算灰度关联度系数</p><disp-formula id="hanspub.21604-formula53"><label>(5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/3-1540819x18_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中ω<sub>j</sub>为第j个性能指标的权重，s<sub>ij</sub>为每个方案的归一化系数，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/3-1540819x19_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>结合表5中的权重、表7中的归一化结果和式(5)，可得如表8所示的灰度关联度系数。由表可得，DSDV的灰度关联度系数高于DSR，因此DSDV的综合性能高于DSR。</p></sec><sec id="s5_2_4"><title>3.2.4. 算法自适应</title><p>根据表8中排序结果，系统自动选择DSDV作为路由算法。</p></sec></sec></sec><sec id="s6"><title>4. 算法性能验证</title><sec id="s6_1"><title>4.1. 验证方法</title><p>图4和表9所示分别为算法验证过程及验证的仿真结果。如表9中结果所示，当DSDV算法切换到DSR后，在传包率和能耗方面性能有所改善，而当DSR切换到DSDV后，算法在时延、吞吐量等方面性能有所提高。</p><table-wrap id="table5" ><label><xref ref-type="table" rid="table5">Table 5</xref></label><caption><title> The weight for criteri</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >性能指标</th><th align="center" valign="middle" >传包率</th><th align="center" valign="middle" >时延</th><th align="center" valign="middle" >抖动</th><th align="center" valign="middle" >吞吐量</th><th align="center" valign="middle" >能耗</th></tr></thead><tr><td align="center" valign="middle" >权重</td><td align="center" valign="middle" >0.333</td><td align="center" valign="middle" >0.111</td><td align="center" valign="middle" >0.111</td><td align="center" valign="middle" >0.333</td><td align="center" valign="middle" >0.111</td></tr></tbody></table></table-wrap><p>表5. 指标权重</p><table-wrap id="table6" ><label><xref ref-type="table" rid="table6">Table 6</xref></label><caption><title> The attribute of metric</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >属性</th><th align="center" valign="middle" >越大越好</th><th align="center" valign="middle" >越小越好</th></tr></thead><tr><td align="center" valign="middle" >性能指标名称</td><td align="center" valign="middle" >传包率，吞吐量</td><td align="center" valign="middle" >时延，抖动，能耗</td></tr></tbody></table></table-wrap><p>表6. 性能指标属性表</p><table-wrap id="table7" ><label><xref ref-type="table" rid="table7">Table 7</xref></label><caption><title> The normalization result</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >传包率</th><th align="center" valign="middle" >时延</th><th align="center" valign="middle" >抖动</th><th align="center" valign="middle" >吞吐量</th><th align="center" valign="middle" >能耗</th></tr></thead><tr><td align="center" valign="middle" >DSDV</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td></tr><tr><td align="center" valign="middle" >DSR</td><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >1</td></tr></tbody></table></table-wrap><p>表7. 归一化结果</p><table-wrap id="table8" ><label><xref ref-type="table" rid="table8">Table 8</xref></label><caption><title> Ranking result</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >GRC</th><th align="center" valign="middle" >排序</th></tr></thead><tr><td align="center" valign="middle" >DSDV</td><td align="center" valign="middle" >0.693</td><td align="center" valign="middle"  rowspan="2"  >① DSDV ② DSR</td></tr><tr><td align="center" valign="middle" >DSR</td><td align="center" valign="middle" >0.643</td></tr></tbody></table></table-wrap><p>表8. 排序结果</p><table-wrap id="table9" ><label><xref ref-type="table" rid="table9">Table 9</xref></label><caption><title> Simulation result</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >性能指标</th><th align="center" valign="middle" >Sim#1</th><th align="center" valign="middle" >Sim#2</th><th align="center" valign="middle" >Sim#3</th><th align="center" valign="middle" >Sim#4</th></tr></thead><tr><td align="center" valign="middle" >传包率 (%)</td><td align="center" valign="middle" >69.10</td><td align="center" valign="middle" >84.90</td><td align="center" valign="middle" >85.00</td><td align="center" valign="middle" >69.30</td></tr><tr><td align="center" valign="middle" >时延 (ms)</td><td align="center" valign="middle" >3.63</td><td align="center" valign="middle" >7.87</td><td align="center" valign="middle" >7.88</td><td align="center" valign="middle" >3.66</td></tr><tr><td align="center" valign="middle" >抖动 (ms)</td><td align="center" valign="middle" >4.01</td><td align="center" valign="middle" >13.90</td><td align="center" valign="middle" >13.90</td><td align="center" valign="middle" >4.02</td></tr><tr><td align="center" valign="middle" >吞吐量(Mbps)</td><td align="center" valign="middle" >3.57</td><td align="center" valign="middle" >3.29</td><td align="center" valign="middle" >3.29</td><td align="center" valign="middle" >3.56</td></tr><tr><td align="center" valign="middle" >能耗 (J/pkt)</td><td align="center" valign="middle" >0.29</td><td align="center" valign="middle" >0.17</td><td align="center" valign="middle" >0.17</td><td align="center" valign="middle" >0.29</td></tr></tbody></table></table-wrap><p>表9. 仿真结果</p><p>图4. 验证实验结构图</p></sec><sec id="s6_2"><title>4.2. 系统增益</title><p>定义PIR为某一特定指标下衡量算法切换的增益，对于属性为“越大越好”的指标</p><disp-formula id="hanspub.21604-formula54"><label>(6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/3-1540819x21_hanspub.png"  xlink:type="simple"/></disp-formula><p>对于属性为“越小越好”的指标</p><disp-formula id="hanspub.21604-formula55"><label>(7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/3-1540819x22_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中P<sub>ref</sub>和P<sub>target</sub>分别代表算法切换前、后系统性能。</p><p>对不同指标下的PIR进行综合，可以获得系统整体的增益</p><p>图5. 性能增益图</p><disp-formula id="hanspub.21604-formula56"><label>(8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/3-1540819x24_hanspub.png"  xlink:type="simple"/></disp-formula><p>当SIRI为正值时，表示切换后系统的性能有所提高，反之，则表明系统性能出现了恶化。</p><p>图5所示为根据式(8)计算得到的系统整体性能增益结果。如图所示，当系统从DSR切换到DSDV是，可以获得32%的系统增益，表明系统性能得到有效改善；反之，若由DSDV切换到DSR，系统整体性能将会下降。综上所述，DSDV的整体性能优于DSR。</p></sec></sec><sec id="s7"><title>5. 结束语</title><p>本文提出了一种基于GRC的无线自组织网络自适应算法。该算法综合考虑了各指标之间的相对重要性，能够在不同应用背景下，对路由算法作出自适应选择。当然，由于算法切换，会出现短时内丢包的现象，如何减少短时丢包是下一步研究的重点内容。</p></sec><sec id="s8"><title>基金项目</title><p>本论文得到国家自然科学基金项目(61602334, 61502329, 61401297)；住房与城乡建设部科学技术项目(2015-K1-047)；江苏省自然科学基金项目(BK20140283)资助。</p></sec><sec id="s9"><title>文章引用</title><p>罗 恒,邹优敏,陆家欣,郁志豪. 无线传感网多参数路由均衡机制研究A Competing Metric Balancing Mechanism for Routing in Wireless Sensor Network[J]. 计算机科学与应用, 2017, 07(08): 729-737. http://dx.doi.org/10.12677/CSA.2017.78084</p></sec><sec id="s10"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.21604-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Perkins, C.E. and Bhagwat, P. (1994) Highly Dynamic Destination-Sequenced Distance-Vector Routing (DSDV) for Mobile Computers. ACM SIGCOMM Computer Communication Review. ACM, 24, 234-244.</mixed-citation></ref><ref id="hanspub.21604-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Johnson, D.B., Maltz, D.A. and Broch, J. (2001) DSR: The Dynamic Source Routing Protocol for Multi-Hop Wireless ad Hoc Networks. Ad Hoc Networking, 5, 139-172.</mixed-citation></ref><ref id="hanspub.21604-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Perkins, C., Belding-Royer, E. and Das, S. (2003) Request for Comments: Ad Hoc On-Demand Distance Vector (AODV) Routing. Experimental Internet Society, 6, 90-98.</mixed-citation></ref><ref id="hanspub.21604-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Cho, T.K. and Lee, J.H. (2011) The Study on the OLSR (Optimized Link State Routing Protocol) Implementation in the Mobile Ad-hoc Network. International Journal of Bifurcation &amp; Chao, 60, 67-80.</mixed-citation></ref><ref id="hanspub.21604-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Lego, K.P., et al. (2010) Comparative Study of Ad Hoc Routing Protocol AODV, DSR and DSDV in Mobile Ad Hoc Network. Indian Journal of Computer Science and Engineering, 1, 364-371.</mixed-citation></ref><ref id="hanspub.21604-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Lawrence, E.E. and Latha, D.R. (2014) A Comparative Study of Routing Protocols for Mobile Ad-Hoc Networks. International Journal of Computer Science &amp; Mobile Computing, 3, 46-53.</mixed-citation></ref><ref id="hanspub.21604-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Broch, J., Maltz, D.A., Johnson, D.B., et al. (1998) A Performance Comparison of Multi-Hop Wireless Ad Hoc Network Routing Protocols. Proceedings of the 4th Annual ACM/IEEE International Conference on Mobile Computing and Networking. ACM, 85-97.</mixed-citation></ref><ref id="hanspub.21604-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">The Network Simulator: ns-2. &lt;br&gt;http://www.isi.edu/nsnam/ns/</mixed-citation></ref><ref id="hanspub.21604-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Xu, Z. (2000) On Consistency of the Weighted Geometric Mean Complex Judgement Matrix in AHP. European Journal of Operational Research, 126, 683-687. &lt;br&gt;https://doi.org/10.1016/S0377-2217(99)00082-X</mixed-citation></ref></ref-list></back></article>