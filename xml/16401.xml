<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2015.511050</article-id><article-id pub-id-type="publisher-id">CSA-16401</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20151100000_81049088.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  几何迭代方法计算空间两圆之间的最近距离
  The Geometric Iteration Method for Computing the Minimum Distance between Two Spatial Circles
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>小武</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>吴</surname><given-names>志男</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>林</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>明生</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>宜春学院，数学与计算机科学学院，江西 宜春</addr-line></aff><aff id="aff1"><addr-line>贵州民族大学信息工程学院，贵州 贵阳</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>lixiaowu002@126.com(李小)</email>;<email>wanglin@gzmu.edu.cn(王林)</email>;<email>zhangmscomputer@163.com(张明)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>24</day><month>11</month><year>2015</year></pub-date><volume>05</volume><issue>11</issue><fpage>394</fpage><lpage>402</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  空间两圆之间的最近距离计算是计算机图形学、计算机辅助设计、计算机辅助几何设计等领域进行碰撞检测和相交计算问题的基础。本文对任意位置关系的空间两圆的最近距离进行了完整分析与讨论。空间两圆的中心轴不平行时，提出了基于几何迭代方法的空间两圆最近距离的求解算法，当空间两圆中心轴有交点时，本文给出了间两圆最近距离的两对对应点；当空间两圆的中心轴平行或重合时，本文给出两圆最近距离的解析表达式。最后通过若干例子显示本文方法的稳定性和有效性。
   Computing the minimum distance between two spatial circles is the base of collision detection and intersection in the fields of computer graphics, computer-aided design and computer-aided geo-metric design. This paper has completely analyzed and discussed the minimum distance problem between two spatial circles for their spatial position relationships. If the two central axes of two spatial circles are not paralleled, we have presented the algorithm for computing the minimum distance between two spatial circles based on the geometric iterative method. Besides, if two cen-tral axes of two spatial circles have an intersection, we also have presented two pairs of corres-ponding points of the minimum distance for two spatial circles based on the geometric iterative method; if two central axes of two spatial circles are paralleled or coincident, we have directly provided the analytical expressions for computing the minimum distance between two spatial cir-cles. Numerical examples illustrate that the algorithms are efficient and robust.
 
</p></abstract><kwd-group><kwd>空间两圆，最近距离，几何迭代方法，中心轴, Two Spatial Circles</kwd><kwd> The Minimum Distance</kwd><kwd> Geometric Iteration Method</kwd><kwd> Central Axis</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>几何迭代方法计算空间两圆之间的最近距离<sup> </sup></title><p>李小武<sup>1</sup>，吴志男<sup>2</sup>，王林<sup>1</sup>，张明生<sup>1</sup></p><p><sup>1</sup>贵州民族大学信息工程学院，贵州 贵阳</p><p><sup>2</sup>宜春学院，数学与计算机科学学院，江西 宜春</p><disp-formula id="hanspub.16401-formula187"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2015年11月1日；录用日期：2015年11月18日；发布日期：2015年11月24日</p><disp-formula id="hanspub.16401-formula188"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x7_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>空间两圆之间的最近距离计算是计算机图形学、计算机辅助设计、计算机辅助几何设计等领域进行碰撞检测和相交计算问题的基础。本文对任意位置关系的空间两圆的最近距离进行了完整分析与讨论。空间两圆的中心轴不平行时，提出了基于几何迭代方法的空间两圆最近距离的求解算法，当空间两圆中心轴有交点时，本文给出了间两圆最近距离的两对对应点；当空间两圆的中心轴平行或重合时，本文给出两圆最近距离的解析表达式。最后通过若干例子显示本文方法的稳定性和有效性。</p><p>关键词 :空间两圆，最近距离，几何迭代方法，中心轴</p><disp-formula id="hanspub.16401-formula189"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x8_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>空间物体之间的最近距离计算是计算机图形学、计算机辅助设计、计算机辅助制造、计算机辅助几何设计、机器人、数控加工等领域中的重要话题。空间两物体之间的最近距离不仅是机辅助设计/计算机辅助制造中的碰撞检测必要环节之一，同时也是计算机图形学中的碰撞检测中的重要环节[<xref ref-type="bibr" rid="hanspub.16401-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.16401-ref2">2</xref>] 。对于多面体之间最近距离的研究有[<xref ref-type="bibr" rid="hanspub.16401-ref2">2</xref>] -[<xref ref-type="bibr" rid="hanspub.16401-ref5">5</xref>] ，关于空间两曲面最近距离的研究有[<xref ref-type="bibr" rid="hanspub.16401-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.16401-ref6">6</xref>] 小雕等[<xref ref-type="bibr" rid="hanspub.16401-ref7">7</xref>] 给出了基于点圆最近距离计算的圆环面/球面求交算法。该算法直接判断处理无交、相切于一点、交于一个圆以及交于两个圆等简单情况；对于其他情况，通过求解一元四次关键方程得到相应的关键值，对大圆参数区间进行划分，然后通过简单的符号判断来确定相交的参数子区间，并直接给出交曲线段的参数表达式。文献[<xref ref-type="bibr" rid="hanspub.16401-ref8">8</xref>] 把圆环面之间的最近距离问题转换成三维空间中两圆的最小距离问题，并用群论的方法证明了这个问题没有闭式解，需要求解一个一元八次方程，但文献没有给出具体求解过程。刘晓明等[<xref ref-type="bibr" rid="hanspub.16401-ref9">9</xref>] 指出文献[<xref ref-type="bibr" rid="hanspub.16401-ref8">8</xref>] 的各种位置关系判断并不是完全的。文献[<xref ref-type="bibr" rid="hanspub.16401-ref10">10</xref>] 用迭代方法求解空间两圆的最近距离问题，首先在空间任意取一点，直接计算该点至第一圆的最近距离的坐标点，然后再由该坐标点直接计算第二圆的最近距离的坐标点，在反复迭代直至求出空间两圆的最近距离。该算法虽然能求出两圆全局的最近距离，但该算法没有给出空间两圆最近距离的两对对应点。文献[<xref ref-type="bibr" rid="hanspub.16401-ref11">11</xref>] 也设计了一个迭代算法求出两个空间椭圆的最近距离问题。文献[<xref ref-type="bibr" rid="hanspub.16401-ref10">10</xref>] [<xref ref-type="bibr" rid="hanspub.16401-ref11">11</xref>] 相同之处在于都采用了迭代思想来逼近两圆或两椭圆的最近距离，都没有分析讨论最近距离的两对对应点以及中心轴平行和重合的特殊位置情况。文献[<xref ref-type="bibr" rid="hanspub.16401-ref12">12</xref>] 以几何方法为基础，通过判断圆环中心圆之间的位置关系来判定相交区域，并运用数值分析方法精确计算出每条交线的初始点，然后用跟踪法求出交线。文献[<xref ref-type="bibr" rid="hanspub.16401-ref9">9</xref>] 证明了空间两圆Hausdorff 距离总可以表示为它们的一对共线法向点的距离，给出了计算空间两圆的共线法向点的详细过程，并对这些共线法向点进行筛选，求出了空间两圆的最近距离和Hausdorff 距离。文献[<xref ref-type="bibr" rid="hanspub.16401-ref9">9</xref>] 还给出了两圆环包含、分离和相交时的充要条件，解决了两圆环面之间的最近距离计算问题，从理论上对两圆环的位置关系给出了严格的判别方法，但具体的实现却依赖于用数值方法求解八次方程。最近关于空间曲线最近距离的研究有[<xref ref-type="bibr" rid="hanspub.16401-ref13">13</xref>] -[<xref ref-type="bibr" rid="hanspub.16401-ref19">19</xref>] 。</p><p>本文利用几何迭代方法完整地研究了空间两圆任意位置关系的最近距离的算法。当空间两圆中心轴不平行时，对任意初始迭代点，求出该点至第一圆的最近距离的正交投射点，由正交投射点经过逆坐标变换和坐标变换正交投射至第二圆得到第二圆的正交投射点，然后再把该点作为初始迭代点重复上述步骤反复迭代，直至求出空间两圆的最近距离。当空间两圆的中心轴有公共点时，还可以求出空间两圆最近距离的另外一对对应的点；当空间两圆的中心轴平行，文章给出了简化版的两圆最近距离的迭代算法，当第二圆的正交投射至第一圆所在平面时，与第一圆有交点时，我们还给出了另外一对两圆最近距离的对应点。此外，文章还为两圆的中心轴平行或重合情况给出了求解最近距离的表达式。上述实例显示本文算法是有效和鲁棒的。</p></sec><sec id="s4"><title>2. 算法分析与实现及实例</title><sec id="s4_1"><title>2.1. 两中心轴一般位置(不平行)的几何迭代算法</title><p>第一个圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x9_hanspub.png" xlink:type="simple"/></inline-formula>和第二原始位置圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x10_hanspub.png" xlink:type="simple"/></inline-formula>为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x11_hanspub.png" xlink:type="simple"/></inline-formula>，圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x12_hanspub.png" xlink:type="simple"/></inline-formula>经过坐标变换得到圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x13_hanspub.png" xlink:type="simple"/></inline-formula>，其中圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x14_hanspub.png" xlink:type="simple"/></inline-formula>的中心轴的向量和圆心点分别为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x15_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x16_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>目标是求圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x17_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x18_hanspub.png" xlink:type="simple"/></inline-formula>的最近距离，空间两圆最近距离的基本思路为：</p><p>I) 正交投射空间任意点至第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x19_hanspub.png" xlink:type="simple"/></inline-formula>得到对应的正交投射点；</p><p>II) 正交投射第一圆上的正交投射点至第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x20_hanspub.png" xlink:type="simple"/></inline-formula>得到对应的正交投射点；</p><p>III) 反复进行上述两步直至求出第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x21_hanspub.png" xlink:type="simple"/></inline-formula>与第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x22_hanspub.png" xlink:type="simple"/></inline-formula>之间最近距离。</p><p>下面按照三步步骤思路具体实现空间两圆最近距离的相关算法。</p><p>由于圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x23_hanspub.png" xlink:type="simple"/></inline-formula>的中心轴的向量和圆心点分别是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x24_hanspub.png" xlink:type="simple"/></inline-formula> (<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x25_hanspub.png" xlink:type="simple"/></inline-formula>)和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x26_hanspub.png" xlink:type="simple"/></inline-formula>。故圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x27_hanspub.png" xlink:type="simple"/></inline-formula>转换为圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x28_hanspub.png" xlink:type="simple"/></inline-formula>的坐标变换过程为</p><disp-formula id="hanspub.16401-formula190"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-1540522x29_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x30_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>由坐标变换(1)，可知对应的逆坐标变换</p><disp-formula id="hanspub.16401-formula191"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/2-1540522x31_hanspub.png"  xlink:type="simple"/></disp-formula><p>由坐标变换(1)和逆坐标变换(2)，给出计算空间两圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x32_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x33_hanspub.png" xlink:type="simple"/></inline-formula>之间最近距离的算法。</p><p>算法1：</p><p>Step 1：正交投射第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x34_hanspub.png" xlink:type="simple"/></inline-formula>上任意点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x35_hanspub.png" xlink:type="simple"/></inline-formula>或第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x36_hanspub.png" xlink:type="simple"/></inline-formula>圆心<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x37_hanspub.png" xlink:type="simple"/></inline-formula>至第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x38_hanspub.png" xlink:type="simple"/></inline-formula>，得到对应</p><p>的正交投射点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x39_hanspub.png" xlink:type="simple"/></inline-formula></p><p>Step 2：利用逆坐标变换公式(2)，对第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x40_hanspub.png" xlink:type="simple"/></inline-formula>上的正交投射点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x41_hanspub.png" xlink:type="simple"/></inline-formula>进行逆坐标变换(2)得到点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x42_hanspub.png" xlink:type="simple"/></inline-formula>，其中</p><disp-formula id="hanspub.16401-formula192"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x43_hanspub.png"  xlink:type="simple"/></disp-formula><p>Step 3：计算点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x44_hanspub.png" xlink:type="simple"/></inline-formula>正交投射至第二原始位置的圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x45_hanspub.png" xlink:type="simple"/></inline-formula>的正交投射点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x46_hanspub.png" xlink:type="simple"/></inline-formula></p><p>Step 4：正交投射点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x47_hanspub.png" xlink:type="simple"/></inline-formula>经过坐标变换(1)得到并记作点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x48_hanspub.png" xlink:type="simple"/></inline-formula></p><p>Step 5：令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x49_hanspub.png" xlink:type="simple"/></inline-formula>，反复重复上述四步，直至第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x50_hanspub.png" xlink:type="simple"/></inline-formula>上的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x51_hanspub.png" xlink:type="simple"/></inline-formula>与第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x52_hanspub.png" xlink:type="simple"/></inline-formula>上的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x53_hanspub.png" xlink:type="simple"/></inline-formula>之间距离最短，即圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x54_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x55_hanspub.png" xlink:type="simple"/></inline-formula>之间最短距离为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x56_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>当两圆中心轴有公共点时，这时两圆的最近距离有两对对应点，投射第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x57_hanspub.png" xlink:type="simple"/></inline-formula>的中心轴<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x58_hanspub.png" xlink:type="simple"/></inline-formula>至第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x59_hanspub.png" xlink:type="simple"/></inline-formula>得到直线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x60_hanspub.png" xlink:type="simple"/></inline-formula>。点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x61_hanspub.png" xlink:type="simple"/></inline-formula>关于直线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x62_hanspub.png" xlink:type="simple"/></inline-formula>的对称点为：</p><disp-formula id="hanspub.16401-formula193"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x63_hanspub.png"  xlink:type="simple"/></disp-formula><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x64_hanspub.png" xlink:type="simple"/></inline-formula>作为算法1的初始迭代点，</p><p>重复上述五步直至求出两圆的另外一对最近距离的对应点。空间两圆中心轴一般位置和垂直的示意图见图1和图2。</p><p>图1. 空间两圆中心轴一般位置的示意图</p><p>图2. 空间两圆中心轴垂直的示意图</p><p>注释1：当空间两圆两中心轴互相垂直且有公共点，圆心点在z-轴上的特殊位置时，给出了具体的解析分析表达式。这时第一圆和第二原始位置的圆分别为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x67_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x68_hanspub.png" xlink:type="simple"/></inline-formula>，经过坐标变换(1)后变成第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x69_hanspub.png" xlink:type="simple"/></inline-formula>，其中，中心轴的向量和圆心点分别为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x70_hanspub.png" xlink:type="simple"/></inline-formula> (不失一般性假定<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x71_hanspub.png" xlink:type="simple"/></inline-formula>)和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x72_hanspub.png" xlink:type="simple"/></inline-formula>。不难知道这时第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x73_hanspub.png" xlink:type="simple"/></inline-formula>的上点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x74_hanspub.png" xlink:type="simple"/></inline-formula>是第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x75_hanspub.png" xlink:type="simple"/></inline-formula>上<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x76_hanspub.png" xlink:type="simple"/></inline-formula>的正交投射点，同理第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x77_hanspub.png" xlink:type="simple"/></inline-formula>的上点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x78_hanspub.png" xlink:type="simple"/></inline-formula>是第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x79_hanspub.png" xlink:type="simple"/></inline-formula>上<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x80_hanspub.png" xlink:type="simple"/></inline-formula>的正交投射点，所以两圆的最近距离为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x81_hanspub.png" xlink:type="simple"/></inline-formula>。另外，第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x82_hanspub.png" xlink:type="simple"/></inline-formula>的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x83_hanspub.png" xlink:type="simple"/></inline-formula>至第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x84_hanspub.png" xlink:type="simple"/></inline-formula>的正交投射点集就是第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x85_hanspub.png" xlink:type="simple"/></inline-formula>本身，则最近距离为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x86_hanspub.png" xlink:type="simple"/></inline-formula>。由于<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x87_hanspub.png" xlink:type="simple"/></inline-formula>，所以这时两圆的最近距离为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x88_hanspub.png" xlink:type="simple"/></inline-formula>。更特别的，当第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x89_hanspub.png" xlink:type="simple"/></inline-formula>的圆心点与第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x90_hanspub.png" xlink:type="simple"/></inline-formula>圆心点重合时，这时两圆的最近距离变为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x91_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>注释2：文献[<xref ref-type="bibr" rid="hanspub.16401-ref10">10</xref>] 给出了Kurush-Kuhn-Tucker优化条件，并给出了在优化条件下非线性Kurush-Kuhn- Tucker系统的封闭式解。对于两圆盘在同一中心轴上和在同一水平面上，没有给出这两种特殊位置的解。文献[<xref ref-type="bibr" rid="hanspub.16401-ref11">11</xref>] 首先给出了点至空间椭圆最近距离的一元四次方程准确解，然后利用迭代方法在第一椭圆上任选一点求出至第二空间椭圆最近距离及对应点，再由对应点求出至第一椭圆最近距离及对应点，反复迭代直至求出两椭圆最近距离及对应点。当空间两椭圆最近距离两对对应点时没有给出对应分析和讨论。另外对空间两椭圆中心轴是同一轴时最近距离有无数对应点没有给出分析；当两椭圆是在同一平面时，也没有给出对应分析和讨论。我们不仅给出了空间两圆在任意位置的迭代方法最近距离及对应点，还分析和讨论了空间两圆最近距离有两对对应点位置分析结论。此外，我们还对两圆在同一平面位置给出了完整的分析，也就是说，我们给出了空间两圆在空间任意位置的所有情况讨论。</p></sec><sec id="s4_2"><title>2.2. 两中心轴平行的几何迭代算法</title><p>两中心轴平行，此时两圆的表达式可分别表示为第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x92_hanspub.png" xlink:type="simple"/></inline-formula>和第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x93_hanspub.png" xlink:type="simple"/></inline-formula>，其中，中心轴为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x94_hanspub.png" xlink:type="simple"/></inline-formula>，圆心点为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x95_hanspub.png" xlink:type="simple"/></inline-formula>。若用算法1计算两圆的最近距离，发现坐标变换(1)和逆坐标变换(2)已失效，为此提出相应的两圆最近距离的算法2：</p><p>算法2：</p><p>Step 1：正交投射空间任意点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x96_hanspub.png" xlink:type="simple"/></inline-formula>至第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x97_hanspub.png" xlink:type="simple"/></inline-formula>得到对应的正交投射点</p><disp-formula id="hanspub.16401-formula194"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x98_hanspub.png"  xlink:type="simple"/></disp-formula><p>Step 2：计算点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x99_hanspub.png" xlink:type="simple"/></inline-formula>正交投射至第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x100_hanspub.png" xlink:type="simple"/></inline-formula>的正交投射点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x101_hanspub.png" xlink:type="simple"/></inline-formula>，其中</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x102_hanspub.png" xlink:type="simple"/></inline-formula>，此时<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x103_hanspub.png" xlink:type="simple"/></inline-formula></p><p>Step 3：令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x104_hanspub.png" xlink:type="simple"/></inline-formula>，反复重复上述两步，直至第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x105_hanspub.png" xlink:type="simple"/></inline-formula>上的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x106_hanspub.png" xlink:type="simple"/></inline-formula>与第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x107_hanspub.png" xlink:type="simple"/></inline-formula>上的点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x108_hanspub.png" xlink:type="simple"/></inline-formula>之间距离最短，即圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x109_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x110_hanspub.png" xlink:type="simple"/></inline-formula>之间最短距离为</p><disp-formula id="hanspub.16401-formula195"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x111_hanspub.png"  xlink:type="simple"/></disp-formula><p>当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x112_hanspub.png" xlink:type="simple"/></inline-formula>时，两圆的最近距离有两对对应点，投射第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x113_hanspub.png" xlink:type="simple"/></inline-formula>的中心点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x114_hanspub.png" xlink:type="simple"/></inline-formula>至第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x115_hanspub.png" xlink:type="simple"/></inline-formula>平面得到点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x116_hanspub.png" xlink:type="simple"/></inline-formula>，连接两点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x117_hanspub.png" xlink:type="simple"/></inline-formula>和点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x118_hanspub.png" xlink:type="simple"/></inline-formula>得到直线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x119_hanspub.png" xlink:type="simple"/></inline-formula>。点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x120_hanspub.png" xlink:type="simple"/></inline-formula>关于直线<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x121_hanspub.png" xlink:type="simple"/></inline-formula>的对称点为</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x122_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x123_hanspub.png" xlink:type="simple"/></inline-formula>作为算法2的初始迭代点，重复上述三步直至求出两圆的另外一对最近距离的对应点。</p></sec><sec id="s4_3"><title>2.3. 中心轴平行的空间两圆最近距离解析表达式</title><p>第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x124_hanspub.png" xlink:type="simple"/></inline-formula>和第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x125_hanspub.png" xlink:type="simple"/></inline-formula>，其中第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x126_hanspub.png" xlink:type="simple"/></inline-formula>中心轴为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x127_hanspub.png" xlink:type="simple"/></inline-formula>，圆心点为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x128_hanspub.png" xlink:type="simple"/></inline-formula>。空间两圆中心轴平行的示意图见图3。</p><p>分下列几种情况具体分析</p><p>1) 若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x129_hanspub.png" xlink:type="simple"/></inline-formula>，则空间两圆最近距离的对应点分别为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x130_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x131_hanspub.png" xlink:type="simple"/></inline-formula>，其最近距离为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x132_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>2) 若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x133_hanspub.png" xlink:type="simple"/></inline-formula>，则对对应点为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x134_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x135_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x136_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x137_hanspub.png" xlink:type="simple"/></inline-formula>，其距离为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x138_hanspub.png" xlink:type="simple"/></inline-formula>，其中</p><disp-formula id="hanspub.16401-formula196"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x139_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16401-formula197"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x140_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16401-formula198"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x141_hanspub.png"  xlink:type="simple"/></disp-formula><disp-formula id="hanspub.16401-formula199"><graphic xlink:href="http://html.hanspub.org/file/2-1540522x142_hanspub.png"  xlink:type="simple"/></disp-formula><p>图3. 空间两圆中心轴平行的实例</p><p>3) 若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x144_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p>当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x145_hanspub.png" xlink:type="simple"/></inline-formula>，两圆最近距离的对应点为</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x146_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x147_hanspub.png" xlink:type="simple"/></inline-formula></p><p>其距离为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x148_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x149_hanspub.png" xlink:type="simple"/></inline-formula>，两圆最近距离的对应点为</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x150_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x151_hanspub.png" xlink:type="simple"/></inline-formula></p><p>其距离为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x152_hanspub.png" xlink:type="simple"/></inline-formula></p></sec><sec id="s4_4"><title>2.4. 中心轴重合的空间两圆最近距离解析表达式</title><p>这时第一圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x153_hanspub.png" xlink:type="simple"/></inline-formula>，第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x154_hanspub.png" xlink:type="simple"/></inline-formula>。两圆最近距离对应点集为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x155_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x156_hanspub.png" xlink:type="simple"/></inline-formula>，两个式子的参数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x157_hanspub.png" xlink:type="simple"/></inline-formula>必须同时取同一值，所以两圆的最近距离为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x158_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>例1：空间两圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x159_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x160_hanspub.png" xlink:type="simple"/></inline-formula>的半径分别为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x161_hanspub.png" xlink:type="simple"/></inline-formula>，第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x162_hanspub.png" xlink:type="simple"/></inline-formula>的中心轴的向量和圆心分别为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x163_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x164_hanspub.png" xlink:type="simple"/></inline-formula>，由算法1可知，两圆最近距离对应点分别为(2.2566117602763080,5.5594697016336607,0)和(5.5251451389773982, 13.600640848138522,5.4491555845201255)。最近距离为10.24875800。 此例是针对算法1中的空间两圆中心轴没有公共点时两圆最近距离只有唯一一对对应点的解释。</p><p>例2：空间两圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x165_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x166_hanspub.png" xlink:type="simple"/></inline-formula>的半径分别为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x167_hanspub.png" xlink:type="simple"/></inline-formula>，第二圆<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x168_hanspub.png" xlink:type="simple"/></inline-formula>的中心轴的向量和圆心分别为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x169_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/2-1540522x170_hanspub.png" xlink:type="simple"/></inline-formula>，由算法1可知，两圆最近距离第一对对应点分别为(−9.7379538193036241, −2.2742593108768315,0)和(−7.9338517047101518, −1.8529186362318786, 0.7410600411832663)，另外一对对应点分别为(−0.0811899 52715625401, −9.9996704041472304,0)和(−0.0661482952898482, −8.1470813637681214, 0.7410600411832664)，最近距离为1.995365226。此例是针对算法1中的空间两圆中心轴有公共点时两圆最近距离有两对对应点的说明。</p></sec></sec><sec id="s5"><title>3. 总结与展望</title><p>本文完全地给出了空间两圆任意位置的最近距离的迭代算法和解析表达式，当空间两圆中心轴不平行，利用几何迭代法提出了空间两圆最近距离的算法；当空间两圆中心轴平行时，提出了简化版的空间两圆最近距离的迭代算法；当中心轴平行或重合时，我们提出了空间两圆最近距离的解析表达式。文章提供的迭代算法对初始迭代点不敏感且是有效的。下一步将在此基础上尝试给出空间圆环面/球面、圆环面/圆环面、椭圆环面/圆环面、椭圆环面/椭圆环面等与空间两圆有关联的若干情况分析。</p></sec><sec id="s6"><title>基金项目</title><p>国家自然科学基金(61263034)；国家统计局基金资助项目(2014LY011)；贵州省科学技术基金([<xref ref-type="bibr" rid="hanspub.16401-ref2014">2014</xref>]2092)，[<xref ref-type="bibr" rid="hanspub.16401-ref2014">2014</xref>]2093))；贵州省“模式识别与智能系统”重点实验室建设项目(黔科合计[<xref ref-type="bibr" rid="hanspub.16401-ref2009">2009</xref>]4002)；贵州省“信息处理与模式识别”研究生教育创新基地。</p></sec><sec id="s7"><title>文章引用</title><p>李小武,吴志男,王林,张明生. 几何迭代方法计算空间两圆之间的最近距离 The Geometric Iteration Method for Computing the Minimum Distance between Two Spatial Circles[J]. 计算机科学与应用, 2015, 05(11): 394-402. http://dx.doi.org/10.12677/CSA.2015.511050</p></sec><sec id="s8"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.16401-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Ho, S., Sarma, S. and Adachi, Y. (2001) Real-Time Interference Analysis between a Tool and an Environment. Com-puter-Aided Design, 33, 935-947. http://dx.doi.org/10.1016/S0010-4485(00)00117-2</mixed-citation></ref><ref id="hanspub.16401-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Johnson, D. and Cohen, E. (1998) A framework for Efficient Minimum Distance Computations. Proceedings of the IEEE Conference on Robotics and Automation, 36, 78-84. &lt;br&gt;http://dx.doi.org/10.1109/robot.1998.681403</mixed-citation></ref><ref id="hanspub.16401-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Cameron, S. and Enhancing, G.J.K. (1997) Computing Minimum and Penetration Distances between Convex Polyhedra. Proceedings of the IEEE Conference on Robotics and Automation, 3112-3117.  
&lt;br&gt;http://dx.doi.org/10.1109/ROBOT.1997.606761</mixed-citation></ref><ref id="hanspub.16401-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Gilbert, E.G., Johnson, D.W. and Keerthi, S.S. (1988) A Fast Procedure for Computing the Distance between Complex Objects in Three-Dimensional Space. IEEE Journal of Robotics and Automation, 4, 193-203.  
&lt;br&gt;http://dx.doi.org/10.1109/56.2083</mixed-citation></ref><ref id="hanspub.16401-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Lin, M.C. (1993) Efficient Collision Detection for Animation and Robotics. Ph. D Thesis, University of California, Berkeley.</mixed-citation></ref><ref id="hanspub.16401-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Snyder, J. (1995) An Interactive Tool for Placing Curved Surfaces without Interpenetration. Computer Graphics. SIGGRAPH, Los Angeles, 6-11 August 1995, 209-218.</mixed-citation></ref><ref id="hanspub.16401-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">陈小雕, 雍俊海, 郑国勤, 等. 圆环面/球面求交算法[J]. 计算机辅助设计与图形学学报, 2005, 17(6): 1202-1206.</mixed-citation></ref><ref id="hanspub.16401-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Neff, C.A. (1990) Finding the Distance between Two Circles in Three-Dimensional Space. IBM Journal of Research and Development, 34, 770-775. &lt;br&gt;http://dx.doi.org/10.1147/rd.345.0770</mixed-citation></ref><ref id="hanspub.16401-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">刘晓明, 刘长远, 胡强, 雍俊海. 计算两圆环面之间的最近距离[J]. 计算机辅助设计与图形学学报, 2011, 23(2): 240-246.</mixed-citation></ref><ref id="hanspub.16401-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Almohamad, H.A. and Selim, S.Z. (2003) An Algorithm for Computing the Distance between Two Circular Disks. Applied Mathematical Modelling, 27, 115-124. &lt;br&gt;http://dx.doi.org/10.1016/S0307-904X(02)00080-X</mixed-citation></ref><ref id="hanspub.16401-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Kim, I.S. (2006) An Algorithm for Finding the Distance between Two Ellipses. Communications Korean Mathematical Society, 21, 559-567. &lt;br&gt;http://dx.doi.org/10.4134/CKMS.2006.21.3.559</mixed-citation></ref><ref id="hanspub.16401-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">王日昀, 宁涛, 席平, 等. 圆环与圆环求交算法中初始点的计算[J]. 工程图学学报, 2004, 25(1): 47-51.</mixed-citation></ref><ref id="hanspub.16401-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Chen, X.D., Chen, L.Q., Wang, Y.G., Xu, G., Yong, J.H. and Paul, J.C. (2009) Computing the Minimum Distance between Two Bézier Curves. Journal of Computational and Applied Mathematics, 229, 294-301.  
&lt;br&gt;http://dx.doi.org/10.1016/j.cam.2008.10.050</mixed-citation></ref><ref id="hanspub.16401-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Chen, X.D., Ma, W.Y., Xu, G. and Paul, J.C. (2010) Computing the Hausdorff Distance between Two B-Spline Curves. Computer-Aided Design, 42, 1197-1206. &lt;br&gt;http://dx.doi.org/10.1016/j.cad.2010.06.009</mixed-citation></ref><ref id="hanspub.16401-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Chang, J.W., Choi, Y.K., Kim, M.S. and Wang, W.P. (2011) Computation of the Minimum Distance between Two Bézier Curves/Surfaces. Computers &amp; Graphics, 35, 677-684. &lt;br&gt;http://dx.doi.org/10.1016/j.cag.2011.03.025</mixed-citation></ref><ref id="hanspub.16401-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Bai, Y.B., Yong, J.H., Liu, C.Y., Liu, X.M. and Meng, Y. (2011) Polyline Approach for Approximating Hausdorff Distance between Planar Free-Form Curves. Computer-Aided Design, 43, 687-698.  
&lt;br&gt;http://dx.doi.org/10.1016/j.cad.2011.02.008</mixed-citation></ref><ref id="hanspub.16401-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Ma, Y.P., Tu, C.H. and Wang, W.P. (2012) Distance Computa-tion for Canal Surfaces Using Cone-Sphere Bounding Volumes. Computer Aided Geometric Design, 29, 255-264. &lt;br&gt;http://dx.doi.org/10.1016/j.cagd.2011.10.007</mixed-citation></ref><ref id="hanspub.16401-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">Sundar, B.R., Chunduru, A., Tiwari, R., Gupta, A. and Muthu-ganapathy, R. (2014) Footpoint Distance as a Measure of Distance Computation between Curves and Surfaces. Com-puters &amp; Graphics, 38, 300-309.  
&lt;br&gt;http://dx.doi.org/10.1016/j.cag.2013.10.032</mixed-citation></ref><ref id="hanspub.16401-ref19"><label>19</label><mixed-citation publication-type="other" xlink:type="simple">Blasco, A. and Pérez-Díaz, S. (2015) Characterizing the Finiteness of the Hausdorff Distance between Two Algebraic Curves. Journal of Computational and Applied Mathematics, 280, 327-346.  
&lt;br&gt;http://dx.doi.org/10.1016/j.cam.2014.12.005</mixed-citation></ref></ref-list></back></article>