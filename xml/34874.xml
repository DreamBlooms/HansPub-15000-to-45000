<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2020.104063</article-id><article-id pub-id-type="publisher-id">CSA-34874</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20200400000_22991584.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于
  k-means++的抗相似性攻击轨迹匿名算法
  Trajectory Anonymous Algorithm Based on 
  k-Means++ against Similarity Attack
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>兴兰</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>杨</surname><given-names>文金</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>北京工业大学，北京</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>01</day><month>04</month><year>2020</year></pub-date><volume>10</volume><issue>04</issue><fpage>610</fpage><lpage>618</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对聚类中心的选择问题以及轨迹匿名集中轨迹间的相似性过高而泄露轨迹隐私的问题，提出基于k-means++的抗轨迹相似性攻击的轨迹(k,l,δ)-匿名算法。轨迹预处理的过程中，通过构造同步轨迹来减少信息损失；构建匿名集和时，本文采用k-means++算法来构建匿名集合，并且用(l,δ)-约束来限制轨迹匿名集合间的相似性构建包含k条轨迹的匿名集合。实验结果表明，该算法能够较好地构建匿名集合，能够有效抵制轨迹相似性攻击，相比其它算法减少了轨迹信息的损失，同时增强了轨迹数据可利用性，更好地实现了轨迹隐私保护。 Aiming at the problems of how to choose the center of cluster and trajectory privacy leakage caused by the high similarity between the anonymous centralized trajectories, we propose a trajectory anonymous algorithm to resist trajectory similarity attacks. In the preprocessing process, the algorithm adopts trajectory synchronization to reduce information loss. In clustering process, we use k-means++ algorithm to construct the anonymous collection; to prevent the privacy leakage caused by the high slope similarity of trajectories in the set, at least l trajectories with different slopes are required to satisfy trajectory k-anonymity, and the difference value of trajectory slope in each class is required to be at least σ. Experimental results show that the proposal can effectively resist trajectory similarity attacks, reduce information loss comparing to other trajectory anonymous algorithms, enhance the data of availability, and achieve better trajectory privacy protection. 
  
 
</p></abstract><kwd-group><kwd>轨迹隐私保护，l-多样性，轨迹 -匿名算法，k-means++, Trajectory Privacy Preservation</kwd><kwd> l-Diversity</kwd><kwd> Trajectory  -Anonymous Algorithm</kwd><kwd> k-Means++</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于k-means++的抗相似性攻击轨迹 匿名算法<sup> </sup></title><p>张兴兰，杨文金</p><p>北京工业大学，北京</p><disp-formula id="hanspub.34874-formula49"><graphic xlink:href="//html.hanspub.org/file/3-1541711x5_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2020年3月10日；录用日期：2020年3月25日；发布日期：2020年4月1日</p><disp-formula id="hanspub.34874-formula50"><graphic xlink:href="//html.hanspub.org/file/3-1541711x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>针对聚类中心的选择问题以及轨迹匿名集中轨迹间的相似性过高而泄露轨迹隐私的问题，提出基于k-means++的抗轨迹相似性攻击的轨迹<img src="//html.hanspub.org/file/3-1541711x7_hanspub.png" />-匿名算法。轨迹预处理的过程中，通过构造同步轨迹来减少信息损失；构建匿名集和时，本文采用k-means++算法来构建匿名集合，并且用<img src="//html.hanspub.org/file/3-1541711x8_hanspub.png" />-约束来限制轨迹匿名集合间的相似性构建包含k条轨迹的匿名集合。实验结果表明，该算法能够较好地构建匿名集合，能够有效抵制轨迹相似性攻击，相比其它算法减少了轨迹信息的损失，同时增强了轨迹数据可利用性，更好地实现了轨迹隐私保护。</p><p>关键词 :轨迹隐私保护，l-多样性，轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x9_hanspub.png" xlink:type="simple"/></inline-formula>-匿名算法，k-means++</p><disp-formula id="hanspub.34874-formula51"><graphic xlink:href="//html.hanspub.org/file/3-1541711x10_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/3-1541711x11_hanspub.png" /> <img src="//html.hanspub.org/file/3-1541711x12_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>随着全球定位系统的发展，基于位置服务 [<xref ref-type="bibr" rid="hanspub.34874-ref1">1</xref>] (LBS, location based services)的应用越来越广泛，人们通过这些应用可以发现最近的酒店、超市和医院等，它们正在改变着信息时代人们的生活 [<xref ref-type="bibr" rid="hanspub.34874-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.34874-ref3">3</xref>]。LBS服务过程中会产生大量包含用户的会见、位置信息的数据。人们可以通过对这些数据进行分析、挖掘，得到大量可用信息以帮助决策者实施相关政策，例如通过分析某个区域内用户的轨迹信息，可以发现用户曾经或者未来感兴趣的位置，在这些位置建立相应的商场，广场等，帮助投资者实现盈利的最大化。然而，分析这些轨迹数据，也可以推断出用户的一些日常轨迹、身体情况等隐私信息，如果这些个人隐私信息被泄露，会对用户造成极大的威胁 [<xref ref-type="bibr" rid="hanspub.34874-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.34874-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.34874-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.34874-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.34874-ref8">8</xref>]。因此对用户轨迹隐私信息保护技术的研究，已经成为信息安全领域研究的重要内容之一。</p><p>在轨迹数据隐私保护过程中，轨迹的相似性是轨迹聚类和匿名化的重要因素。然而，如果匿名集合内的k条轨迹的太过相近，即它们在很长一段时间内经过同一个敏感区域，或者完全重合，那么也会泄露轨迹隐私信息的情况。文献 [<xref ref-type="bibr" rid="hanspub.34874-ref7">7</xref>] 提出构建的轨迹k-匿名集和要具有一定的差异性，以此来降低轨迹隐私信息泄露的风险，它通过采用最小边界矩形MBR (Minimum Bounding Rectangle)大于一个给定阈值的方式来保证轨迹间的差异性。文献 [<xref ref-type="bibr" rid="hanspub.34874-ref8">8</xref>] 首次用轨迹间夹角和距离构造轨迹图的边权的方法，文献 [<xref ref-type="bibr" rid="hanspub.34874-ref9">9</xref>] 又在其基础之上设计了一种基于图划分的个性化隐私保护方法，利用轨迹距离和轨迹夹角度量来构造轨迹间边权，将构建轨迹k-匿名集和转化为轨迹k-子图的划分问题。Abul等人 [<xref ref-type="bibr" rid="hanspub.34874-ref10">10</xref>] 提出NWA (never walk alone)方法，该方法提出了一个基于共定位的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x13_hanspub.png" xlink:type="simple"/></inline-formula>-匿名模型，首相将轨迹集合划分为互不相交的子集，其次利用聚类算法形成轨迹k-匿名集合；Cai等人 [<xref ref-type="bibr" rid="hanspub.34874-ref11">11</xref>] 提出了一种以用户为中心的轨迹隐私保护方法以防止轨迹攻击。他们引入位置语义多样性以最大化轨迹隐私，攻击和防御问题被转化为贝叶斯Stackelberg方式以进行定量分析。对轨迹发布数据的隐私保护研究领域，已有大量学者进行了研究 [<xref ref-type="bibr" rid="hanspub.34874-ref12">12</xref>] [<xref ref-type="bibr" rid="hanspub.34874-ref13">13</xref>] [<xref ref-type="bibr" rid="hanspub.34874-ref14">14</xref>]。</p><p>这些隐私保护方法一定程度保护了轨迹隐私，但是均未考虑轨迹因相似而泄露轨迹信息的情况，另外，在轨迹聚类中心的选取上较为不合理，因此本文提出了基于k-means++的轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x14_hanspub.png" xlink:type="simple"/></inline-formula>-匿名算法。本文有两个贡献，第一优化了轨迹聚类中心的选择，第二将轨迹斜率作为敏感属性，用<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x15_hanspub.png" xlink:type="simple"/></inline-formula>约束轨迹相似度以解决轨迹相似性攻击问题。</p></sec><sec id="s4"><title>2. 相关概念</title><p>定义1 轨迹，移动对象O的轨迹T为三维时空坐标拟合的曲线，表示为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x16_hanspub.png" xlink:type="simple"/></inline-formula>，其中Id为移动对象的身份标识；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x17_hanspub.png" xlink:type="simple"/></inline-formula>为O在i时刻的位置坐标并且<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x18_hanspub.png" xlink:type="simple"/></inline-formula>；<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x19_hanspub.png" xlink:type="simple"/></inline-formula>是在<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x20_hanspub.png" xlink:type="simple"/></inline-formula>时刻的速度。</p><p>定义2 [<xref ref-type="bibr" rid="hanspub.34874-ref14">14</xref>] 同步轨迹。两条不同的轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x21_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x22_hanspub.png" xlink:type="simple"/></inline-formula>，如果轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x23_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x24_hanspub.png" xlink:type="simple"/></inline-formula>具有相同的时间序列，那么我们称<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x25_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x26_hanspub.png" xlink:type="simple"/></inline-formula>是同步轨迹；如果轨迹集合中的任意两条轨迹两两同步，则称轨迹集合是同步的。</p><p>然而，在我们实际环境中移动对象的轨迹往往不是同步的。主要有两个原因：一是由于移动终端或GPS对每个移动对象位置的采样时间不同；二是由于不同移动对象向位置服务器(LBS)发送请求服务的时间各不相同。另外，本文在做轨迹处理时，我们假设轨迹在2个样本时间点内匀速直线运动，对于轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x27_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x28_hanspub.png" xlink:type="simple"/></inline-formula>间不同时间坐标，通过在轨迹中插入相应时刻的位置坐标来实现轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x29_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x30_hanspub.png" xlink:type="simple"/></inline-formula>的同步。</p><p>定义3 轨迹等价类。若轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x31_hanspub.png" xlink:type="simple"/></inline-formula>满足1)<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x32_hanspub.png" xlink:type="simple"/></inline-formula>的起始时间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x33_hanspub.png" xlink:type="simple"/></inline-formula>，并且终止时间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x34_hanspub.png" xlink:type="simple"/></inline-formula>；2)任意轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x35_hanspub.png" xlink:type="simple"/></inline-formula>是同步的，那么轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x36_hanspub.png" xlink:type="simple"/></inline-formula>是一个轨迹等价类。</p><p>定义4 Fr&#233;chet距离 [<xref ref-type="bibr" rid="hanspub.34874-ref15">15</xref>]。设二元组<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x37_hanspub.png" xlink:type="simple"/></inline-formula>是一个度量空间，其中d是S上的度量函数。在单位区间[0,1]上的映射<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x38_hanspub.png" xlink:type="simple"/></inline-formula>是连续映射，则称γ为S上的连续曲线。从单位区间到其自身的映射<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x39_hanspub.png" xlink:type="simple"/></inline-formula>，满足如下三个条件：1) ζ是连续的；2) ζ是非降的，即对于任意<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x40_hanspub.png" xlink:type="simple"/></inline-formula>，且<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x41_hanspub.png" xlink:type="simple"/></inline-formula>，都有<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x42_hanspub.png" xlink:type="simple"/></inline-formula>成立；3) ζ是满射，则称函数ζ为单位区间[0,1]的重参数化函数，且此时有<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x43_hanspub.png" xlink:type="simple"/></inline-formula>。特别地，当ζ为恒等函数<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x44_hanspub.png" xlink:type="simple"/></inline-formula>时，称ζ为平凡重参数化函数，否则，称ζ为非平凡重参数化函数。显然单位区间的重参数化函数有无穷多个。</p><p>设A和B是S上的两条连续曲线，即<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x45_hanspub.png" xlink:type="simple"/></inline-formula>。又设<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x46_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x47_hanspub.png" xlink:type="simple"/></inline-formula>是单位区间的两个重参数化函数，即<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x48_hanspub.png" xlink:type="simple"/></inline-formula>。则曲线A和B的Fr&#233;chet距离<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x49_hanspub.png" xlink:type="simple"/></inline-formula>定义为</p><disp-formula id="hanspub.34874-formula52"><label>(1)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/3-1541711x50_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中d是S上的度量函数。</p><p>定义5 离散Fr&#233;chet距离 [<xref ref-type="bibr" rid="hanspub.34874-ref15">15</xref>]。设<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x51_hanspub.png" xlink:type="simple"/></inline-formula>是一个折线段曲线，我们用<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x52_hanspub.png" xlink:type="simple"/></inline-formula>表示每个折线段的终点，即<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x53_hanspub.png" xlink:type="simple"/></inline-formula>，那么曲线P和Q的一个组合序列<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x54_hanspub.png" xlink:type="simple"/></inline-formula>，且每个序列对都不相同，并且<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x55_hanspub.png" xlink:type="simple"/></inline-formula>，对任意i，有<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x56_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x57_hanspub.png" xlink:type="simple"/></inline-formula>或<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x58_hanspub.png" xlink:type="simple"/></inline-formula>，因此组合序列对必须遵循曲线P和Q所有点的顺序，定义L的长度为所有序列对的最大距离，即<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x59_hanspub.png" xlink:type="simple"/></inline-formula>。那么折线段P和Q的离散Fr&#233;chet距离为：</p><disp-formula id="hanspub.34874-formula53"><label>(2)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/3-1541711x60_hanspub.png"  xlink:type="simple"/></disp-formula><p>定义6 轨迹之间的曼哈顿距离。任意两条轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x61_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x62_hanspub.png" xlink:type="simple"/></inline-formula>之间的曼哈顿为轨迹上所有位置点曼哈顿距离之和的平均值，定义为：</p><disp-formula id="hanspub.34874-formula54"><label>(3)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/3-1541711x63_hanspub.png"  xlink:type="simple"/></disp-formula><p>定义7 <inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x64_hanspub.png" xlink:type="simple"/></inline-formula>-约束。轨迹匿名集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x65_hanspub.png" xlink:type="simple"/></inline-formula>满足<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x66_hanspub.png" xlink:type="simple"/></inline-formula>-约束，当且仅当轨迹匿名集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x67_hanspub.png" xlink:type="simple"/></inline-formula>中至少有l个不同斜率的轨迹，并且轨迹间斜率差异值至少为δ。</p><p>定义8 <inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x68_hanspub.png" xlink:type="simple"/></inline-formula>-匿名模型。匿名集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x69_hanspub.png" xlink:type="simple"/></inline-formula>中至少有k个轨迹，并且这些轨迹满足<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x70_hanspub.png" xlink:type="simple"/></inline-formula>-约束。</p><p>定义9 轨迹相似性攻击。一个匿名集合中如果存在多条高度相似的轨迹，尤其是运行轨迹相近或者平行亦或者重复，那么攻击者可以对这些发布的轨迹数据进行推理就能获得这些轨迹的大致运动轨迹及其敏感信息，若发布的轨迹均经过同一敏感区域，攻击者可以推断出该集合内的所有轨迹均有很大概率经过该敏感区域，用户隐私也随之暴露，这种攻击模式我们称之为轨迹相似性攻击。</p><p>定义10 轨迹斜率。轨迹数据的起始点、中间点和终止点所在线段的平均斜率。若采样轨迹片段Tr在起始时刻时位置为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x71_hanspub.png" xlink:type="simple"/></inline-formula>，中间时刻位置为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x72_hanspub.png" xlink:type="simple"/></inline-formula>，结束时刻位置为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x73_hanspub.png" xlink:type="simple"/></inline-formula>，则该轨迹斜率<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x74_hanspub.png" xlink:type="simple"/></inline-formula>为：</p><disp-formula id="hanspub.34874-formula55"><label>(4)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/3-1541711x75_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s5"><title>3. 基于k-means++抗相似性攻击的轨迹匿名算法</title><sec id="s5_1"><title>3.1. 轨迹预处理</title><p>轨迹预处理过程有以下两个步骤，首先，我们选取具有相同开始时间和结束时间的轨迹构造轨迹等价类；针对实际环境中的移动对象同时开始并且同时结束的数量非常少，文献 [<xref ref-type="bibr" rid="hanspub.34874-ref9">9</xref>] 采用轨迹集合中的最大开始时间和最小结束时间作为构造轨迹等价类的约束条件。这种方式存在的问题是如果轨迹的开始时间或者结束时间相差很大，构建轨迹集合时就会损失很多轨迹信息，同时在形成匿名集合时也会造成很大的信息损失。鉴于此，本文选取一个给定时间间隔内的轨迹以保证轨迹间的高相似性；其次，将第一步已经选取的轨迹通过轨迹同步化形成轨迹等价类。</p><p>例如，设轨迹的起始时间为7:00，终止时间为8:00，时间间隔为5分钟，那么选取轨迹开始时间在[6:55, 7:05]，结束时间在[7:55, 8:05]的所有轨迹，并将这些轨迹进行同步化，最终形成一个轨迹等价类。对于间隔时间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x76_hanspub.png" xlink:type="simple"/></inline-formula>的选择，主要依据轨迹采样时间的稀疏程度，如果采样时间稀疏，那么间隔时间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x77_hanspub.png" xlink:type="simple"/></inline-formula>可以相对大一点；如果采样时间点密集，则间隔时间<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x78_hanspub.png" xlink:type="simple"/></inline-formula>相应选取小一点。</p><p>算法1 预处理算法 (Pre-process)</p><p>输入：原始轨迹集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x79_hanspub.png" xlink:type="simple"/></inline-formula></p><p>输出：轨迹等价类<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x80_hanspub.png" xlink:type="simple"/></inline-formula></p><p>(1) for tr in<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x81_hanspub.png" xlink:type="simple"/></inline-formula>:</p><p>(2) If 轨迹的开始、结束时间在给定范围内那么</p><p>(3) 将tr添加到<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x82_hanspub.png" xlink:type="simple"/></inline-formula>中</p><p>(4) for each <inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x83_hanspub.png" xlink:type="simple"/></inline-formula></p><p>(5) for <inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x84_hanspub.png" xlink:type="simple"/></inline-formula></p><p>(6) If <inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x85_hanspub.png" xlink:type="simple"/></inline-formula> and <inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x86_hanspub.png" xlink:type="simple"/></inline-formula></p><p>(7) 将<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x87_hanspub.png" xlink:type="simple"/></inline-formula>时间点插入<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x88_hanspub.png" xlink:type="simple"/></inline-formula>中</p><p>(8) else 将<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x89_hanspub.png" xlink:type="simple"/></inline-formula>时间点插入<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x90_hanspub.png" xlink:type="simple"/></inline-formula>中</p><p>(9) 返回<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x91_hanspub.png" xlink:type="simple"/></inline-formula></p></sec><sec id="s5_2"><title>3.2. 构建轨迹匿名集合</title><p>目前大部分轨迹隐私保护算法构建匿名集合时在选择聚类中心主要通过随机选取k个匿名中心，随后构建匿名集合，这样的作法会导致轨迹匿名中心的选取不合理以至构建的匿名集合信息损失大，轨迹可用性降低，本文采用k-means++算法构建匿名集合，解决了上诉问题。</p><p>算法2 基于k-means++的轨迹匿名算法</p><p>输入：预处理之后的轨迹等价类<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x92_hanspub.png" xlink:type="simple"/></inline-formula></p><p>输出：轨迹匿名集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x93_hanspub.png" xlink:type="simple"/></inline-formula></p><p>(1) 随机选取一个轨迹作为第一个聚类中心<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x94_hanspub.png" xlink:type="simple"/></inline-formula></p><p>(2) 计算每个样本与当前已有类聚中心最短距离(即与最近一个聚类中心的距离)，用D(x)表示；这个值越大，越可能成为轨迹的聚类中心</p><p>(3) 重复步骤二，直到选出k个聚类中心；</p><p>(4) 针对轨迹等价类中每个轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x95_hanspub.png" xlink:type="simple"/></inline-formula>，计算它到k个聚类中心的距离并计算距离最小的聚类中心所对应的类中斜率差值是否满足<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x96_hanspub.png" xlink:type="simple"/></inline-formula>约束，如果满足加入所在类，否则计算次近的类，以此类推；</p><p>(5) 针对每个匿名集合<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x97_hanspub.png" xlink:type="simple"/></inline-formula>，重新计算聚类中心<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x98_hanspub.png" xlink:type="simple"/></inline-formula>(即该匿名集合的质心)；</p><p>(6) 重复(4)，(5)直到聚类中心不在变化。</p></sec></sec><sec id="s6"><title>4. 轨迹隐私水平和数据可用性</title><p>本文主要从两个方面分析算法的可行性，一是k-匿名的隐私保护程度即泄密风险，第二，分析轨迹数据的信息损失率即数据的可用性。</p><sec id="s6_1"><title>4.1. 隐私保护水平</title><p>隐私保护水平的评估主要评估匿名集合中轨迹被重新识别的概率，即由构建的匿名集合推断出原使集合记录的可能性，一般采用用匿名集合与原轨迹集合同一记录的相关程度来衡量。</p><p>定义11链接成功。匿名集合内任一轨迹记录t，计算t到原始集合中所有轨迹记录的距离，得到距离t最近的记录集<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x99_hanspub.png" xlink:type="simple"/></inline-formula>，次近记录集<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x100_hanspub.png" xlink:type="simple"/></inline-formula>，如果<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x101_hanspub.png" xlink:type="simple"/></inline-formula>或<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x102_hanspub.png" xlink:type="simple"/></inline-formula>是由t匿名化得到的，则称t链接成功。</p><p>基于距离的评估思想为：用匿名集合链接成功的记录所占比例大小作为泄密风险的测量，设link_records为匿名集合链接成功的记录数，total_records为总记录数，则泄密风险值LR为：</p><disp-formula id="hanspub.34874-formula56"><label>(5)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/3-1541711x103_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s6_2"><title>4.2. 信息损失率</title><p>我们在计算信息损失率时，仅仅考虑构建轨迹匿名集合时造成的信息损失，不考虑轨迹预处理的信息损失。本文通过轨迹的匿名区域与整个轨迹空间区域的面积的比值来衡量信息损失，轨迹匿名区域与数据可用性成反比，匿名区域面积越大数据可用性越小，反之数据可用性越大，表示为：</p><disp-formula id="hanspub.34874-formula57"><label>(6)</label><graphic position="anchor" xlink:href="//html.hanspub.org/file/3-1541711x104_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x105_hanspub.png" xlink:type="simple"/></inline-formula>表示<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x106_hanspub.png" xlink:type="simple"/></inline-formula>时刻的匿名区域面积，<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x107_hanspub.png" xlink:type="simple"/></inline-formula>表示第i个匿名集合的最大面积，p表示匿名集合的个数。</p></sec></sec><sec id="s7"><title>5. 实验结果与分析</title><sec id="s7_1"><title>5.1. 实验环境和数据</title><p>我们的实验环境为Inte(R) Core(TM) i5-4590 CPU @3.30 GHz；8 G内存；Microsoft Windows 7.sp。64位操作系统；本算法在pycharm中实现。实验中使用的实验数据集是由Brinkhoff生成器基于德国奥尔登堡市交通地图生成的 [<xref ref-type="bibr" rid="hanspub.34874-ref16">16</xref>]，初始数据集如表1所示。第一列表示移动对象的编号，第二列是移动对象位置编号即表示该点是轨迹的第几个位置，第三列表示数据返回的概率，0表示以百分百的概率生成数据点，第四列表示轨迹所处的时间；第五、六列表示轨迹所处的位置信息，第七列表示轨迹的当前速度；最后两列表示轨迹下一时刻将要到达的位置。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Part of the dat</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >对象编号</th><th align="center" valign="middle" >位置编号</th><th align="center" valign="middle" >数据返回概率</th><th align="center" valign="middle" >X轴</th><th align="center" valign="middle" >Y轴</th><th align="center" valign="middle" >速度</th><th align="center" valign="middle" >X轴</th><th align="center" valign="middle" >Y轴</th></tr></thead><tr><td align="center" valign="middle" >41</td><td align="center" valign="middle" >62</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >15071.05005</td><td align="center" valign="middle" >24095.37797</td><td align="center" valign="middle" >59</td><td align="center" valign="middle" >15057</td><td align="center" valign="middle" >23925</td></tr><tr><td align="center" valign="middle" >40</td><td align="center" valign="middle" >62</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >5446.962785</td><td align="center" valign="middle" >13539.45939</td><td align="center" valign="middle" >134</td><td align="center" valign="middle" >5756</td><td align="center" valign="middle" >14288</td></tr><tr><td align="center" valign="middle" >39</td><td align="center" valign="middle" >63</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >5092.652393</td><td align="center" valign="middle" >24035.09312</td><td align="center" valign="middle" >26</td><td align="center" valign="middle" >5058</td><td align="center" valign="middle" >22845</td></tr><tr><td align="center" valign="middle" >38</td><td align="center" valign="middle" >63</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >12279.01879</td><td align="center" valign="middle" >15301.07878</td><td align="center" valign="middle" >134</td><td align="center" valign="middle" >12350</td><td align="center" valign="middle" >15144</td></tr><tr><td align="center" valign="middle" >37</td><td align="center" valign="middle" >63</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >6085.989021</td><td align="center" valign="middle" >24575.8497</td><td align="center" valign="middle" >59</td><td align="center" valign="middle" >6051</td><td align="center" valign="middle" >24596</td></tr><tr><td align="center" valign="middle" >36</td><td align="center" valign="middle" >63</td><td align="center" valign="middle" >0</td><td align="center" valign="middle" >13369.37702</td><td align="center" valign="middle" >14968.13312</td><td align="center" valign="middle" >50.25</td><td align="center" valign="middle" >13320</td><td align="center" valign="middle" >14972</td></tr></tbody></table></table-wrap><p>表1. 部分数据</p></sec><sec id="s7_2"><title>5.2. 隐私保护水平</title><p>通过图1可以看出基于k-means++的轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x108_hanspub.png" xlink:type="simple"/></inline-formula>-匿名算法相比CMPT，NWL两种匿名算法泄密风险小很多。基于k-means++算法构建的轨迹匿名集合更为合理，轨迹间的距离相比其它算法会小一点；另外，由于<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x109_hanspub.png" xlink:type="simple"/></inline-formula>的约束，每个等价类在聚类时要求类内至少有l个轨迹斜率差异值至少为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x110_hanspub.png" xlink:type="simple"/></inline-formula>，避免了匿名集合间轨迹的过度相似，能够有效抵制轨迹相似性攻击，防止隐私泄露。</p><p>图1. 不同方法的泄密风险</p><p>由图2可知，基于k-means++的轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x112_hanspub.png" xlink:type="simple"/></inline-formula>-匿名算法在取不同k值时，随着<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x113_hanspub.png" xlink:type="simple"/></inline-formula>值的增加可以获得更安全的匿名数据，大大减少了信息泄露的可能性。以上实验结果表明，本文算法具有一定的可用性。</p><p>图2. 不同δ值变化对应的泄密风险</p></sec><sec id="s7_3"><title>5.3. 轨迹信息损失</title><p>图3是CMPT，NWL匿名算法与基于k-means++的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x115_hanspub.png" xlink:type="simple"/></inline-formula>-匿名算法信息损失随着k值的变化的情况。基于k-means++的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x116_hanspub.png" xlink:type="simple"/></inline-formula>-匿名算法略微比其它两种算法的信息损失度低，这是由于尽管聚类时要保证轨迹间至少有l个斜率差异值至少为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x117_hanspub.png" xlink:type="simple"/></inline-formula>，但是，本文采用k-means++算法构建轨迹匿名集合相比于传统的聚类算法构建的匿名集合更为合理，轨迹间的距离更小，因此本文算法信息损失略低。</p><p>图3. 不同方法的信息损失</p><p>由图4可见，基于k-means++的<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x119_hanspub.png" xlink:type="simple"/></inline-formula>-匿名算法随斜率差异值<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x120_hanspub.png" xlink:type="simple"/></inline-formula>的增大，取不同k值时信息损失度均增大。随着<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x121_hanspub.png" xlink:type="simple"/></inline-formula>增大，类内轨迹斜率取值差异增大，导致类内轨迹距离增大，从而增加了信息损失量。</p></sec><sec id="s7_4"><title>5.4. 算法运行时间分析</title><p>图5是本文算法与其它两种匿名算法的运行时间比较。由于本文匿名算法要求在构建轨迹等价类时，满足k-匿名的条件下同时满足至少有l个轨迹斜率差异值至少为e的轨迹，所以本文算法在k取值增加的情况下，运行时间会略微增加，但可忽略不计。</p><p>图4. 不同k值随δ变化的信息损失</p><p>图5. 不同方法的运行时间</p></sec></sec><sec id="s8"><title>6. 总结</title><p>本文提出的基于k-means++的轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x124_hanspub.png" xlink:type="simple"/></inline-formula>-匿名算法解决了聚类中心的选取问题以及因轨迹间的相似性过高导致泄露轨迹隐私泄的问题。相比其它轨迹k-匿名算法，本文将轨迹斜率作为轨迹的敏感属性，优化了聚类中心的选择，以及增加了等价类内轨迹<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x125_hanspub.png" xlink:type="simple"/></inline-formula>-约束，即要求匿名集在满足轨迹k-匿名的同时还需满足至少有l个斜率差异值至少为<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/3-1541711x126_hanspub.png" xlink:type="simple"/></inline-formula>，避免了因出现大量相似甚至于平行的轨迹而导致隐私的直接泄露的问题。实验结果表明本文算法得到的匿名算法在抵抗轨迹相似性攻击的能力方面更强，并且也保证了轨迹数据的可用性。</p></sec><sec id="s9"><title>文章引用</title><p>张兴兰,杨文金. 基于k-means++的抗相似性攻击轨迹匿名算法Trajectory Anonymous Algorithm Based on k-Means++ against Similarity Attack[J]. 计算机科学与应用, 2020, 10(04): 610-618. https://doi.org/10.12677/CSA.2020.104063</p></sec><sec id="s10"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.34874-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">哈吉德玛. 基于位置服务(LBS)的应用研究[J]. 现代信息科技, 2019, 3(4): 61-62.</mixed-citation></ref><ref id="hanspub.34874-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Xiao, Z., Yang, J.J., Huang, M., et al. (2017) QLDS: A Novel Design Scheme for Trajectory Privacy Protection with Utility Guarantee in Partici-patory Sensing. IEEE Transactions on Mobile Computing, 17, 1397-1410. &lt;br&gt;https://doi.org/10.1109/TMC.2017.2768360</mixed-citation></ref><ref id="hanspub.34874-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">He, X., Jin, R. and Dai, H. (2018) Leveraging Spatial Diversity for Privacy-Aware Location Based Services in Mobile Networks. IEEE Transactions on Information Forensics &amp; Se-curity, 13, 1524-1534. &lt;br&gt;https://doi.org/10.1109/TIFS.2018.2797023</mixed-citation></ref><ref id="hanspub.34874-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Xiao, P., Chen, W., Sun, Y., et al. (2017) Continuous Queries Privacy Protection Algorithm Based on Spatial-Temporal Similarity Over Road Networks. Journal of Computer Re-search &amp; Development, 54, 2092-2101.</mixed-citation></ref><ref id="hanspub.34874-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">张学军, 桂小林, 伍忠东. 位置服务隐私保护研究综述[J]. 软件学报, 2015, 26(9): 2373-2395.</mixed-citation></ref><ref id="hanspub.34874-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">魏兴民, 杜鹏懿. 基于位置服务的隐私保护综述[J]. 现代信息科技, 2019(8): 154-157.</mixed-citation></ref><ref id="hanspub.34874-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Machanavajjhala, A., Kifer, D., Gehrke, J., et al. (2006) L-Diversity: Privacy beyond Kanonymity. ACM Transactions on Knowledge Discovery from Data, 1, 3. &lt;br&gt;https://doi.org/10.1145/1217299.1217302</mixed-citation></ref><ref id="hanspub.34874-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Gao, S., Ma, J.F., Sun, C., et al. (2014) Balancing Trajectory Privacy and Data Utility Using a Personalized Anonymization Model. Journal of Network and Computer Applications, 38, 125-134. &lt;br&gt;https://doi.org/10.1016/j.jnca.2013.03.010</mixed-citation></ref><ref id="hanspub.34874-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">杨静, 张冰, 张健沛, 等. 基于图划分的个性化轨迹隐私保护方法[J]. 通信学报, 2015(3): 1-11.</mixed-citation></ref><ref id="hanspub.34874-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Abul, O., Bonchi, F. and Nanni, M. (2008) Never Walk alone: Uncertainty for Anonymity in Moving Objects Databases. In: Proceedings of the International Conference on Data Engineering, 376-385. &lt;br&gt;https://doi.org/10.1109/ICDE.2008.4497446</mixed-citation></ref><ref id="hanspub.34874-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Cai, H.-F., Yang, H.-X. and Wang, S. (2014) A Cluster-ing-Based Privacy-Pre-Serving Method for Uncertain Trajectory Data. 2014 IEEE 13th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom), Beijing, China, 49-62. &lt;br&gt;https://doi.org/10.1109/TrustCom.2014.5</mixed-citation></ref><ref id="hanspub.34874-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Dai, J. and Liang, H. (2015) A Method for the Trajectory Privacy Protection Based on the Segmented Fake Trajectory under Road Networks.</mixed-citation></ref><ref id="hanspub.34874-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">吴英杰, 唐庆明, 倪巍伟. 基于聚类杂交的隐私保护轨迹数据发布算法[J]. 计算机研究与发展, 2013, 50(3): 578-593.</mixed-citation></ref><ref id="hanspub.34874-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Huo, Z., Huang, Y. and Meng, X.F. (2011) History Trajectory Privacy-Preserving through Graph Partition. In: Proceedings of the 1st Interna-tional Workshop on Mobile Location-Based Service, ACM Press, New York, 71-78. &lt;br&gt;https://doi.org/10.1145/2025876.2025891</mixed-citation></ref><ref id="hanspub.34874-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Agarwal, P.K., Avraham, R.B., Kaplan, H., et al. (2014) Compu-ting the Discrete Fréchet Distance in Subquadratic Time. SIAM Journal on Computing, 43, 429-449. &lt;br&gt;https://doi.org/10.1137/130920526</mixed-citation></ref><ref id="hanspub.34874-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Brinkhoff, T. (2003) Generating Traffic Data. IEEE Data Engineering Bulletin, 26, 19-25.</mixed-citation></ref></ref-list></back></article>