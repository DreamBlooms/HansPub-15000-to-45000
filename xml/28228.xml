<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">SEA</journal-id><journal-title-group><journal-title>Software Engineering and Applications</journal-title></journal-title-group><issn pub-type="epub">2325-2286</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/SEA.2018.76032</article-id><article-id pub-id-type="publisher-id">SEA-28228</article-id><article-categories><subj-group subj-group-type="heading"><subject>SEA20180600000_61268783.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  两类布尔函数的OBDD阶
  The OBDD Orders of Two Types of Boolean Functions
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>媛</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>江</surname><given-names>建国</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>胡</surname><given-names>晓璐</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>辽宁师范大学数学学院，辽宁 大连</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>19</day><month>12</month><year>2018</year></pub-date><volume>07</volume><issue>06</issue><fpage>283</fpage><lpage>288</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  OBDD是布尔函数的一种有效的图形化表示形式。布尔函数的OBDD的阶数对布尔变量的序敏感。本文研究了DNF型和CNF型两种类型布尔函数，给出了这两类函数在一种特定变量序下的OBDD阶的准确值，并证明了这个结论。
   OBDD is an effective graphical representation of Boolean functions. The OBDD orders of a Boolean function are sensitive to the order of Boolean variables. In this paper, the Boolean functions of DNF type and CNF type are studied. The exact OBDD order values of these two types of functions in a particular variables order are given and the conclusion is proved.
 
</p></abstract><kwd-group><kwd>OBDD，变量序，DNF，CNF，布尔函数, OBDD</kwd><kwd> Variable Order</kwd><kwd> DNF</kwd><kwd> CNF</kwd><kwd> Boolean Function</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>两类布尔函数的OBDD阶<sup> </sup></title><p>张媛，江建国，胡晓璐</p><p>辽宁师范大学数学学院，辽宁 大连</p><p><img src="//html.hanspub.org/file/2-2690341x1_hanspub.png" /></p><p>收稿日期：2018年12月4日；录用日期：2018年12月20日；发布日期：2018年12月27日</p><disp-formula id="hanspub.28228-formula59"><graphic xlink:href="//html.hanspub.org/file/2-2690341x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>OBDD是布尔函数的一种有效的图形化表示形式。布尔函数的OBDD的阶数对布尔变量的序敏感。本文研究了DNF型和CNF型两种类型布尔函数，给出了这两类函数在一种特定变量序下的OBDD阶的准确值，并证明了这个结论。</p><p>关键词 :OBDD，变量序，DNF，CNF，布尔函数</p><disp-formula id="hanspub.28228-formula60"><graphic xlink:href="//html.hanspub.org/file/2-2690341x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/2-2690341x7_hanspub.png" /> <img src="//html.hanspub.org/file/2-2690341x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>在多种硬件和软件系统中，布尔函数是一种重要的形式描述机制。布尔函数的有效表示是描述系统的关键。真值表和命题公式是布尔函数的两种表示形式。利用真值表能够显示的表示布尔函数，该方法虽运算简单但在空间方面却相当低效。命题公式通常能得到更有效紧凑的布尔函数形式，但判断任意命题公式的可满足性是及其困难的。CNF、DNF作为命题公式的子类，可以直接检测可满足性问题，却没有检测有效性的算法 [<xref ref-type="bibr" rid="hanspub.28228-ref1">1</xref>] 。</p><p>二叉判定图(BDD)是另一种布尔函数的有效表示方法 [<xref ref-type="bibr" rid="hanspub.28228-ref2">2</xref>] ，其特定类为符号模型检测算法提供实现框架，使得在模型检测中遇到的状态空间爆炸问题得以缓解 [<xref ref-type="bibr" rid="hanspub.28228-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.28228-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.28228-ref5">5</xref>] 。为了进一步优化布尔函数的表示，Bryant等提出了一种自底向上的压缩算法。该方法通过冗余消除、合并同构树等方式将二叉判定图压缩成有序二叉判定图(OBDD) [<xref ref-type="bibr" rid="hanspub.28228-ref6">6</xref>] [<xref ref-type="bibr" rid="hanspub.28228-ref7">7</xref>] 。</p><p>有序二叉判定图是布尔函数的一种紧凑的规范化表示。相比以上布尔函数表示方法，它所需的存储空间小，运算效率高。在多种应用中，OBDD已被证明可以非常有效的表达和操作布尔函数 [<xref ref-type="bibr" rid="hanspub.28228-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.28228-ref9">9</xref>] 。然而OBDD非常依赖变量序的选择，改变变量序有可能使得OBDD的阶数呈指数增长，因此寻找一个好的变量序对于建立布尔函数的高效判定图是至关重要的。</p><p>寻找变量最优序已被证明是NP-完备问题 [<xref ref-type="bibr" rid="hanspub.28228-ref10">10</xref>] ，但仍存在一些良好的启发式算法可以给出较好的排序。目前变量排序方法主要分为两大类，一类是动态变量排序，另一类是静态变量启发式排序 [<xref ref-type="bibr" rid="hanspub.28228-ref11">11</xref>] 。动态变量排序包含筛选排序算法、窗口置换排序算法、模拟退火排序算法和遗传排序算法等 [<xref ref-type="bibr" rid="hanspub.28228-ref12">12</xref>] [<xref ref-type="bibr" rid="hanspub.28228-ref13">13</xref>] 。动态排序与静态排序虽然分别在变量序的有效性和时间耗费上各具优势，然而目前却没有能够兼顾有效性和时间耗费的优越算法。</p><p>本文针对OBDD的阶强烈的依赖于变量序的选择这一缺陷，研究改变变量序对OBDD阶的影响因素，通过影响因素呈现的规律给出特定函数的变量排序方法。并在此基础上研究发现，两种类型布尔函数在给定序下的OBDD阶等于其变量数与终止结点数之和。</p></sec><sec id="s4"><title>2. 基本概念</title><sec id="s4_1"><title>2.1. 布尔函数及其表示</title><p>定义1 布尔变量x是定义域为 { 0 , 1 } 的变量。记x，y为布尔变量。定义集合 { 0 , 1 } 上的函数如下：</p><p>1) 0 &#175; ≜ 1 和 1 &#175; ≜ 0 ；</p><p>2) 若 x = y = 1 ，则 x ⋅ y ≜ 1 ；否则 x ⋅ y ≜ 0 ；</p><p>3) 若 x = y = 0 ，则 x + y ≜ 0 ；否则<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/2-2690341x18_hanspub.png" xlink:type="simple"/></inline-formula>；</p><p>4) 若x和y恰有一个等于1，则 x ⊕ y ≜ 1 。</p><p>n元布尔函数f是从 { 0 , 1 } n 到 { 0 , 1 } n 满足以上布尔运算的函数。基于布尔函数的结构特征，本文主要对两类布尔函数进行研究。一类是积和形式的DNF型布尔函数 f = ∑ i = 1 n ∏ j = 1 n x i j ( n , m ∈ N + ) ，另一类是和积形式的CNF型布尔函数 g = ∏ i = 1 n ∑ j = 1 n x i j ( n , m ∈ N + ) 。</p><p>二叉判定图是布尔函数的一种比较高效紧凑的表示方法，二叉判定树是其中一种较简单的图结构。</p><p>定义2 设T是一棵有限二叉判定树。满足如下规则，T确定以非终止结点为变量的唯一布尔函数。给定T中出现的布尔变量赋值0和1，从T的根开始，只要当前结点的变量值为0，则沿虚线走；否则沿实线走。函数值为所到达的终点值。</p><p>二叉判定树通过共享结点以及子图的简化方式得到BDD。如图1中左图表示一棵二叉判定树，右图表示由该二叉判定树消除冗余决策点得到的二叉判定图。</p><p>图1. 布尔函数的二叉判定树和二叉判定图</p><p>定义3 二叉判定图(Binary Decision Diagrams，简称BDD)是一个有限有向无环图G，满足以下条件：</p><p>1) 具有唯一初始结点；</p><p>2) 由布尔变量标记的非终止结点u恰有两条指向其他结点的边，且两条边分别由函数 l o w ( u ) 和 h i g h ( u ) 表示(在G中，虚线表示 l o w ( u ) ，实线表示 h i g h ( u ) 。)。变量 v a r ( u ) 对应任意一个结点u。</p><p>3) 所有终止结点标记为0或1。</p><p>随着检测需求的提高，研究发现由BDD表示布尔函数仍然存在着一些缺陷，比如对于两个判定图是否代表同一布尔函数的算法相当复杂。因此通过给变量排序，消除冗余等方法得到一种更规范紧凑的表示形式，由此有序二叉判定图应运而生。</p><p>定义4 有序二叉判定图(Ordered Binary Decision Diagrams，简称OBDD)是任意路径变量排序一致的BDD。若G表示n元布尔函数的BDD，当图G中任意路径上的变量都满足 x 1 ≺ x 2 ≺ ⋯ ≺ x n 时，称G是以 x 1 ≺ x 2 ≺ ⋯ ≺ x n 为变量序的OBDD。G中所有结点个数之和称为OBDD的阶，用 | G | 表示。</p><p>OBDD表示布尔函数相比BDD具有相当显著的优势，即能更紧凑规范的表示布尔函数，操作运算存在比较有效的算法，并具有唯一性。</p></sec><sec id="s4_2"><title>2.2. 变量序对OBDD尺寸的影响</title><p>根据定义4，给出如下布尔函数 f = x 1 ⋅ x 2 + x 3 ⋅ x 4 + x 5 ⋅ x 6 分别在序 x 1 ≺ x 2 ≺ x 3 ≺ x 4 ≺ x 5 ≺ x 6 和 x 1 ≺ x 4 ≺ x 2 ≺ x 5 ≺ x 3 ≺ x 6 下的OBDD。如图2，f在序 x 1 ≺ x 2 ≺ x 3 ≺ x 4 ≺ x 5 ≺ x 6 下OBDD (图2左图)的阶 | G 1 | = 8 ，在序 x 1 ≺ x 4 ≺ x 2 ≺ x 5 ≺ x 3 ≺ x 6 下OBDD (图2右图)的阶 | G 2 | = 16 。图 G 2 的阶比图 G 1 的阶多8个。</p><p>推广到一般情况，取布尔函数 f = x 1 ⋅ y 1 + x 2 ⋅ y 2 + ⋯ + x n ⋅ y n ，则f在序 x 1 ≺ y 1 ≺ x 2 ≺ y 2 ≺ ⋯ ≺ x n ≺ y n 下的OBDD阶数是 2 n + 2 。布尔函数f在两个变量序下的阶可根据命题1推理得到。若不幸选择序 x 1 ≺ x 2 ≺ ⋯ ≺ x n ≺ y 1 ≺ y 2 ≺ ⋯ ≺ y n ，f的OBDD阶是 2 n + 1 。</p><p>通过以上示例分析，变量序对OBDD的影响是显著的，一个好的变量序可以使布尔函数对应的OBDD更紧凑，从而减少空间的占用。而如果不幸选择了坏序，则OBDD的阶可能随变量数增多呈指数增长。因此选择一个合适的变量序来构造布尔函数的OBDD显得尤为重要。</p><p>图2. OBDD尺寸依赖于变量序的示例</p><p>根据变量的排序对OBDD阶的影响以及选择好的变量序的重要性，在构造布尔函数的OBDD之前，本文首先介绍确定一类特定变量排序的方法。为了更方便快速的得到好的变量序，使得OBDD的阶是多项式相关的，本文基于积和形式布尔函数与和积形式布尔函数结构特点，得到以下变量排序策略：</p><p>1) 布尔函数中相邻的并且做相同运算的变量在排序时也要尽量相邻；</p><p>2) 整个布尔函数会被分成若干个具有同一属性的组成部分，对各个部分中的变量先排序再将各部分排列组合。</p></sec></sec><sec id="s5"><title>3. 两类布尔函数在特定序下的OBDD</title><p>结合以上示例和分析，取DNF型布尔函数 f = ∑ i = 1 n ∏ j = 1 n x i j ( n , m ∈ N + ) ，CNF型布尔函数 g = ∏ i = 1 n ∑ j = 1 n x i j ( n , m ∈ N + ) 。给出如下两种类型布尔函数在特定序下的OBDD的命题及证明。</p><p>命题1 给定DNF型布尔函数 f = ∑ i = 1 n ∏ j = 1 n x i j ( n , m ∈ N + ) ，在变量序 x 11 ≺ ⋯ ≺ x 1 m ≺ ⋯ ≺ x n 1 ≺ ⋯ ≺ x n m 下的OBDD阶为 n m + 2 。</p><p>证明：采用数学归纳法。</p><p>基础步 取 m ( m ∈ N + ) 为定值，当 i = 1 时，布尔函数 f = x 11 ⋅ x 12 ⋯ x 1 m 。则f在序 x 11 ≺ x 12 ≺ ⋯ ≺ x 1 m 下的OBDD中阶 | G 1 | = m + 2 (如图3所示)，命题成立。</p><p>归纳步 假设 k = n − 1 ( n ≥ 2 ) 时命题成立，即此时DNF型布尔函数 f = ∑ i = 1 n ∏ j = 1 n x i j 在序 [ x 11 , x 12 , ⋯ , x 1 m , ⋯ , x ( n − 1 ) 1 , x ( n − 1 ) 2 , ⋯ , x ( n − 1 ) m ] 下的OBDD中阶 | G k | = ( n − 1 ) m + 2 (如图4左图所示)。</p><p>取 k = n ，依据变量的序关系得知，OBDD的前 ( n − 1 ) m 行已经确定，故只需按序做出余下OBDD的子树即可。如图4中右图虚线方框中所示，在最后的增加的m行中，新增的阶为m。故阶 | G | = ( n − 1 ) m + m + 2 ，即 | G | = n m + 2 ，命题得证。</p><p>命题2 给定CNF型布尔函数 g = ∏ i = 1 n ∑ j = 1 n x i j ( n , m ∈ N + ) ，在变量序 x 11 ≺ ⋯ ≺ x 1 m ≺ ⋯ ≺ x n 1 ≺ ⋯ ≺ x n m 下的OBDD阶为 n m + 2 。</p><p>证明：根据CNF布尔函数与DNF布尔函数结构上的对偶关系，在相同变量排序情况下，得到的OBDD结构相似。即阶仍为 | G | = n m + 2 。</p><p>例1 求出布尔函数 f 1 = ( x 1 + x 2 + x 3 ) ⋅ ( x 4 + x 5 ) ⋅ ( x 6 + x 7 + x 8 ) 在序 x 1 ≺ x 2 ≺ ⋯ ≺ x 8 下的OBDD的阶，并作图。</p><p>首先根据函数类型分类，布尔函数 f 1 = ( x 1 + x 2 + x 3 ) ⋅ ( x 4 + x 5 ) ⋅ ( x 6 + x 7 + x 8 ) 是CNF型布尔函数，因此根据命题2，得其OBDD的阶 | G | = 10 (如图5所示)。</p><p>图3. 布尔函数 f = x 11 ⋅ x 12 ⋯ x 1 m 在规定序下的OBDD</p><p>图4. 布尔函数f在特定序下的OBDD</p><p>图5. 布尔函数 f 1 在序 x 1 ≺ x 2 ≺ ⋯ ≺ x 8 下的OBDD</p></sec><sec id="s6"><title>4. 结论</title><p>本文通过不同变量序对积和形式布尔函数OBDD的示例，给出两类特殊类型的布尔函数在特定序下OBDD阶的计算方法。在特定的情况下，可以快速准确的得到布尔函数的OBDD简洁表示和其与多项式相关的阶。但对于结构复杂的布尔函数，如何排序使得其OBDD的阶优化还有待进一步研究。</p></sec><sec id="s7"><title>文章引用</title><p>张媛,江建国,胡晓璐. 两类布尔函数的OBDD阶The OBDD Orders of Two Types of Boolean Functions[J]. 软件工程与应用, 2018, 07(06): 283-288. https://doi.org/10.12677/SEA.2018.76032</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.28228-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Huth, M. and Ryan, M. (2004) Logic in Computer Science: Modelling and Reasoning about Systems. 2nd Edi-tion.</mixed-citation></ref><ref id="hanspub.28228-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Bryant, R.E. (1986) Graph-Based Algorithms for Boolean Function Manipulation. IEEE Transactions on Computers, 35, 677-691.&lt;br&gt; https://doi.org/10.1109/TC.1986.1676819</mixed-citation></ref><ref id="hanspub.28228-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Burch, J.R., Clarke, J.M., McMillan, K.L., Dill, D.L. and Hwang, J. (1992) System Model Checking: 1020 States and Beyond. Information and Computation, 98, 142-170. &lt;br&gt; https://doi.org/10.1016/0890-5401(92)90017-A</mixed-citation></ref><ref id="hanspub.28228-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Bryant, R.E. (1985) Symbolic Manipulation of Boolean Functions Using a Graphical Representation. Conference on Design Automation, IEEE, 688-694.</mixed-citation></ref><ref id="hanspub.28228-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Lee, C.Y. (2013) Representation of Switching Circuits by Binary-Decision Programs. Bell System Technical Journal, 38, 985-999. &lt;br&gt; https://doi.org/10.1002/j.1538-7305.1959.tb01585.x</mixed-citation></ref><ref id="hanspub.28228-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Bryant, R.E. and Chen, Y.A. (2001) Verification of Arithmetic Circuits Using Binary Moment Diagrams. International Journal on Software Tools for Technology Transfer, 3, 137-155.</mixed-citation></ref><ref id="hanspub.28228-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Kebschull, U. and Rosenstiel, W. (1993) Efficient Graph-Based Computation and Manipulation of Functional Decision Diagrams. Proceedings of Europe Conference on Decision Automation, 278-282. &lt;br&gt;https://doi.org/10.1109/EDAC.1993.386463</mixed-citation></ref><ref id="hanspub.28228-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Slobodová, A. (1998) On the Composition Problem for OBDDs with Multiple Variable Orders. International Symposium on Mathematical Foundations of Computer Science, Springer Berlin Heidelberg, 645-655. &lt;br&gt;https://doi.org/10.1007/BFb0055815</mixed-citation></ref><ref id="hanspub.28228-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Ishiura, N., Sawada, H. and Yajima, S. (1991) Minimization of Binary Decision Diagrams Based on Exchange of Variables. IEEE International Conference on Computer-Aided Design, 472-475. &lt;br&gt;https://doi.org/10.1109/ICCAD.1991.185307</mixed-citation></ref><ref id="hanspub.28228-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Bollig, B. and Wegener, I. (1996) Improving the Variable Ordering of OBDDs is NP-Complete. IEEE Transactions on Computers, 45, 993-1002. &lt;br&gt; https://doi.org/10.1109/12.537122</mixed-citation></ref><ref id="hanspub.28228-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Siminiceanu, R.I. and Ciardo, G. (2006) New Metrics for Static Variable Ordering in Decision Diagrams. Tools and Algorithms for the Construction and Analysis of Systems, Springer Berlin Heidelberg, 90-104. &lt;br&gt;https://doi.org/10.1007/11691372_6</mixed-citation></ref><ref id="hanspub.28228-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Rudell, R. (1993) Dynamic Variable Ordering for Ordered Binary Decision Diagrams. IEEE/ACM International Conference on Computer-Aided Design. Iccad-93. Digest of Technical Papers, IEEE, 42-47.</mixed-citation></ref><ref id="hanspub.28228-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Furdu, I. and Brudaru, O. (2009) New Hybrid Genetic Algorithm with Adaptive Operators and Variability Target for Optimizing Variable Order in OBDD. Scientific Studies and Research Series Mathematics and Informatics, 19, 241-256.</mixed-citation></ref></ref-list></back></article>