<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2020.101014</article-id><article-id pub-id-type="publisher-id">CSA-34037</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20200100000_22423738.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于深度学习YOLOv2算法的钢材压印字符识别研究
  Research on Character Recognition of Steel Embossing Based on YOLOv2
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>黄</surname><given-names>慧宁</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>学军</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>黄</surname><given-names>菊</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>梁</surname><given-names>婵</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>孙</surname><given-names>映华</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>广西大学计算机与电子信息学院，广西 南宁;广西多媒体通信与网络技术重点实验室，广西 南宁</addr-line></aff><aff id="aff4"><addr-line>广西大白小黑智能机器人有限公司，广西 南宁</addr-line></aff><aff id="aff2"><addr-line>广西大学计算机与电子信息学院，广西 南宁</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>31</day><month>12</month><year>2019</year></pub-date><volume>10</volume><issue>01</issue><fpage>126</fpage><lpage>135</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   针对工业生产钢材部件上压印字符与背景区域同色和光照不均影响，传统计算机视觉算法识别钢印字符存在效率与精度不佳的问题，本研究提出一种基于YOLOv2的钢材压印字符识别方法。通过一些基本的图像预处理方式扩充钢印字符数据集，采用快速可靠的深度学习算法YOLOv2自动提取图像的特征，实现对钢印字符(包括数字和字母)的识别。相较于其他传统的图像识别算法，实验结果表明，该网络模型对钢印字符识别的准确率达98.6%，算法平均处理时间为0.3 s，达到了工程应用的精度和效率要求。此外，利用字符位置信息对模型的输出进行改进，实现直接输出正确的生产标号。在工业生产环境下具有较好的稳定性和实时性，有一定的应用意义。 Aiming at the influence of the same color as the background area of industrial parts and uneven illumination of the steel embossing characters, there is a problem of poor efficiency and precision of traditional computer vision algorithms to identify steel embossing characters. This research proposes a steel embossing character recognition method based on YOLOv2. Through some basic image preprocessing methods, the steel embossing character data set is expanded, and the fast and reliable deep learning algorithm YOLOv2 is used to automatically extract the features of the image to realize the recognition of the steel embossing characters (including numbers and letters). Compared with other traditional image recognition algorithms, the experimental results show that the accuracy of the network model for the identification of steel embossing characters is 98.6%, and the average processing time of the algorithm is 0.3 s, which meets the accuracy and efficiency requirements of engineering applications. In addition, the output of the model is improved by using the character position information, and the correct production label can be output directly. It has good stability and real-time performance in industrial production environment and has certain application significance. 
  
 
</p></abstract><kwd-group><kwd>深度学习，字符识别，YOLOv2，目标检测，图像处理, Deep Learning</kwd><kwd> Character Recognition</kwd><kwd> YOLOv2</kwd><kwd> Target Detection</kwd><kwd> Image Processing</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于深度学习YOLOv2算法的 钢材压印字符识别研究<sup> </sup></title><p>黄慧宁<sup>1</sup>，张学军<sup>1,2*</sup>，黄菊<sup>1</sup>，梁婵<sup>1</sup>，孙映华<sup>3</sup></p><p><sup>1</sup>广西大学计算机与电子信息学院，广西 南宁</p><p><sup>2</sup>广西多媒体通信与网络技术重点实验室，广西 南宁</p><p><sup>3</sup>广西大白小黑智能机器人有限公司，广西 南宁</p><disp-formula id="hanspub.34037-formula10"><graphic xlink:href="//html.hanspub.org/file/14-1541642x5_hanspub.png"  xlink:type="simple"/></disp-formula><p>收稿日期：2020年1月1日；录用日期：2020年1月12日；发布日期：2020年1月19日</p><disp-formula id="hanspub.34037-formula11"><graphic xlink:href="//html.hanspub.org/file/14-1541642x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>针对工业生产钢材部件上压印字符与背景区域同色和光照不均影响，传统计算机视觉算法识别钢印字符存在效率与精度不佳的问题，本研究提出一种基于YOLOv2的钢材压印字符识别方法。通过一些基本的图像预处理方式扩充钢印字符数据集，采用快速可靠的深度学习算法YOLOv2自动提取图像的特征，实现对钢印字符(包括数字和字母)的识别。相较于其他传统的图像识别算法，实验结果表明，该网络模型对钢印字符识别的准确率达98.6%，算法平均处理时间为0.3 s，达到了工程应用的精度和效率要求。此外，利用字符位置信息对模型的输出进行改进，实现直接输出正确的生产标号。在工业生产环境下具有较好的稳定性和实时性，有一定的应用意义。</p><p>关键词 :深度学习，字符识别，YOLOv2，目标检测，图像处理</p><disp-formula id="hanspub.34037-formula12"><graphic xlink:href="//html.hanspub.org/file/14-1541642x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/14-1541642x8_hanspub.png" /> <img src="//html.hanspub.org/file/14-1541642x9_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>在钢材器件生产过程中，往往会在每个部件上标注不同的生产编号，这样不仅为了便于对部件的质量监控和信息管理追踪，还为了方便对部件与相应器件间的匹配问题进行把控。压印字符是利用字模对物体表面施压形成的，呈凹凸状，因其不能随意更改而可以永久保存的优点，在工业生产中得以广泛应用。钢材器件通常是大批量的生产，传统的人工手动记录生产编号的方法需消耗大量的劳动力，同时大大延长了生产时间，还容易出错。计算机视觉技术不断发展，应用于工业生产过程当中，极大地减少了工业生产对人工的依赖。现如今，随着工业智能化生产的发展要求不断提高，在工业生产中迫切需要对钢材器件上的压印字符标号进行视觉实时识别。</p><p>压印字符与手写字符、印刷字符等一般的光学字符有所不同，压印字符的颜色与背景色是一样的，因而这两者的对比度不鲜明，而且在复杂多变的工业生产环境下，会出现噪声、光照不均衡、抖动模糊、位置不确定等问题，这些问题又进一步增加了压印字符识别的难度。因此，传统的字符识别技术(如模板匹配 [<xref ref-type="bibr" rid="hanspub.34037-ref1">1</xref>] )无法直接应用于钢材压印字符的识别中。可将钢材压印字符识别看成是具有一般性的目标检测任务。目标检测是计算机视觉 [<xref ref-type="bibr" rid="hanspub.34037-ref2">2</xref>] 研究的热点问题之一，它学习每个对象的可视模型，并找到合适的边界框区域和对象类别。早期较常用的目标检测算法是DPM (Deformable Parts Model) [<xref ref-type="bibr" rid="hanspub.34037-ref3">3</xref>]，其通过HOG (Histograms of Oriented Gradients) [<xref ref-type="bibr" rid="hanspub.34037-ref4">4</xref>] 特征提取，将提取到的图像特征作为输入，利用SVM (Support Vector Machine) [<xref ref-type="bibr" rid="hanspub.34037-ref5">5</xref>] 进行分类。DPM在行人检测 [<xref ref-type="bibr" rid="hanspub.34037-ref6">6</xref>] 等目标检测任务上有较好的效果。但实质上，这样的方法对于特征设计十分依赖于人工，过程也比较复杂繁琐。</p><p>近年来，随着深度卷积神经网络的兴起，目标检测的性能与以往基于手工的方法(如文献 [<xref ref-type="bibr" rid="hanspub.34037-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.34037-ref8">8</xref>] )相比有了显著提高。最初利用神经网络进行目标检测的方法是基于候选区域的方法。Girshick等 [<xref ref-type="bibr" rid="hanspub.34037-ref9">9</xref>] 提出的区域卷积神经网络(R-CNN)先从图像中采用选择性搜索算法 [<xref ref-type="bibr" rid="hanspub.34037-ref10">10</xref>] 提取候选区域，再通过标准的卷积神经网络去调整以及分类这些区域。但是，对于每个候选区域都需要对整个网络进行重新计算，存在大量重复的计算，进一步增加了计算复杂度，从而降低了目标检测网络的速度。随后，Girshick [<xref ref-type="bibr" rid="hanspub.34037-ref11">11</xref>] 提出了快速区域卷积神经网络(Fast R-CNN)，直接从CNN的编码特征图中提取候选区域，使得网络可以共享计算结果，从而让模型提速，帧速率达到5 frame/s。然而，Fast R-CNN仍采用选择性搜索算法来提取候选区域，计算还是相当复杂。为解决这一问题，2015年Ren和Girshick [<xref ref-type="bibr" rid="hanspub.34037-ref12">12</xref>] 提出超快区域卷积神经网络(Faster R-CNN)，采用基于深度学习的区域建议网络(RPN)来提取目标候选区域。在RPN中，预定义的锚点(Anchor)和框(Anchor Box)预测目标感兴趣区域(RoI)。通过引入RPN，检测精度和速率都有所提高。尽管Faster R-CNN的计算速度有了很大提升，但是仍然无法满足实时检测的要求，因此在2016年Redmon等人 [<xref ref-type="bibr" rid="hanspub.34037-ref13">13</xref>] 提出了YOLO (You Only Look Once)网络，将整幅待检测图像作为输入，而卷积神经网络作为回归器，回归目标在待检测图像中的位置信息，实现端到端的目标检测和识别。相比于基于候选区域的方法，YOLO算法不需要生成目标建议区域，而是将输入图像看成一个候选区域，简单地划分为几个小区域，然后通过CNN来判断每一个区域是否存在目标，并预测目标的种类和边界框，这大大节省了图像处理的时间，帧速率达到了45 frame/s。当然，YOLO在提升检测速度的同时精度有所降低。随后，2017年Redmon等人 [<xref ref-type="bibr" rid="hanspub.34037-ref14">14</xref>] 基于YOLO网络进行一系列的改进提出了YOLOv2网络，其准确率和检测速度均得到了显著提高。从VOC 2007数据集的模型检测测试结果来看，YOLO v2的准确率为76.8%，检测速度可达到67 frame/s，满足了实时性，在目标检测领域表现出色。</p><p>本研究提出了一种基于YOLOv2网络的钢材压印字符识别方法，结合图像灰度化、滤波去噪、边缘检测、霍夫变换算法对工业生产线上钢材部件的生产标号图像进行预处理，处理之后的数据集通过YOLOv2网络训练，学习各类字符的特征，对字符进行分类的同时得到字符的位置信息，利用图像中各个字符所得的位置信息进行排序操作，即可得到钢材部件的生产标号，实现实时地、快速地、准确地一步式识别钢材部件的生产标号。</p></sec><sec id="s4"><title>2. 识别方法</title><sec id="s4_1"><title>2.1. 图像预处理</title><sec id="s4_1_1"><title>2.1.1. 倾斜矫正</title><p>从工业相机获取的钢材压印字符原始图像如图1(a)所示。由于在压制压印字符过程中会出现偏差，或者在摄取压印字符图像过程中没有完全对准，难免会出现字符倾斜的问题，这就需要对字符进行倾斜校正。霍夫变换(Hough Transform)是图像处理中的一种检测特定形状的技术。它实质上是一种线-点变换，把图像空间转换到一个参数空间中，通过统计寻找累加的局部最大值得到一个符合该特定形状的集合作为霍夫变换结果。霍夫变换常用来检测图像中的直线，此外霍夫变换也可用于对曲线的识别，例如检测圆和椭圆。霍夫变换检测直线具有受直线中的间隙影响小和抗干扰性强的优点。其原理是：将图像中直线上的点(x, y)进行变换，利用过该点的直线在直角坐标中的表达式y = kx + b (其中k为斜率，b为截距)可变换成b = −kb + y，即把点(x, y)转换到k-b参数空间的一条直线，图像空间的直线上多个点的累加变为在参数空间上的多条直线相交于一点，在参数空间寻找这个最大点从而可以返回找到原始图像上的直线。根据钢材部件的矩形条状结构特点，可利用霍夫变换检测直线的算法获取图像中最长的线，然后计算该长线的倾斜角度<inline-formula><inline-graphic xlink:href="//html.hanspub.org/file/14-1541642x10_hanspub.png" xlink:type="simple"/></inline-formula>，最后将图像旋转 − γ 即可。结果如图1(b)所示。</p><p>另外，图像在实际成像、获取的过程中会出现字符倒置的情况，如图1(c)所示。为了统一数据集样本的基本形式，就需要对这些倒置的图像进行180˚的旋转处理，结果如图1(d)所示。</p><p>图1. 倾斜矫正图片</p></sec><sec id="s4_1_2"><title>2.1.2. 图像增强</title><p>为了加强和突出钢材部件图像中压印字符特征，减少字符图像的噪声干扰，本研究首先对图像进行灰度化处理，然后利用中值滤波抑制噪声，同时字符的边缘细节还能保留下来。中值滤波 [<xref ref-type="bibr" rid="hanspub.34037-ref15">15</xref>] 是一种非线性图像平滑方法，其输出像素由邻域像素的中间值决定。首先要选定一个奇数像素的窗口W，将窗口内各像素灰度值按从小到大进行排列 ( x 1 , x 2 , ⋯ , x n ) ，选取排在灰度序列中间的灰度值y作为对应窗口中心位置的像素灰度值。具体的计算方式为</p><p>y = m e d ( x 1 , x 2 , ⋯ , x n ) = { x n + 1 2 ,     n 为 奇 数 1 2 ( x n 2 + x n 2 + 1 ) ,     n 为 偶 数 (1)</p><p>其中，n为像素值的数量，通常是奇数。但当n为偶数时，计算中间两个像素的平均值即为窗口中心位置的灰度值。通过中值滤波后图像的背景更加平滑，字符更突出，有助于在字符识别的过程中更好地提取出字符特征，从而达到较好的识别效果。图像增强的效果如图2所示。</p><p>图2. 图像增强效果图</p></sec><sec id="s4_1_3"><title>2.1.3. 数据集扩充</title><p>由于没有公开的钢材压印字符数据集，本研究从实际的工厂生产线上通过工业相机获取了1500幅钢材压印字符原始图像作为数据集样本。每幅钢材生产标号图像均包含了10个字符，由数字和大写字母组成，但经过统计发现字母的数量远远少于数字字符的数量。为了平衡网络训练的各类样本数量，对现有样本进行扩充，本研究采用泊松融合的方法对部分字母样本进行重新自由组合，产生新的样本。</p><p>泊松融合是由Perez等 [<xref ref-type="bibr" rid="hanspub.34037-ref16">16</xref>] 提出的基于泊松方程的图像编辑算法，通过求解公式(2)极值问题，构造泊松方程从而求解像素最优值。</p><p>min f ∬ Ω | ∇ f − V | 2 , f | ∂ Ω = f * | ∂ Ω (2)</p><p>式中， Ω 代表前景图像中需要融合的字符区域， ∂ Ω 则为该区域的边界，V是在 Ω 上的梯度向量场。f代表字符融合后的图像，其梯度为 ∇ f ，而f<sup>*</sup>代表融合的字符区域以外的背景图像。在满足融合图像和背景图像的边界值相等的同时，求解融合图像的梯度与V引导下的梯度最小差值，从而达到比较自然的无缝融合效果。该问题可以转化成利用狄利克雷边界条件求解泊松方程，如式(3)所示。</p><p>Δ f = d i v V , f | ∂ Ω = f * | ∂ Ω (3)</p><p>式中， Δ 为拉普拉斯算子，div为散度算子。本研究利用泊松融合方法最终得到2000幅字符图像，其中1600幅作为训练集，400幅作为测试集。</p></sec></sec><sec id="s4_2"><title>2.2. YOLOv2原理</title><sec id="s4_2_1"><title>2.2.1. YOLOv2网络结构</title><p>大部分目标检测框架常用准确率高的VGG-16 [<xref ref-type="bibr" rid="hanspub.34037-ref17">17</xref>] 作为特征提取网络，但VGG-16网络结构复杂且计算量庞大。而YOLO采用类似GoogleNet [<xref ref-type="bibr" rid="hanspub.34037-ref18">18</xref>] 的网络结构，相较于VGG-16而言，计算量减小，但准确率略低于VGG-16。为了兼顾复杂度与准确率以提升网络的检测性能，YOLOv2对YOLOv1进行了改进，采用了新的分类网络Darknet-19作为网络骨架来进行特征提取。Darknet-19网络包含了19个卷积层和5个最大值池化层，去除了YOLOv1中的全连接层，得到了更多的空间信息。网络在所有的卷积层后增加Batch Normalization (批量归一化)并移除网络的dropout，这可以显著改善网络的收敛性，并且有利于正则化模型，防止过拟合。</p><p>基于YOLOv2的钢材压印字符识别网络结构如图3所示。将归一化为 608 &#215; 608 大小、通道数为3的图像作为输入，采用多个 3 &#215; 3 卷积核，每经过一次池化操作都会将通道数翻倍。借鉴了network in network [<xref ref-type="bibr" rid="hanspub.34037-ref19">19</xref>] 的思想，使用全局平均池化进行预测，将 1 &#215; 1 卷积核置于 3 &#215; 3 卷积核之间进行交替操作以压缩卷积间的特征表示。经过19个卷积层和5次池化后，图像转化为 19 &#215; 19 &#215; 1024 的特征图，其中第13个卷积层输出的 38 &#215; 38 &#215; 512 特征图经过一层卷积和重组之后得到 19 &#215; 19 &#215; 256 的特征图，将其与 19 &#215; 19 &#215; 1024 的特征图进行融合，最后再经过两层卷积得到最终的特征图。通过添加这样一个转移层(passthrough layer)把浅层特征图和深层特征图相连接，使得最终获得的特征图可以拥有更好的细粒度特征。</p><p>图3. YOLOv2的网络结构</p></sec><sec id="s4_2_2"><title>2.2.2. 检测过程</title><p>YOLOv2在对钢材压印字符检测识别的过程中，会将整个输入图像划分成 S &#215; S 的网格，每个网格负责检测中心点落在网格中的对象。同时，YOLOv2网络借鉴Faster R-CNN的思想，引入Anchor Boxes先验框，不同于Fast R-CNN需要人工定义Anchor Boxes，YOLOv2采用K-means聚类方法对数据集中的人工标记框进行聚类分析，确定Anchor boxes的数量和大小，最后在网格的周围生成几个一定比例的边框。那么，每个网格单元预测B个边界框和这些框的置信度分数，每个边界框包含了该区域中心点的位置(x, y)，高度h，宽度w和置信度confidence这5个信息。</p><p>置信度表征边界框中是否含有检测对象以及边框预测的准确程度，其计算公式为</p><p>c o n f i d e n c e = P ( o b j e c t ) &#215; I O U p r e d t r u t h (4)</p><p>式中，P(object)表示边界框中有无包含检测对象，若有取值为1，则置信度confidence等于 I O U p r e d t r u t h 的值，若边界框中没有包含检测对象，P(object)取值为0，则置信度confidence的值也为0。而 I O U p r e d t r u t h 表示预测边界框与标记的真实边界框的重合程度，其计算方式为</p><p>I O U p r e d t r u t h = A r e a ( p r e d ) ∩ A r e a ( t r u t h ) A r e a ( p r e d ) ∪ A r e a ( t r u t h ) (5)</p><p>即预测边界框与真实边界框所占面积的交集比上两者的并集(Intersection over Union)，该值越接近于1，表明两者的重合度越高。那么，预测边框某一类别的置信分数Conf<sub>i</sub>就可以通过式(6)进行计算。</p><p>C o n f i = P ( c l a s s i | o b j e c t ) &#215; P ( o b j e c t ) &#215; I O U p r e d t r u t h = P ( c l a s s i ) &#215; I O U p r e d t r u t h (6)</p><p>置信分数表征预测边界框中含有某一类别的概率及边框坐标的准确度。综上，当存在C类别时，网络的输出尺寸为 S &#215; S &#215; B &#215; ( 5 + C ) 的张量。根据置信分数的大小，采用非极大值抑制(NMS)筛选获得最终的检测结果。</p></sec><sec id="s4_2_3"><title>2.2.3. 输出改进</title><p>在检测结果输出时，为了能使检测到的字符按生产标号顺序输出，本研究利用检测到的字符位置信息通过冒泡排序按从小到大进行排序，相应的字符从左到右排列，从而得到准确的生产标号。利用字符位置信息进行冒泡排序的方式比较简单，依次比较存放字符位置信息的数组中相邻两个数的大小，若排在第i位的数比排在第i + 1位的数要大，则两者进行交换，否则不需要交换。同时位置信息对应的字符数组也进行相同的操作，最终得到位置信息从小到大的序列和按生产标号从左到右的字符序列。</p></sec></sec></sec><sec id="s5"><title>3. 实验结果及分析</title><sec id="s5_1"><title>3.1. 实验平台</title><p>本实验是在PC端上完成，PC配置为CPU Intel Core i7-6700，显卡/GPU为NVIDIA GeForce GTX 960M，8G运行内存，训练和测试框架均为Darknet。</p><p>关于网络参数的设置方面，将初始学习率(learning_rate)设为0.001，采用steps学习率调整策略(policy)；每迭代一次训练的样本数(batch)为64，最大迭代次数(max_batches)为10000次；学习率在迭代次数为4000，6000时，在原来的基础上再分别乘以0.1，0.1；动量(momentum)为0.9，衰减系数(decay)为0.0005。</p></sec><sec id="s5_2"><title>3.2. 训练</title><p>对YOLOv2网络的训练是钢材压印字符识别的关键一环，训练所得模型的好坏直接影响字符识别的效果。本实验利用LabelImg软件对训练集中所有图片上的字符打上各自相应的标签，生成每一幅图片对应的.xml文件，然后将每一个.xml文件生成txt文件，存储标签信息。最后利用设置好参数的YOLOv2网络对训练集样本进行训练。</p><p>YOLOv2网络在训练时可以通过计算损失函数Loss来判断训练的效果，计算方法在等式(7)中示出。</p><p>L o s s = λ c o o r d ∑ i = 0 S 2 ∑ j = 0 B I i , j o b j [ ( x i − x ^ i ) 2 + ( y i − y ^ i ) 2 ]     + λ c o o r d ∑ i = 0 S 2 ∑ j = 0 B I i , j o b j [ ( w i − w ^ i ) 2 + ( h i − h ^ i ) 2 ]     + ∑ i = 0 S 2 ∑ j = 0 B I i , j o b j ( C i − C ^ i ) 2 + λ c o o b j ∑ i = 0 S 2 ∑ j = 0 B I i , j n o o b j ( C i − C ^ i ) 2     + ∑ i = 0 S 2 I i o b j ∑ c ∈ c l a s s e s S 2 ( p i ( c ) − p ^ i ( c ) ) 2 (7)</p><p>其中， I i o b j 表示目标对象是否出现在网格单元i中， I i , j o b j 表示网格单元i中的第j个目标边界框。相反地， I i , j n o o b j 表示网格单元i中的第j个边界框，其不包含目标对象的任何部分； λ c o o r d 为目标坐标预测的损失系数， λ n o o b j 则为不包含有目标的边框预测的损失系数； x i 、 y i 、 w i 、 h i 、 C i 、 p i ( c ) 为网格i中预测目标的中心点坐标、宽高、类别及概率， x ^ i 、 y ^ i 、 w ^ i 、 h ^ i 、 C ^ i 、 p ^ i ( c ) 则为网格i中目标的各相应信息的真实值。公式(7)的时间复杂度是 O ( ( k + c ) &#215; S 2 ) ，其是针对一个图像计算的。要得到较好的训练效果，则期望Loss值尽可能小。</p><p>YOLOv2网络在训练过程中还采用了多尺度训练策略，每隔十轮便改变一次图像尺寸进行输入，以提高模型对不同分辨率图像的鲁棒性。使用YOLO v2网络在钢材压印字符训练集训练中随着迭代次数的增加平均损失率所产生的变化如图4所示，从图中可以看出网络收敛速度较快，在迭代2000次左右时基本收敛，之后处于基本稳定状态，并且Loss值越来越接近于0，说明训练的效果逐渐趋于最佳。</p><p>图4. 损失率曲线图</p></sec><sec id="s5_3"><title>3.3. 测试结果及分析</title><p>本研究还将整幅钢材生产标号图像分割成单个字符图像作为样本集，分别采用LeNet-5 [<xref ref-type="bibr" rid="hanspub.34037-ref20">20</xref>] 和SVM来对样本集进行训练和分类识别，对比两者与本研究采用的YOLOv2方法的识别效果。采用准确率(Accuracy, Acc)、假阳性率(False Positive Rate, FPR)、召回率(Recall)、检测单幅图像耗时(Time)等评估参数作为评价性能指标，如表1所示。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Performance indicators for recognition assessmen</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >方法(Method)</th><th align="center" valign="middle" >样本(Sample)</th><th align="center" valign="middle" >测试平均时间(Time)</th><th align="center" valign="middle" >准确率(Acc)</th><th align="center" valign="middle" >假阳性率(FPR)</th><th align="center" valign="middle" >召回率(Recall)</th></tr></thead><tr><td align="center" valign="middle" >YOLOv2</td><td align="center" valign="middle" >整幅图像</td><td align="center" valign="middle" >0.3s</td><td align="center" valign="middle" >98.6%</td><td align="center" valign="middle" >0.16</td><td align="center" valign="middle" >0.97</td></tr><tr><td align="center" valign="middle" >LeNet-5</td><td align="center" valign="middle" >单个字符图像</td><td align="center" valign="middle" >0.6s</td><td align="center" valign="middle" >96.7%</td><td align="center" valign="middle" >0.19</td><td align="center" valign="middle" >0.95</td></tr><tr><td align="center" valign="middle" >SVM</td><td align="center" valign="middle" >单个字符图像</td><td align="center" valign="middle" >0.5s</td><td align="center" valign="middle" >93%</td><td align="center" valign="middle" >0.21</td><td align="center" valign="middle" >0.92</td></tr></tbody></table></table-wrap><p>表1. 识别评估性能指标</p><p>从表中可以看出，采用YOLOv2方法进行识别时，每幅图像平均需要花费0.3 s的时间，准确率达到了98.6%，不仅所用的时间少于其他两种方法，而且识别的准确率还比较高。此外，YOLOv2的假阳性率比其他两种方法的要低，而召回率高于其他两种方法。实验结果表明，采用YOLOv2网络模型对钢材压印字符进行识别具有快速性和高效性，满足工业生产的实时性需求。</p><p>采用YOLOv2对钢材压印字符进行识别的实际效果如图5所示。由图可见，YOLOv2基本能对数字和字母进行分类，并且能较准确地标识出各字符所在的位置。对于一些特征相近的字符如“8”和“B”，也能被准确地识别出来，而字符“C”和“D”会存在误识成“0”的情况，分析其原因可能跟训练的样本数有关。</p><p>图5. 识别效果图</p><p>同时，YOLOv2采用整幅生产标号图像作为输入，检测时即能输出一整串生产标号，比先分割字符输入，识别输出单个字符后再进行拼接的方法方便快捷很多。利用HTML与PHP相结合制作基于YOLOv2的钢材压印字符识别平台，可以在网页上远程实现一键得到生产标号，结果显示如图6所示。</p></sec></sec><sec id="s6"><title>4. 结论</title><p>随着深度学习的深入研究和不断发展，越来越多的针对图像、视频的视觉识别算法被开发出来，这些算法的网络框架性能不断提升并且使用起来十分的便捷。本研究将目前对目标检测比较快速准确的YOLOv2算法应用于部件钢印字符识别中，实验结果表明，与其他的经典的字符识别算法如LeNet-5和分类器SVM相比，YOLOv2的识别准确率较高，且算法处理时间较少。同时，通过对网络输出结果的改进，可以直接输出图像中正确的生产标号，不需要把图像分割成单个字符再进行识别，更加的方便快捷。</p><p>图6. 基于YOLOv2的钢材压印字符识别平台</p><p>这有效提高了工业生产管理的稳定性和实时性。后续的研究工作将不断扩充数据集样本数量，还有对样本图像采用边缘检测等预处理方法。</p></sec><sec id="s7"><title>致谢</title><p>本研究室的卢健祥，李壁江等多位同学完成了很多先期准备工作；匿名审稿老师对本文提出了宝贵的修改意见，在此表示感谢！</p></sec><sec id="s8"><title>基金项目</title><p>本课题得到广西自然科学基金“形状纹理特征量的提取及其优化研究”(No. 2017JJA170765y)；国家自然基金“基于CT数据的胃癌模型的三维重建和手术仿真”(No. 81760324)资助。</p></sec><sec id="s9"><title>文章引用</title><p>黄慧宁,张学军,黄 菊,梁 婵,孙映华. 基于深度学习YOLOv2算法的钢材压印字符识别研究Research on Character Recognition of Steel Embossing Based on YOLOv2[J]. 计算机科学与应用, 2020, 10(01): 126-135. https://doi.org/10.12677/CSA.2020.101014</p></sec><sec id="s10"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.34037-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">顾晨勤, 葛万成. 基于模板匹配算法的字符识别研究[J]. 通信技术, 2009, 42(3): 220-222.</mixed-citation></ref><ref id="hanspub.34037-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Lin, T.-Y., Dollar, P., Girshick, R., He, K., Hariharan, B. and Belongie, S. (2017) Feature Pyramid Networks for Object Detection. Pro-ceedings of the IEEE Conference on Computer Vision and Pattern Recognition, Honolulu, 21-26 July 2017, 936-944. &lt;br&gt;https://doi.org/10.1109/CVPR.2017.106</mixed-citation></ref><ref id="hanspub.34037-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Felzenszwalb, P.F., Girshick, R.B., Mcallester, D., et al. (2009) Ob-ject Detection with Discriminatively Trained Part-Based Models. IEEE Transactions on Pattern Analysis and Machine Intelligence, 32, 1627-1645.  
&lt;br&gt;https://doi.org/10.1109/TPAMI.2009.167</mixed-citation></ref><ref id="hanspub.34037-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Dalal, N. and Triggs, B. (2005). Histograms of Oriented Gradients for Human Detection. Proceedings of the IEEE Computer Society Conference on Computer Vision and Pattern Recogni-tion, San Diego, 20-25 June 2005, 886-893.  
&lt;br&gt;https://doi.org/10.1109/CVPR.2005.177</mixed-citation></ref><ref id="hanspub.34037-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Cortes, C. and Vapnik, V. (1995) Support-Vector Networks. Ma-chine Learning, 20, 273-297.  
&lt;br&gt;https://doi.org/10.1007/BF00994018</mixed-citation></ref><ref id="hanspub.34037-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Zhu, Q., Yeh, M.-C., Cheng, K.-T. and Avidan, S. (2006) Fast Human Detection Using a Cascade of Histograms of Oriented Gradients. Proceedings of the IEEE Computer Society Conference on Computer Vision and Pattern Recognition, New York, 17-22 June 2006, 1491-1498. &lt;br&gt;https://doi.org/10.1109/CVPR.2006.119</mixed-citation></ref><ref id="hanspub.34037-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Wang, X., Yang, M., Zhu, S. and Lin, Y. (2013) Regionlets for Ge-neric Object Detection. Proceedings of the IEEE International Conference on Computer Vision, Sydney, 1-8 December 2013, 17-24.  
&lt;br&gt;https://doi.org/10.1109/ICCV.2013.10</mixed-citation></ref><ref id="hanspub.34037-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Azizpour, H. and Laptev, I. (2012) Object Detection Using Strong-ly-Supervised Deformable Part Models. Proceedings of the European Conference on Computer Vision, Florence, 7-13 October 2012, 836-849.  
&lt;br&gt;https://doi.org/10.1007/978-3-642-33718-5_60</mixed-citation></ref><ref id="hanspub.34037-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Girshick, R., Donahue, J., Darrell, T. and Malik, J. (2014) Rich Feature Hierarchies for Accurate Object Detection and Semantic Segmentation. Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, Columbus, 23-28 June 2014, 580-587. &lt;br&gt;https://doi.org/10.1109/CVPR.2014.81</mixed-citation></ref><ref id="hanspub.34037-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Uijlings, J.R., Van De Sande, K.E., Gevers, T., et al. (2013) Selective Search for Object Recognition. International Journal of Computer Vision, 104, 154-171. &lt;br&gt;https://doi.org/10.1007/s11263-013-0620-5</mixed-citation></ref><ref id="hanspub.34037-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Girshick, R. (2015) Fast R-CNN. Proceedings of the IEEE Inter-national Conference on Computer Vision, Santiago, 7-13 December 2015, 1440-1448. &lt;br&gt;https://doi.org/10.1109/ICCV.2015.169</mixed-citation></ref><ref id="hanspub.34037-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Ren, S.Q., He, K.M., Girshick, R., et al. (2015) Faster R-CNN: To-wards Real-Time Object Detection with Region Proposal Networks. Advances in Neural Information Processing Systems, 28, 91-99.</mixed-citation></ref><ref id="hanspub.34037-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Redmon, J., Divvala, S., Girshick, R. and Farhadi, A. (2016) You Only Look Once: Unified, Real-Time Object Detection. Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, Las Vegas, 27-30 June 2016, 779-788. &lt;br&gt;https://doi.org/10.1109/CVPR.2016.91</mixed-citation></ref><ref id="hanspub.34037-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Redmon, J. and Farhadi, A. (2017) YOLO9000: Better, Faster, Stronger. Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, Honolulu, 21-26 July 2017, 6517-6525.  
&lt;br&gt;https://doi.org/10.1109/CVPR.2017.690</mixed-citation></ref><ref id="hanspub.34037-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Nodes, T. and Gallagher, N.C.J. (1982) Median Filters: Some Modi-fications and Their Properties. IEEE Transactions on Acoustics, Speech, and Signal Processing, 30, 739-746. &lt;br&gt;https://doi.org/10.1109/TASSP.1982.1163951</mixed-citation></ref><ref id="hanspub.34037-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Pérez, P., Gangnet, M. and Blake, A. (2003) Poisson Image Editing. ACM Transactions on Graphics, 22, 313-318.  
&lt;br&gt;https://doi.org/10.1145/882262.882269</mixed-citation></ref><ref id="hanspub.34037-ref17"><label>17</label><mixed-citation publication-type="other" xlink:type="simple">Simonyan, K. and Zisserman, A. (2015) Very Deep Convolutional Networks for Large-Scale Image Recognition. International Conference on Learning Representations, San Diego, 7-9 May 2015, 1-14.</mixed-citation></ref><ref id="hanspub.34037-ref18"><label>18</label><mixed-citation publication-type="other" xlink:type="simple">Szegedy, C., Liu, W., Jia, Y., et al. (2015) Going Deeper with Convolutions. Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, Boston, 7-12 June 2015, 1-9. &lt;br&gt;https://doi.org/10.1109/CVPR.2015.7298594</mixed-citation></ref><ref id="hanspub.34037-ref19"><label>19</label><mixed-citation publication-type="other" xlink:type="simple">Lin, M., Chen, Q. and Yan, S.C. (2014) Network in Net-work.</mixed-citation></ref><ref id="hanspub.34037-ref20"><label>20</label><mixed-citation publication-type="other" xlink:type="simple">Lecun, Y., Bottou, L., Bengio, Y., et al. (1998) Gradient-Based Learning Applied to Document Recognition. Proceedings of the IEEE, 86, 2278-2324. &lt;br&gt;https://doi.org/10.1109/5.726791</mixed-citation></ref></ref-list></back></article>