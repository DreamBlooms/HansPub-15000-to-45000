<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">SEA</journal-id><journal-title-group><journal-title>Software Engineering and Applications</journal-title></journal-title-group><issn pub-type="epub">2325-2286</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/SEA.2018.71002</article-id><article-id pub-id-type="publisher-id">SEA-23811</article-id><article-categories><subj-group subj-group-type="heading"><subject>SEA20180100000_86834731.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  一种基于混合式双层拓扑的发布/订阅系统
  A Publishing/Subscription System Based on the Hybrid Two-Layer Topology
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>郑</surname><given-names>力明</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>孙</surname><given-names>伟东</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><addr-line>武警警官学院电子技术系，四川 成都</addr-line></aff><aff id="aff3"><addr-line>国防科技大学计算机学院并行与分布处理国防科技重点实验室，湖南 长沙</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>ygrsun@163.com(郑力)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>24</day><month>02</month><year>2018</year></pub-date><volume>07</volume><issue>01</issue><fpage>13</fpage><lpage>23</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   基于内容的快速数据分发是分布式环境中资源汇聚和共享的一项关键技术。为更好的满足动态网络环境中对数据分发实时性的要求，提出一种基于混合式双层拓扑的发布/订阅系统，它包含一种基于内容的双层拓扑结构CBDLO，下层是一个非结构化的拓扑结构，上层是多个对应不同属性的分布式平衡二叉树；一种基于内容的带踪迹路由算法CRAWL，以随机行走的方式在下层非结构化拓扑上转发数据，同时为对应数据寻找相应的上层属性拓扑的入口；一种基于属性计数的分布式匹配算法CDM，在上层的分布式平衡二叉树上并行的匹配数据的各个属性，并把匹配的数据发送到对数据感兴趣的节点上。实验结果表明，该系统能够有效支持大规模动态网络中的数据分发，降低分发开销和匹配延迟。 Data distribution is a key technology for resources convergence and sharing in distributed environment. To better meet the requirement for data distribution real-time dynamic network environment, we put forward a publishing/subscription system based on the hybrid two-layer topology. It contains a two-layer topology CBDLO based on content; the lower is an unstructured topology structure; the upper is multiple corresponding to different attributes of distributed balanced binary tree; CRAWL forwards the data on the lower unstructured topology in the form of random walk, so that the data can be sent to the corresponding upper topology entry; it also includes a matching algorithm named CDM for the parallel matching data properties on the upper distributed and balanced binary tree and transmitting the matched data to the nodes that are interested in the data. The experimental results show that the system can effectively support large-scale data distribution in a dynamic network, reducing distribution costs and matching delays.
    
  
 
</p></abstract><kwd-group><kwd>数据分发，发布/订阅消息，路由，数据匹配, Data Distribution</kwd><kwd> Publishing/Subscribing Message</kwd><kwd> Routing</kwd><kwd> Data Matching</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>一种基于混合式双层拓扑的发布/订阅系统<sup> </sup></title><p>郑力明<sup>1</sup>，孙伟东<sup>2</sup></p><p><sup>1</sup>武警警官学院电子技术系，四川 成都</p><p><sup>2</sup>国防科技大学计算机学院并行与分布处理国防科技重点实验室，湖南 长沙</p><p>收稿日期：2018年2月7日；录用日期：2018年2月19日；发布日期：2018年2月26日</p><disp-formula id="hanspub.23811-formula18"><graphic xlink:href="//html.hanspub.org/file/2-2690275x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>基于内容的快速数据分发是分布式环境中资源汇聚和共享的一项关键技术。为更好的满足动态网络环境中对数据分发实时性的要求，提出一种基于混合式双层拓扑的发布/订阅系统，它包含一种基于内容的双层拓扑结构CBDLO，下层是一个非结构化的拓扑结构，上层是多个对应不同属性的分布式平衡二叉树；一种基于内容的带踪迹路由算法CRAWL，以随机行走的方式在下层非结构化拓扑上转发数据，同时为对应数据寻找相应的上层属性拓扑的入口；一种基于属性计数的分布式匹配算法CDM，在上层的分布式平衡二叉树上并行的匹配数据的各个属性，并把匹配的数据发送到对数据感兴趣的节点上。实验结果表明，该系统能够有效支持大规模动态网络中的数据分发，降低分发开销和匹配延迟。</p><p>关键词 :数据分发，发布/订阅消息，路由，数据匹配</p><disp-formula id="hanspub.23811-formula19"><graphic xlink:href="//html.hanspub.org/file/2-2690275x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2018 by authors and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/2-2690275x7_hanspub.png" /> <img src="//html.hanspub.org/file/2-2690275x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>数据分发是指将一组数据从一个或者多个数据源节点发送到多个目标节点的过程，其关键在于数据需要由源节点出发经由动态异构的网络环境传送到地理上分散的目标节点集合。数据分发已成为众多分布式应用的基本组成部分，应急响应系统的不断涌现对数据分发的实时性提出较高的要求。例如网络中心战 [<xref ref-type="bibr" rid="hanspub.23811-ref1">1</xref>] 中，军事情报必须在尽可能短的时间内从源节点准确的传送到感兴趣的目标节点上。再如地震发生后，美国地质勘探局的Shake Cast [<xref ref-type="bibr" rid="hanspub.23811-ref2">2</xref>] 系统将震后公共设施损毁图发送给感兴趣的用户，以帮助受灾人群快速选择逃生路线。</p><p>发布/订阅模型是用于紧急应用的异构数据分发的一种关键技术。在发布/订阅的模式中，数据的生产者(数据源，又称为发布者)与消费者(目标节点，又称为订阅者)之间所传输的数据称为事件，订阅者通过发出订阅事件来声明自己对数据的兴趣，通过取消订阅事件来声明不再感兴趣的数据；发布者根据之前的订阅条件将其产生的事件(数据)经由一些中间节点分发给相应的订阅者。通过将发送者和接收者在空间，时间和同步上解耦 [<xref ref-type="bibr" rid="hanspub.23811-ref3">3</xref>] ，发布/订阅系统能够很容易的扩展至较大规模。</p><p>发布/订阅系统根据订阅模型的不同可分为基于通道、基于主题、基于类型和基于内容四类 [<xref ref-type="bibr" rid="hanspub.23811-ref3">3</xref>] 。基于通道的发布/订阅系统的表达能力很弱，最初的发布/订阅系统一般是基于主题 [<xref ref-type="bibr" rid="hanspub.23811-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.23811-ref5">5</xref>] [<xref ref-type="bibr" rid="hanspub.23811-ref6">6</xref>] 的。基于类型的发布/订阅系统将面向对象的类型模型引入到系统中，根据事件类型来过滤事件，但系统效率较低，现有应用很少。基于内容的发布/订阅系统 [<xref ref-type="bibr" rid="hanspub.23811-ref7">7</xref>] [<xref ref-type="bibr" rid="hanspub.23811-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.23811-ref9">9</xref>] [<xref ref-type="bibr" rid="hanspub.23811-ref10">10</xref>] 提供丰富的表达能力，其订阅是多个维度上的布尔表达式。为了满足日益增加的复杂订阅的需求，基于内容的发布/订阅是本文的研究对象。</p><p>已有的基于内容的发布/订阅系统难以满足应急响应系统对数据分发实时性的要求。在基于非结构化拓扑的发布/订阅系统中，节点之间采用随机拓扑以保证链路的可靠性，然而非结构化拓扑中节点之间不具有稳定的连接关系，消息的转发往往是随机的，这导致较高的通信冗余 [<xref ref-type="bibr" rid="hanspub.23811-ref11">11</xref>] [<xref ref-type="bibr" rid="hanspub.23811-ref12">12</xref>] 。在基于结构化拓扑的发布/订阅系统中，节点间的邻居关系通常由确定性的算法(如DHT)严格控制，资源(或资源的元信息)的放置也是由确定性的算法精确发布到特定的节点上，结构化拓扑通常具有较低的节点定位延迟，然而拓扑的维护开销较高 [<xref ref-type="bibr" rid="hanspub.23811-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.23811-ref13">13</xref>] [<xref ref-type="bibr" rid="hanspub.23811-ref14">14</xref>] 。</p><p>本文提出一种基于混合式双层拓扑的发布/订阅系统以支持快速数据分发。首先，提出一种混合式双层拓扑CBDLO。CBDLO融合了非结构化拓扑的灵活性和可扩展性优点，以及结构化拓扑的准确性和低消息开销的特点，为动态环境下的快速数据分发提供鲁棒的、低开效、高效率的路由和匹配支持；其次，为降低CBDLO中下层拓扑的数据路由的消息开销，提出一种基于内容的带踪迹路由算法CRAWL；再次，为降低CBDLO中上层拓扑的数据匹配的延迟，提出一个基于计数的分布式匹配算法CDM。基于Peersim模拟器的实验结果表明，CBDLO能够有效支持大规模动态网络中的数据分发，CRAWL算法能够有效降低分发开销，CDM算法在数据匹配时能够有效降低匹配延迟。</p></sec><sec id="s4"><title>2. 系统结构</title><p>为了更好的发挥结构化拓扑和非结构化拓扑的优点，摒弃它们的缺点，针对动态网络环境中基于内容的快速数据分发的拓扑构建问题，提出了一种基于内容的双层拓扑结构CBDLO (Content-based Double-Layered Overlay)。CBDLO融合了非结构化拓扑的灵活性和可扩展性优点，以及结构化拓扑的准确性和低消息开销的特点。</p><p>CBDLO的下层是一个非结构化的网络拓扑以维护网络的连通性，其逻辑结构类似于随机图(Random Graph)。每个节点保存一定数量的其它节点作为其邻居—称为视图(View)，并定期的更新其视图，以便拓扑结构能够及时的反映网络的连通性和动态性。在CBDLO中采用随机抽样的方式定期的选择节点并更新节点的视图，这种方式使得拓扑基本上维持了随机图的结构，也基本保持了网络的“小世界模型”特性和幂律特性。每个节点同时还拥有一张属性拓扑入口点查询表APT (Access Point Lookup Table)，缓存有一定数量的上层属性拓扑的信息，以支持其它节点的加入和数据转发时的路由。</p><p>上层是构建在这个非结构化网络拓扑之上的属性拓扑，为高效的分发路由和匹配提供支持。CBDLO依据每个节点的订阅属性把节点分簇，让拥有相同订阅属性的节点构成一个簇，每个簇即是一个属性拓扑。CBDLO依据订阅中属性值的分布，把整个属性值空间分割成若干个相连却互不相交的子空间，每个子空间对应一个虚拟节点，所有的虚拟节点又被映射到实际节点上，并组织成一棵分布式的平衡二叉树结构。</p><p>在CBDLO中，当有数据产生以后，首先通过随机行走的方式在下层的拓扑结构上转发，匹配到相应的属性拓扑以后，进入到上层属性拓扑中，开始以确定的方式在属性拓扑中快速的分发数据。图1表示了CBDLO的双层网络拓扑结构。</p></sec><sec id="s5"><title>3. CRAWL算法描述</title><p>在CBDLO下层的拓扑中，数据以随机行走的方式转发，并在转发的每个节点上通过属性拓扑入口点查询表APT查找与数据匹配的属性拓扑。为了避免在随机行走的过程中形成回路，提出了一种基于内容的带踪迹路由算法CRAWL (Content-based Routing Algorithm with Labeled Trace)，在转发的数据上携带了一个路径踪迹(Trace)缓冲区，用来记录最近经过的路径。为了防止踪迹带来的“路径阻塞”，引入了路径的恢复机制。</p><sec id="s5_1"><title>3.1. 算法过程</title><p>源节点产生数据以后，分解数据的各个属性，然后为每个属性启动一个随机行走的过程向外散布数据。因此，属于一个数据的多个属性之间以并行的方式向外散布数据，加快了数据的分发过程。每个节点在收到数据以后在它的属性拓扑入口点查询表中查找对应的属性拓扑，如果找到则把数据直接转发到</p><p>图1. CBDLO的双层网络拓扑结构</p><p>图2. 属性拓扑间的路由算法</p><p>相应的属性拓扑上，否则就从它的邻居节点中随机的选择一个节点转发数据。为了防止短期内数据回到刚刚已经收到过的该数据的节点上形成回路，造成冗余消息，在分发的数据上附加了一个长度为k的踪迹列表(Trace)，用以记录该数据最近刚刚走过的节点。</p><p>下层拓扑的随机转发路由过程如图2所示。step 1把数据分解为单一属性-值对的形式，并把源节点加入到Trace表中，然后从邻居节点中随机选择一个节点把数据发送出去，从step 1可以看出，多个属性的发送过程是并行的；step 2给出的是当某个节点收到一个属性数据以后的处理过程，step 2.1表示它先在自己的入口点查询表中查找，找到就直接发送到该节点，并终止路由过程，否则在step 2.2中判断是否达到路由的最大跳数，没有达到就进入step 2.2，首先把当前节点加入到Trace表中，然后从邻居节点中随机的选择一个不在Trace表中的节点并且把数据发送到该节点。</p></sec><sec id="s5_2"><title>3.2. 路径的阻塞与恢复</title><p>Trace表虽然能够防止数据形成回路，减小冗余的消息，但是它可能会引起“路径阻塞”。路径阻塞是指在随机行走的过程中到达的某个节点的邻居全部位于Trace表中时，将无路可走。这种情况可以用图3来解释。在图3中节点A启动一个随机行走过，沿着箭头所指的路径，经过B &#224; C &#224; D &#224; E &#224; F，但是节点F位于网络的边缘，只有一个邻居节点，因为Trace表的原因，虽然此时没有找到匹配的属性拓扑，也没有达到最大跳步数，但是已经“无路可走”。路径回复是指放生路径阻塞以后，从Trace表中随机的选择一个节点，重新启动一个随机行走的过程，但是为了避免陷入不断的路径阻塞、路径恢复的循环中，每次重新启动的随机行走的最大跳步数应减为原来最大跳步数的一半。</p></sec></sec><sec id="s6"><title>4. CDM算法描述</title><p>数据经过CBDLO下层拓扑的随机转发找到上层的属性拓扑以后，开始在树上快速的匹配分发。针对上层的平衡二叉树拓扑上的数据匹配分发过程，提出了一个基于计数的分布式匹配算法CDM (Counter- based Distributed Matching Algorithm)。CDM算法在上层的分布式平衡二叉树上并行的匹配数据的各个属性，并把匹配的数据发送到对数据感兴趣的节点上，订阅节点对匹配的属性个数进行计数，当匹配的属性个数超过订阅的属性个数时接受数据。</p><p>数据到达属性拓扑以后，只需要找到匹配属性值的节点，并把数据转发出去。属性拓扑是一个平衡二叉树结构，因此匹配的过程是一个在二叉树上传递的过程，但是在树上传递之前和结束以后需要执行两次转换，因为属性拓扑的入口点是实际的订阅节点，所以在树上传递以前需要把实际的订阅者转化为相应属性拓扑上的虚拟节点；当找到匹配的虚拟节点以后，需要把数据发送到相应的实际节点。</p><p>当属性拓扑中的入口节点收到一个数据以后会从其虚拟节点列表中查找分配给它的所有虚拟节点，并查找和数据属性相匹配的虚拟节点，完成第一次转换，然后开始匹配过程。当找到匹配数据值的虚拟节点以后，会把数据发送到虚拟节点上存储的实际节点列表(Node List)中的所有实际节点，完成第二次转换。</p><p>图3. 路径阻塞情况示意图</p><p>具体的匹配过程如图4所示，其中step 1收到数据的节点首先在它的虚拟节点列表中查找是否有与当前收到的数据相匹配的属性，如果找到，则从找到的虚拟节点查找包含此属性值的虚拟节点；如果没有找到，则可能是该订阅者已经离开，所以需要重新在下层拓扑中重新启动一个属性拓扑查找的随机行走过程。为了防止每次都找不到而陷入死循环，每次启动的随机行走过程会把最大的跳步数减半。</p></sec><sec id="s7"><title>5. 测试结果与分析</title><sec id="s7_1"><title>5.1. 方法实现</title><p>Peersim [<xref ref-type="bibr" rid="hanspub.23811-ref15">15</xref>] 是一款P2P系统的模拟器，它以一种组件开发的方式来支持P2P系统模拟，因此使得协议的开发变得容易。Peersim是用Java语言开发的模拟器，它支持两种开发模式，周期驱动(Cycle Driven)的模式和事件驱动(Event Driven)的模式。Peersim支持节点规模巨大的模拟，适应并支持大规模网络的可扩展性和动态性。因此在CBDLO的模拟测试中，选用Peersim模拟器。为了更好的测试CBDLO的性能，以事件驱动的方式在Peersim上实现了拓扑结构，并对测试结果进行了分析。</p></sec><sec id="s7_2"><title>5.2. 参数设置</title><p>假定属性在订阅中的出现服从Zip-f分布，即对任何一个订阅，属性i在其中出现的概率为 μ &#215; i − α ，α, μ是Zip-f分布的参数，且 0 &lt; α , μ &lt; 1 。也就是说常见的属性大多数订阅都拥有，一些特殊的属性只被一些特殊的订阅拥有。对于CBDLO 来说，虚拟节点的数目最多等于该属性的值空间被订阅所分割产生</p><p>图4. 属性拓扑内的路由算法</p><p>的最大分割数，不超过 max ( V N ) = subscriptions + 2 。因为属性拓扑是一颗平衡二叉树，所以树的高度等于 h = log 2 N ，N是属性拓扑中虚拟节点的总数。</p></sec><sec id="s7_3"><title>5.3. 路由的消息开销</title><p>为了说明CBDLO性能，在Peersim上实现了另外一种简单的协议Simple以及TERA来和CBDLO做比较。Simple是简单的基于内容的洪泛式分发协议。在这个简单的协议中，拓扑结构是一个类似CBDLO下层拓扑的非结构化随机图拓扑，而数据转发过程则首先在本地进行属性的匹配，如果匹配则表明当前节点订阅了该数据，所以接收数据，然后再把数据转发出去，直到到达消息的最大时限(跳步数)。这个协议无疑是很简单的，但是消息的开销也很大，而且也不能保证能够覆盖所有对数据感兴趣的节点。</p><p>首先假定系统的规模为3000个节点，视图的大小是10，本地的最大订阅缓存数是100，转发的最大跳步数是10，则有如下的测试结果。</p><p>一个有效的系统不仅要求消息冗余的开销低，而且要求能够把数据准确的发送到相应的需求节点上，为了刻画系统的有效性，我们首先给出有效分发的消息开销的定义：</p><p>有 效 分 发 的 消 息 开 销 = 系 统 的 所 有 消 息 数 目 系 统 实 际 成 功 匹 配 的 消 息 理 论 上 所 有 可 能 的 匹 配</p><p>在图5中，Simple协议的第一个点表示系统的所有消息总数是68,605个，理论上应该匹配的发布消息数应该是408，但是实际匹配的数目只有68个，所以有效分发的消息开销为68,605/(68/408) = 411,630。</p><p>从图5可以看出，CRAWL算法极大的降低了系统的有效分发开销。因为随着订阅数目的增加，在随机转发的过程中有匹配的概率增加，所以随着订阅的增加Simple协议的有效分发开销也逐渐降低。但</p><p>图5. 有效分发的开销随订阅总数的变化</p><p>是订阅的增加对CBDLO的影响极小，因为模拟的过程中订阅数目一定之后，一定时间内产生的消息总数是固定的，而CBDLO的CRAWL路由算法只有第一阶段受其影响，第二阶段的开销是固定的，等于属性拓扑树的高度，但是对第一阶段产生影响的实际上是属性的数目，而且CBDLO能够把数据准确的发送到所有对数据的需求节点上，因此，CRAWL算法受订阅数目的影响很小。</p><p>图6展示了有效分发的消息开销与最大跳步数的关系。与图5比较可以发现，与订阅数相比，当跳步数增加的时候，CRAWL算法的有效分发的开销降低要明显一点。但是和简单的随机算法相比较，仍然是很稳定的。Simple算法开始的时候受跳步数影响而有效分发的消息开销迅速降低，但是当达到一定程度之后，却不再降低，甚至有所回升。原因是Simple算法随着跳步数的增加消息会不断的增加，但是跳步数越大，对它分发准确性的影响就越小，反而是消息本身成了主要开销。</p><p>图7比较了TERA和CBDLO在数据分发时的消息开销随节点变化的情况。在实验中节点的数目从</p><p>图6. 有效分发的消息开销随最大跳步数的变化</p><p>图7. CBDLO与TERA分发的消息开销比较</p><p>100到1,000,000,000变化。TERA中有100个主题，文献 [<xref ref-type="bibr" rid="hanspub.23811-ref16">16</xref>] 的实验表明在TERA的下层拓扑上进行随机转发的命中率随着入口点查询表大小的增加而提高，当入口点查询表的大小为50、随机行走的最大跳步数为10时，命中率已经能够达到90%，在规模较大的网络中提高入口点查询表的大小时，命中率并不会有特别显著的提高，因此在综合考虑空间和效率的情况下，TERA的入口点查询表的大小宜定为50。CBDLO在下层拓扑的命中率也随着入口点查询表的大小的增加而提高，但是要在最大跳步数为10的情况下让命中率达到90%，则入口点查询表的大小不能低于100，因此CBDLO的入口点查询表大小被设定为100。在上面的条件下，得到如图7所示的结果，实验结果表明，随着节点数目的增加，在网络规模较小时，TERA和CBDLO的消息开销相差不大，这是因为网络规模较小时TERA的广播消息开销并不大，而CBDLO却有较多的下层消息开销；但是随着网络规模增大，TERA的消息开销迅速增大，而CBDLO增加的更加缓慢，表明CBDLO的上层结构化拓扑有效的降低了消息的开销。因此CBDLO比TERA表现出更大的优势，更加适应大规模网络的数据分发。</p></sec><sec id="s7_4"><title>5.4. 内容匹配的开销</title><p>传统的基于内容的分发往往把属性的匹配过程集中到一个或少数几个节点上，使得属性的匹配过程成了快速分发的一个瓶颈，而且使得少数节点的负载过重，严重影响了系统的效率，而且损害了系统的可扩展性。CBDLO把匹配的过程分布到网络上不同的节点上，使得匹配的过程得以并行分布的进行，不但提高了匹配的执行速度，而且降低了单个节点的开销。CRAWL通过两个机制实现了数据匹配过滤的分布化，第一个机制是分解一个数据的多个属性，让不同的属性在不同的拓扑上进行，即使是在下层的拓扑上，多个属性之间也是并行的；第二个机制是通过分割属性的值空间为相连但互不相交的子空间，把属于不同范围的属性值分布到不同的子空间去执行。</p><p>假设属性的值空间范围[a, b]，被m个节点产生的n个订阅分割，则产生的子空间的个数，也就是虚拟节点的个数满足： | V i r t u a l N o d e | ≤ n + 2 ，内容匹配的开销取决于每个属性数据分发需要经过的总跳数Hop以及每一跳的匹配开销。在Simple算法中，一个节点对一个订阅需要执行的匹配操作数等于属性的个数，因此如果用m表示订阅中属性的平均数目，s表示本地节点发布的订阅数目，则每个节点需要 m &#215; s 个属性的匹配开销。</p><p>在CRAWL算法中，开销取决于两个阶段，第一个阶段是下层拓扑上的随机转发，第二个阶段是上层拓扑上的确定转发。在第一个阶段，每一跳的开销等于执行 个属性的匹配开销，因为在CRAWL算法中每一步只对一个属性进行匹配；在第二个阶段执行每一步的开销是1。CBDLO中数据转发经过的跳步数H由两个部分组成，第一部分是随机转发的跳步数，第二部分是树的高度。因为多个属性之间是完全并行的，所以数据的分发经过的跳步数取决于最慢的属性的跳步数。</p><p>H = H stage 1 + H stage 2</p><p>因此CBDLO的匹配开销为：</p><p>Cost ( CBDLO ) = | APT | &#215; H stage 1 + 1 &#215; H stage 2</p><p>实验中，假定订阅服从Zip-f分布，邻居节点的视图为20，APT的大小为20建立模拟实验，最大跳步数是30。</p><p>图8显示了匹配的开销随着订阅数目的变化情况，因为Simple协议是泛洪的协议，所以在它的纵坐标值上乘了一个系数0.1，而在CBDLO的纵坐标轴上乘了一个系数1/8，因为属性的平均数目是8，这样我们看到的实际就是源节点启动的单个转发中产生的匹配开销，虽然Simple所乘的系数比CBDLO的小，但是CBDLO依然展示了巨大的优势。从图中还可以发现，当订阅数目较小(&lt;3000)时，CBDLO随着订阅数目的增大反而减小，这是因为订阅数目比较小时，随着订阅的增大APT的命中率会不断提高，因而第一阶段的匹配开销减小，但第二阶段的开销等于树的高度，当数目较小时，取对数得到的结果变化很小。</p><p>图9显示了匹配开销随属性总数的变化情况。图中纵坐标的处理和图8的处理相同。从图中可以看出CBDLO依然展示了巨大的优势。属性数目的变化对CBDLO的影响很小，充分展示了并行匹配的效果。</p></sec></sec><sec id="s8"><title>6. 结语</title><p>基于内容的快速数据分发是大规模分布式系统构建的关键技术，对于各种以数据为中心的应用意义重大。然而，广域网络的动态性与异构性、数据集的多样性与动态型，以及客户请求的多样性，都给构</p><p>图8. 匹配开销与订阅数目之间的关系</p><p>图9. 匹配开销与属性总数之间的关系</p><p>建高效鲁棒的快速数据分发系统带来了很大的挑战。本文针对动态网络环境下的快速数据分发技术进行了深入研究，提出一种基于混合式双层拓扑的发布/订阅系统，它包含一种基于内容的双层拓扑结构CBDLO，一种基于内容的带踪迹路由算法CRAWL和一种基于属性计数的分布式匹配算法CDM。实验结果表明，该系统对动态网络有很强的自适应性，能够有效的避免回路，降低冗余的消息开销和匹配延迟，提高了分发的效率。</p></sec><sec id="s9"><title>基金项目</title><p>本文受四川省科技厅重点研发项目《基于物联网的实时数字营区安全监控系统》(2017FZ0011)资助。</p></sec><sec id="s10"><title>文章引用</title><p>郑力明,孙伟东. 一种基于混合式双层拓扑的发布/订阅系统A Publishing/Subscription System Based on the Hybrid Two-Layer Topology[J]. 软件工程与应用, 2018, 07(01): 13-23. http://dx.doi.org/10.12677/SEA.2018.71002</p></sec><sec id="s11"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.23811-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Dell-Imagine, R. (1976) JTIDS—An Overview of the System Design and Implementation (Joint Tactical Information Distribution System). Position Location and Navigation Symposium, San Diego, Calif, 16-21 April 1976, 212-215.</mixed-citation></ref><ref id="hanspub.23811-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">ShakeCast. (2014) https://earthquake.usgs.gov/earthquakes/</mixed-citation></ref><ref id="hanspub.23811-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Eugster, P.T., Felber, P., Guerraoui, R., et al. (2003) The Many Faces of Publish/Subscribe. ACM Computing Surveys (CSUR), 35, 114-131. &lt;br&gt;https://doi.org/10.1145/857076.857078</mixed-citation></ref><ref id="hanspub.23811-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Castro, M., Druschel, P., Kermarrec, A., et al. (2002) SCRIBE: A Large-Scale and Decentralized Application-Level Multicast Infrastructure. IEEE Journal on Selected Areas in Communications, 20, 1489-1499. 
&lt;br&gt;https://doi.org/10.1109/JSAC.2002.803069</mixed-citation></ref><ref id="hanspub.23811-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Rahimian, F., Girdzijauskas, S., Payberah, A.H., et al. (2011) Vitis: A Gossip-Based Hybrid Overlay for Internet-Scale Publish/Subscribe Enabling Rendezvous Routing in Unstructured Overlay Networks. IEEE International Parallel &amp; Distributed Processing Symposium (IPDPS), Anchorage, AK, 16-20 May 2011, 746-757.</mixed-citation></ref><ref id="hanspub.23811-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Zheng, Z., Wang, Y. and Ma, X. (2011) PeerChatter: A Peer-to-Peer Architecture for Data Distribution over Social Networks. Information—An International Interdisciplinary Journal, 15, 259-266.</mixed-citation></ref><ref id="hanspub.23811-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Pietzuch, P. and Hermes, B.J. (2002) A Distributed Event-Based Middleware Architecture. 22nd International Conference on Distributed Computing Systems Workshops, Vienna, 2-5 July 2002, 611-618.  
&lt;br&gt;https://doi.org/10.1109/ICDCSW.2002.1030837</mixed-citation></ref><ref id="hanspub.23811-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Gupta, A., Sahin, O.D., Agrawal, D., et al. (2004) Meghdoot: Content-Based Publish/Subscribe over P2P Networks. Proceedings of the 5th ACM/IFIP/USENIX International Conference on Middleware (Middleware), Toronto, 18-22 October 2004, 254-273.</mixed-citation></ref><ref id="hanspub.23811-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Grummt, E. (2011) Fine-Grained Parallel XML Filtering for Content-Based Publish/Subscribe Systems. Proceedings of the 5th ACM International Conference on Distributed Event-Based System, New York, 11-15 July 2011, 219-228. 
&lt;br&gt;https://doi.org/10.1145/2002259.2002288</mixed-citation></ref><ref id="hanspub.23811-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Li, M., Ye, F., Kim, M., et al. (2011) A Scalable and Elastic Publish/Subscribe Service. IEEE International Parallel &amp; Distributed Processing Symposium (IPDPS), Alaska, 16-20 May 2011, 1254-1265.</mixed-citation></ref><ref id="hanspub.23811-ref11"><label>11</label><mixed-citation publication-type="other" xlink:type="simple">Cao, F. and Singh, J.P. (2005) MEDYM: Match-Early with Dynamic Multicast for Content-Based Publish-Subscribe Networks. Proceedings of the ACM/IFIP/USENIX 2005 International Conference on Middleware (Middleware), New York, 1 November 2005, 292-313. &lt;br&gt;https://doi.org/10.1007/11587552_15</mixed-citation></ref><ref id="hanspub.23811-ref12"><label>12</label><mixed-citation publication-type="other" xlink:type="simple">Wong, B. and Guha, S. (2008) Quasar: A Probabilistic Publish-Subscribe System for Social Networks. Proceedings of the 7th International Workshop on Peer-to-Peer Systems, Tampa Bay, 25-26 February 2008, 2-7.</mixed-citation></ref><ref id="hanspub.23811-ref13"><label>13</label><mixed-citation publication-type="other" xlink:type="simple">Aekaterinidis, I. and Triantafillou, P. (2006) Pastry Strings: A Comprehensive Content-Based Publish/Subscribe DHT Network. IEEE 26th International Conference on Distributed Computing Systems (ICDCS), Lisboa, 4-7 July 2006, 23-32. &lt;br&gt;https://doi.org/10.1109/ICDCS.2006.63</mixed-citation></ref><ref id="hanspub.23811-ref14"><label>14</label><mixed-citation publication-type="other" xlink:type="simple">Baldoni, R., Marchetti, C., Virgillito, A., et al. (2005) Content-Based Publish-Subscribe over Structured Overlay Networks. IEEE 25th International Conference on Distributed Computing Systems (ICDCS), Columbus, 6-10 June 2005, 437-446. &lt;br&gt;https://doi.org/10.1109/ICDCS.2005.19</mixed-citation></ref><ref id="hanspub.23811-ref15"><label>15</label><mixed-citation publication-type="other" xlink:type="simple">Peersim. (2014) http://peersim.sourceforge.net/#docs</mixed-citation></ref><ref id="hanspub.23811-ref16"><label>16</label><mixed-citation publication-type="other" xlink:type="simple">Baldoni, R., Beraldi, R. and Quema, V. (2007) TERA: Topic-Based Event Routing for Peer-to-Peer Architectures. Proceedings of the 2007 Inaugural International Conference on Distributed Event-Based Systems, Toronto, 20-22 June 2007, 157-164. &lt;br&gt;https://doi.org/10.1145/1266894.1266898</mixed-citation></ref></ref-list></back></article>