<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">CSA</journal-id><journal-title-group><journal-title>Computer Science and Application</journal-title></journal-title-group><issn pub-type="epub">2161-8801</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/CSA.2020.102031</article-id><article-id pub-id-type="publisher-id">CSA-34262</article-id><article-categories><subj-group subj-group-type="heading"><subject>CSA20200200000_86291657.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>信息通讯</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于CSS + Div的固定宽度与变宽度网页布局剖析
  Analysis of Fixed and Variable Width Web Page Layout Based on CSS + Div
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>高</surname><given-names>葵</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>付</surname><given-names>晓翠</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>李</surname><given-names>蔚妍</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>山东农业大学信息科学与工程学院，山东 泰安</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>31</day><month>01</month><year>2020</year></pub-date><volume>10</volume><issue>02</issue><fpage>303</fpage><lpage>311</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
   
   CSS + Div是当前网页设计中实现页面布局的常用技术，可以实现页面代码更少，读取速度更快，更新更容易，页面布局效果更丰富。本文通过举例，给出使用CSS + Div技术，通过Div标签宽度的数值设置，等比例设置，绝对定位法和改进浮动法设置实现固定宽度和变宽度网页布局的使用方法和注意事项，到达掌握的目的。 CSS + Div is a commonly used technology to realize page layout in current web page design, which can realize fewer page codes, faster reading speed, easier updating and richer page layout effect. By way of example, this paper gives the use method and precautions of using CSS + Div technology to realize the fixed width and variable width web page layout through the numerical setting of Div label width, equal proportion setting, absolute positioning method and improved floating method setting, so as to achieve the purpose of mastering. 
  
 
</p></abstract><kwd-group><kwd>CSS，Div，固定宽度布局，变宽度布局，等比例，改进浮动法, CSS</kwd><kwd> Div</kwd><kwd> Fixed Width Layout</kwd><kwd> Variable Width Layout</kwd><kwd> Equal Ratio</kwd><kwd> Improved Floating Method</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于CSS + Div的固定宽度与变宽度网页布局 剖析<sup> </sup></title><p>高葵，付晓翠，李蔚妍</p><p>山东农业大学信息科学与工程学院，山东 泰安</p><p>收稿日期：2020年2月1日；录用日期：2020年2月14日；发布日期：2020年2月21日</p><disp-formula id="hanspub.34262-formula77"><graphic xlink:href="//html.hanspub.org/file/13-1541673x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>CSS + Div是当前网页设计中实现页面布局的常用技术，可以实现页面代码更少，读取速度更快，更新更容易，页面布局效果更丰富。本文通过举例，给出使用CSS + Div技术，通过Div标签宽度的数值设置，等比例设置，绝对定位法和改进浮动法设置实现固定宽度和变宽度网页布局的使用方法和注意事项，到达掌握的目的。</p><p>关键词 :CSS，Div，固定宽度布局，变宽度布局，等比例，改进浮动法</p><disp-formula id="hanspub.34262-formula78"><graphic xlink:href="//html.hanspub.org/file/13-1541673x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2020 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/13-1541673x7_hanspub.png" /> <img src="//html.hanspub.org/file/13-1541673x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>基于CSS + Div的排版是当前网页设计中实现页面布局的常用技术。它使用</p></sec><sec id="s4"><title>2. 使用举例</title><sec id="s4_1"><title>2.1. 固定宽度布局</title><p>一般情况下，此类页面布局的列都有固定的宽度，在这里以经典的三行两列宽度固定布局为例讲解固定分栏布局。</p><p>例题1：完成页面，效果如下图1。</p><p>图1. 网页布局1</p><p>对应的主要代码如下：</p><p>固定宽度布局</p><p>分析：可以看到这是一个三行两列宽度固定布局。所有div元素宽度固定，页面显示效果固定不变，不会随着浏览器窗口大小变化而变化。</p><p>如上例，在浏览器窗口变小的情况下，显示如下图2所示，内容不能完整显示。</p><p>图2. 网页布局2</p><p>使用固定宽度布局实现的页面布局，在浏览器窗口大小变化的情况下，不能看到页面的完整结构 [<xref ref-type="bibr" rid="hanspub.34262-ref2">2</xref>]，而使用变宽度布局方式可以弥补这个缺陷。</p></sec><sec id="s4_2"><title>2.2. 变宽度布局</title><p>变宽度布局，可以使内容的整体宽度随浏览器窗口宽度的变化而同步变化 [<xref ref-type="bibr" rid="hanspub.34262-ref3">3</xref>]。宽度变化有两种不同的情况，这里以两列为例。一种情况是两列按照一定比例同时变化的，另一种情况是一列固定，另一列变化宽度。</p><p>1) 等比例变宽布局</p><p>等比例变宽布局是各个Div区域的宽度会等比例适应浏览器窗口。</p><p>例题2：完成页面，效果如下图3，图4所示。</p><p>图3是大浏览器窗口下显示效果，图4是小浏览器窗口下显示效果。</p><p>在例题1的基础上，修改代码如下：</p><p>图3. 网页布局3</p><p>图4. 网页布局4</p><p>#container {</p><p>width: 80%;/*删除固定宽度，改为比例宽度*/</p><p>margin:0 auto;</p><p>}</p><p>#header {</p><p>……/*与前面相同*/</p><p>}</p><p>#mainbox {</p><p>float: left;</p><p>width: 66.9%;/*删除固定宽度，改为比例宽度*/</p><p>background-color: #0FF;</p><p>}</p><p>#sidebox {</p><p>float: right;</p><p>width: 33%;/*删除固定宽度，改为比例宽度*/</p><p>background-color: #FF0;</p><p>}</p><p>#footer {</p><p>…… /*与前面相同*/</p><p>}</p><p>……/*其余部分与上一例题相同*/</p><p>分析：在这个页面中，以比例宽度代替固定宽度，实现页面随浏览器窗口大小等比例变化。网页内容的宽度为浏览器窗口宽度的80%，页面中左侧和右侧的宽度保持在2:1的比例，可以看到无论浏览器窗口如何变化，它们都会等比例变化 [<xref ref-type="bibr" rid="hanspub.34262-ref4">4</xref>]，如上图3是大浏览器窗口下显示效果，上图4是小浏览器窗口下显示效果。</p><p>2) 单列变宽布局</p><p>单列变宽布局是指单列宽度变化，而其他列保持不变，可以使用绝对定位法和改进浮动法实现 [<xref ref-type="bibr" rid="hanspub.34262-ref5">5</xref>]。</p><p>例题3：使用绝对定位法完成单列变宽布局页面 [<xref ref-type="bibr" rid="hanspub.34262-ref6">6</xref>]，结果如下图5，图6所示。</p><p>图5. 网页布局5</p><p>图6. 网页布局6</p><p>在上例的基础上，修改代码如下：</p><p>#container {</p><p>width: 80%;/*设置总宽度80%，这样总宽度会随浏览器窗口变化*/</p><p>margin:0 auto;</p><p>position:relative;/*设置为相对定位属性，使它成为其里面列的定位基准*/</p><p>}</p><p>#mainbox { /*删除宽度设置*/</p><p>float: left;</p><p>background-color: #0FF;</p><p>margin-right:300px; /*设置右外边距，使它不会与sidebox列重叠*/</p><p>}</p><p>#sidebox {</p><p>position:absolute;/*设置为绝对定位属性*/</p><p>top:30px; /*设置其紧贴container的上部*/</p><p>right:0; /*设置其紧贴container的右侧*/</p><p>width:300px; /*设置宽度为固定值*/</p><p>background-color: #FF0;</p><p>}</p><p>分析：在这个页面中，实现了右侧列单列宽度固定，而左侧列变化宽度的布局样式。可以看到上图5是大浏览器窗口下显示效果，上图6是小浏览器窗口下显示效果，右侧列宽度不变，左侧列随浏览器窗口大小而变化。</p><p>这种方式有种缺陷，当固定宽度列的高度大于活动列的高度时，会使固定宽度列与页脚部分重叠 [<xref ref-type="bibr" rid="hanspub.34262-ref7">7</xref>]。如下图7所示。</p><p>图7. 网页布局7</p><p>解决方法是设置变宽度列的高度是最高的，就不会出现重叠现象。如上例题，将mainboxde的高度属性设置的足够大，就不会出现内容重叠了。效果如下图8所示。</p><p>以上页面的功能也可以使用改进浮动法实现，核心问题是实现变宽度列mainbox的宽度等于“100%-固定宽度列sidebox宽度”。</p><p>例题4：使用改进浮动法完成单列变宽布局页面 [<xref ref-type="bibr" rid="hanspub.34262-ref8">8</xref>]，效果如图5，图6所示。</p><p>主要代码如下：</p><p>分析：通过在可变宽度列mainbox的外面又套了一层Div，即conternwrap标签，设置宽度为100%，设置margin-right的值为负的固定宽度列sidebox宽度数值，同时再将变宽度列mainbox的margin-right的值的设置为正的固定宽度列sidebox宽度数值，实现了mainbox列的“100%-固定宽度列sidebox宽度数值”的宽度。最大好处是可以不用考虑各列的高度，通过footer的clear属性设置，保证了不会发生重叠现象 [<xref ref-type="bibr" rid="hanspub.34262-ref9">9</xref>]。</p></sec></sec><sec id="s5"><title>3. 总结</title><p>通过以上的例题和分析可以得出如下结论：固定宽度页面布局需要指定列的宽度，变宽度页面布局可以根据需要设置列的宽度比例，采用绝对定位法或改进浮动法来实现 [<xref ref-type="bibr" rid="hanspub.34262-ref10">10</xref>]。</p></sec><sec id="s6"><title>4. 结束语</title><p>本文对固定宽度页面布局和变宽度页面布局进行了举例和分析，深入剖析了使用CSS + Div如何固定宽度和变宽度，通过设置Div的宽度，采用数值单位设置可以实现固定宽度布局，采用等比例单位设置，绝对定位法或改进浮动法设置可以实现变宽度布局设置，在实际应用中，根据设计需求，采用不同的布局模式，设计出符合要求的页面布局，进而达到熟练掌握的目的。</p></sec><sec id="s7"><title>文章引用</title><p>高 葵,付晓翠,李蔚妍. 基于CSS + Div的固定宽度与变宽度网页布局剖析Analysis of Fixed and Variable Width Web Page Layout Based on CSS + Div[J]. 计算机科学与应用, 2020, 10(02): 303-311. https://doi.org/10.12677/CSA.2020.102031</p></sec><sec id="s8"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.34262-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Freeman, A. HTML5权威指南[M]. 北京: 人民邮电出版社, 2014: 188-195.</mixed-citation></ref><ref id="hanspub.34262-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">李东博. HTML5 + CSS3从入门到精通[M]. 北京: 清华大学出版社, 2018: 112-115.</mixed-citation></ref><ref id="hanspub.34262-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">郑阳平. 网页设计与制作实用教程[M]. 北京: 清华大学出版社, 2016: 158-165.</mixed-citation></ref><ref id="hanspub.34262-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">王海波. 网页设计与制作——基于计算思维[M]. 北京: 机械工业出版社, 2014: 101-105.</mixed-citation></ref><ref id="hanspub.34262-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">李毅. 网页制作与开发教程[M]. 北京: 人民邮电出版社, 2015: 193-196.</mixed-citation></ref><ref id="hanspub.34262-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">黑马程序员. 网页设计与制作HTML5 + CSS3 + JavaScript [M]. 北京: 中国铁道出版社, 2019: 182-185.</mixed-citation></ref><ref id="hanspub.34262-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">张树明. WEB前端设计基础[M]. 北京: 清华大学出版社, 2018: 80-100.</mixed-citation></ref><ref id="hanspub.34262-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">徐洪峰. HTML + DIV + CSS [M]. 北京: 清华大学出版社, 2017: 292-295.</mixed-citation></ref><ref id="hanspub.34262-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">常新峰, 王金柱. 网页设计实战[M]. 北京: 清华大学出版社, 2017: 247-255.</mixed-citation></ref><ref id="hanspub.34262-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">传智播客高教产品研发部. 网站设计基础教程[M]. 北京: 人民邮电出版社, 2016: 180-198.</mixed-citation></ref></ref-list></back></article>