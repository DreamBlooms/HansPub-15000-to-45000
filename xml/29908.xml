<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">DSC</journal-id><journal-title-group><journal-title>Dynamical Systems and Control</journal-title></journal-title-group><issn pub-type="epub">2325-677X</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/DSC.2019.82019</article-id><article-id pub-id-type="publisher-id">DSC-29908</article-id><article-categories><subj-group subj-group-type="heading"><subject>DSC20190200000_58645856.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  基于PX4的地面无人车避障系统及路径规划研究
  Research on Obstacle Avoidance System and Path Planning of Unmanned Ground Vehicle Based on PX4
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>姜</surname><given-names>琼阁</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>立峰</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff2"><addr-line>北方工业大学电气与控制工程学院，北京</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>20</day><month>02</month><year>2019</year></pub-date><volume>08</volume><issue>02</issue><fpage>167</fpage><lpage>180</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    地面无人车避障及路径规划是指，无人车在自动巡航过程中，遇到障碍物能够自动避开，并对当前行进路线进行重新规划，重新进入预设路线行驶。本文使用HPI公司的Savage Flux 2350差速驱动越野车作为实验平台，选用开源硬件Pixhawk飞控作为运动控制器，对PX4 Rover软件系统进行二次开发。使用数据采集模块获得超声波数据，并通过串口方式与飞控板进行通信，完成数据交换，从而实现对地面无人车周围环境的实时检测，完成巡航模式下的避障功能。
    The obstacle avoidance and path planning of the unmanned ground vehicle mean that the un-manned vehicle can automatically avoid obstacles during the automatic cruising process, re-plan the current travel route and re-enter the preset route. This article uses HPI's Savage Flux 2350 differential drive off-road vehicle as an experimental platform and open source hardware flight control Pixhawk as a motion controller, to conduct secondary developments of PX4 Rover software system. The data acquisition module is used to obtain the ultrasonic data and communicates with the flight control board through the serial port mode to complete the data exchange, thereby realizing the real-time detection of the surrounding environment of the unmanned ground vehicle and completing the obstacle avoidance function in the cruise mode. 
  
 
</p></abstract><kwd-group><kwd>地面无人车，避障，PX4, Unmanned Ground Vehicle</kwd><kwd> Obstacle Avoidance</kwd><kwd> PX4</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>基于PX4的地面无人车 避障系统及路径 规划研究<sup> </sup></title><p>姜琼阁，王立峰</p><p>北方工业大学电气与控制工程学院，北京</p><p><img src="//html.hanspub.org/file/15-2740226x1_hanspub.png" /></p><p>收稿日期：2019年4月1日；录用日期：2019年4月12日；发布日期：2019年4月25日</p><disp-formula id="hanspub.29908-formula11"><graphic xlink:href="//html.hanspub.org/file/15-2740226x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>地面无人车避障及路径规划是指，无人车在自动巡航过程中，遇到障碍物能够自动避开，并对当前行进路线进行重新规划，重新进入预设路线行驶。本文使用HPI公司的Savage Flux 2350差速驱动越野车作为实验平台，选用开源硬件Pixhawk飞控作为运动控制器，对PX4 Rover软件系统进行二次开发。使用数据采集模块获得超声波数据，并通过串口方式与飞控板进行通信，完成数据交换，从而实现对地面无人车周围环境的实时检测，完成巡航模式下的避障功能。</p><p>关键词 :地面无人车，避障，PX4</p><disp-formula id="hanspub.29908-formula12"><graphic xlink:href="//html.hanspub.org/file/15-2740226x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/15-2740226x7_hanspub.png" /> <img src="//html.hanspub.org/file/15-2740226x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>地面无人车辆(Unmanned ground vehicles, UGV)集环境感知、规划决策与多等级辅助驾驶功能于一体，是涉及传感器、信息融合、计算机、通讯、人工智能及自动控制技术等多学科、多领域的高新技术集合体 [<xref ref-type="bibr" rid="hanspub.29908-ref1">1</xref>]。地面无人车又常被称为无人车、智能车、智能机器人等。近些年来，它凭借自身优势，体积小、机动灵活、易操作等特点被广泛应用于各个行业 [<xref ref-type="bibr" rid="hanspub.29908-ref2">2</xref>]。</p><p>地面无人车的研究在国外开始较早。随着近些年计算机视觉、人工智能、电子电路等学科的快速发展，这些学科技术也被广泛应用于无人车研究中 [<xref ref-type="bibr" rid="hanspub.29908-ref3">3</xref>]。近年来，关于无人车、无人船的研究和使用开始火热起来，涉及航空、航海、农业等各个领域，国内外许多研究机构也开始关注地面无人车自动控制领域 [<xref ref-type="bibr" rid="hanspub.29908-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.29908-ref5">5</xref>]。目前研究人员重点关注避障技术的研究，主要包括障碍物识别、信息位置的获取、车速和转向控制等方面 [<xref ref-type="bibr" rid="hanspub.29908-ref6">6</xref>]。地面无人车自主避障系统可以利用传感器来获取周围环境信息，具备感知周围环境和自适应的能力，在完成给定任务的同时，能够在过程中实现自动避障及路径规划 [<xref ref-type="bibr" rid="hanspub.29908-ref7">7</xref>]。</p><p>本文以开源飞控Pixhawk作为运动控制器，通过对无人车进行建模，结合串级PID控制算法，实现无人车的自主巡航功能。针对数据采集过程中出现错误数据的问题，提出一种新的数据处理算法。并对障碍物检测区域进行划分，使无人车在不同障碍物方位下采取不同的避障策略。</p></sec><sec id="s4"><title>2. 地面无人车系统架构</title><sec id="s4_1"><title>2.1. 无人车基本组成</title><p>地面无人车的基本组成可以分为三部分，分别是机械系统、动力系统和控制系统 [<xref ref-type="bibr" rid="hanspub.29908-ref8">8</xref>] [<xref ref-type="bibr" rid="hanspub.29908-ref9">9</xref>]。本文使用HPI公司的Savage Flux 2350四驱差速越野车作为地面无人车的实验平台。动力系统中主要是由舵机、电调、电机和电池四部分构成，提供无人车的动力来源。控制系统主要由飞控板、一系列配套外设和地面站组成。本系统中使用的是Pixhawk控制器，外部设备包括数传模块、GPS、电源模块、蜂鸣器、安全开关、遥控器接收机等。搭建完成的无人车基本结构如图1所示。</p><p>图1. 无人车基本结构</p></sec><sec id="s4_2"><title>2.2. 数据采集模块</title><sec id="s4_2_1"><title>2.2.1. 数据采集模块硬件连接方式</title><p>本文通过在车头和车尾各安装三个HC-SR04超声波，来实现对无人车周围障碍物的实时监测。由于Pixhawk硬件接口限制，不能支持外接多个超声波模块，因此这里使用数据采集模块对超声波数据进行预处理，将处理后的数据通过串口发送给Pixhawk控制器，数据采集模块与Pixhawk连接方式如图2所示。</p><p>图2. 数据采集模块连接图</p></sec><sec id="s4_2_2"><title>2.2.2. 数据采集模块软件设计</title><p>在对数据采集程序进行设计的时候，需要考虑多个超声波传感器共同工作时带来的信号交叉问题。交叉问题是指使用多个超声波传感器时，由传感器a发出的声波，在经过反射后可能被传感器b和c获得，这时候b和c就会根据这个声波信息来计算距离，造成测量数据的混乱。针对这个问题，我们对超声波传感器进行编码，车头左侧的超声波定义为U1，沿顺时针方向分别定义为U1、U2、U3、U4、U5、U6，在测距程序中设置每个超声波触发信号的时间间隔为40 ms。在保证超声波数据实时性的同时有效地解决了超声波数据交叉影响的问题。</p><p>对超声波数据处理过程中，最初使用常用的均值滤波算法，采集5次超声波数据取平均值作为最终输出，但是后来发现在实际的应用中传感器的数值并不是很稳定，每10分钟可能会出现一到两次的数据错误，在多个超声波上都出现了类似的错误，经过观察总结发现错误数据有两个特点：</p><p>1) 错误数据一般连续出现，个数通常不超过三个。</p><p>2) 错误数据离真实值偏离较大，并且连续的错误数据都比较相近。</p><p>无人车在运行过程中，需要获得稳定的超声波数据。根据错误数据的特点，本文对传统的均值滤波算法进行改进，引入新的数据处理算法对超声波数据进行处理。算法的主要思想是，利用少数遵循多数的原则，把采集到的一系列数据分成两部分，将相邻两个数据值之差最大的数作为数据的分界点。然后取两部分数据中个数最多的部分作为正确的测量值，另一部分为无效测量值。算法流程如下图3所示，经过处理后的数据相比之前更加稳定，错误数据数量明显减少。</p><p>图3. 算法流程图</p><p>最后经过处理的超声波数据，通过数据采集模块的串口发送到Pixhawk的TELEM2接口。首先对ATmega2560串口1进行初始化，设置串口通信波特率为9600；对每个超声波设置启动时间，获得超声波检测数据，并将数据进行格式化，精确到个位数；在对超声波数据进行处理后，将得到的新的数据列通过串口1进行发送。</p></sec></sec></sec><sec id="s5"><title>3. 无人车避障及路径规划设计</title><sec id="s5_1"><title>3.1. 无人车建模</title><p>车辆运行路径的动态调整是实现自动巡航功能的核心，在获得车辆精准的位置信息后，如何使车辆能够精确地沿着预设的路线进行巡航，是下一步需要研究的问题。要实现对无人车的控制分析，首先需要对控制对象进行建模，下面对本文中使用的无人车进行建模分析。</p><p>1) 无人车建模</p><p>这里我们参考自行车模型 [<xref ref-type="bibr" rid="hanspub.29908-ref10">10</xref>] 对无人车的运动进行简化，主要有以下两个假设：</p><p>① 忽略车辆在垂直(z轴)方向的运动，可以理解为在高处以俯视的角度对车辆进行观察。</p><p>② 假设车辆的前面两个轮胎具有相同的角度和转速，同样后面两个轮胎也是如此，这样就可以把车辆的结构看作自行车，前后的轮胎就可以各用一个轮胎来描述。与自行车原理相同，假设车辆的转向完全由前轮控制。这样无人车模型就可以简化为如图4所示的自行车模型。</p><p>图4. 自行车模型示意图</p><p>在该模型中，因为我们使用的车辆后轮不能旋转，这里设置后轮的转向角控制输入 δ f = 0，也就是说方向盘的控制输入都反映到前轮的转角上，因此整个系统的控制量可以简化为(a, δ f )，其中a代表车辆的加速度。加速度的正负分别代表无人车处于加速或减速阶段， δ f 代表当前轮胎的转角，这样就使用两个变量描述车辆的控制输入。使用四个状态变量描述车辆当前的状态，(x, y)表示车辆当前位置； ψ 表示当前车辆的偏航角，逆时针方向为正；v表示当前的车速； β 表示车辆当前的质心侧偏角，即小车质心的速度相对于无人车纵轴的角度。使用 l r 和 l f 表示前轮和后轮到车辆重心的距离，根据动力学原理，无人车的各个状态变量的更新公式如下所示：</p><p>x t + 1 = x t + v t cos ( ψ t + β ) * d t (1)</p><p>y t + 1 = y t + v t sin ( ψ t + β ) * d t (2)</p><p>ψ t + 1 = ψ t + v t l r sin ( β ) * d t (3)</p><p>v t + 1 = v t + a * d t (4)</p><p>β = tan − 1 ( l r l f + l r t a n ( δ f ) ) (5)</p><p>基于该运动学自行车模型，在给定一个时刻的控制输入后，可以通过计算求得在dt时间以后车辆的状态信息(x, y, ψ , v)，这样就可以使用该模型结合串级PID控制算法实现对控制量(a, δ f )的动态调整，从而实现对车辆状态的实时调整，进而实现自动巡航功能。</p></sec><sec id="s5_2"><title>3.2. 避障及路径规划设计</title><p>因为无人车不具备垂直方向的运动能力，这里我们仅考虑在二维空间中的避障策略。由前文超声波的布局方式可知，超声波的探测区域可以被简化为一个扇形区域。超声波的最大测量距离为4 m，但是实验中发现在3 m到4 m范围内的检测数据容易出现波动，因此这里将超声波的探测区域简化为半径r = 3 m、角度 θ = 45˚的扇形区域，如下图5所示。</p><p>图5. 检测区域划分示意</p><p>下面首先对检测区域进行划分，根据检测到的距离将检测区域划分为F、M、N为三个扇形区域，分别表示距离无人车2米到3米之间的区域、1米到2米之间的区域、0到1米之间的区域。根据超声波传感器的检测角度，可以将检测区域划分为九个检测区域，分别表示为F1、F2、F3、M1、M2、M3和N1、N2、N3九个检测区域，角标代表传感器编号，1、2、3号传感器代表在车身上安装的U1、U2、U3超声波传感器，分别用来检测无人车的左侧、前方、右侧区域。这里将F、M、N分别定义为减速区、避障区和停止区，在不同的距离范围内无人车采取不同的避障操作。无人车的避障实现流程如图6所示。当检测到障碍物的时候，首先对障碍物所处区域进行判断，然后判断障碍物的方位，根据障碍物的方位执行相应的避障操作指令。</p><p>下面对障碍物位于M区域的情况进行简要分析，当障碍物由1号超声波检测到的时候，表明障碍物在M1区域位于无人车的左侧，此使应让无人车执行小角度右转操作；当障碍物由2号超声波检测到的时候，此时障碍物位于M2区域，障碍物为无人车的正前方，考虑到操场的实际情况，这里执行大角度左转操作；同理，当障碍物被3号超声波检测到的时候，障碍物位于无人车右侧，此时执行小角度左转。</p><p>真实的场景下可能会遇到体积比较大的障碍物，同时会被多个超声波检测到。这里针对该种情况进行讨论，当障碍物由1号和2号超声波同时检测到，此时障碍物跨越了M1和M2区域位于无人车的左前方，这时候仅执行小角度的右转已经不能满足避障的要求，需要使无人车执行大角度右转来躲避障碍物。同样，当障碍物被2号和3号传感器同时检测到的时候，执行大角度左转来躲避障碍物。更极端的一种情况，障碍物同时被三个传感器检测到，这时仅执行转向操作已经不能实现较好的避障，此时无人车执行和在刹车区域时相同的操作，首先停车，然后执行倒车指令，进入避障区域重新执行避障操作。</p><p>图6. 避障实现流程</p><p>在避障策略的研究中，主要通过减速及转向来实现对障碍物的躲避。这就会产生另外一个问题，即躲避障碍物后，如何快速回到最初设定的航线上继续执行巡航任务。</p><p>这里使用串级PID算法来对无人车的运动状态进行动态调整。在串级PID中将角度控制PID算法和角速度控制PID算法进行串联，经过串联后的PID控制器可以控制多个变量，系统的抗干扰性得到增强，无人车的适应能力得到进一步的提升。在执行避障操作后，无人车的行进路线已经偏离了最初的航线，根据PID原理，此时的误差值会突然变大，同时PID针对控制量 ( a , δ f ) 不断进行优化，优化过程中无人车逐渐回到最初航线上，无人车中使用的串级PID的原理框图如图7所示。</p><p>图7. 串级PID原理框图</p></sec><sec id="s5_3"><title>3.3. 自定义主题添加</title><p>在进行避障及路径规划实验前，需要对数据采集模块发送过来的超声波数据进行处理。由于PX4采用uORB (微对象请求代理器)通信机制，因此通过串口获得的数据并不能直接利用，需要以发布主题、订阅主题的形式进行消息的传递。uORB是飞控程序中进行消息传递的异步消息机制。它在Pixhawk系统占有重要地位，负责整个系统的数据传输任务，飞控中所有的传感器数据、GPS、PPM信号等数据都要通过uORB传输到系统中各个模块进行计算处理。</p><p>Pixhawk的核心为NuttX实时ARM操作系统，uORB允许多个进程打开同一个文件，进程之间通过该文件节点进行数据的交互与共享。每个进程都可以订阅或者发布主题，系统中可以存在多个发布者，一个进程也可以同时订阅多个主题，但是在一条总线上始终只能有一条消息。飞控中所有的数据都通过这种主题的发布和订阅方式来完成数据交换，如图8所示。下面我们需要通过自定义主题的方式，将数据采集模块发送过来的超声波信息进行发布，供其他功能模块订阅来实现信息的交换。</p><p>图8. 数据交换流程</p><p>1) 首先需要在Firmware/msg目录下新建一个名为read_uart_sensor.msg文件，该文件定义Pixhawk串口接收到所有超声波数据的结构，然后在msg/CMakeLists.txt下添加该文件名。添加完成后重新编译，会在Firmware/src/modules/uORB/topics目录下生成read_uart_sensor.h头文件。</p><p>2) 在Firmware/src/modules目录下创建文件夹并命名为read_uart_sensor作为超声波主题模块的存放位置。在该文件夹下创建read_uart_sensor.c文件和CMakeLists.txt文件。</p><p>在read_uart_sensor.c文件中对发布主题进行定义，主要包括定义主题、公告主题和发布主题三个过程。程序中，orb_advertise()函数实现公告操作，在使用orb_publish()发布新数据前需要先执行公告操作，公告成功后函数返回的处理值提供给orb_publish()函数，在主题发布时进行调用。在对read_uart_sensor.c文件进行定义后，需要对CMakeLists.txt文件进行配置，主要是对编译中的参数进行定义。</p><p>3) 完成前面的操作后需要在Firmware/cmake/configs/nuttx/nuttx_px4fmu-v2_default.cmake文件中注册自定义的read_uart_sensor模块。</p><p>4) 将超声波主题添加到启动脚本中。要实现上电后就可以在Pixhawk控制器中获得超声波数据，需要将该模块添加到系统的启动脚本文件中。添加指令read_uart_sensor start/dev/ttyS2。这样就可以实现当数据采集模块与TELEM2端口(/dev/ttyS2)相连的时候，自动启动超声波模块。</p><p>至此已经完成了超声波自定义主题的发布过程，整体的发布流程如图9所示。</p><p>在完成主题的发布后，下一步需要订阅该主题，获得超声波数据数据。orb_subscribe()函数用来订阅数据，获得的数据保存在int sensor_sub_fd结构体中；orb_set_interval()函数用来设置获取数据的时间间隔；orb_check()函数用来检查上次读取主题后，主题是否更新过。最后对修改后的源码重新编译，并上传编译后的固件。经过以上操作，在nsh命令行中就可以通过输入指令，查看当前数据的订阅结果。</p></sec></sec><sec id="s6"><title>4. 地面无人车避障及路径规划实验</title><sec id="s6_1"><title>4.1. 自动巡航实验</title><p>避障及路径规划是在自动巡航的基础上进行的，在实验中首先对无人车的自动巡航功能进行验证。在该模式下，无人车根据地面站上设定好的航线，自动巡航，GPS信号与惯性测量单元的精度，直接决定了巡航路线的精确度。</p><p>图9. 自定义主题发布流程</p><p>实验中，首先确保手动模式下的操作正常，打开地面站地图界面，如图10所示。在界面的右侧可以实现，读取航点、写入航点，起始位置等操作，主界面下侧设置各航点的具体参数(速度、停留时间、预定航点拍照等)，也可以删除航点。除了设置路线之外，还可以设置H点，H代表家的位置，设置该位置可以实现无人车在巡航结束后能够一键返航，自动返回H点。我们在操场中规划简单的路径对自动巡航功能进行验证，设置完航线之后点击右侧写入航点即可将任务下载到飞行控制器中。</p><p>图10. 地面站飞行计划操作界面</p><p>下载完成后进入飞行数据界面，检查GPS信号强度，GPS卫星数量在十颗以上可以进行自动巡航实验。使用遥控器将无人车从手动模式切换到自动模式，无人车将沿着预先设定的航线运行，使用数传模块可以将无人车的运动状态在地面站上实时显示，主要包括无人车的实时轨迹、位置及速度等信息。图11为地面站中实时显示的无人车运动轨迹，其中黄色曲线为初始设定航线，紫色曲线为无人车实际运行路线。从图中可以看到实际航线和预定轨迹基本吻合，因此无人车的自动巡航功能满足要求。</p><p>图11. 自动巡航路线图</p></sec><sec id="s6_2"><title>4.2. 避障及路径规划实验</title><p>本文的平台搭建、自动巡航功能实现和自定义主题的添加都是为了实现最终的避障及路径规划实验。在前文研究的基础上，最终构建避障及路径规划的整体流程如下图12所示。</p><p>图12. 避障系统框架图</p><p>首先通过数据采集模块实现超声波传感器的数据采集功能，然后将采集到的数据通过串口发送给飞控板，接下来按照uORB消息机制添加自定义超声波模块，对超声波数据主题进行发布和订阅，最后在手动模式和自动模式下订阅超声波数据，并对获得的数据进行处理实现无人车的避障及路径规划。</p><p>为了验证文中提出方法的有效性，下面分别在手动模式和自动模式下对无人车进行避障测试。实验中使用大小为20 cm * 30 cm * 50 cm的纸箱做障碍物，实验前首先确保超声波传感器及地面无人车均可正常工作，分别在正前方障碍物和两侧障碍物的情况下对避障效果进行检测。</p><p>由于目前业界并没有统一的测试标准和评价指标来对避障效果进行量化考核，因此在测试的时候通常会从障碍物的个数、障碍物的运动状态、运动轨迹是否平滑这几个方面进行考虑。结合实际的应用场景，本文以安全避障和耗时最少作为评价指标，对无人车的避障及路径规划过程进行测试。下面对实验现象和结果进行简要分析。</p><sec id="s6_2_1"><title>4.2.1. 正前方障碍物实验与分析</title><p>本小节对障碍物在正前方的情况进行实验分析。首先在地面站设置飞行任务，进行航线规划，并设置速度参数，上传到飞行控制系统。地面无人车以0.8 m/s的速度巡航行驶，当距离障碍物3 m的时候，无人车检测到障碍物，并开始降低巡航速度，进入避障准备阶段，障碍物位置如图13所示。当行驶至距离障碍物2 m的时候，无人车进入避障区域，执行避障操作向左转弯45˚，绕障碍物行驶如图14所示。无人车在绕过障碍物之后返回规划航线中，并沿规划好的航线继续行驶，如图15所示。整体的避障及路径规划行驶路径如图16所示，图中黄色航线为设定航线，紫色为无人车实际运行路线，其中障碍物位于航点1和航点2之间，从图中紫色路径可以看到，无人车在遇到障碍物时，通过向左绕行实现避障，并在绕过障碍物后快速回到预设航线中。对多次实验的避障过程时间进行统计发现，从检测到障碍物开始到回到预设航线中，耗时在9~11 s之间，符合实际应用中的要求。</p><p>实验中设置自动巡航行驶过程中速度为0.8 m/s。当检测到障碍物距离为3 m时，开始减速行驶，速度逐渐降低至避障速度0.5 m/s。经过1.5 s左右无人车执行变向避障操作，转向过程中U2超声波逐渐检测不到障碍物。在此过程中以0.5 m/s左右的速度行驶，当绕开障碍物后速度回到预设航线中逐渐回到设定值0.8 m/s。实验过程中速度的最大误差为0.2 m/s，符合误差要求。</p><p>图13. 检测到障碍物</p><p>图14. 绕开障碍物</p><p>图15. 回到航线</p><p>图16. 避障路径显示</p></sec><sec id="s6_2_2"><title>4.2.2. 两侧障碍物实验与分析</title><p>本小节对障碍物在左前方和右前方两种情况分别进行实验和分析。</p><p>1) 障碍物在左前方</p><p>当地面无人车按照航线前进过程中检测到左前方有障碍物时，超声波U1和U2均有数据输出，障碍物位置如图17所示。图18为地面无人车在自动巡航模式下左前方遇到障碍物时通过地面站显示的避障路径图，紫色曲线为无人车的实际运行路径，黄色曲线为规划路径，障碍物位于航点1和航点2中间。在实验中，地面无人车在检测到障碍物之后开始减速，当行驶至距离障碍物2 m的时候，开始往右侧45˚转弯进行绕障碍物行驶运动。在避过障碍物之后返回规划航线，并沿规划好的航线继续行驶。</p><p>2) 障碍物在右前方</p><p>在同样的路径规划任务下，只改变障碍物的位置，模拟在无人车行进过程中右前方出现障碍物的情况。此时超声波U2和U3均有数据输出，障碍物位置如图19所示。图20为地面无人车在自动巡航模式下，右前方遇到障碍物时地面站显示的避障路径图，可以看出障碍物位于航点1和航点2中间。与左前方出现障碍物时的避障操作相似，执行一系列的减速动作后，通过向左侧转向的方式来实现避障。</p><p>上述实验表明，地面无人车在自主巡航时两侧遇到障碍物，能够顺利地避开障碍物，并继续回到预设航线中。在左右障碍物情况下，经多次实验测试，从开始避障到回到预设航线上的时间在9~11 s之间。</p><p>图17. U1、U2号超声波检测到障碍物</p><p>图18. 左前方避障路径显示</p><p>图19. U2、U3号超声波检测到障碍物</p><p>图20. 右前方避障路径显示</p></sec></sec></sec><sec id="s7"><title>5. 总结</title><p>本文采用Pixhawk飞控作为主控器，在对无人车进行建模的基础上，结合串级PID控制算法实现无人车的避障及路径规划功能。本文提出的避障及路径规划方法，除了在无人车上应用，还可以扩展到多旋翼无人机的避障中，实现无人机飞行过程中的避障。</p><p>实验表明，本文提出的避障及路径规划策略在室外场景下获得较好的检测效果。相比传统的单片机实现方式，飞控具有强大的数据处理能力，能够实现更稳定的避障及路径规划效果。与常用的激光雷达实现避障及路径规划的方案相比，本文提出的基于超声波的避障方案成本更低、实现更加简单，可以应用到校园巡逻、厂区安全检查等精度要求不是很高的场景中。后续的研究，可以通过加入其他传感器，与超声波数据进行融合，来实现更复杂环境下的避障及路径规划。</p></sec><sec id="s8"><title>文章引用</title><p>姜琼阁,王立峰. 基于PX4的地面无人车避障系统及路径规划研究Research on Obstacle Avoidance System and Path Planning of Unmanned Ground Vehicle Based on PX4[J]. 动力系统与控制, 2019, 08(02): 167-180. https://doi.org/10.12677/DSC.2019.82019</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.29908-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">朱炳先, 张朋飞. 地面无人车辆及关键技术研究进展[J]. 山西大同大学学报(自然科学版), 2017, 33(1): 66-70.</mixed-citation></ref><ref id="hanspub.29908-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">赵涓涓, 杜麒麟, 屈明月, 等. 智能小车的无支路循迹算法设计[J]. 计算机应用与软件, 2013, 30(6): 147-149.</mixed-citation></ref><ref id="hanspub.29908-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">乔维高, 徐学进. 无人驾驶汽车的发展现状及方向[J]. 上海汽车, 2007(7): 40-43.</mixed-citation></ref><ref id="hanspub.29908-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">冯华勇. 基于智能小车的模糊寻迹控制[J]. 制造业自动化, 2010, 32(10): 49-51.</mixed-citation></ref><ref id="hanspub.29908-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">章志祥. 四旋翼机器人飞行测试及自适应动态逆方法研究[D]: [硕士学位论文]. 北京: 北方工业大学, 2014.</mixed-citation></ref><ref id="hanspub.29908-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">耿特, 严军鹏. 基于卷积神经网络(CNN)的无人车避障方法[J]. 工业控制计算机, 2019, 32(2): 61-64.</mixed-citation></ref><ref id="hanspub.29908-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">曾迪, 余瑶. 基于模糊神经网络系统的智能小车避障[J]. 数字通信, 2014, 41(3): 83-85.</mixed-citation></ref><ref id="hanspub.29908-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">赵航, 王立峰. 基于pixahwk的多旋翼无人机避障飞行系统研发[J]. 动力系统与控制, 2017, 6(3): 98-108.</mixed-citation></ref><ref id="hanspub.29908-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">赵伦, 王立峰, 董晓婉. 六旋翼飞行器动态逆控制器设计[J]. 建模与仿真, 2016, 5(2): 16-25.</mixed-citation></ref><ref id="hanspub.29908-ref10"><label>10</label><mixed-citation publication-type="other" xlink:type="simple">Kong, J., Pfeiffer, M., Schildbach, G., et al. (2015) Kinematic and Dynamic Vehicle Models for Autonomous Driving Control Design. 2015 IEEE Intelligent Vehicles Symposium (IV), Seoul, 28 June-1 July 2015, 1094-1099.  
https://doi.org/10.1109/ivs.2015.7225830</mixed-citation></ref></ref-list></back></article>