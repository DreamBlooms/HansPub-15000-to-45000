<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2015.43033</article-id><article-id pub-id-type="publisher-id">AAM-15898</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20150300000_47446754.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  二阶锥规划的光滑非精确牛顿法
  Smoothing Inexact Newton Method for the Second Order Cone Programming
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>董</surname><given-names>丽</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>徐</surname><given-names>思齐</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>杨</surname><given-names>金根</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>信阳师范学院土木工程学院，河南 信阳</addr-line></aff><aff id="aff2"><addr-line>null</addr-line></aff><aff id="aff1"><addr-line>信阳师范学院数学与信息科学学院，河南 信阳 </addr-line></aff><author-notes><corresp id="cor1">* E-mail:<email>dongli9261128@163.com(董丽)</email>;</corresp></author-notes><pub-date pub-type="epub"><day>03</day><month>08</month><year>2015</year></pub-date><volume>04</volume><issue>03</issue><fpage>271</fpage><lpage>276</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  本文给出了一个新的求解二阶锥规划的光滑非精确牛顿法。在每次迭代时，新方法采用非精确牛顿法去求解一个方程组的解，降低了光滑牛顿法的计算量。在较弱条件下，证明了算法具有全局和局部二阶收敛性质。数值试验表明算法是有效的。
   A new smoothing inexact Newton method is presented for solving the second-order cone pro-gramming. At each iteration, the method uses an inexact Newton method to solve the system of equations, which saves computation work of smoothing Newton methods. Under weak assumptions, our method is proved to have global and local quadratic convergence. Numerical experiments indicate that the proposed method is quite effective.
 
</p></abstract><kwd-group><kwd>二阶锥规划，光滑非精确牛顿法，收敛性, Second-Order Cone Programming</kwd><kwd> Smoothing Inexact Newton Method</kwd><kwd> Convergence</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>二阶锥规划的光滑非精确牛顿法<sup> </sup></title><p>董丽<sup>1</sup>，徐思齐<sup>2</sup>，杨金根<sup>1</sup></p><p><sup>1</sup>信阳师范学院数学与信息科学学院，河南 信阳</p><p><sup>2</sup>信阳师范学院土木工程学院，河南 信阳</p><p>Email: dongli9261128@163.com</p><p>收稿日期：2015年7月30日；录用日期：2015年8月12日；发布日期：2015年8月18日</p><disp-formula id="hanspub.15898-formula1002"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文给出了一个新的求解二阶锥规划的光滑非精确牛顿法。在每次迭代时，新方法采用非精确牛顿法去求解一个方程组的解，降低了光滑牛顿法的计算量。在较弱条件下，证明了算法具有全局和局部二阶收敛性质。数值试验表明算法是有效的。</p><p>关键词 :二阶锥规划，光滑非精确牛顿法，收敛性</p><disp-formula id="hanspub.15898-formula1003"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x6_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s3"><title>1. 引言</title><p>本文考虑如下二阶锥规划：</p><disp-formula id="hanspub.15898-formula1004"><label>(P)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x7_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x8_hanspub.png" xlink:type="simple"/></inline-formula>是变量，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x9_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x10_hanspub.png" xlink:type="simple"/></inline-formula>是已知的量。<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x11_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x12_hanspub.png" xlink:type="simple"/></inline-formula>维的二阶锥，其定义为</p><disp-formula id="hanspub.15898-formula1005"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x13_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x14_hanspub.png" xlink:type="simple"/></inline-formula>为向量的欧几里得范数。(P)的对偶规划为</p><disp-formula id="hanspub.15898-formula1006"><label>(D)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x15_hanspub.png"  xlink:type="simple"/></disp-formula><p>二阶锥规划作为数学规划领域的一个重要分支，有着非常重要而又广泛的应用背景和实际意义, 其研究问题涉及控制、金融、组合优化、工程技术、神经网络、机器学习等诸多领域[<xref ref-type="bibr" rid="hanspub.15898-ref1">1</xref>] 。许多数学规划问题, 如凸二次规划、二次约束的凸二次规划、矩阵分式优化、范数极小化问题、鲁棒最小二乘问题、天线阵列的设计、带损失风险的金融优化问题等均可以转化为二阶锥规划[<xref ref-type="bibr" rid="hanspub.15898-ref1">1</xref>] 。因此近年来二阶锥规划成为数学规划领域一个值得关注的方向。</p><p>光滑算法是近年来求解二阶锥规划的一种新方法[<xref ref-type="bibr" rid="hanspub.15898-ref2">2</xref>] -[<xref ref-type="bibr" rid="hanspub.15898-ref6">6</xref>] 。该方法的基本思想是利用一个光滑函数将二阶锥规划等价转化成一个非线性方程组，然后利用牛顿法求解该方程组，从而得到原问题的最优解。由于光滑算法不但在理论上具有好的收敛性质，而且在具体实施中有很好的实际计算效果，因而近年来得到了迅速的发展。注意到，文献[<xref ref-type="bibr" rid="hanspub.15898-ref2">2</xref>] -[<xref ref-type="bibr" rid="hanspub.15898-ref6">6</xref>] 所研究的光滑算法在每次迭代时，都需要精确求出一个非线性方程组的解。如果要求解的问题规模较大，精确求解此方程组的解往往效率不高，而非精确牛顿法是解决这类问题的一种很好的途径。</p><p>本文给出了一个求解二阶锥规划的光滑非精确牛顿法，证明了算法的全局和局部收敛性质。该方法采用非精确牛顿法求解方程组的解，大大提高了光滑算法的效率。数值试验表明算法对求解大规模二阶锥规划是有效的。</p></sec><sec id="s4"><title>2. 预备知识</title><p>对任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x16_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x17_hanspub.png" xlink:type="simple"/></inline-formula>，与二阶锥<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x18_hanspub.png" xlink:type="simple"/></inline-formula>相伴的约当代数定义为</p><disp-formula id="hanspub.15898-formula1007"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x19_hanspub.png"  xlink:type="simple"/></disp-formula><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x20_hanspub.png" xlink:type="simple"/></inline-formula>是一个欧几里得约当代数，其单位元为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x21_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>对任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x22_hanspub.png" xlink:type="simple"/></inline-formula>，定义<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x23_hanspub.png" xlink:type="simple"/></inline-formula>，其中I为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x24_hanspub.png" xlink:type="simple"/></inline-formula>维单位矩阵。</p><p>易知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x25_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>下面给出与二阶锥<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x26_hanspub.png" xlink:type="simple"/></inline-formula>相伴的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x27_hanspub.png" xlink:type="simple"/></inline-formula>中向量的谱分解。对任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x28_hanspub.png" xlink:type="simple"/></inline-formula>，它的谱分解为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x29_hanspub.png" xlink:type="simple"/></inline-formula>，其中谱值<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x30_hanspub.png" xlink:type="simple"/></inline-formula>和谱向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x31_hanspub.png" xlink:type="simple"/></inline-formula>分别为</p><disp-formula id="hanspub.15898-formula1008"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x32_hanspub.png"  xlink:type="simple"/></disp-formula><p>这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x33_hanspub.png" xlink:type="simple"/></inline-formula>是满足<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x34_hanspub.png" xlink:type="simple"/></inline-formula>的任意向量。利用谱分解，我们可以定义</p><disp-formula id="hanspub.15898-formula1009"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x35_hanspub.png"  xlink:type="simple"/></disp-formula><p>本文假设原始问题(P)及其对偶问题(D)都严格可行。在此假设条件下，原始问题(P)及其对偶问题(D)都有最优解且最优值相等，并且求解二阶锥规划问题等价于求解其最优性条件：</p><disp-formula id="hanspub.15898-formula1010"><label>(1)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x36_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s5"><title>3. 算法描述</title><p>光滑函数在二阶锥规划光滑算法的设计和收敛性分析中起着非常重要的作用。本文采用著名的Fischer–Burmeister光滑函数，其定义如下：</p><disp-formula id="hanspub.15898-formula1011"><label>(2)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x37_hanspub.png"  xlink:type="simple"/></disp-formula><p>由文献[<xref ref-type="bibr" rid="hanspub.15898-ref7">7</xref>] 中的命题4.2可知</p><disp-formula id="hanspub.15898-formula1012"><label>(3)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x38_hanspub.png"  xlink:type="simple"/></disp-formula><p>记<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x39_hanspub.png" xlink:type="simple"/></inline-formula>。利用<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x40_hanspub.png" xlink:type="simple"/></inline-formula>定义函数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x41_hanspub.png" xlink:type="simple"/></inline-formula>如下：</p><disp-formula id="hanspub.15898-formula1013"><label>(4)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x42_hanspub.png"  xlink:type="simple"/></disp-formula><p>由(1)和(3)可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x43_hanspub.png" xlink:type="simple"/></inline-formula>是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x44_hanspub.png" xlink:type="simple"/></inline-formula>的解当且仅当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x45_hanspub.png" xlink:type="simple"/></inline-formula>是(P)和(D)的解。</p><p>下面给出我们的算法。</p><p>算法3.1. (光滑非精确牛顿法)</p><p>步骤0: 选取常数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x46_hanspub.png" xlink:type="simple"/></inline-formula>。选取初始点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x47_hanspub.png" xlink:type="simple"/></inline-formula>。令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x48_hanspub.png" xlink:type="simple"/></inline-formula>。选取常数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x49_hanspub.png" xlink:type="simple"/></inline-formula>，使得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x50_hanspub.png" xlink:type="simple"/></inline-formula>。选取常数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x51_hanspub.png" xlink:type="simple"/></inline-formula>，使得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x52_hanspub.png" xlink:type="simple"/></inline-formula>。令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x53_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步骤1：如果<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x54_hanspub.png" xlink:type="simple"/></inline-formula>，则停止迭代。否则，计算</p><disp-formula id="hanspub.15898-formula1014"><label>(5)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x55_hanspub.png"  xlink:type="simple"/></disp-formula><p>步骤2：求解如下方程组得搜索方向<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x56_hanspub.png" xlink:type="simple"/></inline-formula>,</p><disp-formula id="hanspub.15898-formula1015"><label>(6)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x57_hanspub.png"  xlink:type="simple"/></disp-formula><p>这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x58_hanspub.png" xlink:type="simple"/></inline-formula>，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x59_hanspub.png" xlink:type="simple"/></inline-formula>并且满足</p><disp-formula id="hanspub.15898-formula1016"><label>(7)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x60_hanspub.png"  xlink:type="simple"/></disp-formula><p>步骤3：令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x61_hanspub.png" xlink:type="simple"/></inline-formula>是使得下式成立的最小非负整数</p><disp-formula id="hanspub.15898-formula1017"><label>(8)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x62_hanspub.png"  xlink:type="simple"/></disp-formula><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x63_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>步骤4：令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x64_hanspub.png" xlink:type="simple"/></inline-formula>。令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x65_hanspub.png" xlink:type="simple"/></inline-formula>。转步骤1。</p><p>注：令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x66_hanspub.png" xlink:type="simple"/></inline-formula>，则由算法3.1的步骤2可知</p><disp-formula id="hanspub.15898-formula1018"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x67_hanspub.png"  xlink:type="simple"/></disp-formula><p>即方程组(6)由非精确牛顿法求解。</p><p>下面定理给出了<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x68_hanspub.png" xlink:type="simple"/></inline-formula>的雅可比矩阵及其可逆性，具体证明可参见文献[<xref ref-type="bibr" rid="hanspub.15898-ref6">6</xref>] 中的定理3.2。</p><p>定理3.1：设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x69_hanspub.png" xlink:type="simple"/></inline-formula>由(4)定义，则有下面结论。</p><p>(i)<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x70_hanspub.png" xlink:type="simple"/></inline-formula>在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x71_hanspub.png" xlink:type="simple"/></inline-formula>上全局Lipschitz连续且处处强半光滑，并且在任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x72_hanspub.png" xlink:type="simple"/></inline-formula>处连续可微，其雅可比矩阵为</p><disp-formula id="hanspub.15898-formula1019"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x73_hanspub.png"  xlink:type="simple"/></disp-formula><p>其中</p><disp-formula id="hanspub.15898-formula1020"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x74_hanspub.png"  xlink:type="simple"/></disp-formula><p>(ii) 如果矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x75_hanspub.png" xlink:type="simple"/></inline-formula>行满秩，则对任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x76_hanspub.png" xlink:type="simple"/></inline-formula>有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x77_hanspub.png" xlink:type="simple"/></inline-formula>可逆。</p><p>定理3.2：设矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x78_hanspub.png" xlink:type="simple"/></inline-formula>行满秩，则算法3.1有好的定义。</p><p>证明：假设对于某个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x79_hanspub.png" xlink:type="simple"/></inline-formula>有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x80_hanspub.png" xlink:type="simple"/></inline-formula>。因为矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x81_hanspub.png" xlink:type="simple"/></inline-formula>行满秩，故由定理3.1知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x82_hanspub.png" xlink:type="simple"/></inline-formula>可逆，所以在第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x83_hanspub.png" xlink:type="simple"/></inline-formula>步迭代步骤2有好的定义。令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x84_hanspub.png" xlink:type="simple"/></inline-formula>为方程组(6)的解，则对任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x85_hanspub.png" xlink:type="simple"/></inline-formula>，有</p><disp-formula id="hanspub.15898-formula1021"><label>(9)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x86_hanspub.png"  xlink:type="simple"/></disp-formula><p>由(9)及定理3.1可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x87_hanspub.png" xlink:type="simple"/></inline-formula>在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x88_hanspub.png" xlink:type="simple"/></inline-formula>附近连续可微。对任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x89_hanspub.png" xlink:type="simple"/></inline-formula>，定义</p><disp-formula id="hanspub.15898-formula1022"><label>(10)</label><graphic position="anchor" xlink:href="http://html.hanspub.org/file/7-2620190x90_hanspub.png"  xlink:type="simple"/></disp-formula><p>则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x91_hanspub.png" xlink:type="simple"/></inline-formula>。由(5)和(7)知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x92_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x93_hanspub.png" xlink:type="simple"/></inline-formula>，故知</p><disp-formula id="hanspub.15898-formula1023"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x94_hanspub.png"  xlink:type="simple"/></disp-formula><p>因此，由(6)和(10)可知对任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x95_hanspub.png" xlink:type="simple"/></inline-formula>，有</p><disp-formula id="hanspub.15898-formula1024"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x96_hanspub.png"  xlink:type="simple"/></disp-formula><p>因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x97_hanspub.png" xlink:type="simple"/></inline-formula>，所以存在一个常数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x98_hanspub.png" xlink:type="simple"/></inline-formula>使得对于任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x99_hanspub.png" xlink:type="simple"/></inline-formula>，有</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x100_hanspub.png" xlink:type="simple"/></inline-formula>，</p><p>从而可知步骤3在第<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x101_hanspub.png" xlink:type="simple"/></inline-formula>步迭代有好的定义，即算法步骤3可以产生一个步长<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x102_hanspub.png" xlink:type="simple"/></inline-formula>。由(9)可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x103_hanspub.png" xlink:type="simple"/></inline-formula>，因此由数学归纳法可知算法3.1有好的定义。证毕。</p><p>引理3.1 设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x104_hanspub.png" xlink:type="simple"/></inline-formula>为算法3.1产生的迭代点列，则对任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x105_hanspub.png" xlink:type="simple"/></inline-formula>有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x106_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>证明：由算法3.1的步骤3和步骤4可知点列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x107_hanspub.png" xlink:type="simple"/></inline-formula>单调下降，从而由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x108_hanspub.png" xlink:type="simple"/></inline-formula>的定义可知点列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x109_hanspub.png" xlink:type="simple"/></inline-formula>也是单调下降的。由算法3.1的步骤0可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x110_hanspub.png" xlink:type="simple"/></inline-formula>。假设对于某个<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x111_hanspub.png" xlink:type="simple"/></inline-formula>有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x112_hanspub.png" xlink:type="simple"/></inline-formula>，则由(9)可得</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x113_hanspub.png" xlink:type="simple"/></inline-formula>,</p><p>进而由数学归纳法可知结论成立。证毕。</p></sec><sec id="s6"><title>4. 算法的收敛性质</title><p>定理4.1：如果矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x114_hanspub.png" xlink:type="simple"/></inline-formula>行满秩并且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x115_hanspub.png" xlink:type="simple"/></inline-formula>是由算法3.1产生的迭代点列，那么<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x116_hanspub.png" xlink:type="simple"/></inline-formula>的任意聚点<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x117_hanspub.png" xlink:type="simple"/></inline-formula>都是<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x118_hanspub.png" xlink:type="simple"/></inline-formula>的解。</p><p>证明：不失一般性，我们假设当<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x119_hanspub.png" xlink:type="simple"/></inline-formula>时，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x120_hanspub.png" xlink:type="simple"/></inline-formula>收敛到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x121_hanspub.png" xlink:type="simple"/></inline-formula>。因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x122_hanspub.png" xlink:type="simple"/></inline-formula>单调下降并且有下界，所以由<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x123_hanspub.png" xlink:type="simple"/></inline-formula>的连续性可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x124_hanspub.png" xlink:type="simple"/></inline-formula>收敛到一个非负数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x125_hanspub.png" xlink:type="simple"/></inline-formula>。若<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x126_hanspub.png" xlink:type="simple"/></inline-formula>，则结论成立。假设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x127_hanspub.png" xlink:type="simple"/></inline-formula>。因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x128_hanspub.png" xlink:type="simple"/></inline-formula>并且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x129_hanspub.png" xlink:type="simple"/></inline-formula>单调下降，故</p><p><inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x130_hanspub.png" xlink:type="simple"/></inline-formula>,</p><p>从而由定理3.1可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x131_hanspub.png" xlink:type="simple"/></inline-formula>存在并可逆。因此，存在<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x132_hanspub.png" xlink:type="simple"/></inline-formula>的一个闭邻域<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x133_hanspub.png" xlink:type="simple"/></inline-formula>，使得对任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x134_hanspub.png" xlink:type="simple"/></inline-formula>有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x135_hanspub.png" xlink:type="simple"/></inline-formula>并且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x136_hanspub.png" xlink:type="simple"/></inline-formula>可逆。因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x137_hanspub.png" xlink:type="simple"/></inline-formula>，故对于充分大的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x138_hanspub.png" xlink:type="simple"/></inline-formula>有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x139_hanspub.png" xlink:type="simple"/></inline-formula>，进而可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x140_hanspub.png" xlink:type="simple"/></inline-formula>并且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x141_hanspub.png" xlink:type="simple"/></inline-formula>可逆。对于充分大的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x142_hanspub.png" xlink:type="simple"/></inline-formula>，设<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x143_hanspub.png" xlink:type="simple"/></inline-formula>是方程组<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x144_hanspub.png" xlink:type="simple"/></inline-formula>唯一的解。类似于定理3.2的证明，对于充分大的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x145_hanspub.png" xlink:type="simple"/></inline-formula>，存在一个非负整数<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x146_hanspub.png" xlink:type="simple"/></inline-formula>满足<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x147_hanspub.png" xlink:type="simple"/></inline-formula>，这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x148_hanspub.png" xlink:type="simple"/></inline-formula>，使得</p><disp-formula id="hanspub.15898-formula1025"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x149_hanspub.png"  xlink:type="simple"/></disp-formula><p>对任意的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x150_hanspub.png" xlink:type="simple"/></inline-formula>和<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x151_hanspub.png" xlink:type="simple"/></inline-formula>都成立。对于充分大的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x152_hanspub.png" xlink:type="simple"/></inline-formula>，因为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x153_hanspub.png" xlink:type="simple"/></inline-formula>，所以由算法3.1的步骤3和步骤4可得</p><disp-formula id="hanspub.15898-formula1026"><graphic xlink:href="http://html.hanspub.org/file/7-2620190x154_hanspub.png"  xlink:type="simple"/></disp-formula><p>令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x155_hanspub.png" xlink:type="simple"/></inline-formula>并在上式两边取极限，利用<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x156_hanspub.png" xlink:type="simple"/></inline-formula>，可得<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x157_hanspub.png" xlink:type="simple"/></inline-formula>。这与<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x158_hanspub.png" xlink:type="simple"/></inline-formula>矛盾。因此可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x159_hanspub.png" xlink:type="simple"/></inline-formula>。证毕。</p><p>定理4.2：假设矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x160_hanspub.png" xlink:type="simple"/></inline-formula>行满秩并且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x161_hanspub.png" xlink:type="simple"/></inline-formula>是算法3.1产生的迭代点列<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x162_hanspub.png" xlink:type="simple"/></inline-formula>的任意聚点。如果所有的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x163_hanspub.png" xlink:type="simple"/></inline-formula>都是非奇异的，则<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x164_hanspub.png" xlink:type="simple"/></inline-formula>二次收敛到<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x165_hanspub.png" xlink:type="simple"/></inline-formula>，即<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x166_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>证明：由定理4.1可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x167_hanspub.png" xlink:type="simple"/></inline-formula>，故对于充分大的<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x168_hanspub.png" xlink:type="simple"/></inline-formula>，有<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x169_hanspub.png" xlink:type="simple"/></inline-formula>并且<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x170_hanspub.png" xlink:type="simple"/></inline-formula>，进而可知<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x171_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>因此，类似于文献[<xref ref-type="bibr" rid="hanspub.15898-ref2">2</xref>] 中的定理4.3可证得结论成立。在此省略。证毕。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Numerical results of Algorithm 3.</title></caption><table><tbody><thead><tr><th align="center" valign="middle" >n</th><th align="center" valign="middle" >m</th><th align="center" valign="middle" >AIT</th><th align="center" valign="middle" >ACPU</th><th align="center" valign="middle" >MHK</th></tr></thead><tr><td align="center" valign="middle" >100</td><td align="center" valign="middle" >50</td><td align="center" valign="middle" >5.7</td><td align="center" valign="middle" >0.07</td><td align="center" valign="middle" >3.056(−7)</td></tr><tr><td align="center" valign="middle" >200</td><td align="center" valign="middle" >100</td><td align="center" valign="middle" >5.6</td><td align="center" valign="middle" >0.41</td><td align="center" valign="middle" >9.813(−7)</td></tr><tr><td align="center" valign="middle" >300</td><td align="center" valign="middle" >150</td><td align="center" valign="middle" >5.8</td><td align="center" valign="middle" >1.12</td><td align="center" valign="middle" >6.251(−7)</td></tr><tr><td align="center" valign="middle" >400</td><td align="center" valign="middle" >200</td><td align="center" valign="middle" >6.0</td><td align="center" valign="middle" >2.77</td><td align="center" valign="middle" >1.019(−7)</td></tr><tr><td align="center" valign="middle" >500</td><td align="center" valign="middle" >250</td><td align="center" valign="middle" >6.2</td><td align="center" valign="middle" >5.11</td><td align="center" valign="middle" >8.702(−7)</td></tr><tr><td align="center" valign="middle" >600</td><td align="center" valign="middle" >300</td><td align="center" valign="middle" >6.1</td><td align="center" valign="middle" >8.98</td><td align="center" valign="middle" >2.313(−7)</td></tr><tr><td align="center" valign="middle" >700</td><td align="center" valign="middle" >350</td><td align="center" valign="middle" >6.5</td><td align="center" valign="middle" >15.43</td><td align="center" valign="middle" >2.691(−7)</td></tr><tr><td align="center" valign="middle" >800</td><td align="center" valign="middle" >400</td><td align="center" valign="middle" >6.5</td><td align="center" valign="middle" >21.73</td><td align="center" valign="middle" >4.101(−7)</td></tr></tbody></table></table-wrap><p>表1. 算法3.1的数值结果</p></sec><sec id="s7"><title>5. 数值试验</title><p>为检验算法3.1的实算效果，我们用Matlab7.0.1编程在Windows XP操作系统的电脑上做数值试验。</p><p>在所有的试验中，参数选择为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x172_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x173_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x174_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x175_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x176_hanspub.png" xlink:type="simple"/></inline-formula>。我们选择<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x177_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x178_hanspub.png" xlink:type="simple"/></inline-formula>作为初始点。终止准则为<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x179_hanspub.png" xlink:type="simple"/></inline-formula>。</p><p>测试问题是随机生成的二阶锥规划问题。具体步骤为：首先生成随机的行满秩矩阵<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x180_hanspub.png" xlink:type="simple"/></inline-formula>和随机向量<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x181_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x182_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x183_hanspub.png" xlink:type="simple"/></inline-formula>，这里<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x184_hanspub.png" xlink:type="simple"/></inline-formula>，然后令<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x185_hanspub.png" xlink:type="simple"/></inline-formula>，<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x186_hanspub.png" xlink:type="simple"/></inline-formula>，则得到的二阶锥规划的原问题和对偶问题都存在最优解且最优值相等。每个算例测试10次，计算结果列于表1，其中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x187_hanspub.png" xlink:type="simple"/></inline-formula>表示<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x188_hanspub.png" xlink:type="simple"/></inline-formula>，AIT表示算法所需的迭代次数的平均值，ACPU表示算法所需的CPU时间(单位：秒)的平均值，MHK表示算法终止时10个算例中<inline-formula><inline-graphic xlink:href="http://html.hanspub.org/file/7-2620190x189_hanspub.png" xlink:type="simple"/></inline-formula>的最大值。</p><p>由表1可以看出，算法3.1是有效的并且能够求解大规模二阶锥规划问题，它只需要很少的迭代次数和CPU时间就可以得到满足终止条件的解。</p></sec><sec id="s8"><title>基金项目</title><p>河南省自然科学基金(142300410437)，河南省高等学校重点科研项目(15A110039)。</p></sec><sec id="s9"><title>文章引用</title><p>董丽,徐思齐,杨金根. 二阶锥规划的光滑非精确牛顿法Smoothing Inexact Newton Method for the Second Order Cone Programming[J]. 应用数学进展, 2015, 04(03): 271-276. http://dx.doi.org/10.12677/AAM.2015.43033</p></sec><sec id="s10"><title>参考文献 (References)</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.15898-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Alizadeh, F. and Goldfarb, D. (2003) Second-order cone optimization. Mathematical Programming, 95, 3-51.  
&lt;br&gt;http://dx.doi.org/10.1007/s10107-002-0339-5</mixed-citation></ref><ref id="hanspub.15898-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Chi, X.N. and Liu, S.Y. (2009) A non-interior continuation method for second-order cone optimization. Optimization, 58, 965-979. &lt;br&gt;http://dx.doi.org/10.1080/02331930701763421</mixed-citation></ref><ref id="hanspub.15898-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Chi, X.N. and Liu, S.Y. (2009) A one-step smoothing Newton method for second-order cone programming. Journal of Computational and Applied Mathematics, 223, 114-123. &lt;br&gt;http://dx.doi.org/10.1016/j.cam.2007.12.023</mixed-citation></ref><ref id="hanspub.15898-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Fang, L., He, G.P. and Hu, Y.H. (2009) A new smoothing Newton-type method for second-order cone programming problems. Applied Mathematics and Computation, 215, 1020-1029. &lt;br&gt;http://dx.doi.org/10.1016/j.amc.2009.06.029</mixed-citation></ref><ref id="hanspub.15898-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Tang, J.Y., He, G.P., Dong, L. and Fang, L. (2011) A smoothing Newton method for second-order cone optimizationbased on a new smoothing function. Applied Mathe-matics and Computation, 218, 1317-1329.  
&lt;br&gt;http://dx.doi.org/10.1016/j.amc.2011.06.015</mixed-citation></ref><ref id="hanspub.15898-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">汤京永, 贺国平 (2012) 一个新的求解二阶锥规划的非内部连续化算法. 应用数学, 1, 26-31.</mixed-citation></ref><ref id="hanspub.15898-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Fukushima, M., Luo, Z.Q. and Tseng, P. (2002) Smoothing functions for second-order-cone complementarity problems. SIAM Journal on Optimization, 12, 436-460. &lt;br&gt;http://dx.doi.org/10.1137/S1052623400380365</mixed-citation></ref></ref-list></back></article>