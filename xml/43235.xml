<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">SEA</journal-id><journal-title-group><journal-title>Software Engineering and Applications</journal-title></journal-title-group><issn pub-type="epub">2325-2286</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/SEA.2021.103037</article-id><article-id pub-id-type="publisher-id">SEA-43235</article-id><article-categories><subj-group subj-group-type="heading"><subject>SEA20210300000_52650547.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>工程技术</subject></subj-group></article-categories><title-group><article-title>
 
 
  深度学习在果蔬识别领域的应用
  Application of Deep Learning in Fruit and Vegetable Recognition
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>徐</surname><given-names>文镇</given-names></name><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>朱</surname><given-names>义新</given-names></name><xref ref-type="aff" rid="aff3"><sup>3</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>黄</surname><given-names>思源</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>张</surname><given-names>泽民</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>王</surname><given-names>卫星</given-names></name><xref ref-type="aff" rid="aff4"><sup>4</sup></xref><xref ref-type="aff" rid="aff1"><sup>1</sup></xref></contrib></contrib-group><aff id="aff3"><addr-line>贵州大学计算机科学与技术学院，贵州 贵阳 </addr-line></aff><aff id="aff4"><addr-line>贵州大学机械工程学院，贵州 贵阳</addr-line></aff><aff id="aff2"><addr-line>贵州大学计算机科学与技术学院，贵州 贵阳</addr-line></aff><aff id="aff1"><addr-line>null</addr-line></aff><pub-date pub-type="epub"><day>07</day><month>06</month><year>2021</year></pub-date><volume>10</volume><issue>03</issue><fpage>329</fpage><lpage>336</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  针对目前果蔬存储时间与安全问题，希望通过研究实现新鲜果蔬识别与系统时间记录，本文运用了Python语言、Flask框架、深度学习、爬虫、Xception算法等相关技术对系统的总体架构以及功能模块进行设计，实现了食物识别、腐败提醒等主要功能。通过实际测试后，系统运行稳定，能较好地减少因食用腐败食品而导致疾病的问题。
   Aiming at the current problems of fruit and vegetable storage time and safety, we hope to achieve fresh fruit and vegetable identification and system time recording through research. The paper uses Python language, Flask framework, deep learning, crawlers, Xception algorithm and other related technologies to design the overall architecture of the system as well as functional modules, and realize the main functions such as food identification and spoilage reminder. After the actual test, the system runs stably and can better reduce the problem of diseases caused by eating spoiled food.
 
</p></abstract><kwd-group><kwd>食品健康，深度学习，迁移学习，图像识别，识别模型, Food Health</kwd><kwd> Deep Learning</kwd><kwd> Transfer Learning</kwd><kwd> Image Recognition</kwd><kwd> Recognition Model</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>摘要</title><p>针对目前果蔬存储时间与安全问题，希望通过研究实现新鲜果蔬识别与系统时间记录，本文运用了Python语言、Flask框架、深度学习、爬虫、Xception算法等相关技术对系统的总体架构以及功能模块进行设计，实现了食物识别、腐败提醒等主要功能。通过实际测试后，系统运行稳定，能较好地减少因食用腐败食品而导致疾病的问题。</p></sec><sec id="s2"><title>关键词</title><p>食品健康，深度学习，迁移学习，图像识别，识别模型</p></sec><sec id="s3"><title>Application of Deep Learning in Fruit and Vegetable Recognition<sup> </sup></title><p>Wenzhen Xu<sup>1</sup>, Yixin Zhu<sup>1</sup>, Siyuan Huang<sup>2</sup>, Zemin Zhang<sup>2</sup>, Weixing Wang<sup>2</sup></p><p><sup>1</sup>College of Computer Science and Technology, Guizhou University, Guiyang Guizhou</p><p><sup>2</sup>School of Mechanical Engineering, Guizhou University, Guiyang Guizhou</p><p><img src="//html.hanspub.org/file/13-2690532x4_hanspub.png" /></p><p>Received: May 8<sup>th</sup>, 2021; accepted: Jun. 14<sup>th</sup>, 2021; published: Jun. 21<sup>st</sup>, 2021</p><p><img src="//html.hanspub.org/file/13-2690532x5_hanspub.png" /></p></sec><sec id="s4"><title>ABSTRACT</title><p>Aiming at the current problems of fruit and vegetable storage time and safety, we hope to achieve fresh fruit and vegetable identification and system time recording through research. The paper uses Python language, Flask framework, deep learning, crawlers, Xception algorithm and other related technologies to design the overall architecture of the system as well as functional modules, and realize the main functions such as food identification and spoilage reminder. After the actual test, the system runs stably and can better reduce the problem of diseases caused by eating spoiled food.</p><p>Keywords:Food Health, Deep Learning, Transfer Learning, Image Recognition, Recognition Model</p><disp-formula id="hanspub.43235-formula8"><graphic xlink:href="//html.hanspub.org/file/13-2690532x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2021 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY 4.0).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/13-2690532x7_hanspub.png" /> <img src="//html.hanspub.org/file/13-2690532x8_hanspub.png" /></p></sec><sec id="s5"><title>1. 引言</title><p>食用不新鲜的瓜果蔬菜是导致食品安全问题的一个重要因素，因此，为了更好的对新鲜果蔬进行管理，我们提出一个可以实现对各模块内存储的果蔬进行变质预警告这一功能的设备。首先应该将放入的水果和蔬菜进行识别，判断其种类是什么。通过对比选择深度学习对当前获取图像进行识别，可以达到一个较高的准确率，为了进一步提高图像识别的准确率，我们在Xception模型的基础上建立了一个池化层，三个全连接层，两个卷积层，调用了ReLU激活函数(一种人工神经网络中常用的激活函数，通常指代以斜坡函数及其变种为代表的非线性函数)、RMSProp优化器(也叫均方根算法，该优化器没有采用传统暴力直接的累加平方梯度，而是加了一个衰减系数来控制历史信息的获取多少)，以及采用Dropout函数防止其过拟合。Xception是Inception-V3的极端情况(见图2)，通过使用该模型结构，我们对测试集内的12种不同种类果蔬识别准确率最终高达91%。</p></sec><sec id="s6"><title>2. 研究现状分析</title><p>上世纪八十年代，计算机视觉技术开始应用于果蔬识别范畴，1981年Graf等人 [<xref ref-type="bibr" rid="hanspub.43235-ref1">1</xref>] 通过从苹果叶片形态的研究，实现了最大概率分类来检验苹果的损伤程度。1996年，Bolle等人 [<xref ref-type="bibr" rid="hanspub.43235-ref2">2</xref>] 通过提取图像中果蔬的颜色，纹理等特征，第一次实现了对随意堆叠与摆放的水果蔬菜的识别与归类。2012年，Fabio等人 [<xref ref-type="bibr" rid="hanspub.43235-ref3">3</xref>] 提出通过整合多种低成本分类器来识别目标果蔬，推动了超市果蔬自动销售系统的发展。2014年，陶华伟等人 [<xref ref-type="bibr" rid="hanspub.43235-ref4">4</xref>] 采用结合颜色完全局部二值模式与颜色特征的方法获取目标纹理的特征，提高了果蔬智能识别系统的准确率。2016年，庄路路 [<xref ref-type="bibr" rid="hanspub.43235-ref5">5</xref>] 提出基于改进的SURF算法对特征点进行检测和匹配，以实现对水果进行识别。</p><p>通过以上分析结果不难发现，研究人员在果蔬的识别检测领域展开了大量的研究工作，当然也不难发现，以上研究很多是根据统计模式的识别方法，基本都是人工设计算法来提取果蔬颜色、形状等特征。该方法实现较为单一，换用不同的果蔬又得重新设计算法，因此深度学习成了这方面的不二之选。在2012年的ImageNet图像分类大赛上，Hinton组采用了深度学习的方法一举夺魁 [<xref ref-type="bibr" rid="hanspub.43235-ref6">6</xref>]，且此方法准确率超第二名10%以上，突然之间这也掀起了深度学习的热潮。从经典的LeNet-5网络模型，到基于ＲeLU激活函数的卷积神经网络，再发展至基于随机Dropout的CNN网络，图像识别的精度越来越高 [<xref ref-type="bibr" rid="hanspub.43235-ref7">7</xref>]。本文亦采用深度学习，通过搭建以下图1卷积神经网络模型来提高果蔬图像识别的准确率。利用该卷积神经网络模型，我们对果蔬图像的判断准确度较传统模型更高，这也意味着对果蔬种类的定位更精确，这也使得接下来对不同模块中存放的果蔬判断更准确。</p><p>图1. 基于Xception模型的卷积神经网络的果蔬识别结构图</p></sec><sec id="s7"><title>3. 方法</title><sec id="s7_1"><title>3.1. Xception</title><p>在Inception中，特征可以通过1 &#215; 1卷积，3 &#215; 3卷积，5 &#215; 5卷积，pooling等进行提取，Inception特征类型的选择由网络进行训练，即一个输入同时输入到多个特征提取方法中，然后做concat。Inception-v3的结构图2如下。</p><p>图2. Inception-v3的结构图</p><p>对Inception-v3进行简化，去除Inception-v3中的avg pool后，输入的下一步操作就都是1 &#215; 1卷积，结构如图3所示。</p><p>提取1 &#215; 1卷积的公共部分，结构如图4所示。</p><p>Xception (极致的Inception)：先进行普通卷积操作，再对1 &#215; 1卷积后的每个channel分别进行3 &#215; 3卷积操作，将结果归并得到的最终Xception模型如图5所示。</p></sec><sec id="s7_2"><title>3.2. RMSProp</title><p>损失函数在更新过程中摆动幅度过大，函数的收敛速度较慢。为了改善上述两个问题，RMSProp算法采用微分平方加权平均法将权重W和偏置b的梯度进行加权。以下是预计到第t轮迭代过程的公式：</p><p>s d w = β s d w + ( 1 − β ) d W 2 (1)</p><p>s d b = β s d b + ( 1 − β ) d b 2 (2)</p><p>W = W − α d W / s d w + ε (3)</p><p>b = b − α d b / ε s d b + ε (4)</p><p>上述公式中的β是一个梯度累积的指数，公式(1)中的s<sub>dw</sub>是损失函数在前面的t − 1轮迭代过程中累积的梯度，公式(2)中的s<sub>db</sub>是s<sub>dw</sub>的梯度动量 [<xref ref-type="bibr" rid="hanspub.43235-ref8">8</xref>]。而RMSProp算法计算了梯度微分平方的加权平均值，这是不一样的地方。此举有效解决了前面所讲的两个问题，既有助于消除摆动幅度较大的方向，对摆动幅度进行校正，降低各维度的摆动幅度，又能加快网络函数的收敛速度。分析以上公式(3)和(4)，只要dW或者db中有一个值较大，当我们更新权重或偏移量时，我们将它除以之前累积的梯度的二次方根(公式(3)中的 s d w 以及公式(4)中的 s d b )，这样可以降低它的更新幅度。最后，我们在公式(4)中取一个极小的平滑值ε (该数值一般取10<sup>−</sup><sup>8</sup>)来避免分母为0。</p><p>图3. 输入1 &#215; 1的卷积</p><p>图4. 提取公共部分</p><p>图5. 最终Xception模型</p></sec></sec><sec id="s8"><title>4. 实验</title><sec id="s8_1"><title>4.1. 数据集</title><p>采用python爬虫的方式从网上爬取了12类共7200张图片。由于标签原因，其中有3045张图片被清洗掉。所以最终我们的数据集总共有12类、4155张果蔬图像。这12种类别为大枣、葡萄、西瓜、火龙果、龙眼、菠萝、花生、西红柿、胡萝卜、白菜、土豆、茄子，图6展示了本文收集的部分数据集。</p><p>图6. 部分数据集展示</p></sec><sec id="s8_2"><title>4.2. 实验方法</title><p>本文构建了如图5所示的Xception模型的卷积神经网络模型。输入图像尺寸为150 &#215; 150。采用批量随机梯度下降法迭代45个批次(45 epochs)，对每次epochs，每输入样本容量大小/64个样本训练后，进行反向传播并更新一次权值。本文设置初始学习率为0.1，定义优化器RMSprop (Root Mean Square Prop)。本文将爬取的4155张水果蔬菜图片按照9:1的比例划分训练集和测试集，划分后的具体图片数量如表1所示。</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Division of training set and test se</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >总计</th></tr></thead><tr><td align="center" valign="middle" >训练集</td><td align="center" valign="middle" >3747</td></tr><tr><td align="center" valign="middle" >测试集</td><td align="center" valign="middle" >408</td></tr></tbody></table></table-wrap><p>表1. 训练集和测试集的划分</p></sec><sec id="s8_3"><title>4.3. 实验结果</title><p>为了验证本文模型的有效性，本文进行了实验，实验过程中迭代轮次与其精确度及损失值如表2所示，其中epoch表示迭代轮次，Train accuracy和Train loss分别表示训练过程中的精确度和损失值；Validation accuracy和Validation loss分别表示测试过程中的精确度和损失值。训练过程中准确率越高意味着后面测试过程中也会更准确。从实验结果可以看出，迭代45个批次过程中Train accuracy最高到达了0.9634，而Validation accuracy最高也达到了0.9167，这可以看出我们构建的模型的有效性。</p><table-wrap-group id="2"><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> The iteration cycles and their accuracy and loss values during the experimen</title></caption><table-wrap id="2_1"><table><tbody><thead><tr><th align="center" valign="middle" >epoch</th><th align="center" valign="middle" >Train accuracy</th><th align="center" valign="middle" >Train loss</th><th align="center" valign="middle" >Validation accuracy</th><th align="center" valign="middle" >Validation loss</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >0.2672</td><td align="center" valign="middle" >2.2577</td><td align="center" valign="middle" >0.4688</td><td align="center" valign="middle" >1.7930</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >0.4806</td><td align="center" valign="middle" >1.6471</td><td align="center" valign="middle" >0.6458</td><td align="center" valign="middle" >1.3489</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >0.5970</td><td align="center" valign="middle" >1.2854</td><td align="center" valign="middle" >0.5938</td><td align="center" valign="middle" >1.3525</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >0.6634</td><td align="center" valign="middle" >1.0789</td><td align="center" valign="middle" >0.8125</td><td align="center" valign="middle" >0.6832</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >0.7093</td><td align="center" valign="middle" >0.9494</td><td align="center" valign="middle" >0.7917</td><td align="center" valign="middle" >0.6898</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >0.7500</td><td align="center" valign="middle" >0.8222</td><td align="center" valign="middle" >0.8438</td><td align="center" valign="middle" >0.5916</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >0.7716</td><td align="center" valign="middle" >0.7372</td><td align="center" valign="middle" >0.7917</td><td align="center" valign="middle" >0.7680</td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >0.7909</td><td align="center" valign="middle" >0.7156</td><td align="center" valign="middle" >0.8958</td><td align="center" valign="middle" >0.5319</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >0.8071</td><td align="center" valign="middle" >0.6405</td><td align="center" valign="middle" >0.7917</td><td align="center" valign="middle" >0.5862</td></tr><tr><td align="center" valign="middle" >10</td><td align="center" valign="middle" >0.8394</td><td align="center" valign="middle" >0.5330</td><td align="center" valign="middle" >0.8333</td><td align="center" valign="middle" >0.8669</td></tr><tr><td align="center" valign="middle" >11</td><td align="center" valign="middle" >0.8470</td><td align="center" valign="middle" >0.5562</td><td align="center" valign="middle" >0.8438</td><td align="center" valign="middle" >0.5263</td></tr><tr><td align="center" valign="middle" >12</td><td align="center" valign="middle" >0.8427</td><td align="center" valign="middle" >0.5313</td><td align="center" valign="middle" >0.8750</td><td align="center" valign="middle" >0.5109</td></tr><tr><td align="center" valign="middle" >13</td><td align="center" valign="middle" >0.8491</td><td align="center" valign="middle" >0.4797</td><td align="center" valign="middle" >0.8333</td><td align="center" valign="middle" >0.6280</td></tr><tr><td align="center" valign="middle" >14</td><td align="center" valign="middle" >0.8761</td><td align="center" valign="middle" >0.4173</td><td align="center" valign="middle" >0.8438</td><td align="center" valign="middle" >0.5507</td></tr><tr><td align="center" valign="middle" >15</td><td align="center" valign="middle" >0..8879</td><td align="center" valign="middle" >0.3962</td><td align="center" valign="middle" >0.8750</td><td align="center" valign="middle" >0.5650</td></tr><tr><td align="center" valign="middle" >16</td><td align="center" valign="middle" >0.8804</td><td align="center" valign="middle" >0.3900</td><td align="center" valign="middle" >0.8958</td><td align="center" valign="middle" >0.4242</td></tr><tr><td align="center" valign="middle" >17</td><td align="center" valign="middle" >0.8798</td><td align="center" valign="middle" >0.3800</td><td align="center" valign="middle" >0.8125</td><td align="center" valign="middle" >0.7023</td></tr><tr><td align="center" valign="middle" >18</td><td align="center" valign="middle" >0.8922</td><td align="center" valign="middle" >0.3317</td><td align="center" valign="middle" >0.8646</td><td align="center" valign="middle" >0.4609</td></tr><tr><td align="center" valign="middle" >19</td><td align="center" valign="middle" >0.8922</td><td align="center" valign="middle" >0.3596</td><td align="center" valign="middle" >0.8646</td><td align="center" valign="middle" >0.4915</td></tr></tbody></table></table-wrap><table-wrap id="2_2"><table><tbody><thead><tr><th align="center" valign="middle" >20</th><th align="center" valign="middle" >0.9149</th><th align="center" valign="middle" >0.3084</th><th align="center" valign="middle" >0.8750</th><th align="center" valign="middle" >0.5043</th></tr></thead><tr><td align="center" valign="middle" >21</td><td align="center" valign="middle" >0.8998</td><td align="center" valign="middle" >0.3484</td><td align="center" valign="middle" >0.8542</td><td align="center" valign="middle" >0.5857</td></tr><tr><td align="center" valign="middle" >22</td><td align="center" valign="middle" >0.8912</td><td align="center" valign="middle" >0.3509</td><td align="center" valign="middle" >0.8229</td><td align="center" valign="middle" >0.6115</td></tr><tr><td align="center" valign="middle" >23</td><td align="center" valign="middle" >0.9158</td><td align="center" valign="middle" >0.2874</td><td align="center" valign="middle" >0.8438</td><td align="center" valign="middle" >0.5635</td></tr><tr><td align="center" valign="middle" >24</td><td align="center" valign="middle" >0.9246</td><td align="center" valign="middle" >0.2617</td><td align="center" valign="middle" >0.8958</td><td align="center" valign="middle" >0.4129</td></tr><tr><td align="center" valign="middle" >25</td><td align="center" valign="middle" >0.9203</td><td align="center" valign="middle" >0.2530</td><td align="center" valign="middle" >0.8542</td><td align="center" valign="middle" >0.6526</td></tr><tr><td align="center" valign="middle" >26</td><td align="center" valign="middle" >0.9126</td><td align="center" valign="middle" >0.2646</td><td align="center" valign="middle" >0.8854</td><td align="center" valign="middle" >0.4374</td></tr><tr><td align="center" valign="middle" >27</td><td align="center" valign="middle" >0.9224</td><td align="center" valign="middle" >0.2682</td><td align="center" valign="middle" >0.9167</td><td align="center" valign="middle" >0.5190</td></tr><tr><td align="center" valign="middle" >28</td><td align="center" valign="middle" >0.9343</td><td align="center" valign="middle" >0.2376`</td><td align="center" valign="middle" >0.8854</td><td align="center" valign="middle" >0.5462</td></tr><tr><td align="center" valign="middle" >29</td><td align="center" valign="middle" >0.9246</td><td align="center" valign="middle" >0.2414</td><td align="center" valign="middle" >0.8750</td><td align="center" valign="middle" >0.4385</td></tr><tr><td align="center" valign="middle" >30</td><td align="center" valign="middle" >0.9450</td><td align="center" valign="middle" >0.1866</td><td align="center" valign="middle" >0.8542</td><td align="center" valign="middle" >0.5196</td></tr><tr><td align="center" valign="middle" >31</td><td align="center" valign="middle" >0.9364</td><td align="center" valign="middle" >0.2186</td><td align="center" valign="middle" >0.8542</td><td align="center" valign="middle" >0.4577</td></tr><tr><td align="center" valign="middle" >32</td><td align="center" valign="middle" >0.9410</td><td align="center" valign="middle" >0.2166</td><td align="center" valign="middle" >0.8750</td><td align="center" valign="middle" >0.5423</td></tr><tr><td align="center" valign="middle" >33</td><td align="center" valign="middle" >0.9472</td><td align="center" valign="middle" >0.1917</td><td align="center" valign="middle" >0.8958</td><td align="center" valign="middle" >0.4113</td></tr><tr><td align="center" valign="middle" >34</td><td align="center" valign="middle" >0.9386</td><td align="center" valign="middle" >0.2000</td><td align="center" valign="middle" >0.8854</td><td align="center" valign="middle" >0.4852</td></tr><tr><td align="center" valign="middle" >35</td><td align="center" valign="middle" >0.9471</td><td align="center" valign="middle" >0.1810</td><td align="center" valign="middle" >0.9062</td><td align="center" valign="middle" >0.3600</td></tr><tr><td align="center" valign="middle" >36</td><td align="center" valign="middle" >0.9310</td><td align="center" valign="middle" >0.2243</td><td align="center" valign="middle" >0.8854</td><td align="center" valign="middle" >0.3830</td></tr><tr><td align="center" valign="middle" >37</td><td align="center" valign="middle" >0.9497</td><td align="center" valign="middle" >0.1834</td><td align="center" valign="middle" >0.8750</td><td align="center" valign="middle" >0.5064</td></tr><tr><td align="center" valign="middle" >38</td><td align="center" valign="middle" >0.9407</td><td align="center" valign="middle" >0.2085</td><td align="center" valign="middle" >0.8542</td><td align="center" valign="middle" >0.5447</td></tr><tr><td align="center" valign="middle" >39</td><td align="center" valign="middle" >0.9344</td><td align="center" valign="middle" >0.2276</td><td align="center" valign="middle" >0.8438</td><td align="center" valign="middle" >0.5890</td></tr><tr><td align="center" valign="middle" >40</td><td align="center" valign="middle" >0.9421</td><td align="center" valign="middle" >0.1891</td><td align="center" valign="middle" >0.9167</td><td align="center" valign="middle" >0.2941</td></tr><tr><td align="center" valign="middle" >41</td><td align="center" valign="middle" >0.9574</td><td align="center" valign="middle" >0.1546</td><td align="center" valign="middle" >0.8750</td><td align="center" valign="middle" >0.5764</td></tr><tr><td align="center" valign="middle" >42</td><td align="center" valign="middle" >0.9634</td><td align="center" valign="middle" >0.1504</td><td align="center" valign="middle" >0.6083</td><td align="center" valign="middle" >0.8438</td></tr><tr><td align="center" valign="middle" >43</td><td align="center" valign="middle" >0.9407</td><td align="center" valign="middle" >0.2058</td><td align="center" valign="middle" >0.8333</td><td align="center" valign="middle" >0.6645</td></tr><tr><td align="center" valign="middle" >44</td><td align="center" valign="middle" >0.9461</td><td align="center" valign="middle" >0.1942</td><td align="center" valign="middle" >0.9062</td><td align="center" valign="middle" >0.3410</td></tr><tr><td align="center" valign="middle" >45</td><td align="center" valign="middle" >0.9397</td><td align="center" valign="middle" >0.2041</td><td align="center" valign="middle" >0.8229</td><td align="center" valign="middle" >0.6945</td></tr></tbody></table></table-wrap></table-wrap-group><p>表2. 实验过程中迭代轮次与其精确度及损失值</p><p>可视化结果如下图7所示，训练精确度和测试精确度在逐渐增加，其损失值逐渐减小。</p><p>图7. 精确度(左)及损失值(右)变化结果</p></sec></sec><sec id="s9"><title>5. 结束语</title><p>本文针对果蔬图像形状易分辨的特点，设计了Xception模型的卷积神经网络，该网络能高效提取果蔬形状和纹理特征，网络层之间使用线性函数ReLU，来激活神经元使其快速收敛。在随机梯度下降的情况下，引入Dropout防止训练模型出现过拟合的问题，使网络具有更优的泛化效果。在未来的研究中，我们还将继续完善网络结构，以实现更高的识别效果。从而进一步促进深度学习在果蔬识别方面的应用。</p></sec><sec id="s10"><title>基金项目</title><p>贵州省高等学校大学生创新创业训练计划项目：基于深度学习的食品健康分析处理模块化创新设计。</p></sec><sec id="s11"><title>文章引用</title><p>徐文镇,朱义新,黄思源,张泽民,王卫星. 深度学习在果蔬识别领域的应用Application of Deep Learning in Fruit and Vegetable Recognition[J]. 软件工程与应用, 2021, 10(03): 329-336. https://doi.org/10.12677/SEA.2021.103037</p></sec><sec id="s12"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.43235-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Graf, G.L., Rehkugler, G.E., Millier, W.F., et al. (1981) Automatic Detection of Surface Flaws on Apples Using Digital Image Processing. Microfiche Collection.</mixed-citation></ref><ref id="hanspub.43235-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Bolle, R.M., Connell, J.H., Haas, N., Mohan, R. and Taubin, G. (1996) VeggieVision: A Produce Recognition System. Proceedings of Third IEEE Workshop on Applications of Computer Vision, WACV’96, 244-251.</mixed-citation></ref><ref id="hanspub.43235-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Faria, F.A., Dos Santos, J.A., Rocha, A., et al. (2012) Automatic Classifier Fusion for Produce Recognition. 2012 25th SIBGRAPI Conference on Graphics, Patterns and Images, 252-259. &lt;br&gt;https://doi.org/10.1109/SIBGRAPI.2012.42</mixed-citation></ref><ref id="hanspub.43235-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">陶华伟, 赵力, 奚吉, 虞玲, 王彤. 基于颜色及纹理特征的果蔬种类识别方法[J]. 农业工程学报, 2014, 30(16): 305-311.</mixed-citation></ref><ref id="hanspub.43235-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">庄路路. 基于改进SURF算法和神经网络的水果识别技术研究[D]: [硕士学位论文]. 哈尔滨: 哈尔滨理工大学, 2016.</mixed-citation></ref><ref id="hanspub.43235-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">周宇杰. 深度学习在图像识别领域的应用现状与优势[J]. 中国安防, 2016(7): 75-78.</mixed-citation></ref><ref id="hanspub.43235-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">曾维亮, 林志贤, 陈永洒. 基于卷积神经网络的智能冰箱果蔬图像识别的研究[J]. 微型机与应用, 2017, 36(8): 56-59.</mixed-citation></ref><ref id="hanspub.43235-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">王露露. 基于深度学习方法求解高维偏微分方程[D]: [硕士学位论文]. 武汉: 武汉大学, 2019.</mixed-citation></ref></ref-list></back></article>