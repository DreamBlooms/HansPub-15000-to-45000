<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE article  PUBLIC "-//NLM//DTD Journal Publishing DTD v3.0 20080202//EN" "http://dtd.nlm.nih.gov/publishing/3.0/journalpublishing3.dtd"><article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="3.0" xml:lang="en" article-type="research article"><front><journal-meta><journal-id journal-id-type="publisher-id">AAM</journal-id><journal-title-group><journal-title>Advances in Applied Mathematics</journal-title></journal-title-group><issn pub-type="epub">2324-7991</issn><publisher><publisher-name>Scientific Research Publishing</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="doi">10.12677/AAM.2019.85097</article-id><article-id pub-id-type="publisher-id">AAM-30173</article-id><article-categories><subj-group subj-group-type="heading"><subject>AAM20190500000_13277253.pdf</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>数学与物理</subject></subj-group></article-categories><title-group><article-title>
 
 
  一种新的三项共轭梯度法求解非线性方程组
  A New Three-Term Conjugate Gradient Method for Solving Nonlinear Equations
 
</article-title></title-group><contrib-group><contrib contrib-type="author" xlink:type="simple"><name name-style="western"><surname>廖</surname><given-names>若沙</given-names></name><xref ref-type="aff" rid="aff1"><sup>1</sup></xref><xref ref-type="aff" rid="aff2"><sup>2</sup></xref></contrib></contrib-group><aff id="aff1"><label>1</label><addr-line>null</addr-line></aff><aff id="aff2"><label>1</label><addr-line>广西大学，数学与信息科学学院，广西 南宁</addr-line></aff><pub-date pub-type="epub"><day>14</day><month>05</month><year>2019</year></pub-date><volume>08</volume><issue>05</issue><fpage>869</fpage><lpage>875</lpage><permissions><copyright-statement>&#169; Copyright  2014 by authors and Scientific Research Publishing Inc. </copyright-statement><copyright-year>2014</copyright-year><license><license-p>This work is licensed under the Creative Commons Attribution International License (CC BY). http://creativecommons.org/licenses/by/4.0/</license-p></license></permissions><abstract><p>
 
 
  
    本文在现有的三项共轭梯度法的基础上，设计了一种新的共轭梯度法JG求解非线性方程组问题，并在一定的假设条件下证明了JG算法的充分下降性和全局收敛性。通过数值实验的结果我们可以看到，JG算法与PRP算法相比具有更好的性质。
    Based on the existing three-term conjugate gradient method, this paper designs a new conjugate gradient method JG to solve the problem of nonlinear equations, and proves the sufficient descent and global convergence of JG algorithm under certain assumptions. From the results of numerical experiments, we can see that JG algorithm has better properties than PRP algorithm. 
  
 
</p></abstract><kwd-group><kwd>共轭梯度法，充分下降性，全局收敛性, Conjugate Gradient Method</kwd><kwd> Sufficient Descent Property</kwd><kwd> Global Convergence</kwd></kwd-group></article-meta></front><body><sec id="s1"><title>一种新的三项共轭梯度法求解非线性方程组<sup> </sup></title><p>廖若沙</p><p>广西大学，数学与信息科学学院，广西 南宁</p><p><img src="//html.hanspub.org/file/1-2620932x1_hanspub.png" /></p><p>收稿日期：2019年4月16日；录用日期：2019年5月7日；发布日期：2019年5月14日</p><disp-formula id="hanspub.30173-formula7"><graphic xlink:href="//html.hanspub.org/file/1-2620932x5_hanspub.png"  xlink:type="simple"/></disp-formula></sec><sec id="s2"><title>摘 要</title><p>本文在现有的三项共轭梯度法的基础上，设计了一种新的共轭梯度法JG求解非线性方程组问题，并在一定的假设条件下证明了JG算法的充分下降性和全局收敛性。通过数值实验的结果我们可以看到，JG算法与PRP算法相比具有更好的性质。</p><p>关键词 :共轭梯度法，充分下降性，全局收敛性</p><disp-formula id="hanspub.30173-formula8"><graphic xlink:href="//html.hanspub.org/file/1-2620932x6_hanspub.png"  xlink:type="simple"/></disp-formula><p>Copyright &#169; 2019 by author(s) and Hans Publishers Inc.</p><p>This work is licensed under the Creative Commons Attribution International License (CC BY).</p><p>http://creativecommons.org/licenses/by/4.0/</p><p><img src="//html.hanspub.org/file/1-2620932x7_hanspub.png" /> <img src="//html.hanspub.org/file/1-2620932x8_hanspub.png" /></p></sec><sec id="s3"><title>1. 引言</title><p>我们考虑如下非线性方程组：</p><p>h ( x ) = 0 , x ∈ R n (1)</p><p>其中 h ( x ) = 0 单调并连续可微。令 F ( x ) = 1 2 ‖ h ( x ) ‖ 2 ，则(1)式等价于求解(2)式的全局最优解：</p><p>min F ( x ) , x ∈ R n (2)</p><p>通常求解非线性方程组的迭代公式为：</p><p>x k + 1 = x k + α k d k</p><p>其中 α k 为沿搜索方向上的步长， d k 为搜索方向。</p><p>随着共轭梯度法的发展，产生了一系列的求解 d k 和 α k 的方法 [<xref ref-type="bibr" rid="hanspub.30173-ref1">1</xref>] [<xref ref-type="bibr" rid="hanspub.30173-ref2">2</xref>] [<xref ref-type="bibr" rid="hanspub.30173-ref3">3</xref>] [<xref ref-type="bibr" rid="hanspub.30173-ref4">4</xref>] [<xref ref-type="bibr" rid="hanspub.30173-ref5">5</xref>] ，例如标准的Wolfe线搜索：</p><p>F ( x k + 1 ) − F ( x k ) ≤ c 1 α k g k T d k g k + 1 T d k ≥ c 2 g k T d k</p><p>其中 0 &lt; c 1 &lt; c 2 &lt; 1 为任意常数， g k : = ∇ F ( x k ) 。</p><p>我们利用Yuan和Lu [<xref ref-type="bibr" rid="hanspub.30173-ref6">6</xref>] 给出的一种新的线搜索：</p><p>− g ( x k + α k d k ) T d k ≥ σ α k ‖ g ( x k + α k d k ) ‖ ‖ d k ‖ 2 (3)</p><p>其中 α k = max { s , ρ s , ρ 2 s , ⋯ } ， σ , s &gt; 0 ， ρ ∈ ( 0 , 1 ) 。在一定的假设条件下，得到全局收敛性和超线性收敛。</p><p>Zhang [<xref ref-type="bibr" rid="hanspub.30173-ref7">7</xref>] 提出了一种三项共轭梯度算法：</p><p>d k = { − g k + β k P R P d k − 1 − v k y k     if   k ≥ 1 − g k if   k = 0</p><p>其中 g k = g ( x k ) ， β k P R P = g k − 1 T y k ‖ g k − 1 ‖ 2 ， v k = g k T d k − 1 ‖ g k − 1 ‖ 2 ， y k = g k − g k − 1 。由 d k 的定义易得：</p><p>d k T g k = − ‖ g k ‖ 2</p><p>根据上述算法及线搜索，本文给出一种新的三项共轭梯度算法JG：</p><p>d k = { − g k + g k T y k * d k − 1 − g k T d k − 1 y k * μ ‖ d k − 1 ‖ ‖ y k * ‖ + v ‖ y k * ‖ 2 + ‖ g k − 1 ‖ 2 + η ‖ g k − 1 ‖ ‖ d k − 1 ‖ + r ‖ d k − 1 ‖ 2 if   k ≥ 1 − g k               if   k = 0 (4)</p><p>其中 μ &gt; 0 ， v &gt; 0 ， η &gt; 0 ， r &gt; 0 ， y k * = g k − ‖ g k − 1 ‖ ‖ g k ‖ g k − 1 。</p></sec><sec id="s4"><title>2. 算法</title><p>新的三项共轭梯度算法JG的步骤如下：</p><p>Step 0：令初始点 x 0 ∈ R ， μ &gt; 0 ， v &gt; 0 ， η &gt; 0 ， r &gt; 0 ； ρ , ε ∈ ( 0 , 1 ) 。 k : = 1 ；</p><p>Step 1：若 ‖ g ( x ) ‖ ≤ ε ，停止；否则转到Step 2；</p><p>Step 2：通过(4)式计算搜索方向 d k ；</p><p>Step 3：选择满足条件(3)的步长 α k ；</p><p>Step 4：令迭代公式为 w k = x k + α k d k ；</p><p>Step 5：若 ‖ g ( x ) ‖ ≤ ε ，停止，令 x k + 1 = w k ；否则令</p><p>x k + 1 = x k − g ( w k ) T ( x k − w k ) ‖ g ( w k ) ‖ 2 g ( w k ) (5)</p><p>Step 6：令 k : = k + 1 ，转Step 1。</p><p>注：(5)式 [<xref ref-type="bibr" rid="hanspub.30173-ref8">8</xref>] 为 x k 在超平面 H k = { x ∈ R n | 〈 g ( w k ) , x − w k 〉 = 0 } 上的投影。</p></sec><sec id="s5"><title>3. 充分下降性和全局收敛性</title><p>我们给出如下两个假设条件：</p><p>假设1：(1)式的解集非空。</p><p>假设2： g ( x ) 在 R n 上Lipschitz连续，即存在 L &gt; 0 使得</p><p>‖ g ( x ) − g ( y ) ‖ ≤ L ‖ x − y ‖ , ∀ x , y ∈ R n (6)</p><p>于是可以得到</p><p>‖ g k ‖ ≤ ς</p><p>其中 ς &gt; 0 。</p><p>引理1：(4)式中的 d k 满足：</p><p>g k + 1 d k + 1 ≤ − ‖ g k + 1 ‖ 2 (7)</p><p>和</p><p>‖ g k ‖ ≤ ‖ d k ‖ ≤ ( 1 + 2 μ ) ‖ g k ‖ (8)</p><p>证明：由 d k 的定义可以直接得(7)式的结果，而利用(7)式可以得到(8)式的左半部分，接下来证明(8)式的右半部分。</p><p>‖ d k ‖ = ‖ − g k + g k T y k * d k − 1 − g k T d k − 1 y k * μ ‖ d k − 1 ‖ ‖ y k * ‖ + v ‖ y k * ‖ + ‖ g k − 1 ‖ 2 + η ‖ g k − 1 ‖ ‖ d k − 1 ‖ + r ‖ d k − 1 ‖ 2 ‖ ≤ ‖ − g k ‖ + ‖ g k T y k * d k − 1 − g k T d k − 1 y k * μ ‖ d k − 1 ‖ ‖ y k * ‖ + v ‖ y k * ‖ + ‖ g k − 1 ‖ 2 + η ‖ g k − 1 ‖ ‖ d k − 1 ‖ + r ‖ d k − 1 ‖ 2 ‖ ≤ ‖ − g k ‖ + 2 ‖ g k T ‖ ‖ y k * ‖ ‖ d k − 1 ‖ μ ‖ d k − 1 ‖ ‖ y k * ‖ = ( 1 + 2 μ ) ‖ g k ‖</p><p>得证，故(8)式成立。 □</p><p>引理2：若假设1，假设2均成立， { x k } 和 { w k } 是由算法JG产生的点列，可得：</p><p>α k ≥ min { s , ρ L + σ ‖ g ( w ^ k ) ‖ ‖ g ( x k ) ‖ 2 ‖ d k ‖ 2 }</p><p>其中 w ^ k = x k + α ^ k d k ， α ^ k = α k ρ − 1 。</p><p>证明：这里 α k 由(3)式给出，如果 α k ≠ s ，那么 α ^ k = α k ρ − 1 不满足(3)式，即：</p><p>− g ( x k + α k d k ) T d k &lt; σ α k ‖ g ( x k + α k d k ) ‖ ‖ d k ‖ 2</p><p>成立。</p><p>由Lipschitz条件和(7)式：</p><p>‖ g k ‖ 2 ≤ − g k T d k ≤ ( g ( w ^ k ) − g ( x k ) ) T d k + σ α ^ k ‖ g ( w ^ k ) ‖ ‖ d k ‖ 2 ≤ α ^ k ( L + σ ‖ g ( w ^ k ) ‖ ) ‖ d k ‖ 2</p><p>则</p><p>α k ≥ ρ L + σ ‖ g ( w ^ k ) ‖ ‖ g ( x k ) ‖ 2 ‖ d k ‖ 2</p><p>得证。 □</p><p>引理3：若假设1，假设2均成立， { x k } 是由算法JG产生的点列，若 x * 是(1)的解，即 h ( x * ) = 0 成立，那么：</p><p>‖ x k + 1 − x * ‖ 2 ≤ ‖ x k − x * ‖ 2 − ‖ x k + 1 − x k ‖ 2 (9)</p><p>和</p><p>∑ k = 0 ∞ ‖ x k + 1 − x k ‖ 2 &lt; ∞ (10)</p><p>均成立。</p><p>证明：由g和超平面 H k 的单调性，可得：</p><p>〈 g ( w k ) − g ( x * ) , x * − w k 〉 = 〈 g ( w k ) , x * − w k 〉 ≤ 0</p><p>x k + 1 为 x k 在 M k = { x ∈ R n | 〈 g ( w k ) , x − w k 〉 ≤ 0 } 上的投影。如果 x * 在 M k 上，则 〈 x k − x k + 1 , x k + 1 − x * 〉 ≥ 0 。可得：</p><p>‖ x k − x * ‖ 2 = ‖ x k − x k + 1 ‖ 2 + ‖ x k + 1 − x * ‖ 2 + 2 〈 x k − x k + 1 , x k + 1 − x * 〉 ≥ ‖ x k − x k + 1 ‖ 2 + ‖ x k + 1 − x * ‖ 2</p><p>整理得：</p><p>‖ x k + 1 − x k ‖ 2 ≤ ‖ x k − x * ‖ 2 − ‖ x k + 1 − x * ‖ 2</p><p>故(9)式成立。令 k → + ∞ ，对该式进行累加，得(10)式成立，得证。 □</p><p>由(3)、(5)二式，得：</p><p>‖ x k + 1 − x k ‖ = | g ( w k ) T ( x k − w k ) | ‖ g ( w k ) ‖ = − α k g ( w k ) T d k ‖ g ( w k ) ‖ ≥ σ α k 2 ‖ d k ‖ 2</p><p>由(10)式可知，当 k → + ∞ 时：</p><p>‖ x k + 1 − x k ‖ → 0</p><p>综上可得：</p><p>lim k → + ∞ α k d k = 0 (11)</p><p>定理1若假设1，假设2均成立，序列 { α k , d k , x k + 1 , g k + 1 } 由算法JG产生，则有</p><p>lim k → ∞ inf ‖ g k ‖ = 0 (12)</p><p>证明：若(12)式不成立，则存在 δ &gt; 0 使得对任意 K ≥ 0 都有 ‖ g k ‖ ≥ δ 。结合式(8)，有：</p><p>c 3 δ ≤ c 3 ‖ g k ‖ ≤ ‖ d k ‖ ≤ c 4 ‖ g k ‖ ≤ c 4 ζ</p><p>这里 0 &lt; c 3 &lt; 1 ， c 4 = 1 + 2 μ 。由引理2可得：</p><p>α k ‖ d k ‖ ≥ min { s , ρ L + σ ‖ g ( w ^ k ) ‖ ‖ g ( x k ) ‖ 2 ‖ d k ‖ 2 } ‖ d k ‖ ≥ min { c 3 δ s , ρ δ c 4 ζ ( L + σ ς ) } &gt; 0</p><p>与(11)式矛盾，故(12)式成立，得证。 □</p></sec><sec id="s6"><title>4. 数值实验</title><p>下面我们将JG算法与PRP算法作比较，选取九个测试函数 [<xref ref-type="bibr" rid="hanspub.30173-ref9">9</xref>] 进行测试，结果见表1：</p><table-wrap id="table1" ><label><xref ref-type="table" rid="table1">Table 1</xref></label><caption><title> Test function</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle" >函数</th><th align="center" valign="middle" >初始点</th></tr></thead><tr><td align="center" valign="middle" >1</td><td align="center" valign="middle" >Exponential function 1</td><td align="center" valign="middle" >x 0 = ( n n − 1 , n n − 1 , ⋯ , n n − 1 ) T</td></tr><tr><td align="center" valign="middle" >2</td><td align="center" valign="middle" >Exponential function 2</td><td align="center" valign="middle" >x 0 = ( 1 n 2 , 1 n 2 , ⋯ , 1 n 2 ) T</td></tr><tr><td align="center" valign="middle" >3</td><td align="center" valign="middle" >Trigonometric function</td><td align="center" valign="middle" >x 0 = ( 101 100 n , 101 100 n , ⋯ , 101 100 n ) T</td></tr><tr><td align="center" valign="middle" >4</td><td align="center" valign="middle" >Singular function</td><td align="center" valign="middle" >x 0 = ( 1 , 1 , 1 , ⋯ , 1 ) T</td></tr><tr><td align="center" valign="middle" >5</td><td align="center" valign="middle" >Logarithmic function</td><td align="center" valign="middle" >x 0 = ( 1 , 1 , ⋯ , 1 , 1 ) T</td></tr><tr><td align="center" valign="middle" >6</td><td align="center" valign="middle" >Broyden Tridiagonal function</td><td align="center" valign="middle" >x 0 = ( − 1 , − 1 , ⋯ , − 1 ) T</td></tr><tr><td align="center" valign="middle" >7</td><td align="center" valign="middle" >Variable dimensioned function</td><td align="center" valign="middle" >x 0 = ( 1 − 1 n , 1 − 2 n , ⋯ , 1 n , 0 ) T</td></tr><tr><td align="center" valign="middle" >8</td><td align="center" valign="middle" >Discrete boundry value problem</td><td align="center" valign="middle" >x 0 = [ t ( t − 1 ) , t ( 2 t − 1 ) , ⋯ , t ( n t − 1 ) ] T , t = 1 n + 1</td></tr><tr><td align="center" valign="middle" >9</td><td align="center" valign="middle" >Troesch problem</td><td align="center" valign="middle" >x 0 = ( 0 , 0 , ⋯ , 0 , 0 ) T</td></tr></tbody></table></table-wrap><p>表1. 测试函数</p><p>数值实验的参数设置： μ = 0.0001 ， v = 0.0001 ， η = 0.0001 ， r = 0.0001 ， ε = 10 − 5 ，终止条件为 ‖ g ( x ) ‖ ≤ 10 − 5 ，其中CI为循环次数；CT为计算次数；GN为梯度值的范数。结果见表2：</p><table-wrap id="table2" ><label><xref ref-type="table" rid="table2">Table 2</xref></label><caption><title> Numerical result</title></caption><table><tbody><thead><tr><th align="center" valign="middle" ></th><th align="center" valign="middle"  rowspan="2"  >Dim</th><th align="center" valign="middle"  colspan="3"  >算法JG</th><th align="center" valign="middle"  colspan="3"  >算法PRP</th></tr></thead><tr><td align="center" valign="middle" ></td><td align="center" valign="middle" >CI/CT</td><td align="center" valign="middle" >GN</td><td align="center" valign="middle" >Cputimes/s</td><td align="center" valign="middle" >CI/CT</td><td align="center" valign="middle" >GN</td><td align="center" valign="middle" >Cputimes/s</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >1</td><td align="center" valign="middle" >3000</td><td align="center" valign="middle" >121/122</td><td align="center" valign="middle" >9.984983e−06</td><td align="center" valign="middle" >1.218683</td><td align="center" valign="middle" >129/130</td><td align="center" valign="middle" >9.969876e−06</td><td align="center" valign="middle" >1.062489</td></tr><tr><td align="center" valign="middle" >5000</td><td align="center" valign="middle" >102/103</td><td align="center" valign="middle" >9.951562e−06</td><td align="center" valign="middle" >1.406245</td><td align="center" valign="middle" >109/110</td><td align="center" valign="middle" >9.912214e−06</td><td align="center" valign="middle" >1.421314</td></tr><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >80/81</td><td align="center" valign="middle" >9.993524e−06</td><td align="center" valign="middle" >2.453154</td><td align="center" valign="middle" >86/87</td><td align="center" valign="middle" >9.942864e−06</td><td align="center" valign="middle" >2.281245</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >2</td><td align="center" valign="middle" >3000</td><td align="center" valign="middle" >53/203</td><td align="center" valign="middle" >9.445482e−06</td><td align="center" valign="middle" >1.201245</td><td align="center" valign="middle" >58/220</td><td align="center" valign="middle" >9.947542e−06</td><td align="center" valign="middle" >1.123458</td></tr><tr><td align="center" valign="middle" >5000</td><td align="center" valign="middle" >25/101</td><td align="center" valign="middle" >9.413541e−06</td><td align="center" valign="middle" >0.826587</td><td align="center" valign="middle" >24/97</td><td align="center" valign="middle" >9.752145e−06</td><td align="center" valign="middle" >0.907852</td></tr><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >100/463</td><td align="center" valign="middle" >9.551023e−06</td><td align="center" valign="middle" >7.859952</td><td align="center" valign="middle" >105/479</td><td align="center" valign="middle" >9.810142e−06</td><td align="center" valign="middle" >6.513145</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >3</td><td align="center" valign="middle" >3000</td><td align="center" valign="middle" >43/86</td><td align="center" valign="middle" >8.560854e−06</td><td align="center" valign="middle" >0.686589</td><td align="center" valign="middle" >48/95</td><td align="center" valign="middle" >8.646852e−06</td><td align="center" valign="middle" >0.671754</td></tr><tr><td align="center" valign="middle" >5000</td><td align="center" valign="middle" >42/84</td><td align="center" valign="middle" >8.282587e−06</td><td align="center" valign="middle" >1.000121</td><td align="center" valign="middle" >46/91</td><td align="center" valign="middle" >9.738878e−06</td><td align="center" valign="middle" >1.048721</td></tr><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >40/80</td><td align="center" valign="middle" >9.126475e−06</td><td align="center" valign="middle" >1.842445</td><td align="center" valign="middle" >44/87</td><td align="center" valign="middle" >9.983354e−06</td><td align="center" valign="middle" >1.877724</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >4</td><td align="center" valign="middle" >3000</td><td align="center" valign="middle" >299/658</td><td align="center" valign="middle" >3.719134e−02</td><td align="center" valign="middle" >5.705445</td><td align="center" valign="middle" >299/584</td><td align="center" valign="middle" >3.218877e−02</td><td align="center" valign="middle" >4.793553</td></tr><tr><td align="center" valign="middle" >5000</td><td align="center" valign="middle" >299/721</td><td align="center" valign="middle" >6.924588e−01</td><td align="center" valign="middle" >9.172574</td><td align="center" valign="middle" >299/584</td><td align="center" valign="middle" >2.866659e−02</td><td align="center" valign="middle" >7.671957</td></tr><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >299/760</td><td align="center" valign="middle" >5.063289e−01</td><td align="center" valign="middle" >17.592875</td><td align="center" valign="middle" >299/637</td><td align="center" valign="middle" >2.730917e−02</td><td align="center" valign="middle" >15.250000</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >5</td><td align="center" valign="middle" >3000</td><td align="center" valign="middle" >5/6</td><td align="center" valign="middle" >1.009850e−08</td><td align="center" valign="middle" >0.046765</td><td align="center" valign="middle" >11/12</td><td align="center" valign="middle" >1.012350e−08</td><td align="center" valign="middle" >0.078226</td></tr><tr><td align="center" valign="middle" >5000</td><td align="center" valign="middle" >5/6</td><td align="center" valign="middle" >6.263368e−09</td><td align="center" valign="middle" >0.093875</td><td align="center" valign="middle" >11/12</td><td align="center" valign="middle" >8.539635e−09</td><td align="center" valign="middle" >0.156789</td></tr><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >5/6</td><td align="center" valign="middle" >3.618125e−09</td><td align="center" valign="middle" >0.156364</td><td align="center" valign="middle" >11/12</td><td align="center" valign="middle" >7.621875e−09</td><td align="center" valign="middle" >0.359330</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >6</td><td align="center" valign="middle" >3000</td><td align="center" valign="middle" >95/190</td><td align="center" valign="middle" >9.498546e−06</td><td align="center" valign="middle" >1.140075</td><td align="center" valign="middle" >104/208</td><td align="center" valign="middle" >9.243558e−06</td><td align="center" valign="middle" >1.250000</td></tr><tr><td align="center" valign="middle" >5000</td><td align="center" valign="middle" >97/194</td><td align="center" valign="middle" >9.049356e−06</td><td align="center" valign="middle" >2.078486</td><td align="center" valign="middle" >106/212</td><td align="center" valign="middle" >9.130544e−06</td><td align="center" valign="middle" >1.936852</td></tr><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >99/198</td><td align="center" valign="middle" >9.441758e−06</td><td align="center" valign="middle" >3.703354</td><td align="center" valign="middle" >108/216</td><td align="center" valign="middle" >9.878274e−06</td><td align="center" valign="middle" >3.843549</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >7</td><td align="center" valign="middle" >3000</td><td align="center" valign="middle" >1/2</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.031250</td><td align="center" valign="middle" >1/2</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.000000</td></tr><tr><td align="center" valign="middle" >5000</td><td align="center" valign="middle" >1/2</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.000000</td><td align="center" valign="middle" >1/2</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.031250</td></tr><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >1/2</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.031250</td><td align="center" valign="middle" >1/2</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.031250</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >8</td><td align="center" valign="middle" >3000</td><td align="center" valign="middle" >35/71</td><td align="center" valign="middle" >9.252585e−06</td><td align="center" valign="middle" >0.564574</td><td align="center" valign="middle" >40/80</td><td align="center" valign="middle" >9.908979e−06</td><td align="center" valign="middle" >0.593585</td></tr><tr><td align="center" valign="middle" >5000</td><td align="center" valign="middle" >34/69</td><td align="center" valign="middle" >8.639254e−06</td><td align="center" valign="middle" >0.859358</td><td align="center" valign="middle" >39/78</td><td align="center" valign="middle" >9.198357e−06</td><td align="center" valign="middle" >0.938896</td></tr><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >32/65</td><td align="center" valign="middle" >9.299685e−06</td><td align="center" valign="middle" >1.671241</td><td align="center" valign="middle" >37/74</td><td align="center" valign="middle" >9.416458e−06</td><td align="center" valign="middle" >1.822575</td></tr><tr><td align="center" valign="middle"  rowspan="3"  >9</td><td align="center" valign="middle" >3000</td><td align="center" valign="middle" >0/1</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.000000</td><td align="center" valign="middle" >0/1</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.031250</td></tr><tr><td align="center" valign="middle" >5000</td><td align="center" valign="middle" >0/1</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.015625</td><td align="center" valign="middle" >0/1</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.000000</td></tr><tr><td align="center" valign="middle" >10000</td><td align="center" valign="middle" >0/1</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.000000</td><td align="center" valign="middle" >0/1</td><td align="center" valign="middle" >0.000000e+00</td><td align="center" valign="middle" >0.031250</td></tr></tbody></table></table-wrap><p>表2. 数值结果</p><p>我们根据计算次数(CT)给出图1，可以直观看到在相同条件下，算法JG所需迭代次数更少，图1如下所示：</p><p>图1. JG算法与PRP算法的性能比较(CT)</p></sec><sec id="s7"><title>5. 结论</title><p>针对求解非线性单调方程组，本文采用文献6的线搜索，给出了一个三项共轭梯度算法JG，并且在一定的假设条件下得到了充分下降性和全局收敛性，从数值实验的结果可以看到，JG算法在与PRP算法比较起来具有更好的性质。</p></sec><sec id="s8"><title>文章引用</title><p>廖若沙. 一种新的三项共轭梯度法求解非线性方程组A New Three-Term Conjugate Gradient Method for Solving Nonlinear Equations[J]. 应用数学进展, 2019, 08(05): 869-875. https://doi.org/10.12677/AAM.2019.85097</p></sec><sec id="s9"><title>参考文献</title></sec></body><back><ref-list><title>References</title><ref id="hanspub.30173-ref1"><label>1</label><mixed-citation publication-type="other" xlink:type="simple">Polyak, B.T. (1969) The Conjugate Gradient Method in Extremal Problems. Ussr Computational Mathematics &amp; Mathematical Physics, 9, 94-112. &lt;br&gt;https://doi.org/10.1016/0041-5553(69)90035-4</mixed-citation></ref><ref id="hanspub.30173-ref2"><label>2</label><mixed-citation publication-type="other" xlink:type="simple">Dai, Y. and Yuan, Y. (1999) A Nonlinear Conjugate Gradient Method with a Strong Global Convergence Property. Siam Journal on Optimization, 10, 177-182. &lt;br&gt;https://doi.org/10.1137/S1052623497318992</mixed-citation></ref><ref id="hanspub.30173-ref3"><label>3</label><mixed-citation publication-type="other" xlink:type="simple">Fletcher, R. and Reeves, C.M. (1964) Function Minimization by Conjugate Gradients. Computer Journal, 7, 149-154. 
&lt;br&gt;https://doi.org/10.1093/comjnl/7.2.149</mixed-citation></ref><ref id="hanspub.30173-ref4"><label>4</label><mixed-citation publication-type="other" xlink:type="simple">Polak, E. and Ribiere, G. (1968) Note sur la convergence de methodes de directions conjuguees. Revue Française D’-informatique et de Recherche Opérationnelle, 16, 35-43. &lt;br&gt;https://doi.org/10.1051/m2an/196903R100351</mixed-citation></ref><ref id="hanspub.30173-ref5"><label>5</label><mixed-citation publication-type="other" xlink:type="simple">Wei, Z., Yao, S. and Liu, L. (2006) The Convergence Prop-erties of Some New Conjugate Gradient Methods. Applied Mathematics &amp; Computation, 183, 1341-1350. &lt;br&gt;https://doi.org/10.1016/j.amc.2006.05.150</mixed-citation></ref><ref id="hanspub.30173-ref6"><label>6</label><mixed-citation publication-type="other" xlink:type="simple">Yuan, G. and Lu, X. (2008) A New Backtracking Inexact BFGS Method for Symmetric Nonlinear Equations. Computers &amp; Mathematics with Applications, 55, 116-129. &lt;br&gt;https://doi.org/10.1016/j.camwa.2006.12.081</mixed-citation></ref><ref id="hanspub.30173-ref7"><label>7</label><mixed-citation publication-type="other" xlink:type="simple">Zhang, L., Zhou, W. and Li, D.H. (2006) A Descent Modified Polak-Ribiere-Polyak Conjugate Gradient Method and Its Global Convergence. IMA Journal of Numerical Analysis, 26, 629-640. &lt;br&gt;https://doi.org/10.1093/imanum/drl016</mixed-citation></ref><ref id="hanspub.30173-ref8"><label>8</label><mixed-citation publication-type="other" xlink:type="simple">Solodov, M.V. and Svaiter, B.F. (1998) A Globally Con-vergent Inexact Newton Method for Systems of Monotone Equations. Reformulation: Nonsmooth, Piecewise Smooth, Semismooth and Smoothing Methods. Springer, US, 355-369. &lt;br&gt;https://doi.org/10.1007/978-1-4757-6388-1_18</mixed-citation></ref><ref id="hanspub.30173-ref9"><label>9</label><mixed-citation publication-type="other" xlink:type="simple">Yuan, G., Wei, Z. and Lu, X. (2011) A BFGS Trust-Region Method for Nonlinear Equations. Computing, 92, 317-333. 
&lt;br&gt;https://doi.org/10.1007/s00607-011-0146-z</mixed-citation></ref></ref-list></back></article>